cset: moving following pidspec: 26030
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.354449372 seconds)
loading group "string"... done (took 0.554784378 seconds)
loading group "linalg"... done (took 7.12052377 seconds)
loading group "parallel"... done (took 0.158669884 seconds)
loading group "find"... done (took 1.132390906 seconds)
loading group "tuple"... done (took 1.783808589 seconds)
loading group "dates"... done (took 1.271423848 seconds)
loading group "micro"... done (took 0.223431036 seconds)
loading group "io"... done (took 0.917932682 seconds)
loading group "scalar"... done (took 37.051606601 seconds)
loading group "sparse"... done (took 11.373714584 seconds)
loading group "broadcast"... done (took 0.904038594 seconds)
loading group "union"... done (took 11.830155269 seconds)
loading group "simd"... done (took 4.124004435 seconds)
loading group "random"... done (took 8.506158538 seconds)
loading group "problem"... done (took 1.865028849 seconds)
loading group "array"... done (took 19.782521891 seconds)
loading group "misc"... done (took 1.665241267 seconds)
loading group "sort"... done (took 3.136921555 seconds)
loading group "collection"... done (took 16.260671964 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.497336397 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124736954 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116413952 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119726518 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14614939 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116687147 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124210459 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084649331 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.857153881 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146561413 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119698128 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416077811 seconds)
done (took 5.280841114 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.171927042 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083631153 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08123426 seconds)
  done (took 1.395800303 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066389481 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121578322 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066713846 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066960908 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066492665 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066478197 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065877703 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066017519 seconds)
  done (took 1.750875206 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073338663 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068459474 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068496515 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06761238 seconds)
  done (took 1.507894538 seconds)
done (took 6.130543495 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.765035471 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.20120371 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182764562 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.400692023 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128851222 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15332607 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640569672 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323561403 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187966264 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080710234 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104647129 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318716515 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107004152 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.62830219 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073948852 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089872551 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137618012 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.438733137 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069269135 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081897978 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089045317 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12847952 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084965854 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074311387 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14371609 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067466075 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.12968721 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079845137 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066591165 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.20693234 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172049915 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658260082 seconds)
  done (took 10.283955261 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095322624 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097832987 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068897836 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135873773 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095747951 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069393448 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070536441 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066579672 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086656621 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127290664 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088521561 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100989405 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065496022 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068680259 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084100105 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204749815 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082778731 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083587701 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072128355 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076950527 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116574119 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078320112 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077806005 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077546628 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128192547 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18211451 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099208054 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098782233 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06933075 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08246865 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117168811 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12808189 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065542937 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065998893 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123977914 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094428034 seconds)
  done (took 4.716908986 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.286244897 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140028461 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090889114 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131749243 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065227513 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107100696 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065392847 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080633705 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.202212275 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.362007966 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.57992359 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110700163 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10314413 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06748728 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068293661 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067069249 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.351766094 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108170263 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.1044838 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081290584 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070138462 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069577067 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.357468721 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068007273 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064296752 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068840435 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057951092 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123721033 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068390489 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.926201839 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124585895 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06642342 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100278049 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169115988 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089766743 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272970724 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068009975 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064738205 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150199619 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070649614 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066655506 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083346005 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106914162 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11263513 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064976957 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066937113 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161566056 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06501945 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078878374 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.98817047 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110674124 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151667198 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078781132 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064468075 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.243834359 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085799567 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068705752 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064317324 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.174402009 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137611607 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067444863 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066512701 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068179823 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06906054 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.34878612 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066066217 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.774768172 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070512338 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07676099 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069193118 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069503277 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072623341 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072552932 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085142062 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063677897 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064332815 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065884435 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074993527 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065881011 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065793787 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066348348 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083762173 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.3596955 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066410701 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06850896 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064895645 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086252443 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097176914 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068485083 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065957469 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099891338 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067985578 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.169019553 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.110710291 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066769551 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063568063 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084008944 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069019841 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116036096 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069278563 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.091613921 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06770403 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097919582 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069826504 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099174272 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080859169 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067928928 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.399616692 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064851848 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06459085 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068595217 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065967892 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067783293 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06605308 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078890981 seconds)
  done (took 21.093666769 seconds)
done (took 38.604615361 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.270690067 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074550158 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075105867 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074788888 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074908538 seconds)
  done (took 1.893409526 seconds)
done (took 3.194559823 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119160776 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099266247 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06486237 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094643626 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064099094 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099691612 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098862676 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080715844 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099200304 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06375016 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095907036 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063888096 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064119748 seconds)
  done (took 2.430667359 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081691573 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082564576 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070012162 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082378129 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063625322 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.0826876 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080598464 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087911362 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080284462 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071954039 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063507302 seconds)
  done (took 2.146215689 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08233066 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082974831 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069127154 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081895359 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063858365 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081331645 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080399107 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084873838 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080689434 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073555556 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063488947 seconds)
  done (took 2.138572951 seconds)
done (took 8.004023279 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077330306 seconds)
  done (took 1.362667684 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.585649622 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.042883539 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081630638 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111507852 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183295406 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118983406 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277401267 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086771992 seconds)
  done (took 8.954884231 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100879878 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06929097 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071427702 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068160885 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072002011 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071118138 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069742836 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071782884 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071767002 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068734269 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070249621 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069247167 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06864836 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071737945 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069441266 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068057615 seconds)
  done (took 2.50755914 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091202957 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090751211 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073090711 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074394308 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071634812 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071774691 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074160826 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072865017 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070362208 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071643591 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074019253 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073642138 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071121724 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065038028 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073815637 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075450805 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070384897 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074209829 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074066765 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074749005 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074245964 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06436343 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071332236 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073432304 seconds)
  done (took 3.165912915 seconds)
done (took 17.281262684 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112165476 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071264207 seconds)
  done (took 1.47668386 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081481933 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081983264 seconds)
  done (took 1.463309604 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081835098 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065729137 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089997417 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07771795 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066210796 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065641276 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086761983 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066283524 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065746113 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066004346 seconds)
  done (took 2.030937097 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067735442 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078078899 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070224252 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081418269 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073321159 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064003833 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072582665 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067990601 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077580236 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062479213 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070642678 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081115119 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070497135 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083583111 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072087852 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067754382 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070186945 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066580919 seconds)
  done (took 2.601549474 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065724986 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066830569 seconds)
  done (took 1.439834972 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066063723 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063023809 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066901383 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066395759 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063235934 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062571058 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06303623 seconds)
  done (took 1.753921058 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.384660858 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110166813 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.292863346 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070359014 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081101719 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249219287 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065045597 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070162322 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07011525 seconds)
  done (took 2.73915709 seconds)
done (took 14.809089389 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078598726 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085044581 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094854123 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.363648492 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091673066 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06554454 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113300693 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192303896 seconds)
done (took 2.398839605 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210332063 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.608793383 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.38603305 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197864053 seconds)
  done (took 2.503382393 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.320711022 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086510649 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058324709 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066976114 seconds)
  done (took 1.852777628 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065665392 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067891368 seconds)
  done (took 1.449043433 seconds)
done (took 7.328639541 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066444403 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083354711 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065146868 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063153399 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065925615 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064426489 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064667707 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067349325 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067363775 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067508335 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.070275905 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067571663 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067169598 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065062597 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064969402 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067742663 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065129753 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068419198 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064610881 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067116207 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066041711 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066973694 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064929818 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064855142 seconds)
  done (took 2.954536199 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082935153 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066294577 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071398386 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07299557 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071495912 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072796195 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072666119 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068085629 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072956851 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06985903 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071150164 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071469084 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069419616 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071399428 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069982956 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071632574 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073049524 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067613661 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069554668 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071165159 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071004451 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066632394 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070871562 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071748593 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070947313 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070568742 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070006558 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065964926 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071453762 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071503105 seconds)
  done (took 3.453204678 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069172663 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062563994 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063597641 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070570605 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063401707 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065937567 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064824284 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065500314 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065762967 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065003356 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066360068 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064484005 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064737245 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065789263 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065880845 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068586935 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080682702 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065176853 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065017744 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065690546 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067940174 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065226188 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065529708 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064850541 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064776716 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065048744 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065235271 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064712084 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065663583 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.178644438 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067866682 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068447285 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064703046 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07136038 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066927655 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063011473 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066907559 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062589582 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064027199 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064016387 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064451138 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06429514 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065261981 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071629219 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064237524 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064328246 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062955252 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064361766 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063368422 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065830128 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062965293 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063008818 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065430877 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064496905 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067595612 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062792599 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06390643 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062933696 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06430617 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06279573 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063512046 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063300193 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065531012 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064431651 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078193997 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069679306 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062975379 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064602257 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064867606 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066262718 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064590648 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076392616 seconds)
  done (took 6.180506863 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090854063 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086975653 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065754264 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06460204 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061892836 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063893499 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067397087 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063885698 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065353777 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069472576 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06396389 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064997076 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065483992 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076250252 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064148287 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065041041 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06923224 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061464917 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.0637608 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066974295 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064190149 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066816239 seconds)
  done (took 2.832318587 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154929638 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070007697 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105574223 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07252989 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067266244 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07257697 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069456939 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069208706 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069795775 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068503702 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067989561 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069558927 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06747427 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067610155 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067683811 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067566313 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069364073 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067977568 seconds)
  done (took 2.697785446 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077007723 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065767248 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086251793 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065212544 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065644791 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068343383 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070324861 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073966976 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067920783 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065878788 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073954306 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067693687 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067895601 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066164018 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068282316 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065573097 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067951904 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065743865 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073588884 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070456241 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070384342 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073747332 seconds)
  done (took 2.870669456 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079357545 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068619673 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081406555 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068303026 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062506831 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064086742 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070177478 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065915142 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069936342 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068060282 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065923395 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064116149 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069177798 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065515075 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069177173 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066004983 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067132496 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065517047 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067340396 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061264093 seconds)
  done (took 2.695420749 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086378525 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067590726 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067333892 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075344669 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067382389 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067052068 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075222573 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067482765 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06685398 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087016807 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066752569 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066681957 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074432437 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071865177 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066816647 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074422965 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074323729 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074314751 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066786878 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066918729 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087500087 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067012407 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074420702 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067177569 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067161438 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066727354 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066838667 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072116892 seconds)
  done (took 3.336155741 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066313563 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065970488 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063668799 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063615255 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063719739 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063781246 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0635576 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063784789 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065719508 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063302428 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065512186 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065624368 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065749692 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065636329 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065606283 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065778649 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065924396 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063602637 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063248537 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063150355 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06572596 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06534947 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065901427 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06317935 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063286487 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065849468 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063225978 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063163343 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065690909 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063418908 seconds)
  done (took 3.277290301 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07501094 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072967699 seconds)
  done (took 1.489076219 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062549384 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079844297 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063146446 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069986235 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069514744 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066374033 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074515088 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07141888 seconds)
  done (took 1.893564256 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080855271 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078232655 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069580979 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082665408 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.0784081 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084820957 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135518665 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068783765 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073433491 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064014059 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080652849 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066850397 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073524228 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067708902 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072716904 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073058564 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064032133 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071948615 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067868174 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064193866 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068483281 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076705879 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070403613 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062879615 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068610536 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08949101 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077284783 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065307916 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068646869 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073062496 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071441586 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060126353 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066104117 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066542889 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.0641969 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076600584 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081899732 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068928706 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075223613 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066797587 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076559974 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061122289 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070612022 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072270672 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076096297 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065834708 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066377446 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061293897 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063722783 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068004401 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061252143 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066453384 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060637973 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075732802 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069874122 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076007897 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064249188 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067491894 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069708826 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070167117 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073292416 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067905504 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069934045 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066082369 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072976375 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070033063 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074507919 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060707043 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.05994191 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063870163 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075185142 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088217221 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072574089 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066594453 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068041543 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065331875 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071376566 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068594318 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073192369 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074543907 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068029912 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073324442 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074026181 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066093277 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068407848 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073642334 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06393458 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068525158 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064111156 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082044347 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065062581 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063833899 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063599612 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076293556 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069013418 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065699897 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063766271 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072988057 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060446466 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066924519 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06852662 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068198395 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078650857 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072116886 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071493394 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075584416 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074958813 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067227268 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070179453 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06276881 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068049819 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067627595 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075038683 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062173471 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070664846 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068537857 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.0677157 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200622461 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06449873 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066642948 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073550059 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071750735 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064183182 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06320845 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070712515 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066169205 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069507176 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074139272 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065591041 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061316416 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062173344 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069795557 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067122307 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07000077 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071701394 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069162911 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060611546 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06469373 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071537388 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074975324 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067181159 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066904781 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073055823 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067840294 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065195327 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073011622 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069113449 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065544336 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071363223 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066826871 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061013973 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069927372 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06834283 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065261937 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071084665 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071079832 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069355714 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066591366 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06489193 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074111299 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066984049 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064828326 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066569859 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065213795 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077197602 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068031046 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060737515 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063581205 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075432709 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06422669 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065422288 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065148328 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068274074 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067522771 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064238807 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065621766 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068232494 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076416808 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069433088 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066535767 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071528785 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076884512 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065371743 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068964109 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065408826 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066985556 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06677602 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07439837 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071354488 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06997515 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068501972 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062252073 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071200796 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07336814 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065235453 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064000185 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065167533 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070259613 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071483473 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070030927 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06668478 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064199397 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066866531 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069492419 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068685517 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066056925 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065520369 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072614815 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064904289 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073197413 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067226383 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076500407 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069198036 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061830916 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069271807 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064449861 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072139249 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061505871 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064554771 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065580344 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066965495 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065835125 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070792135 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061336714 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073391856 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07398374 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06654187 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067208501 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067917191 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074883171 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069687153 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07237369 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071721353 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074241291 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079264718 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067394173 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071615999 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078924976 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067608141 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.189517108 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072309726 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066542883 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065779826 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065227773 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066724947 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071528141 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076133432 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073099419 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061198752 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070020703 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065014537 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066798225 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061947084 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070749142 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069885755 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067799468 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073160817 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06769714 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068501866 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071102675 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066093684 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067755239 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068117382 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069590201 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067011772 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068570399 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065899842 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069225748 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065159421 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064567681 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068176563 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066527052 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066442455 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071291997 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066298932 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067057506 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069380213 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067157925 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068082763 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066305816 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065728632 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069664096 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067198541 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066974757 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069334511 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061960614 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073852635 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066085573 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074307615 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066976387 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06378887 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073849965 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068866638 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072071608 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067932557 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067859009 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068512147 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065905852 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069424881 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07305787 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064412358 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077478091 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073816315 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067253217 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069425955 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066519161 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067730401 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064869537 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067708612 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066995193 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066252466 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065589689 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070755161 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06890912 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066045179 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067603069 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066550021 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066038947 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066731557 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060528261 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065412554 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065542522 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065585008 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075046589 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066545805 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06544158 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065000442 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067221749 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065233536 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062586307 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073754204 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074701558 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066615217 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07286572 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065414215 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067473806 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076651918 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060058216 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064262129 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063659267 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064114978 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073207579 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066477148 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075086992 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06640218 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065494412 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06297001 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066511583 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064472679 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060543157 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063908439 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069578503 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065541282 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065033682 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06589528 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068458029 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066658393 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075600715 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065125192 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066722536 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066385343 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062910021 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06501552 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064802072 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.199568489 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066968479 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063886379 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063884179 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06601064 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067075494 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067991731 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066560597 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068268341 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075697625 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066797811 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069554586 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070374749 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061584206 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070583736 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06668439 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066378313 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065618421 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070585222 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069605248 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067680304 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074861139 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067074594 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067292577 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067114578 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064622877 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066067397 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065674726 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066382325 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065575298 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067869524 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074949349 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06434825 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069029128 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066716911 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066463222 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072579956 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066776167 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069458113 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072368674 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066877393 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068140357 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074121281 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070081898 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069541112 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06834399 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068569493 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0721051 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066321571 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072871463 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067162943 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067837659 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068278736 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064876694 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066188634 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065714753 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065262556 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07263328 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067541326 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065983985 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065218109 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063983853 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067197759 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07023688 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074201348 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068766241 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069082027 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061641848 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063593847 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067237785 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064130644 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067944469 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068348865 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071832423 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067974241 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06638216 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064754097 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074235724 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071753447 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069127125 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064271394 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069545374 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066988866 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068328192 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066671566 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066047705 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066961588 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069582824 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067383961 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065395808 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072992106 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069081564 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066855637 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067267903 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066630775 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066232988 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061459217 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066446219 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068146624 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071436062 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068019044 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066082044 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076710948 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064083738 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067179554 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069617355 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065502304 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070702528 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062020378 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067650451 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066977385 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067076158 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061198101 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065905615 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064353781 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068137843 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065093653 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061411372 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076403919 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074723723 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069103836 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065011178 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064302699 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061151001 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060785806 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.195840632 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067668812 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069068263 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076956151 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066639955 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067082721 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063050924 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068339628 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070812226 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069561267 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064507251 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062377197 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066324211 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069589429 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071781257 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064926402 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066581456 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069473311 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069024645 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064292428 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069595603 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063407255 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069708464 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079155422 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067170696 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067643334 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073563687 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073853136 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066560056 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061973272 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066293876 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069937405 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067436388 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067003416 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067054402 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080803079 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069283624 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065582445 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065480685 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068928074 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065711615 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074730828 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068136168 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067450634 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071555118 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068711423 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075068791 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068551436 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073862518 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070000617 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069469931 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065821255 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066301284 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064918562 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065648158 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067469335 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067561333 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071550003 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073960736 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065969394 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077116826 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075473278 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068103793 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06330024 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066106225 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066008116 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061513569 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066979398 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064235484 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064423919 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064266214 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064916857 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067171297 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071425321 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06696096 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066796495 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065611424 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060443123 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068550539 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06849188 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06730617 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062889553 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066269581 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066591858 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070246038 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068995509 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063902688 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.0676427 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067794397 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066817989 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06138534 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072806372 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065341679 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067986447 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065482793 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066910036 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067400479 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069571665 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071077597 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067160159 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068755036 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069853873 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068435255 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063848495 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063352077 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071596086 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064111674 seconds)
  done (took 42.677253563 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099130129 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063279935 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061410952 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061662792 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073578861 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062776464 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062083294 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062748233 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062965513 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065070818 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061793481 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061706379 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070433654 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07758204 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07360496 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066039792 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0617762 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062828724 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06156406 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062392568 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070472772 seconds)
  done (took 2.826147832 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074548375 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069970172 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072320502 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076035017 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066886173 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070375019 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07195905 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070399709 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07574373 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06678624 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075346189 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070280782 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066675494 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066770113 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066464083 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070491288 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07562403 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067109194 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070290275 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080630873 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070353471 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072247162 seconds)
  done (took 2.965713085 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066320135 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065505828 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067916505 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06168665 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065475893 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060885516 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069018002 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063808287 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068877535 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065025206 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065088795 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064625686 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067404502 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061244781 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066245941 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063830525 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108571264 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069195075 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065786628 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066705779 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06145784 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067731088 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061063341 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061749857 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064688471 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06913666 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066106587 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063631473 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065495097 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064643841 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065672933 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063574961 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06762397 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066101796 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064882154 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064630431 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065635531 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06528966 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061137554 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064004234 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066549377 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061648032 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065951293 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066875419 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064533264 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063247065 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067569853 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065357034 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060811486 seconds)
  done (took 4.631342787 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079483751 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10880795 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067641939 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088326413 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080463657 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07526387 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06910742 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089747406 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063956158 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064230617 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080964491 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079173708 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065914428 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070247215 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071861462 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065520569 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066691554 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064652223 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069480791 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065037527 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069540628 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071683558 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079584951 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078551564 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069271228 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064528794 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065293614 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069949129 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077898016 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069847802 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069987061 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070929021 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079953986 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067088745 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064801766 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.0677651 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081018491 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065862427 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067959115 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063128795 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067811702 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069906551 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072108833 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081258507 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065751901 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069997618 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065338783 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062650052 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077740402 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067063426 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072993488 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079152026 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069087381 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065489116 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069429916 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079883905 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065043796 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063588311 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068186809 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077485104 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063243726 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068819818 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078498812 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067081354 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072277419 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078891255 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070338049 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06869192 seconds)
  done (took 6.42118134 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075196371 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072575821 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080058346 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080145531 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072034834 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071926954 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071941362 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072095346 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07131044 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076202284 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071945775 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092469916 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067555873 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074555452 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071986543 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072111597 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071990025 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072325175 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07188629 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071784995 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07189523 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079426063 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071676396 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079724347 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097567323 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06776569 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071677163 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.0719361 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08016486 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071983689 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078902345 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071745661 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07192241 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079946757 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079218755 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072054104 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065451936 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071438897 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071682695 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072034392 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067468846 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079925208 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071580616 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067431747 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072120763 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071420513 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079426463 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079197051 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074065403 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076326523 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072172912 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079268755 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071292702 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071634942 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079331865 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104075052 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079200383 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079598558 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071637848 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079113797 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079300833 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085201041 seconds)
  done (took 6.097541856 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083062997 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07533578 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075341878 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061507669 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063556803 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069651542 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06386356 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064202558 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074382198 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07403788 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076881366 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069726319 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072325016 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076766502 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069361011 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072329757 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069613252 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069040327 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074306928 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069077961 seconds)
  done (took 2.851445353 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074769585 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082973256 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067166806 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071416163 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068783866 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071143566 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068299283 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068716215 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066446396 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068781405 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075886147 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075846087 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066617878 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071204013 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075878938 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071670697 seconds)
  done (took 2.564800612 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074081369 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071832584 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079522948 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066076918 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064439995 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062376905 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065509838 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061198967 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062161807 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077622649 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066011265 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067944854 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065704754 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064732428 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062765766 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068812705 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062146722 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063561181 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.0657846 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078816373 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076034918 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064272678 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066235071 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06590292 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065705825 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070336554 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065037137 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063233424 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063149616 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066275093 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066422054 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069969276 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064485333 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065490279 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06599766 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064514194 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06718548 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067196265 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069822807 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065839887 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063709086 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064850437 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065355878 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066716049 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063627144 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067586229 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06339651 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069552877 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06458449 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067260506 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065899946 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067901794 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065873971 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07209999 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068093585 seconds)
  done (took 5.100270895 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079107874 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069010478 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061984995 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063432428 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068329096 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067206538 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068700309 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067559464 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067593783 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06430307 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067185352 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068600461 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067291078 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069105716 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067145748 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06935807 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061873489 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067535042 seconds)
  done (took 2.647753106 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070694926 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06545751 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072613234 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066461314 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065849029 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068030665 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061933747 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064640647 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064053488 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065428674 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065410157 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067872236 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063901487 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067656374 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065500199 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065762158 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067767155 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064337765 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065432397 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061731154 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067730207 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063975039 seconds)
  done (took 2.876954136 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072178741 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092170049 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137637561 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083653178 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080697933 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077972655 seconds)
  done (took 1.970770248 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090341084 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078291902 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06579765 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08754642 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073132251 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066925998 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067064471 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067298957 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075770999 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075351497 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066875894 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076113491 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075610163 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074803763 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072852363 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072847117 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067221171 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067454109 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065730188 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083744491 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067535663 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075317467 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06732748 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067008251 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067352596 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076451934 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076702771 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075791377 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06697953 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076376693 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072813353 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067187217 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076027011 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076144933 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069053086 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075612597 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067603409 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083961215 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073012059 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075026844 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069028996 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073199842 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075795629 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072149337 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075505851 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068175758 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071885442 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067185717 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067435886 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085902036 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073055329 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074928314 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073261736 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07587764 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07616155 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085196093 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075802892 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074673178 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073046053 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078482686 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075233959 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072523081 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074490188 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075991108 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072877539 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074873008 seconds)
  done (took 6.286401962 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08121648 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086436568 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067425492 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076845157 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07554709 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067647372 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067194987 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067259151 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067377832 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06729914 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107591696 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067874133 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075249146 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074939291 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067907023 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067336618 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067742095 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074853654 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067322209 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085753148 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06724444 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075153013 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075047478 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07456957 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076025941 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073238475 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067418184 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067649558 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067697927 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067363389 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072161352 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067678537 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075259819 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066953073 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075464999 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067665397 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067248755 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072053274 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067160397 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073075449 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075168149 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08347585 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06730184 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066998172 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075880595 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067215351 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067360939 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066816107 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067298353 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066719657 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075961025 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076141136 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075764545 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075086551 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067135894 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067443847 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067546003 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067231656 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067410181 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072890206 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074847149 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066966182 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085735526 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067179547 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067291207 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074882211 seconds)
  done (took 6.195334849 seconds)
done (took 131.100831916 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185482536 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165258435 seconds)
  done (took 1.773032776 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068920968 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098166618 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076928427 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128617208 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067520946 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100808059 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099478731 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077980724 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066261484 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066014133 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066244947 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068563724 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131908977 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066643338 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066185349 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068787358 seconds)
  done (took 2.754377559 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097388703 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.15741495 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098714424 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064498585 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097137201 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072621407 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064448984 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075026893 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071023532 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065271253 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072754693 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07057174 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064769652 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070498286 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071531322 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072640747 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064960145 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072798574 seconds)
  done (took 2.861866757 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100817039 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092165367 seconds)
  done (took 1.633720045 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155595853 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105530186 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150322356 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345612385 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167054207 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229666406 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.12673295 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127336787 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117675066 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122560844 seconds)
  done (took 3.084967526 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097692977 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15187427 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255858181 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11508907 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072328212 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095037276 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116141548 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078144706 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080474507 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080410311 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079844923 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076342814 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098165927 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07325597 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073072442 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076060874 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102117373 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072182102 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074191734 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076195722 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09889289 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065686889 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073610367 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072050309 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076962819 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07691235 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065385472 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065171024 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076182763 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073868688 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076439546 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093177343 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076807255 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106365334 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069784954 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107440434 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076113408 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073935813 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073753174 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073714018 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078436976 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078789162 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072474209 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075558741 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065232237 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076006889 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065277085 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065550485 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07779337 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066863947 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077657564 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076485243 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106107541 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066609749 seconds)
  done (took 6.029975487 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101935976 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104197674 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071267351 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110791163 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099860171 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071142367 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101395499 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093066576 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10230494 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070111426 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068277107 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070222886 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081898416 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082925869 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111056667 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103704909 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07307846 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070205401 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103762756 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103026413 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068494428 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094673485 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089663937 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101701893 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06754664 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070498075 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068665764 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070148991 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077160622 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078528047 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069833447 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080693594 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084440334 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078180089 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067014521 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067827171 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068410389 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079692361 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079271988 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078206935 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077362822 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067128792 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067564328 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071093086 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069855102 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067422369 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078524662 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080048433 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079218398 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069552825 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069930986 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067930014 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069088972 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079871487 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077673177 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080528843 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079777505 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06798987 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068147647 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071079046 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080758613 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079099626 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079135912 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069438515 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078911873 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068269371 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08021988 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084394769 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068584381 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069517256 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068394632 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069674822 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069208862 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078002136 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077876762 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069899316 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06922379 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068118936 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079885558 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078241161 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068165607 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076780944 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066994963 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068311269 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069506012 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06981153 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077584906 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079531082 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070206819 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068067524 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069233643 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068735473 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067209774 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076984294 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080297828 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078823494 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07897029 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06931591 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079349074 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079768807 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069951299 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079928539 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068568573 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070466818 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.198482623 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078739566 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078809634 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079011452 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069682928 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068072078 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079017009 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081226571 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06902194 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079182589 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080644333 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079822631 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068445097 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08134851 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068829383 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07972084 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070496837 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08004517 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069659704 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079553576 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068706781 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068073737 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06888045 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079981686 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070068329 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068572769 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070423451 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070067041 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080569766 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083019538 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070426026 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081506979 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080385187 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070400248 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079412768 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06918494 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078664601 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069563031 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070215743 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067715987 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083315471 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068797476 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068736283 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07010248 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081038522 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068776259 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079601616 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078413322 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0686468 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081993994 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080472419 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077773238 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080254762 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069806723 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068699388 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068414872 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069215218 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078619525 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081160335 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070457338 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068867716 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07849146 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079422112 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067456123 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079002718 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079420362 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078794903 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068359588 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069360271 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080634877 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080983986 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078284167 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07837954 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078878348 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068423825 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077238963 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078409497 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068173188 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084869267 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067842577 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081931759 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079189498 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076536407 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078695985 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080446015 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079750764 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080127888 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08249378 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068000854 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067867948 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079951449 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068501439 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068801841 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078053723 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069812563 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06975438 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08324924 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068227101 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079335911 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06743438 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079208603 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067431571 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069929989 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083261987 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068283433 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.200283602 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080591732 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06981215 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077517252 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082854454 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079451334 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068231295 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070125611 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08018775 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079044182 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06841709 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068442763 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070405487 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.08489938 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078175485 seconds)
  done (took 18.745062999 seconds)
done (took 38.323669728 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208019958 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.14997164 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179349621 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117944908 seconds)
  done (took 2.190999676 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122986989 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099484704 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095117346 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064809181 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101183895 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065053477 seconds)
  done (took 2.025648428 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309886099 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210899516 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182071868 seconds)
  done (took 2.173303768 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.19780068 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187396882 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.394225067 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251953094 seconds)
  done (took 2.612009759 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142717296 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089031585 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066716696 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082573481 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134083508 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160715691 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100586426 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125817798 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077463021 seconds)
  done (took 2.506399315 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146753358 seconds)
done (took 13.123275305 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Int8, false)...
    done (took 0.168465286 seconds)
    (2/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.179928949 seconds)
    (3/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073176041 seconds)
    (4/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.14193971 seconds)
    (5/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.186051271 seconds)
    (6/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.181229087 seconds)
    (7/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076507531 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.16046187 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081234574 seconds)
    (10/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.195523936 seconds)
    (11/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077293573 seconds)
    (12/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.194716055 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077192037 seconds)
    (14/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.081396714 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072924574 seconds)
    (16/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051997183 seconds)
    (17/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.169910033 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.109779335 seconds)
    (19/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.180806968 seconds)
    (20/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.101940529 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070894544 seconds)
    (22/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068491923 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.132042261 seconds)
    (24/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.204858994 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.09506829 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097705607 seconds)
    (27/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.148641523 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.105822741 seconds)
    (29/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078614169 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065931253 seconds)
    (31/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.177907628 seconds)
    (32/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064534453 seconds)
    (33/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073105687 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071077324 seconds)
    (35/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.098025277 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074255707 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071554384 seconds)
    (38/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193811528 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070808429 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120838322 seconds)
    (41/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076817504 seconds)
    (42/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.149024835 seconds)
    (43/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.155083313 seconds)
    (44/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.136037718 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.097701674 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.110531488 seconds)
    (47/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189325916 seconds)
    (48/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.227636113 seconds)
    (49/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061133395 seconds)
    (50/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071629375 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136998989 seconds)
    (52/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073144905 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071783284 seconds)
    (54/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072239715 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090353806 seconds)
    (56/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.164062178 seconds)
    (57/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.201997648 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064276922 seconds)
    (59/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.147574061 seconds)
    (60/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172207135 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129346637 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088831826 seconds)
    (63/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067863191 seconds)
    (64/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052094195 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066687949 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.095294645 seconds)
    (67/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.147037883 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.075668255 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066075324 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092134602 seconds)
    (71/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.138625438 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.203864824 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.14612793 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.094662068 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170445948 seconds)
    (76/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.114665344 seconds)
    (77/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.089363438 seconds)
    (78/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.145425064 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.209403582 seconds)
    (80/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075236213 seconds)
    (81/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071461028 seconds)
    (82/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07791736 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141384859 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.067250868 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090130135 seconds)
    (86/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.158179145 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068782867 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.15958318 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098280193 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.096084412 seconds)
    (91/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.157951994 seconds)
    (92/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071754682 seconds)
    (93/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075641634 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064995955 seconds)
    (95/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.073961357 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092326365 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06593645 seconds)
    (98/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052971662 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.175818615 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.401046239 seconds)
    (101/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073665873 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072437362 seconds)
    (103/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069669253 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065449929 seconds)
    (105/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15060546 seconds)
    (106/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070542253 seconds)
    (107/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.0705754 seconds)
    (108/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.096316271 seconds)
    (109/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.149041806 seconds)
    (110/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065876234 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072398187 seconds)
    (112/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.186006721 seconds)
    (113/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051840592 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095773595 seconds)
    (115/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.087917243 seconds)
    (116/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051214472 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091297128 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129178541 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138935891 seconds)
    (120/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052144085 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17816625 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.149991803 seconds)
    (123/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05108255 seconds)
    (124/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.184514256 seconds)
    (125/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.0879508 seconds)
    (126/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077262029 seconds)
    (127/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069004291 seconds)
    (128/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.0655006 seconds)
    (129/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073209265 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06738488 seconds)
    (131/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052091773 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.13147666 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072703853 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064832074 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07152432 seconds)
    (136/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050781148 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.148598687 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136473042 seconds)
    (139/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06559205 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070464601 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071459087 seconds)
    (142/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.110823944 seconds)
    (143/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.178887605 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064735967 seconds)
    (145/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052417239 seconds)
    (146/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064319677 seconds)
    (147/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071175507 seconds)
    (148/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051190065 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071472183 seconds)
    (150/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.108765342 seconds)
    (151/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066635889 seconds)
    (152/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050704684 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086620107 seconds)
    (154/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065825426 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.140897819 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.1837393 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065474218 seconds)
    (158/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052138519 seconds)
    (159/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074648274 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064718921 seconds)
    (161/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051963748 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072226148 seconds)
    (163/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079313901 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066618814 seconds)
    (165/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.182774665 seconds)
    (166/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072406654 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086780353 seconds)
    (168/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071392166 seconds)
    (169/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050865116 seconds)
    (170/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079539784 seconds)
    (171/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051385185 seconds)
    (172/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072248161 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07317593 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175682279 seconds)
    (175/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.106824797 seconds)
    (176/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050885625 seconds)
    (177/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052113067 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087322056 seconds)
    (179/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051282266 seconds)
    (180/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.147799546 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067039585 seconds)
    (182/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088861586 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.110675197 seconds)
    (184/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074866853 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138409709 seconds)
    (186/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.107144311 seconds)
    (187/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074397488 seconds)
    (188/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.230371335 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.112498994 seconds)
    (190/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066197279 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169581825 seconds)
    (192/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073216068 seconds)
    (193/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06689935 seconds)
    (194/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051625949 seconds)
    (195/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088799492 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065441905 seconds)
    (197/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052113919 seconds)
    (198/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.0516374 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086968153 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121892583 seconds)
    (201/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.150523509 seconds)
    (202/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086172175 seconds)
    (203/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053017257 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053290964 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066066712 seconds)
    (206/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07190621 seconds)
    (207/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067195493 seconds)
    (208/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074003701 seconds)
    (209/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069253182 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094055721 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066125124 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051914827 seconds)
    (213/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07290637 seconds)
    (214/309) benchmarking ("sort", Float64, false)...
    done (took 0.126327333 seconds)
    (215/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095255552 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064537765 seconds)
    (217/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051468035 seconds)
    (218/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054122951 seconds)
    (219/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052330446 seconds)
    (220/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052157536 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065278656 seconds)
    (222/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062245276 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125015472 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074586223 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072259569 seconds)
    (226/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087301037 seconds)
    (227/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074332469 seconds)
    (228/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079412056 seconds)
    (229/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051719672 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13140665 seconds)
    (231/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073399692 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.0894896 seconds)
    (233/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075404096 seconds)
    (234/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06876792 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.08938376 seconds)
    (236/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.149902664 seconds)
    (237/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061023769 seconds)
    (238/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066710481 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072647367 seconds)
    (240/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070896397 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051623587 seconds)
    (242/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051051309 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051069877 seconds)
    (244/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064005988 seconds)
    (245/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051368271 seconds)
    (246/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087805726 seconds)
    (247/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070560258 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136507087 seconds)
    (249/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064402655 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086032553 seconds)
    (251/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068331441 seconds)
    (252/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062633163 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065184423 seconds)
    (254/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076365864 seconds)
    (255/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051038948 seconds)
    (256/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066286191 seconds)
    (257/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054682046 seconds)
    (258/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.105323178 seconds)
    (259/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051545912 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065872414 seconds)
    (261/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072378933 seconds)
    (262/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077645285 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064399881 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067334801 seconds)
    (265/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078234408 seconds)
    (266/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06451925 seconds)
    (267/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051556236 seconds)
    (268/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063906863 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073146639 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065344455 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07146951 seconds)
    (272/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051190433 seconds)
    (273/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051114859 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073202454 seconds)
    (275/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051178313 seconds)
    (276/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060447102 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050741748 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095211016 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085412072 seconds)
    (280/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071273139 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051018519 seconds)
    (282/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051266519 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.163941621 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086414735 seconds)
    (285/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061475737 seconds)
    (286/309) benchmarking ("sort", Float32, false)...
    done (took 0.126697746 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13575956 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072499083 seconds)
    (289/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066753723 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06410658 seconds)
    (291/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050980833 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06312597 seconds)
    (293/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054796621 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090089002 seconds)
    (295/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078526472 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072229601 seconds)
    (297/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05158377 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071262225 seconds)
    (299/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052788995 seconds)
    (300/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052167964 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067239272 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066733378 seconds)
    (303/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078937696 seconds)
    (304/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052253013 seconds)
    (305/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052443287 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070563658 seconds)
    (307/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066470258 seconds)
    (308/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067459242 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052489056 seconds)
  done (took 30.517235457 seconds)
done (took 31.998967506 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083058172 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092226663 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07496315 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092187941 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080064668 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075713942 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071822509 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077384506 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079369657 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081002123 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077531475 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054324559 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073064527 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073428563 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073787957 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090465383 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077378291 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072460664 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072380546 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064196223 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072445407 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065627916 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066718373 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054567547 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077206266 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070739152 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.0720488 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073439065 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065518139 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065869663 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06855494 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072822635 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06530664 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077422954 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071473423 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072044516 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074021138 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075777016 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067020192 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065361226 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07352736 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065300013 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.0719451 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072549115 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071881071 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071017456 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073000042 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078260845 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091199467 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067837266 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073733552 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075424832 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075860768 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072024823 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.0691713 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072542705 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070181031 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090381364 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072830201 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06763744 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073437915 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072868122 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070635389 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07225525 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072806301 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074621184 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074768283 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071445358 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075030472 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071409926 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065553164 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072288188 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068157497 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065366402 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076053607 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076634568 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06575951 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07268666 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073843851 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073006981 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067218676 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070176022 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068689577 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072908738 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069676232 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056438953 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070771702 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073008374 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066170699 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074832732 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073128421 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074052535 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068561943 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077009207 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066344704 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071461122 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066858904 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067356546 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068259276 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070689869 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066843633 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069726003 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075667055 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06870023 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073074545 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080770129 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066955032 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073426308 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065858261 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06631601 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081280681 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076296625 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067193157 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06950639 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065197483 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072084686 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06398046 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064643383 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064747258 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064976033 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071221012 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065305745 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068492219 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07479193 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079803216 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066742261 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070161906 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069368054 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066414075 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071603468 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065940207 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066202764 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200309773 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062918941 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069100204 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06734103 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075055432 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070690979 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074465535 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069096811 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07528796 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071401652 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071937142 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070863623 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064469425 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058764446 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067695982 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069836052 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069815624 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068215567 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069744501 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068024131 seconds)
done (took 12.585071913 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066372468 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143120327 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098126313 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094322006 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085493682 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066272339 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.0761378 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101358892 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067110972 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101945072 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087090108 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084298709 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112529698 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064163326 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065826453 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069396927 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067137523 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081115006 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100148482 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085940083 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115324374 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065022479 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094264865 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089346587 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086582809 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091562496 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066256192 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069192127 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068890481 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100105135 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086125691 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069439517 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066134776 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100271247 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092163793 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083015201 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066200048 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081722129 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066283035 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065103419 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066781676 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097490114 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079761437 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079967679 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069518932 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068897931 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066754887 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083336666 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08878311 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078107517 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085843239 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101940618 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068068954 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065016634 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064202915 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085091243 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065151031 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069026548 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066050552 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068009496 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067391305 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071444873 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083967069 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083998299 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071943272 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082215927 seconds)
  done (took 6.857861392 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082737564 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089852857 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082305593 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082641795 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065169232 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066509571 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066776709 seconds)
  done (took 2.111263331 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066586113 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08789883 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089661186 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088860858 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084646058 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087232881 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075160097 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066306562 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080128186 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067226279 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087357606 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101723787 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067622857 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07301674 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090309902 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066039307 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090016519 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066538121 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069332621 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089759792 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068257176 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081406546 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069921238 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066856105 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080089698 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066142547 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112487687 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070320857 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067905191 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069321052 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065250016 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10960291 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082573444 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077711049 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068626987 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083179685 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083195497 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06664027 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08469519 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073506431 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082343464 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068835841 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069479597 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066304202 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072631754 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078749658 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069011446 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068536588 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070718648 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088309837 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068881101 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082086687 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071823561 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070948134 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069701339 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07272792 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078407363 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.0691552 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088195702 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069480006 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084425726 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083058701 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080279001 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081923862 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068044928 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079952359 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079845379 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070602302 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06906316 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06946883 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082877231 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064866083 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067382277 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07658379 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067905592 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089606943 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090693438 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069229621 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077555564 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.0670041 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066288801 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066132176 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088553474 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068600047 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066603989 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07021661 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068996754 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064675738 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065418235 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070168603 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063984948 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067577532 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069243454 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069156855 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068352985 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082350381 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068721892 seconds)
  done (took 8.889107369 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069077449 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067921117 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069689944 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067760306 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067302169 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067813515 seconds)
  done (took 2.006610025 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092941561 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068971302 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080636325 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072238825 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104073484 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086886865 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086795482 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078293775 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082956595 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079035532 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086136421 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088128824 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092319457 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073401134 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086042405 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07132693 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086937233 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075383423 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07807613 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07268367 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086614927 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073105806 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073019042 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081206992 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075331176 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071815295 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066722374 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078636073 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078382771 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07917434 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072072592 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075474375 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070520014 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078458381 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086314654 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070333854 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071865552 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076980394 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07180277 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075400215 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087609289 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072536782 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07417105 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076890639 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078204963 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069863829 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07706067 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075779809 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085520409 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076533052 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076810568 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071150259 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075120325 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076662122 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069803717 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078112568 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076420341 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085964887 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071712173 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070407918 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06868604 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074878372 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077142332 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075156236 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078295824 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076638788 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07031944 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072158674 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072070856 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071211506 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07650329 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068672872 seconds)
  done (took 7.139624889 seconds)
done (took 28.561399895 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542188925 seconds)
  done (took 2.106009216 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.602327054 seconds)
  done (took 2.190441453 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.624626921 seconds)
  done (took 8.209603464 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.39014028 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472728255 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.684345662 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131004554 seconds)
  done (took 3.302835976 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.666128765 seconds)
  done (took 2.264279769 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207857597 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.19633129 seconds)
  done (took 2.010162543 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374734014 seconds)
  done (took 1.959976648 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.100452856 seconds)
  done (took 2.687951416 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260604382 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162409571 seconds)
  done (took 2.015909071 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459050308 seconds)
  done (took 2.05110789 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.851003679 seconds)
  done (took 6.445356772 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204803349 seconds)
  done (took 1.836747139 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239730952 seconds)
  done (took 1.831807832 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.698856081 seconds)
  done (took 3.290105684 seconds)
done (took 43.792519913 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080547674 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081596628 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081122688 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078593418 seconds)
  done (took 1.900184552 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076852352 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073416678 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076266501 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072954908 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076460682 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073077506 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074069796 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076619108 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072860048 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072728676 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072366029 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072512539 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075060104 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074095203 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070825359 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07508317 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076081074 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072834918 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075465893 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072816196 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070886863 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074817276 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07520171 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07211868 seconds)
  done (took 3.369752396 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077846497 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073239407 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07468784 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071551907 seconds)
  done (took 1.897716483 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077998851 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092021085 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08928213 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077876295 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092524726 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086169318 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06935406 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069438263 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073349131 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.0773523 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06815819 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095601341 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087510675 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07700308 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079061391 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065958872 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068395873 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086648567 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077507921 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077683795 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069674701 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077055166 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067850116 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088174394 seconds)
  done (took 3.488834023 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077282528 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102686811 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077656924 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087391611 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089883941 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065380341 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074049786 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089143453 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122957577 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065246269 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070297613 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06531882 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072500557 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065799856 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076076627 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104493307 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108615828 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068646045 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095844411 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066427968 seconds)
  done (took 3.252912557 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073372783 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06987779 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067201447 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070049277 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07910295 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075537143 seconds)
  done (took 2.042599768 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067807206 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066868828 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067597635 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066778097 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073119679 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066794244 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066126582 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067237401 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067947055 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068033467 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066557457 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065962667 seconds)
  done (took 2.414735113 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.424543909 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068988564 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070132737 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065967957 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070926246 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066848241 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079501924 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068405509 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090465574 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06619356 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067543543 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069138772 seconds)
  done (took 2.812041119 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207160057 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076784538 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237497318 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136714761 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111350029 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115598219 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103712835 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112601697 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143504207 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101224914 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167966949 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166080693 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107124552 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13736488 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089528505 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097931734 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155465021 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161941994 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103582537 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165698752 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143884874 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124666401 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146752882 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101048847 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106303996 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121621255 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070855233 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079946724 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170151874 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131046599 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146579064 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110855011 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09337996 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176866805 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171437298 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142773089 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13474486 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084651034 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102530688 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134764893 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203514837 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09189407 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16826237 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249304541 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080930692 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134764539 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121448756 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119635651 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107316918 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090676927 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145971119 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182759704 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138770151 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08742908 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111836737 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115093985 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117353551 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104160336 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180841371 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162752194 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12763281 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071231923 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098594745 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152723838 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131044205 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109525236 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127669174 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093820036 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133556068 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153985685 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118660347 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143201163 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128398302 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088682143 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119972179 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139497067 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128555809 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170691377 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125111717 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075533567 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128823766 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107177405 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08462292 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145549873 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076492873 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176212536 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099130807 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107206214 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114131955 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109625776 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109749906 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162201307 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143185388 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245148235 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066087822 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105101002 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121248251 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14757118 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088114583 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109162374 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117086826 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077569671 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139371941 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075433058 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124042585 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075787842 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125723008 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132428584 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075726462 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122525946 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100636526 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100156662 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133284087 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160071913 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089870641 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081699883 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167813176 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122167321 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105469427 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144149162 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155581165 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099469108 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104006023 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150338579 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183618533 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091059727 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163256126 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107390187 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084176022 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087588899 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123962416 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112387156 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121965439 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082438091 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.1188202 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167667905 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075000153 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095349604 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134392589 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079437162 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081008562 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103588898 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10083219 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095338907 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100887804 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103935096 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136783465 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122960905 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104780657 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268434312 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099702156 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170858513 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090079826 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100520958 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104581044 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070943975 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137569106 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157785042 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079736426 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164832708 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123317408 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104922955 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119636404 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083490514 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139925194 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080173359 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070637723 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143833944 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111722327 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11028339 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150296894 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104770504 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128766937 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.122897293 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138536155 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135301436 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.13053405 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106453054 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088818376 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111715687 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125743417 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073512385 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091019395 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08034184 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103842166 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09562191 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084067247 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142306194 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124370005 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100358203 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111633277 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096719815 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147370571 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076728956 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129142994 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11929677 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094286878 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152695906 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152630597 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131109176 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101004477 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145070181 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070752103 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073632319 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089020466 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122767345 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082806937 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083356321 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116594855 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145971484 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128252357 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134030133 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109643231 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118808404 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151908511 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068630885 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113714352 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143827686 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118022709 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102598352 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088308369 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.096654171 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139020384 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105018053 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176257683 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110899942 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123702606 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152653832 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101563829 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080205248 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106356388 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131202513 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101457398 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139918076 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097379151 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086115824 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107149104 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07259428 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096581701 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12385506 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116395797 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127699125 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.108868962 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124104346 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074214253 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109604189 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114114136 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114264063 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.062148005 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112595035 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149394212 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.08932661 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111845247 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142637011 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076601251 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.11858525 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.428226947 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148445803 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087628291 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112823573 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121188913 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129413381 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122445364 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141485048 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110838966 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13745776 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111534134 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086964983 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088982777 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098631679 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106493471 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095614325 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109476048 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115783688 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095732776 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133260209 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103605656 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110408201 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118424961 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09839831 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090891691 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097251019 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176280468 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120457777 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171801865 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100365648 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147397074 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165058225 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07537222 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079699471 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078674049 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141042728 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083854938 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131448527 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098071827 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105912192 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124942088 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141766309 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095101677 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068726771 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108388767 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134278988 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112463529 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098020959 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104719019 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163668374 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100823369 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082190533 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114288594 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104259017 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101973779 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171236937 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.208825237 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097589415 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076633161 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082061152 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128924701 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153740007 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081221425 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102874357 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11975245 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110619372 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128766428 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101643475 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099080839 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11416842 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149817723 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1288254 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089860881 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11225543 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129375604 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15707952 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105408148 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095334715 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171907885 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151931457 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160512352 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088866157 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114869931 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131469091 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108266119 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139350137 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08376904 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164001925 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082288175 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136376796 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104418529 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09036565 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12992038 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099130457 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088397655 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14782399 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11757816 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083021059 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078429788 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118158534 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120663137 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107200122 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075787948 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139801638 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073352665 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132895174 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167239879 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08085191 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103998154 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242186257 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080362414 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109199952 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103802463 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090333573 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098598502 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172595621 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088196624 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149919925 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141626924 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113503547 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137481397 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100170029 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636129052 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078524212 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151941023 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116308283 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171790418 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09768132 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117470902 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109324182 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124138268 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144422381 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106945991 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179306437 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133779983 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118634237 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079817919 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102801254 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102935198 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088973451 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105833584 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113902987 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116114509 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093886976 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116080805 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12429047 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082109614 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095644016 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156142178 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117147155 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144243426 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140607899 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085097595 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117648953 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139737876 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080046037 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122763127 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152081538 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106602732 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098454646 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080122974 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.246815778 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170231538 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07410667 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164566235 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123463655 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111381661 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115540516 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116396277 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132742127 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107239171 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121799596 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093447884 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109735569 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114168908 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08299581 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077024347 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10439496 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113226366 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097874803 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098549651 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098235848 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15091633 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071050459 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095339522 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103078973 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144013317 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173811581 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088893867 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082861047 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119244333 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113136749 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113177879 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120816214 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079549984 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082625703 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081786974 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077288467 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108632278 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112330665 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104104909 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111210668 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164346319 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08311945 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225123965 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095006459 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104860469 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069618868 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078339559 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095732594 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097406223 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108293944 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100927047 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170155011 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095004394 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090566746 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092927624 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073927702 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082949059 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271440358 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109884374 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120217905 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098708462 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062753587 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109293285 seconds)
  done (took 58.943601114 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.118789447 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082168275 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097615836 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150310457 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122585858 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211938333 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157908064 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199360613 seconds)
  done (took 2.87692243 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068165867 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093919999 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100039703 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082515168 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066696198 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068071286 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225532094 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080328174 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06667588 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088738824 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078382841 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068387035 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.424247203 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068458203 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071563933 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065265225 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069002302 seconds)
  done (took 3.514132996 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.367524686 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.358945924 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.373711055 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073674869 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.833925949 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090273194 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.084376707 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.097554757 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072313058 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.270049582 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.700737057 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.093554057 seconds)
  done (took 14.155483979 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076868637 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070403399 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085127048 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084630055 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073791916 seconds)
  done (took 2.124370206 seconds)
done (took 104.436930833 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080199436 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.393615834 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053874803 seconds)
  done (took 2.210891893 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083520054 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084751328 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084811322 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082655124 seconds)
  done (took 2.078758052 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074983969 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076405017 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.085120134 seconds)
  done (took 1.972288655 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224852193 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140220145 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087180677 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082695879 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078057004 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078551677 seconds)
  done (took 1.980390654 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072658693 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07554689 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072828042 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076142646 seconds)
  done (took 2.033387714 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076297463 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052213256 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055086133 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055932164 seconds)
  done (took 1.978126392 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08802548 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078701045 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078414101 seconds)
  done (took 1.98407118 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107185059 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084414931 seconds)
  done (took 1.929946601 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08211235 seconds)
  done (took 1.825539672 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099578297 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113362739 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129333529 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109609989 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136893614 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109114487 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086245097 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.0868786 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077359746 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087682091 seconds)
  done (took 2.778296434 seconds)
done (took 23.031374598 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080328078 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367094571 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36119001 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091186466 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.6676711 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357115851 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.020956773 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092686703 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114311378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067957117 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08399475 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649409503 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975695959 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325086059 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.962787066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32455155 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649608364 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068797105 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067959125 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068209305 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.007308999 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067891007 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068063865 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069150294 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648985347 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371546679 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068353759 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324703074 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067958757 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070298337 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355627271 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068055253 seconds)
  done (took 16.31287963 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071043124 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118665858 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074262217 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084530348 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070856879 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069862876 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071875891 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06923349 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120150179 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068044928 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084871986 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067869319 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072693135 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069260927 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087478002 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06854037 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069201858 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069095389 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068564895 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068712253 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086796625 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068031266 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068964341 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068727141 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067905147 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079578117 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068629214 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068114496 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068541723 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070370353 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071039407 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069555252 seconds)
  done (took 4.151873041 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115224956 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125053038 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074182006 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103907495 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112573295 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070553664 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143695346 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09328491 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128085506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068246029 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085280526 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068266702 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100991582 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06923432 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088320264 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069144768 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06954333 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069318576 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068930924 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069288615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087453018 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068758078 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068822947 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069127206 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069305074 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081832448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068901992 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069052746 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068769663 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070714694 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071947856 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06908732 seconds)
  done (took 4.408803585 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07271155 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075724078 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083190254 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084388246 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070026655 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072908524 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073033059 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070044914 seconds)
  done (took 2.361676045 seconds)
done (took 28.976572896 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078465123 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069716826 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073014352 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081024059 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073947496 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078863878 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067435559 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075035359 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072436321 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073488668 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075506745 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06816496 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071142784 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067377772 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074143986 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068135127 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079638161 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07194352 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079523526 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079745737 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07003756 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073069055 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074348017 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079371987 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079227114 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079411254 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077597928 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073092815 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069514002 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070693395 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076818873 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084238065 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068666849 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080070819 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068282107 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067940832 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071601046 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068113636 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079532406 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07660548 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069775634 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076133497 seconds)
  done (took 4.849063172 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087531456 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091097184 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08453847 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061242655 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06690945 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065192651 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08884101 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059776121 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059860303 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088206314 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057019926 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059902329 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063237106 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054359998 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059554392 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057013304 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061872807 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056333608 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059791917 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059952687 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058610715 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054640178 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060280342 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065976577 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056526097 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062054111 seconds)
  done (took 3.465835914 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074193907 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084863891 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08825978 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127232569 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105106921 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077504993 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078270576 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093021748 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085681902 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067200538 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071386836 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094190226 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088608041 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074221662 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06830291 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085361023 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083004353 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069440761 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073632098 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091370416 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085130471 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083880674 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093312373 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081335368 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067583662 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070334292 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071849543 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081752813 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072485921 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077021804 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071947129 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071402556 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069943995 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079148391 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071826656 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07136061 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093790577 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078803438 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079864484 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069950402 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071652935 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06903931 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089569661 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123022269 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067206078 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075963989 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076645649 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077149852 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067728236 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086713744 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078840199 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067054331 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070697913 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067244457 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.078824646 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08017131 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069430832 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069768302 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076629698 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070546571 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085713318 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071425365 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082951479 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067310677 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075117753 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067144691 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068363785 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06636323 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092322742 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068835086 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.1081624 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068475428 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068641202 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076515764 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.0756256 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07392851 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067897546 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082641909 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078024445 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071499037 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076633007 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07107875 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07050936 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088171241 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069769022 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069136023 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068609502 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073699254 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070742058 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069371077 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080322371 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067783594 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.0704293 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084120545 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067299165 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068946145 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073559953 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072934045 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067406651 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078794536 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072067444 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068253684 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076715091 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067773919 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070315777 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077518646 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073720954 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066789281 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072144877 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073610113 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068494909 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069445109 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070364033 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069275292 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07639079 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074245687 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072460376 seconds)
  done (took 10.722506921 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161465329 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154504472 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070666445 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145520923 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076445467 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079385926 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147802036 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094934901 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068268042 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068662289 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068978935 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110223963 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105832734 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116049209 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078815879 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067698996 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083450142 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113761 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150235224 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143459508 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083871644 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076728495 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070109139 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069382159 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07086012 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078753874 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085267405 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076618177 seconds)
  done (took 4.508441235 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081040703 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096463093 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074408627 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089498676 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092497364 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06801853 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07020743 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069606176 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080701607 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079403055 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067659304 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073762999 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075657563 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071576825 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068931974 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075009391 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076080575 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06964186 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071189438 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07335828 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077974402 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081369679 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072833867 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067861289 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074730164 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06743056 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065025387 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085059621 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068347989 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090654308 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066216732 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075174847 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081460282 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068723413 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068822319 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069236801 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069598421 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069392328 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070337306 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066777471 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06652205 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057825724 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067350639 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079855431 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074579491 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056924908 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073140593 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072869661 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073022208 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065696276 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070323199 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070500306 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070889578 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075142845 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072859172 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072699363 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069096224 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065568742 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075640277 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067925131 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064719206 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066031904 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072620106 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066051335 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075277626 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072138748 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06621901 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067130801 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069644961 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073843055 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067419937 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070765838 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065422885 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069493544 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072181494 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069528668 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068629572 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066226234 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068527511 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067788754 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05758445 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068738315 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054485953 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071746473 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066352357 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066465861 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067592896 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072816192 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079896551 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069151021 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073296894 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068315391 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06692141 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070691177 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060587765 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070512036 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082684067 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082973078 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067801328 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065989358 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081934537 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072408574 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066821147 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056377028 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075356795 seconds)
  done (took 9.287684432 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094628799 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088910507 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070493903 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083494361 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.09207742 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087377316 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07538567 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077441608 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070531795 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082764893 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074119408 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.0767719 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068143553 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077158319 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093485394 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07714372 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069972211 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077408919 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072263637 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101573647 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083055834 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082421457 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075382458 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068194124 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076449945 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080377629 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089764696 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080680997 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078693573 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075919538 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080145363 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089149638 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074606486 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072425761 seconds)
  done (took 4.523850599 seconds)
done (took 39.104008414 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.827318875 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.005283622 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.832402997 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.181148926 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.132519148 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.927941109 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.912586507 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.826368917 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.028333822 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.868194215 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.060871585 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.869723091 seconds)
done (took 66.235729336 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.888589847 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.965667964 seconds)
    (2/2) benchmarking "String"...
    done (took 2.129632462 seconds)
  done (took 5.859513633 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.128889068 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.4306134 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.073157011 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.824532339 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.830331709 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.138577113 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.622990954 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.347375497 seconds)
  done (took 31.034557621 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.049841692 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.027781248 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.524260463 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.56209724 seconds)
  done (took 15.981974695 seconds)
done (took 64.735498707 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.830439214 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.878738232 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.832485285 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.810478684 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.884671508 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.848588156 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.930847964 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.014818203 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.827954216 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.820518352 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.829263229 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.261383739 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.826438412 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.904674194 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.829071823 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.836088591 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.886380929 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.260720036 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.982614913 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.848363455 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.833643025 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.856403789 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.827435417 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.837625785 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.872628278 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.827555013 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.263646772 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.837670108 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.63149483 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.828563798 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.874357696 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.164216452 seconds)
  done (took 206.566579492 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.826875933 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.058351708 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.09040539 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.832748858 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.509930857 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.021652271 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.964034746 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.533956999 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.830583182 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.837001407 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.950861438 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.826079508 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.961634477 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.779511741 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.836366299 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.830723141 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.157842294 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.975626519 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.830322414 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.080537676 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.839843234 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.781037704 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.762656648 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.939941707 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.829846707 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.853583872 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.833712413 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.861574149 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.02432574 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.137121813 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.859545604 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.851799501 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.032745325 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.702990829 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.844934781 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.831993799 seconds)
  done (took 172.491866474 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.973320589 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.829410294 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.829682144 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.829419527 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.835720144 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.829863325 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.960447599 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.961612572 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.284860898 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.21550294 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.881891602 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.67584786 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.832673449 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.897071744 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.840239165 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.828765375 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.842992605 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.856653352 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.831485863 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.831687215 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.958445395 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.841297426 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.073265325 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.833686032 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.825920751 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.834840078 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.195493523 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.828772938 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.833485863 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.070690119 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.82574899 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.827824692 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.732739042 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.172726018 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.918615548 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.827534216 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.832022699 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.827049033 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.04720962 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.825872133 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.824745502 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.828815342 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.011913593 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.820953252 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.945513529 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.820737632 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.325091121 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.818205134 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.820113568 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.708661522 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.817281457 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.491288296 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.817544751 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.815262111 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.817746085 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.81476936 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.81688552 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.821303552 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.838486515 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.891731212 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.816353877 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.82009275 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.82054542 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.81599817 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.864986249 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.816076175 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.935798756 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.879847173 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.033674098 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.937921616 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.818761593 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.88698417 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.911905372 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.818316875 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.816246465 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.817132454 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.817478674 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.82407797 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.821286287 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.903370067 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.823139046 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.945795513 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.828473948 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.820560277 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.869909731 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.890466774 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.824489981 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.712576547 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.823401892 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.820622284 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.15434207 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.888914936 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.821001099 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.819378678 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.819602664 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.820779882 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.94057569 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.943999898 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.591936161 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.822769741 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.74923576 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.823122813 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.947616543 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.815365724 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.00790614 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.818764435 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.897517716 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.821423326 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.816251563 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.81634751 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.845875638 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.815322179 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.872061421 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.814606171 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.18796746 seconds)
  done (took 407.885234844 seconds)
done (took 790.739144056 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.490429777 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.448379402 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.558462306 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.472655631 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.448811314 seconds)
  done (took 14.176079184 seconds)
done (took 15.931290929 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.901097689 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.906602409 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.839685307 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.904888057 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.835638568 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.904521301 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.885730799 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.841345312 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.871177222 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.840114314 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.87333373 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.839173758 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.827199906 seconds)
  done (took 26.03123618 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.043853383 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.055894123 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.887138701 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.074755839 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.863822666 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.047918445 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.980563738 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.966590958 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.964924013 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.831045757 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.829375754 seconds)
  done (took 23.304617902 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.050594864 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.053309448 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.892427722 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.054497286 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.866622091 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.055088181 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.978751512 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.968000189 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.968363078 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.831389123 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.829642277 seconds)
  done (took 23.307163748 seconds)
done (took 74.398542349 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.823643646 seconds)
  done (took 3.580991297 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.848532567 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.982613728 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.829745454 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.824820114 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.822573982 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.822780811 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.828103522 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.820887336 seconds)
  done (took 16.539360228 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.819051477 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.817476999 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.821339025 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.813804445 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.816689317 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.817186171 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.815324253 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.817194355 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.819848257 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.813900025 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.815208549 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.813219366 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.81392599 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.818316087 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.812894188 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.813386659 seconds)
  done (took 30.813785465 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.813963643 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.812227999 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.817318299 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.813390735 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.814328102 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.813967003 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.815421095 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.817650771 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.813420627 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.812934885 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.813235465 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.813824961 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.815610391 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.816699523 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.813311067 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.813207741 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.813117587 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.813295234 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.819717047 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.813196671 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.812439156 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.811692094 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.812468273 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.813514266 seconds)
  done (took 45.293875834 seconds)
done (took 97.9839912 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.521227189 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.499278608 seconds)
  done (took 8.770394039 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.817364798 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.814799364 seconds)
  done (took 5.422691494 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.815580184 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.81653678 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.814956497 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.815483881 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.816140944 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.815433824 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.814325115 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.815761919 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.815561643 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.816259769 seconds)
  done (took 19.907715751 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.815820308 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.815224095 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.812466777 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.816150963 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.81455324 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.812478225 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.814776474 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.816698246 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.815540775 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.812503234 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.816465509 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.812846082 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.815868939 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.813015743 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.814746463 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.812754099 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.813752465 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.812427885 seconds)
  done (took 34.408567265 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.815156768 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.815500656 seconds)
  done (took 5.381787638 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.812345947 seconds)
    (2/7) benchmarking "second"...
    done (took 1.813047649 seconds)
    (3/7) benchmarking "month"...
    done (took 1.812029565 seconds)
    (4/7) benchmarking "year"...
    done (took 1.812372455 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.811964243 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.811501561 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.81248194 seconds)
  done (took 14.435726708 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.816229684 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.976924796 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.05230893 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.525328522 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.817267945 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.818061842 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.777151061 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.819256127 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.819746309 seconds)
  done (took 20.173103053 seconds)
done (took 110.249956635 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.66427638 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.812197567 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.189162718 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.867440147 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.862174705 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.109062523 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.817743816 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.038161084 seconds)
done (took 43.108775603 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.899231877 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.383318239 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.416632166 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.728858959 seconds)
  done (took 13.277104199 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.794335637 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.330056481 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.85763903 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.410329281 seconds)
  done (took 20.189896595 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.1785318 seconds)
    (2/2) benchmarking "read"...
    done (took 2.173687528 seconds)
  done (took 6.106128344 seconds)
done (took 48.219616762 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.814216528 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.809965388 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.81331329 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.813629573 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.813500777 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.811561812 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.811608587 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.813364101 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.813453878 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.814186294 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.81285814 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.814110419 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813660214 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811214818 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813046971 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812920068 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.810837891 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811848802 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.811814974 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.815243904 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.812310156 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813811487 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.811344244 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.812166012 seconds)
  done (took 45.255599631 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.814973101 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.81265105 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.81286872 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.814328559 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.811344512 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.815173383 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.813315395 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.811220002 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.813700125 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.813881745 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.810258426 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.811665359 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.813267927 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.812134604 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813922242 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.811726844 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.814531864 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.8112968 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813346792 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.811363334 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.813969162 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811362975 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.811788061 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.813539155 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.812024953 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.811677983 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.815509252 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.813685992 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.814281241 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.812396515 seconds)
  done (took 56.137636388 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.818915786 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.819533758 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.815729621 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.814283817 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.814797483 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.814243657 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.815342675 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.814955613 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.815052211 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.814487017 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.81398943 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.814503659 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.814732905 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.816322731 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.813570907 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.813818828 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.814218784 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.815162217 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.815754601 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.814482987 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.813922586 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.813941889 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.813798646 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.813271408 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.814558862 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.813666365 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.81460319 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.814845859 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.813815928 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.815037287 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.813765152 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.81384986 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.813789488 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.81432626 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.814085911 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.814634356 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.81804414 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.819973584 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.814693891 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.813849014 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.815263724 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.815349742 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.815784409 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.814596247 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.814925407 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.814424117 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.815662997 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.814089074 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.815498502 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.815223416 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.814945982 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.815814468 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.814944093 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.814928786 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.815972689 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.815935406 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.815204969 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.817499403 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.815505245 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.815242059 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.815532938 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.815315377 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.816819691 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.816007898 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.816649557 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.816378821 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.815931736 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.815727494 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.815789584 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.816586332 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.815149 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.816280677 seconds)
  done (took 132.446697558 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.816243453 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.815053518 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.8134267 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.812863537 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.813240522 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.816844521 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.814781808 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816022053 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814508113 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.816538656 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8169177 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.815243697 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81343813 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.817004256 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.816909062 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.814605855 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.817804634 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.815009344 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.816829259 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.81720048 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.817306463 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.813955497 seconds)
  done (took 41.693561556 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.817794843 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.818110567 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.814064944 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.817715211 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.814490353 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.817573636 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.817872765 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.818224569 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.818175179 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.81504128 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816274228 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.818798824 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.815450261 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815924969 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.814956759 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.815842038 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.818623215 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.816045179 seconds)
  done (took 34.454687127 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.815698985 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.815912849 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.818285882 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.816587773 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.816962645 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.819079022 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.816130313 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.818601244 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.819168028 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.816288632 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.81938015 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.818237958 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.819283901 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816616032 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820027682 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.815829424 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.818713902 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81736567 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.818721347 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.81798079 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.816409898 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.81861776 seconds)
  done (took 41.74350338 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.818938924 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.818399342 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.817253812 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.815788201 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.816410292 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.819375286 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.819174771 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.818208462 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.820572238 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.819833767 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.817841856 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.81953939 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.816501224 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.817910873 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.81732413 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.818118022 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.820547587 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.818439926 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.821444717 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.818480986 seconds)
  done (took 38.125760538 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.821748793 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.821795691 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.822583218 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823061742 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.822299024 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.821970441 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.822430257 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.821688694 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.823344646 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.822907747 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.822057796 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.82234172 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.822332701 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.823392829 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.823050368 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.822588511 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.822127026 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.823270013 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.821240562 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823143441 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.823138668 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.821693384 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.821170895 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.822773379 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.822039084 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.822645483 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82242008 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.823145673 seconds)
  done (took 52.785684361 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.821384567 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.823462601 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.819005929 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.819038122 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.81912951 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.819643416 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.819219711 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.819987657 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.822947823 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.818647881 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.821447167 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.821463479 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.822870331 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.822393143 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.821371909 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.82309307 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822828867 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.820750217 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.821817868 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819705357 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.821758831 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822660377 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.821998749 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.821627406 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.821205396 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.823485396 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.82037286 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.821012433 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.822727629 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.822309035 seconds)
  done (took 56.397134287 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.842281779 seconds)
    (2/2) benchmarking "in"...
    done (took 1.84290695 seconds)
  done (took 5.443729231 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.821171886 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.824362941 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.823779429 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.820885023 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.821044054 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.823764937 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.824979455 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.821292073 seconds)
  done (took 16.340424417 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.823964403 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.824247562 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.825704107 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.824718812 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.825517595 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.825447766 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.831212857 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.823961589 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.828939701 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.825146634 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.830336734 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.832741165 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.828958618 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.826100282 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.825786752 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.826231229 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.824159263 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.825171053 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.825782726 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.826664434 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.825170181 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.827989552 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.826719963 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.822499195 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.827029919 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.837058548 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.831817961 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.824681758 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.825290011 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.831122856 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.825595786 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.821874754 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.826492965 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.827256526 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.824677724 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.827622267 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.835532015 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.826500313 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.834380485 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.827790663 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.826650716 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.823907003 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.829895952 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.830220741 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.828153069 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.826970974 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.828318077 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.824046036 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.826895599 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.829337245 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.830121743 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.827321375 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.823956797 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.835424681 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.829468089 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.835242349 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.827146939 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.831004357 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.833626531 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.837631038 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.84175329 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.833590958 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.829208041 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.827540546 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.836319279 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.847351857 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.834832408 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.823975717 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.825216113 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.827977201 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.83580085 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.842606986 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.835280737 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.829493533 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.830034519 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.826875631 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.828166597 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.828299496 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.837221963 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.8337703 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.828334256 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.828765551 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.836627811 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.845764777 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.829252503 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.828760946 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.829111193 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.82870661 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.829606692 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.839115905 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.829641325 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.827844093 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.828391548 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.828727365 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.831586657 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.831245581 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.828842551 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.830981046 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.825530393 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.828697694 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.830211666 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.8325191 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.838011444 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.830657075 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.829300918 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.837168502 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.829873545 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.830008405 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.841514456 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.829064136 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.830060514 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.831186075 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.837290418 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.826109694 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.832111423 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.837616199 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.831301072 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.833601674 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.831079696 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.830817025 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.838867828 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.853284581 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.831301228 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.829878758 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.834187382 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.839042396 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.830409662 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.835150752 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.830301272 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.82680512 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.827282026 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.8330633 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.830280311 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.833482557 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.831960625 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.832750724 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.827796024 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.83157492 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.830814401 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.834906556 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.834684535 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.832550202 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.833158148 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.834592204 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.833413433 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.833992339 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.839616058 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.832303371 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.833219701 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.836308644 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.83171174 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.832373795 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.834798622 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.833118737 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.834399003 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.834192064 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.832066556 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.832309414 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.831610468 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.831959335 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.832509703 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.83396338 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.836039463 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.83333239 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.839079798 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.831560115 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.831411948 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.831855553 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.832702839 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.833355959 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.832666324 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.830790483 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.835725456 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.838591428 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.832542488 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.833432429 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.837529681 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.833844724 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.834821255 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.834138733 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.835254659 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.839518502 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.835003151 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.842716075 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.833839561 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.833367382 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.834162543 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.834856167 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.833875774 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.833824944 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.834569688 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.839324161 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.848087972 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.843717851 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.835093631 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.836995017 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.834345034 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.837038807 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.841649779 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.835797167 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.833353514 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.834654777 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.833881714 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.834544293 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.83920273 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.835164198 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.835317246 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.83383907 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.835063199 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.835400984 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.836621022 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.836062008 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.837406299 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.832239752 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.835741863 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.837436486 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.833421905 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.833712765 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.834669422 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.83551274 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.837039788 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.835888854 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.846418425 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.833236537 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.837096804 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.836654715 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.836198259 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.834643546 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.835089636 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.839648238 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.837579492 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.845193477 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.836993267 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.837769092 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.844161495 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.836447975 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.835310937 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.840197344 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.835127143 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.833648458 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.83902656 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.841719398 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.836345554 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.837133971 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.837429582 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.836774247 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.836469887 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.84321474 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.834580726 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.835585477 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.837777403 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.840772012 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.834587106 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.839933501 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.838438972 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.839001604 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.839974739 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.837413923 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.838530162 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.840819824 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.838119281 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.836931954 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.838363126 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.839052752 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.844741646 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.844064338 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.83958434 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.842899488 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.838791051 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.840078488 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.839469761 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.838892258 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.838807171 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.854147426 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.844664715 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.847181443 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.843365452 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.838617262 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.845005975 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.838735602 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.842457416 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.838246759 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.839132348 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.83875496 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.837775997 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.835695168 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.842314831 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.838846879 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.840602875 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.838952395 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.841336194 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.838769213 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.839208295 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.839514784 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.839374929 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.838817139 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.838281359 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.839117071 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.843981686 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.843323078 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.839502443 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.839060693 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.84671083 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.839702595 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.842965056 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.838727686 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.838943698 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.839055356 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.843474474 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.840842832 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.84211049 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.845759976 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.841913119 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.849764196 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.841155664 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.85054813 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.84160867 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.843191752 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.848266843 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.837533668 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.840267067 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.842402004 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.841547142 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.848515701 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.841146267 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.841457315 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.84496935 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.842267608 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.842443307 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.839720378 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.842150755 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.841175443 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.841592904 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.852847531 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.842147023 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.84473108 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.844845043 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.838998379 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.842370648 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.840403814 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.841407455 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.849394198 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.8418664 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.842838861 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.841410752 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.843746751 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.842199553 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.842584749 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.841559404 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.839835052 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.842417208 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.850818371 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.842633135 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.846038331 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.841900275 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.855838933 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.843023679 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.85087339 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.843142462 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.844554191 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.842590745 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.841828039 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.847533395 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.843318307 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.844875146 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.842670522 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.843365196 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.845001896 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.84367441 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.847097253 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.844516758 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.843650543 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.843541456 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.851901244 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.862951269 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.844822695 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.846479661 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.840460486 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.844440392 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.848524179 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.844591563 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.842765747 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.845160042 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.852799782 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.848766421 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.844563536 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.844211121 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.845189738 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.843987998 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.843774747 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.844123564 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.843578536 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.844562889 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.847275416 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.844589102 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.850735536 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.843281195 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.84633492 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.846262586 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.84513231 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.85498223 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.844865549 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.847272988 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.845083035 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.84388516 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.847717362 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.845557917 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.845242866 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.846664552 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.845265405 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.847428331 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.850651548 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.85006996 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.848808696 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.845603253 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.845048654 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.845988169 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.847161275 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.847397115 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.846410298 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.846746281 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.847368408 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.845467256 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.848257786 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.84518388 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.845715421 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.847251359 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.846019176 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.847826136 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.851788559 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.846933477 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.843971273 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.846826845 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.846965697 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.846412954 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.8478929 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.860516128 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.850234895 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.85566941 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.85307835 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.850828861 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.847943869 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.849119919 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.855321198 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.846811617 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.847933872 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.848215967 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.851060874 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.849067438 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.84989492 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.848447185 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.856285653 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.848056987 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.848466375 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.85944771 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.849577749 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.847582369 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.848772513 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.850712166 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.849772742 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.845466095 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.846407471 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.847567979 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.85659941 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.851905502 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.848685498 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.850853144 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.846606918 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.848833034 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.851141784 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.848585987 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.850214082 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.845497819 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.849223809 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.848235492 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.849587588 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.845125898 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.848405528 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.848686897 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.850854411 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.854125339 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.846312054 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.852110887 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.851088487 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.85121076 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.84980352 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.849551452 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.846712525 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.846403723 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.851762505 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.849998975 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.850560505 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.854807221 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.850070938 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.850357587 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.848760347 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.849660687 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.851784547 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.858123811 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.85543844 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.847039643 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.850280695 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.851343639 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.854486261 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.850050879 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.850117685 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.851771995 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.853226975 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.849807611 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.850089601 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.849371506 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.852601086 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.865957773 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.850124353 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.8510492 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.852794494 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.859345814 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.849950627 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.847812986 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.851553878 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.855900932 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.854070011 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.857314158 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.851599709 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.859008811 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.851386448 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.851000581 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.852591776 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.853563547 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.858420676 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.855635115 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.851862824 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.852599745 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.85530984 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.866058381 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.851438989 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.860507298 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.877794825 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.853296168 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.854569679 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.852225593 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.851056358 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.8520824 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.856623192 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.852656819 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.851229544 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.852352403 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.853285148 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.854172751 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.858532486 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.855583588 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.852432125 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.851781119 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.854629354 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.856720438 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.849550887 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.852442522 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.852523295 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.852509594 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.853880154 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.853727474 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.854441685 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.868576708 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.864898767 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.852691352 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.854183155 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.850195896 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.859236142 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.855799829 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.861003061 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.858652599 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.854915079 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.853474961 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.85597019 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.855266211 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.850863104 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.856354634 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.855125495 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.854331008 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.850856315 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.868501052 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.860873777 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.860160152 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.854919008 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.85487082 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.853819074 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.856331197 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.855515995 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.854842489 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.858387113 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.855209104 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.857710257 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.854770551 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.855136664 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.857485818 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.860979473 seconds)
  done (took 1099.384699924 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.8539401 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852459246 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.852108492 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.852270284 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.851915144 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.852344129 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.852484597 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.853274722 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.853554996 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.852683078 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.852415607 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.85292556 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.85234191 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.854218416 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.853017809 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.852652323 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.852440677 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.853079765 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.852968188 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.8532891 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.853355859 seconds)
  done (took 40.699393976 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.855174476 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.852928885 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.853621816 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.856013477 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.853544276 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.855547635 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.853203486 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855604677 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.85565893 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.853625353 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.856586479 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.856260195 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.854032238 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.853142307 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.853462527 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.856344313 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.85701389 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.854137564 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.856494 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.85427646 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.856726379 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.854800817 seconds)
  done (took 42.59854576 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.857709652 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.860012967 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.857407831 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.855234779 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.857310631 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.855013075 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.859644147 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.856346137 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.857373267 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.85911057 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.8573083 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.858735296 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.863250988 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.861063844 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.862005126 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.857201803 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.001045985 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.858169031 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.859383077 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.858849147 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.857210189 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.864184184 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.854868345 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.855786077 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.857200013 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.859482623 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.858353875 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.858471375 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.859485214 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.859946054 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.862340036 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.857727502 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.859577486 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.862047568 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.858946207 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.859460616 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.862239794 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.860241166 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.855521858 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.858892292 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.868733401 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.874337436 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.860689373 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.867520633 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.859039032 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.859143374 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.861813877 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.864898041 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.855459923 seconds)
  done (took 93.059440087 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.859009041 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.860384154 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.85748811 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.859535171 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.859564312 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.858791407 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.859512883 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.858857804 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.857446783 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.857968019 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.860224613 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.858376333 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.856735197 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.859632185 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.860630096 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.857899434 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.858352071 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.857273751 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.857858174 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.85739061 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.857837551 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.860641321 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.860130837 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.857518967 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.860606806 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.857817001 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.858337505 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.860667076 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.858336887 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.85898346 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.859921516 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.860838826 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.861742367 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.859094378 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.857674889 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.860865636 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.861033697 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.858315842 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.861088776 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.857866839 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.862087938 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.861378327 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.860693933 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.861152646 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.860365428 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.858889244 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.859468246 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.859304818 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.858743996 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.861749273 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.86239122 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.859833398 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.860922873 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.858672249 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.862301124 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.862461136 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.860178614 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.858793411 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.861877166 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.859887127 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.859648288 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.861970402 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.860183443 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.862826986 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.862941549 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.859976198 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.860476041 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.863928342 seconds)
  done (took 128.26142262 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.864188477 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.864696303 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.863753217 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.864243346 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.864328853 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.864748333 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.864224877 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.865204272 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.86428655 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.863787567 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.863999333 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.864642861 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.865118389 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.863394091 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.865017514 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.863384852 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.864488077 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.864661471 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.865108343 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.863434799 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.865100021 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.864966363 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.864247386 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.864945289 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.865950018 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.86417777 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.864970989 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.865758247 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.864255904 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.865402416 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.865235816 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.865613333 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.865417482 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.865776788 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.866239867 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.865443958 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.865184851 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.866094811 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.86761077 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.865862341 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.865930385 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.866894806 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.866038161 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.867300153 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.866598783 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.865400935 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.866058349 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.86749403 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.865206338 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.86685562 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.865568291 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.866347638 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.866355104 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.866300819 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.866884071 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.866046837 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.867236623 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.866639996 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.866951241 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.867614168 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.866200475 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.866485544 seconds)
  done (took 117.456216458 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.866241906 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.865201306 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.863446495 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.863315686 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.86561216 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.863858153 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.865507384 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.865052325 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.866810946 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.865383778 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.865988038 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.863254259 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.864141031 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.866448834 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.863824 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.864578814 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.863687531 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.86468903 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.866376369 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.86427341 seconds)
  done (took 39.099024698 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.864592046 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.867161143 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.864254766 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.864219558 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.867413192 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.864759138 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.866442237 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.867349607 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.865634068 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.866973391 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.86765006 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.867333891 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.86512102 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.86523818 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.867276575 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.8664741 seconds)
  done (took 31.659118003 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.864889792 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.867954592 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.869579109 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.869892304 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.866152228 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.8660531 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.869089538 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.866985955 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.864863086 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.868584721 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.867544662 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.867782812 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.868968941 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.869143102 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.864969884 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.868970534 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.865896311 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.866406247 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.86892877 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.869749245 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.867001719 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.866397601 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.868538123 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.867721625 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.866454757 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.866937265 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.866930283 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.866362017 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.86618324 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.869162559 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.866668437 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.866536882 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.866037153 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.867729035 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.870538292 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.865956005 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.869448992 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.869530914 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.869785565 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.86907582 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.869684913 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.866798361 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.870125562 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.869981708 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.86724505 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.869894416 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.867240018 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.868061753 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.867872393 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.867634765 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.871303987 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.87193154 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.870856402 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.870624789 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.871079246 seconds)
  done (took 104.55062539 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.870562478 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.86989849 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.868603103 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.870328666 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.870940913 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.86861361 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.870475145 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.867738935 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.867390335 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.871317193 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.869386826 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.871218301 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.868533728 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.871273329 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.870136023 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.871654039 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.868708179 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.868284895 seconds)
  done (took 35.459754176 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.868820248 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.869204586 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.871506367 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.869195785 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.868917771 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.871904227 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.869926147 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.871442996 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.870917332 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.869497592 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.869216878 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.872371014 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.871667282 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.872328101 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.869197649 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.870085134 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.872034519 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.87234447 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.869708623 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.869760119 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.872184249 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.871692992 seconds)
  done (took 42.95924999 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.870489114 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.871622118 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.888604944 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.91185464 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.89811953 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.872193071 seconds)
  done (took 13.118656626 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870630704 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874442221 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.870373648 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875076362 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873129519 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870204211 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871404454 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870456489 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873802647 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872180417 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871213644 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873498193 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873957889 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871173524 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874848907 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873762644 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871524956 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872115779 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87141813 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875259777 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871839852 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874201423 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872019608 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.871763477 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871352816 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.871325869 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874477163 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.872719662 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871867299 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873752741 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87406511 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.871617153 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87477338 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872557593 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875249349 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874389008 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87255131 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.874931787 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875415471 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872519334 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.875664949 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875092466 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875639623 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.872650673 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.875540451 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873088339 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87301999 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.872781824 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.872756964 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875582697 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.875970292 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874040493 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875966466 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876196008 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875832945 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876672151 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874524984 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873228082 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876063199 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873978719 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873871681 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.876460603 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873966223 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874445778 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876172781 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.874031632 seconds)
  done (took 125.466466424 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874257426 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.873853796 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874204325 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874928437 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873547095 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874743949 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874698602 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873279984 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8732376 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.874767725 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876949775 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874090098 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873856692 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874315858 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.873872194 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874939376 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.873910736 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.873952328 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874600575 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877053557 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.873901521 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875397922 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.874749753 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874031972 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875206507 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878636241 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.874810892 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874704473 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.874730975 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.874752839 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874871216 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.875450214 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875401388 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.875610773 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875311948 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874683728 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.875345934 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.874941869 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875327586 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87764146 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.875663676 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87808132 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.876844094 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876906685 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876418684 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.875472657 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87706087 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876544878 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877371377 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876438454 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877216113 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876465349 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877286439 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879122655 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877696741 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877247561 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87730051 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.875866293 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.876113833 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879796457 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.876852583 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877430848 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88053885 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87759277 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877355597 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878048443 seconds)
  done (took 125.616488592 seconds)
done (took 2561.960518771 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.954650741 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.876461254 seconds)
  done (took 15.644624639 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.040881508 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.995573803 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.878821707 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.887026197 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.878967874 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.897935075 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.879759336 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.879748599 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.879753617 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.879209367 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.879935049 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.067306805 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.898277867 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.880392625 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.880383294 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.973495861 seconds)
  done (took 52.4978626 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.882764065 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.883328025 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.894030341 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.885695232 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.883067654 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.893749851 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.915267522 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.886267308 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.915690548 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.893171546 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.948969312 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.891298855 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.882288404 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.931371983 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.894217718 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.897046637 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.968886309 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.95364701 seconds)
  done (took 36.115866565 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.957452577 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.886885252 seconds)
  done (took 10.664185432 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.890450299 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.902838737 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.886004375 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.89225501 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.876361795 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.879050591 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.920538719 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.920277009 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.882781608 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.891111486 seconds)
  done (took 70.760438699 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.888406465 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.883474896 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.88506339 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.881469475 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.876137361 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.880358646 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.882843104 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.881872305 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.562356629 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.915757282 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.889236144 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.888774537 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.882712056 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.884419171 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.880788793 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.906187331 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.023036884 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.881409938 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.881214336 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.88930194 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.883756655 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.93511055 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.896297098 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.883944344 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.912094842 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.559335871 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.892282547 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.889896695 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.001401201 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.88233679 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.884264355 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.885741439 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.886344583 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.273728542 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.208174828 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.883331095 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.893759987 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.891307384 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.883287676 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.016280832 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.88500062 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.890101628 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.877843363 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.200980999 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.962385558 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.925856431 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.246806773 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.887541987 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.8860808 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.914885579 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.887073478 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.886219752 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.898096101 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.393044567 seconds)
  done (took 133.549659184 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.879701822 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.168805743 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.033010451 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.878848406 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.152701844 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.085236915 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.880083981 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.929856327 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.882448026 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.083296103 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.093909818 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.987964186 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.881036256 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.879483909 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.881415668 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.87750037 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.040600643 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.947212735 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.88104916 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.879757952 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.909313382 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.087358958 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.001732539 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.883146665 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.902413878 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.089910219 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.001695007 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.984944281 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.351725579 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.87969704 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.945727961 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.882261364 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.880606896 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.880211847 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.037374022 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.980924635 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969736475 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.882980693 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.881130477 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.880269986 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.542487395 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07726919 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.977903856 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.023576524 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.031866384 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.083409703 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.529451185 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.880095517 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.525866983 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.044327188 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.094800321 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.087145706 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.006545482 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.883736785 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.035718176 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.880541462 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.880759293 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.119441792 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.026380324 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.984469408 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.88518214 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.882197249 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.881083997 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.12586097 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.884880283 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.979169167 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.885195335 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.882269849 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.980474552 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.986242665 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.022101281 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.093837856 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.917147861 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.604258791 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.09942479 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.097128774 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.951293252 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.117071512 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.885098854 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.883520741 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969981293 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.635699582 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.083423131 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.128158142 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.103396739 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.917657225 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.479933569 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.882992009 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.075567992 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.068866082 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.076138688 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.031727403 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.034175238 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.19452786 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.882670538 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.883569409 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.113642719 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.020630069 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.885353985 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.245078231 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.118069755 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.4997988 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.906000269 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.180149748 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.015830657 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.207095968 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.509628295 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.885236284 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.052233706 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.923788131 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.885376328 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.884194242 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.075254597 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.689012119 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.884560117 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.586913597 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.948855949 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.887331261 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086877123 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.887855174 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.095501756 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.885991497 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.119118025 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.249110942 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.918348805 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.055973831 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.029757004 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.679342708 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.131435507 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.127899684 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.002779774 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.152808612 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.612256848 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.885524655 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.160653219 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.885922868 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.885090016 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.051886118 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.88645603 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.032895052 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.888267838 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.113210981 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.910212702 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.042466511 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.887828793 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.116865405 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.921837212 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.937474862 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.889629419 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.009979816 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.888133606 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.777059702 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.040000393 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.886401597 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.886262849 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.28445549 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.886607172 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.033024392 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.115665038 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.911170274 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.954410906 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.413724381 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.886415501 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.972562839 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.912739628 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.489261868 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.888476028 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.098746023 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.855761443 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.333112295 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.886075561 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.126994495 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.119312505 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.888264025 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.887960143 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.624626315 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.589424971 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.886869442 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.047407703 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.364904917 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.534281793 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091037431 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.889947882 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.015731038 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.889644447 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.965691204 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.234829867 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.888480365 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.887857232 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.888681033 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.888961097 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.889219518 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.093727415 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.921518041 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.384654689 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.023512265 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.104412075 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.19948897 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.108847158 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.935228952 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.888811892 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.13474304 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.890970478 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.953529402 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.889363968 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.912725232 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.121082857 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.893238245 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.122663148 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.141345752 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.875823533 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.939013299 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.890809491 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.889759871 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.889866426 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.037096998 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.97873496 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.890709301 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.889563183 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.999472691 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.008444134 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.080642154 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.491338172 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.009281197 seconds)
  done (took 902.210857057 seconds)
done (took 1223.255467425 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.890043032 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.890783416 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.877383392 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.890000035 seconds)
  done (took 29.376954906 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.896358351 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.893988058 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.897539285 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.894957983 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.897917261 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.895546217 seconds)
  done (took 13.202964591 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.934226273 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.88925542 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.89106249 seconds)
  done (took 21.543204982 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.96272557 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.295817431 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.002309824 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.334060364 seconds)
  done (took 10.422951579 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.897860776 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.896905536 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.89741526 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.898143329 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.898164619 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.89874408 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.89811666 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.899595322 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.899269871 seconds)
  done (took 18.914081781 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.010063177 seconds)
done (took 99.297689905 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Int8, false)...
    done (took 4.858216509 seconds)
    (2/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.028601102 seconds)
    (3/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.91885286 seconds)
    (4/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.889526494 seconds)
    (5/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.387472314 seconds)
    (6/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.114928958 seconds)
    (7/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.788151695 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.997394798 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.032877378 seconds)
    (10/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.393317741 seconds)
    (11/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.896739523 seconds)
    (12/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.076278822 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.933044643 seconds)
    (14/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.027205649 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.919584713 seconds)
    (16/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.400574784 seconds)
    (17/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.188345754 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.022485309 seconds)
    (19/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.512855078 seconds)
    (20/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.712814953 seconds)
    (21/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.083953603 seconds)
    (22/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.957920426 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.964555755 seconds)
    (24/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.247295023 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.262503418 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.943149291 seconds)
    (27/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.994541865 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.87983901 seconds)
    (29/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.569680381 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.897276799 seconds)
    (31/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.263770963 seconds)
    (32/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.987688634 seconds)
    (33/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.976980164 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.994135854 seconds)
    (35/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.031965549 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.894177494 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.262233414 seconds)
    (38/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.89251727 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.107138086 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.095437709 seconds)
    (41/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.98394264 seconds)
    (42/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.354402667 seconds)
    (43/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.066805347 seconds)
    (44/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.052157911 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.48598697 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.881623182 seconds)
    (47/309) benchmarking ("sort", BigInt, false)...
    done (took 6.908157328 seconds)
    (48/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.880932576 seconds)
    (49/309) benchmarking ("map", abs, Float64, true)...
    done (took 3.650381513 seconds)
    (50/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.920561902 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.893295955 seconds)
    (52/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.978968614 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.002656488 seconds)
    (54/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.918609822 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.171589643 seconds)
    (56/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.771678485 seconds)
    (57/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.187310019 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.03838488 seconds)
    (59/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.254110771 seconds)
    (60/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.983238077 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.000937556 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.938782653 seconds)
    (63/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.957803399 seconds)
    (64/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.064232988 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.025886896 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.276450388 seconds)
    (67/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.248457328 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.198174419 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.897457834 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.581779333 seconds)
    (71/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.284376163 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.882466903 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.897723559 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.194983897 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.840864595 seconds)
    (76/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.883726318 seconds)
    (77/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.988736671 seconds)
    (78/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.910580014 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.192247558 seconds)
    (80/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.457767489 seconds)
    (81/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.377348804 seconds)
    (82/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.982428692 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.895009981 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.615065352 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.148719549 seconds)
    (86/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.120118342 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.896710782 seconds)
    (88/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 4.895068467 seconds)
    (89/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.899716604 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 3.827217098 seconds)
    (91/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.083211122 seconds)
    (92/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.926712503 seconds)
    (93/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.896588697 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.193279444 seconds)
    (95/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.133794095 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.54166643 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.14624985 seconds)
    (98/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.884922424 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.193854617 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.901351502 seconds)
    (101/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.92578397 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.142912925 seconds)
    (103/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.478085474 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.134731928 seconds)
    (105/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.109429946 seconds)
    (106/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.020954741 seconds)
    (107/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.923192184 seconds)
    (108/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.026737198 seconds)
    (109/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.990901883 seconds)
    (110/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.314287989 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.095320115 seconds)
    (112/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.882241876 seconds)
    (113/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.295308581 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.91309288 seconds)
    (115/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.912581969 seconds)
    (116/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.047622824 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.553633025 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.928300379 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.897789542 seconds)
    (120/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.886633045 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.913177219 seconds)
    (122/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.994484157 seconds)
    (123/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.264877284 seconds)
    (124/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.491279272 seconds)
    (125/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.899850618 seconds)
    (126/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 4.274364751 seconds)
    (127/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.509515605 seconds)
    (128/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.099023531 seconds)
    (129/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.040079822 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.883884608 seconds)
    (131/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.30274373 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 2.353622676 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.923786462 seconds)
    (134/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.16949402 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.18060859 seconds)
    (136/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.380127413 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.887307703 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.252536858 seconds)
    (139/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.900698081 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.137404692 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.161004329 seconds)
    (142/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.032011233 seconds)
    (143/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.104684818 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.186158622 seconds)
    (145/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.503630759 seconds)
    (146/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.886602299 seconds)
    (147/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 3.118385556 seconds)
    (148/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.07974292 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.008580899 seconds)
    (150/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.151444112 seconds)
    (151/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.989796283 seconds)
    (152/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.098051743 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.792509974 seconds)
    (154/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.906048785 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.958622611 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.261816774 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.238043948 seconds)
    (158/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.887906632 seconds)
    (159/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.066994775 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.118159333 seconds)
    (161/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.484547005 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.928158634 seconds)
    (163/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.727620093 seconds)
    (164/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.967682816 seconds)
    (165/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.429831525 seconds)
    (166/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.017259997 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.791419153 seconds)
    (168/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.020099009 seconds)
    (169/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.204283287 seconds)
    (170/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.407756832 seconds)
    (171/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.252914461 seconds)
    (172/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.099227239 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 2.015269826 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.900736667 seconds)
    (175/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.392998419 seconds)
    (176/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.185813142 seconds)
    (177/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.259915529 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.143904898 seconds)
    (179/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.276590494 seconds)
    (180/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.981061995 seconds)
    (181/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.013717441 seconds)
    (182/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.985284515 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.003488915 seconds)
    (184/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.91051529 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.922897857 seconds)
    (186/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.176927601 seconds)
    (187/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.989440532 seconds)
    (188/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.021044052 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.973484888 seconds)
    (190/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.903082534 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.925771353 seconds)
    (192/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.031546549 seconds)
    (193/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.903028324 seconds)
    (194/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.019467976 seconds)
    (195/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.931160204 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.139316105 seconds)
    (197/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.074684091 seconds)
    (198/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.195215576 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.80755778 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.989606694 seconds)
    (201/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.009174204 seconds)
    (202/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.92119145 seconds)
    (203/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.888489241 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.173147542 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 3.904627312 seconds)
    (206/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.931075581 seconds)
    (207/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.012472119 seconds)
    (208/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.945049203 seconds)
    (209/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.987630491 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.95270528 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.55559165 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.207622305 seconds)
    (213/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.029573654 seconds)
    (214/309) benchmarking ("sort", Float64, false)...
    done (took 5.704510238 seconds)
    (215/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.848755273 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.964233621 seconds)
    (217/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.509557058 seconds)
    (218/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.889762174 seconds)
    (219/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.249829963 seconds)
    (220/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.041169947 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.563587902 seconds)
    (222/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.184058083 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.012806917 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.637091501 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.114467995 seconds)
    (226/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.920426409 seconds)
    (227/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.130605833 seconds)
    (228/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.904500762 seconds)
    (229/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.108368386 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.004865186 seconds)
    (231/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.914483879 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.691852165 seconds)
    (233/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.013404453 seconds)
    (234/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.968190066 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.27803355 seconds)
    (236/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.212414196 seconds)
    (237/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.081523839 seconds)
    (238/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.995215694 seconds)
    (239/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.93150557 seconds)
    (240/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.925467064 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.788390528 seconds)
    (242/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.00329928 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.20667689 seconds)
    (244/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.950657874 seconds)
    (245/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.170216799 seconds)
    (246/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.906950825 seconds)
    (247/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.939079678 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.789540327 seconds)
    (249/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.009867979 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.799387954 seconds)
    (251/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.976468092 seconds)
    (252/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.445486174 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.233676996 seconds)
    (254/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.933263115 seconds)
    (255/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.191199601 seconds)
    (256/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.991581138 seconds)
    (257/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.891108203 seconds)
    (258/309) benchmarking ("map", identity, Int8, true)...
    done (took 3.193751771 seconds)
    (259/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.056179862 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.286648461 seconds)
    (261/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.918509561 seconds)
    (262/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.593071962 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.010867957 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.907936185 seconds)
    (265/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 3.622607988 seconds)
    (266/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.844930917 seconds)
    (267/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.036960827 seconds)
    (268/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.01219725 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.930682283 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.289389166 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.933881519 seconds)
    (272/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.964173117 seconds)
    (273/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.984264545 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.303528221 seconds)
    (275/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.094330815 seconds)
    (276/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.100875485 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.101711837 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.896631043 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 5.185614954 seconds)
    (280/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.945076463 seconds)
    (281/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.204513415 seconds)
    (282/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.897112913 seconds)
    (283/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.838931539 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.914362551 seconds)
    (285/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.128607595 seconds)
    (286/309) benchmarking ("sort", Float32, false)...
    done (took 5.673636447 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.911026119 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.992487951 seconds)
    (289/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.615379156 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.072813681 seconds)
    (291/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.101141622 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.03097293 seconds)
    (293/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.893233288 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.118564641 seconds)
    (295/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.041358688 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.069272468 seconds)
    (297/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.071544738 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.955642569 seconds)
    (299/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.28001759 seconds)
    (300/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.045387899 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.908642136 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 3.467432253 seconds)
    (303/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.476361725 seconds)
    (304/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.156549438 seconds)
    (305/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.778827751 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.930432516 seconds)
    (307/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.643979316 seconds)
    (308/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.138327525 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.42561369 seconds)
  done (took 1034.768293274 seconds)
done (took 1036.609293594 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.944020031 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.937146371 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.921122319 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.942998486 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.03423477 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.950568133 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.931048128 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.923767757 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.968708043 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.97145861 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.920557596 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.948403947 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.923725201 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.922494246 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.919969712 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.933976175 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.224113755 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.944177047 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.937772416 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.930352951 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.938090997 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.921084614 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.971178908 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.94743679 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.923427409 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.924731263 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.924132591 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.940212012 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.033691094 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.924304442 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.923070119 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.932489588 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.223704845 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.941656376 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.917541539 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.941280623 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.932220605 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.935141701 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.926677732 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.955817374 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.353426316 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.927347913 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.923571706 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.922842867 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.921823191 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.926421474 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.924112604 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.929203209 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.937453659 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.936603864 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.35309486 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.944514843 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.926121691 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.922851848 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.933022206 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.9240678 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.926418742 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.938954131 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.944213515 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.938767667 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.216184475 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.95134414 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.926897823 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.941534452 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.932822058 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.389403349 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.924351094 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.928369042 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.357027669 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.935202776 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.390861934 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.93852685 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.926339484 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.938465933 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.95614712 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.225675865 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.940867709 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.923591385 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.932293431 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.921556519 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.934415239 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.937741702 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.931070358 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.925769715 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.940462256 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.953154739 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.935377758 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.926802183 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.933514363 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.944630164 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.931177415 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.935729965 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.929376355 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.921309937 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.934534308 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.929725054 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.928776161 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.928646235 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.930604146 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.936698469 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.353910402 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.946874414 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.923137982 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.923871277 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.925482466 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.939597098 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.354423293 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.931885103 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.948827787 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.973606084 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.928908051 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.217657805 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.952023449 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.942590642 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.937214908 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.930546109 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.921986632 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.218894577 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.378540847 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.947174104 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.93000979 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.926297651 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.943296488 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.928452166 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.924462732 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.231428553 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.949033667 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.941325528 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.048479847 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.936866903 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.959183503 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.924551854 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.930318575 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.954965537 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.943549117 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.959520465 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.931398264 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.944286379 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.944353238 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.923823427 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.939896161 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.939585551 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.92941056 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.93386777 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.922812617 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.962644247 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.939312599 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.940956451 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.948908918 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.048824634 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.926296225 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.21996919 seconds)
done (took 302.207562284 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.995440809 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.922803576 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.024324418 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.923360645 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.007231455 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.023113798 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.920999006 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.920041501 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.921318004 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.304460205 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.922597646 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.922404192 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.919845266 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.922069605 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.007217646 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.923192443 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.921645174 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.288999509 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.926413763 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.995755725 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.916746588 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.92271606 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.925124303 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.335567804 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.920302207 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.924112119 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.008339038 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.925688373 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.273188137 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.918373077 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.916885213 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.297204648 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.029812275 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.943649199 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.934809993 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.932236407 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.020237189 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.928566208 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.019363113 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.009454897 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.035429548 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.967284847 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.919120331 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.919605999 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.927798398 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.928201804 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.923026177 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.954519787 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.920433923 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.924011059 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.270277616 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.935196267 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.93325964 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.924990183 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.922690714 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.948605398 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.922859215 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.928850786 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.015247858 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.928835658 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.995284971 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.312934329 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.332954705 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.927093366 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.921682352 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.924554933 seconds)
  done (took 188.238100138 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.99277779 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.99914509 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.993524665 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.929598173 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.977176089 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.999498935 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.929249474 seconds)
  done (took 15.679913941 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.933022669 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.927184315 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.977810404 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.976916218 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.928485444 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.078737089 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.92782605 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.939043028 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.925206028 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.981666859 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.9283902 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.928627601 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.934594313 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.928096383 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.974996972 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.938258994 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.043027209 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.928809204 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.928179419 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.085524152 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.926295728 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.934771195 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.982161741 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.939841172 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.930182562 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.934481281 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.510843669 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.929463654 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.925464971 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.928668462 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.92605513 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.971347606 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.929452366 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.921421266 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.926212736 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.045277704 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.93043131 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.926440362 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.928986469 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.92535709 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.929597005 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.92876267 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.929299917 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.925637352 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.929345809 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.954034132 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.929130155 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.929306047 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.929148318 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.929476946 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.979961751 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.929610517 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.926347478 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.927455383 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.986401448 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.936735223 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.931533754 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.92813717 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.930318231 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.337253969 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.086282605 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.978361161 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.92943933 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.977266805 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.929366429 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.930413919 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.929374641 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.928947563 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.985708267 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.930934029 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.978925502 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.928029539 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.089580719 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.954685596 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.93198805 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.933414064 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.933504056 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.931247883 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.926574576 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.937365176 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.929546839 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.932390696 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.937211977 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.928267001 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.928535719 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.043345811 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.039599768 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.928604492 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.943931742 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.938528417 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.927622186 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.984328285 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.932085741 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.930073445 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.983784928 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.046869119 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.988008554 seconds)
  done (took 212.071364518 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.937323346 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.939686596 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.933822716 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.947921211 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.934032107 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.93199026 seconds)
  done (took 13.488051578 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.934522228 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.93246018 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.932339393 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.932164034 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.933944974 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.934280235 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.933886391 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.933812774 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.936276138 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.93242358 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.934045142 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.933646516 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.933766209 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.933643786 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.93385041 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.932761268 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.934498244 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.929952099 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.932394636 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.935105393 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.085487496 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.933797381 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.933978374 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.933558174 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.938152932 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.933376616 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.940800654 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.933067701 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.933413872 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.941211363 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.938181751 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.935045192 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.934650283 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.938170827 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.938996485 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.935287261 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.936113651 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.93590744 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.931531827 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.936109701 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.935163016 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.935787697 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.933850217 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.934992191 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.935158711 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.938450189 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.938056322 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.941681366 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.93597131 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.935854838 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.935669369 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.934171744 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.936591893 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.936390899 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.938912398 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.939948222 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.938366175 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.937179979 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.936689466 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.936088854 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.935060557 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.93619537 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.937216879 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.939521023 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.932850068 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.936687128 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.936885226 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.94052721 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.936736427 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.934791428 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.937118737 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.932856717 seconds)
  done (took 142.373639107 seconds)
done (took 573.717854226 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.140519437 seconds)
  done (took 9.007490931 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.023749819 seconds)
  done (took 8.968635195 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.406265371 seconds)
  done (took 10.272974298 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.944015486 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.944467606 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.944148644 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.937936359 seconds)
  done (took 29.644873087 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.259291305 seconds)
  done (took 9.127316952 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.940134944 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.929473036 seconds)
  done (took 15.795220687 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.969341076 seconds)
  done (took 8.837999744 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.054178102 seconds)
  done (took 8.923061658 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.938598752 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.934877959 seconds)
  done (took 15.751230263 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.915942691 seconds)
  done (took 8.783754867 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.545395144 seconds)
  done (took 11.424407593 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.938433772 seconds)
  done (took 8.816940841 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.951860656 seconds)
  done (took 8.820913696 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.941519643 seconds)
  done (took 9.809496362 seconds)
done (took 165.849979952 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.932810513 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.93003899 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.931084655 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.930381015 seconds)
  done (took 29.59266274 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.968931282 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.969699164 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.972385498 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.980592839 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.973563056 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.970226047 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.962431428 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.963227286 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.981432399 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.974948546 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.972806771 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.973082998 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.970972171 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.963942237 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.972611295 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.973143436 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.981499623 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.972125943 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.962724226 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.974204667 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.93697876 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.981097318 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.975170232 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.938971745 seconds)
  done (took 49.135033777 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.13466338 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.009744497 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.092644243 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.990347404 seconds)
  done (took 10.096136761 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.990092934 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.992242461 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.003171182 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.041304945 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.084617902 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.001822977 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.964878464 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.960158373 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.946636557 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.992517914 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.067410405 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.00811693 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.07619034 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.939345986 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.125561077 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.939977184 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.93896838 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.990595784 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.042712665 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.05702853 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.938570658 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.990884328 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.996960919 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.007683139 seconds)
  done (took 49.968728378 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.938183367 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.946995745 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.944559559 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.938958174 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.938043054 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.939101671 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.944787482 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.939653683 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.959979334 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.939913086 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.937770878 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.939087961 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.938568602 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.939500394 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.939080051 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.95207389 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.953131928 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.939552718 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.94220965 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.946781632 seconds)
  done (took 40.729073145 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.933617944 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.876450191 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.284250417 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.190141515 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.933024478 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.933414276 seconds)
  done (took 33.022968791 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.95134427 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.00071741 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.946610381 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.996023843 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.076225468 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.945978576 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.940191481 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.006118013 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.047356367 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.008771381 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.95788062 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.965861412 seconds)
  done (took 25.712809598 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.934798321 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.93712574 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.938227828 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.953440489 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.951297695 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.947812445 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.948401107 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.934763822 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.956013508 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.958341265 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.948057247 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.953333159 seconds)
  done (took 45.236749085 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024426452 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.979820297 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.949621899 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.604795198 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.316079315 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.14742821 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.540765374 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.275842288 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.940378511 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210135222 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.880622912 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038969475 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.191854252 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.361282914 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.96417288 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.380458875 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222628017 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132471068 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958965611 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.553930881 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993264604 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.046289967 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.665049072 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.986476909 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150381338 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.067096654 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.198749727 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.938215757 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068073583 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970386081 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947806399 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.937602928 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212886571 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316396181 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039120874 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948866081 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.554954685 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.650577235 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.969055222 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.560749673 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.582041158 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.046725112 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948217893 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939428449 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.872396545 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.009974126 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324793979 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.943538344 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.649871475 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.938362455 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949644153 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033315908 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.943252583 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.754624606 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856871122 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.942970444 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.93839017 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945534818 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.508373728 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.000115984 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.051429914 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.9058325 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.029292468 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.630513286 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306388574 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.076815433 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.943564855 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.943168839 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87411922 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.559760733 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988712419 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268077355 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.960582488 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.58956859 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236290272 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.895851642 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.881470708 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195723667 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.393145303 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.907355803 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167772653 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940396014 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876573597 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.888792136 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.875617759 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.19261086 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971510397 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.685836864 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972954553 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.278264157 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.952226369 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960968232 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965512643 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.164532457 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.826950199 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940371721 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.624411385 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.084786837 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963491616 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.278457791 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876603007 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.945100927 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199631341 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.152722766 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.946793898 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.414255538 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095060704 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.437548521 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.988433926 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.021616576 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.984940026 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.20428153 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990641287 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.004941234 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991045414 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.943260572 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220115221 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.454142633 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.073671414 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.857147328 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.067533431 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.244903145 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963957999 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025175909 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.945898073 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.944624054 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.646037486 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.489131595 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.943533026 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.94499739 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.949026225 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.986400283 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.946122783 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891523881 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.565932045 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.906198601 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.956835036 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.1679555 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.44334923 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24961437 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877074681 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273968637 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.999791723 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.1675329 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.581529292 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.00956877 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205015999 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.951506281 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.971410705 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986476079 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963882 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042874907 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966645577 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.024874452 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.233510899 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.949994962 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.948655551 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.695910936 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.976334838 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95332334 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.950695721 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.697715365 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214645796 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.959355756 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.954328371 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.835046454 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.960247251 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010522582 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.951865703 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.956456556 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.483867677 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.656252411 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.955054188 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.53022161 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171401206 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95706168 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.659645062 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055746218 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.036349678 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.212854251 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994334411 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.880593339 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.658461844 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.640350763 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947585294 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.882476933 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.947223197 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956355201 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958505221 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.143237911 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.21184747 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.980608093 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.57747407 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.983072923 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957299867 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.951609662 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.948569566 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.456858936 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.006726714 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.057052923 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.98813605 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090784148 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.961664124 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.881081529 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.951118596 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.952907929 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.948349621 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.947132118 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980988384 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.573352689 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314495433 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.212600331 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.557901772 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963331722 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.62473941 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.99947101 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.951243239 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.660643005 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.046080684 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.980988775 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973581901 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.960350101 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.653283404 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.651235152 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.517207197 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255044072 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.230978006 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36335233 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.076060347 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.972978877 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.288905005 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885181563 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.507257183 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005965516 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.29415789 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.897490988 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040066849 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.589748091 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.282771071 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962390439 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175457319 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323987255 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.579201746 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07550269 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.161498855 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984567529 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.027271123 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.905309917 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.543134964 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092211746 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.567198217 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140765286 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289421569 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.52968288 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.059062224 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.949984463 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.609340202 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026192108 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.666748137 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.123210873 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.070176599 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.804952675 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426562324 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.963923959 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.176040959 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281373496 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.04107812 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.073928033 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.889953857 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.961798053 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.961975368 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.951823154 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.94810609 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.840928739 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.20544543 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963282475 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.88594189 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.990591339 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.220760455 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.842031256 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.958530527 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95306515 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228946101 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.419180216 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111148997 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.974200062 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.464252695 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960733644 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.885924442 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.88782522 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.645357003 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.959840629 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.929061098 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150187669 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.044038974 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.86962168 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.966262591 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.029121157 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.208826673 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.96610349 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.214163887 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216031591 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.65861929 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980140535 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.054258856 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.524338006 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.046266147 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.954778449 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.189896764 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707663108 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.183457622 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.990006227 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.896316734 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.953891332 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.171243115 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.955444022 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.745754729 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161152959 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.673879808 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.964691175 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268053314 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017284933 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.747511441 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.982402418 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.046539373 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964095006 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033612806 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965362838 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.964558843 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.965752365 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004270073 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.796695212 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.060982022 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.968887828 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049187185 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.011550898 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.471147554 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.96027298 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22087373 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297054173 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.261526387 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003084954 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.956540767 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.96053139 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.888441323 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104379488 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.181479473 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229258568 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.086862123 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.069882677 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979217842 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.514198163 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.090631605 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192885161 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230175466 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.85165296 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.399016896 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.99192135 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.956414146 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965386346 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.167198828 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157480454 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236338921 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.092454403 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.97439136 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.326086058 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231140437 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.956791231 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.956059954 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548143916 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.959896882 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.625532352 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.98825986 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.749021529 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.216259517 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967656696 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.323249371 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.97629768 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.112439558 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.73080391 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.680610222 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.241013911 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.936295676 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.003599316 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233181974 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315961182 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257339482 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024370829 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969006999 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.070342189 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106734812 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.834769608 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.957514215 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.95582367 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.007303247 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.667802843 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.969263886 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223659014 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257434753 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.957300653 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.837657883 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982076661 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.971109073 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.181482013 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.204603784 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.203009127 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969102473 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.966776266 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.774391823 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224451018 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00501373 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893284748 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.961872653 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051993219 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.202843377 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978952308 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.410746905 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.670542551 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214162096 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.951720076 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980645793 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.046648874 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.304188439 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261560821 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.481527697 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15489304 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.539795755 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.471367848 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.256772481 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.964308968 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.052238305 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259294671 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.964351759 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.975743222 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993521783 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.22078591 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.260871314 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.972997358 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.599768184 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.922338796 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.30163492 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.51594306 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.901026721 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.969023536 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.020493421 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.961255363 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.089421098 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972209171 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.840328816 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.052200476 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.737993585 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240244474 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.966275688 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.948603622 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.591015371 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.167653906 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988892311 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105945524 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.973660971 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.636017025 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.312559077 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.217609032 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.982986095 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.964417733 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.966118423 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963425795 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.948293974 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.157772999 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.157569364 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221384075 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.000660007 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.993526968 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96545817 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.178245558 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172382331 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.740694772 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083164661 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.975453681 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997011108 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.866819443 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.469780362 seconds)
  done (took 1705.889453988 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.989996276 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.978589422 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.001608739 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.047175671 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.994443389 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.090396567 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.024234269 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.02224967 seconds)
  done (took 58.05004712 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.960242603 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.185351909 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.972386863 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.960883713 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.97119348 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.962224265 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.129529032 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.970119362 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.97073635 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.972767204 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.967969032 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.962282083 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.268515135 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.982934088 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.964669588 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.948455035 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.969428804 seconds)
  done (took 76.034936741 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.961313208 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.977210585 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.978212603 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.974173001 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.974875209 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.967099226 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.761032107 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.98572537 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.965383932 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.094704347 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.597175381 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.971226393 seconds)
  done (took 88.108762311 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.971811312 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.968880155 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.970159253 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.969474097 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.969982555 seconds)
  done (took 11.752191382 seconds)
done (took 2225.218024595 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.218577961 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.173342474 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.188339114 seconds)
  done (took 6.261986892 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.116621507 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.164947366 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.286327732 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.290009303 seconds)
  done (took 10.76517233 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.256322293 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.338827099 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.184591318 seconds)
  done (took 8.684897179 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.376652713 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.983630625 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.073119925 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.969785596 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.970040207 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.972058858 seconds)
  done (took 22.817444823 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.973370392 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.97468589 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.973123765 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.976430167 seconds)
  done (took 9.802531016 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.954707371 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.698301647 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.955554423 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.96803462 seconds)
  done (took 21.483255571 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.722293164 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.732754887 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.716870193 seconds)
  done (took 10.078529039 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.563883311 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.882678763 seconds)
  done (took 9.3517967 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.234176844 seconds)
  done (took 4.140392669 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.103252276 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.235426959 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.434621368 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.451227972 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.506329104 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.820065636 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.274047512 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.213353207 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.359687438 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.394378278 seconds)
  done (took 25.700275968 seconds)
done (took 144.639074667 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.349493229 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.212368289 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.200910336 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.308206622 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.210488539 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.202550901 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.348971376 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.290460357 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.817608634 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.81373419 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.310352308 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.208918907 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.102907644 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.215869667 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.102361944 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.217609883 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.216548975 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.364011146 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.044391923 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.206390562 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.356641199 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.946774698 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.166102032 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.988842822 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.219401164 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.147899535 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.52468565 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.218753789 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.195986758 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.536400989 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.15054373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.355048366 seconds)
  done (took 176.459381146 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.736579252 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.972618241 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.971652615 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.974029943 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.408747496 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.973082812 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.973951991 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.973630485 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.23283736 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.20504982 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.973539398 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.388236549 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.973654429 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.972193116 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.974274699 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.972596228 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.330359267 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.761114714 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.972851307 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.974303346 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.973443622 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.292654494 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.974250244 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.300861455 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.302001874 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.975521162 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.929518304 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.97349257 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.974346478 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.974236717 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.981056678 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.972982492 seconds)
  done (took 211.251402642 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.973728152 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.975559826 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.973282829 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.973556932 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.974315471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.976098033 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.975180394 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.97447486 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.533134188 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.545237174 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.00311649 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.983881942 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.981472532 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.974823381 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.006735985 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.97499253 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.982161469 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.979452344 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.982689288 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.986274245 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.991375689 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.791472914 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.976756865 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.796396529 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.991530268 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.98361803 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.976200686 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.999616359 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.993539641 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.994604133 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.994344265 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.976320401 seconds)
  done (took 224.118643065 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.177393714 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.983298001 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.983318348 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.936230413 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.98387873 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.982311001 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.978119741 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.180191483 seconds)
  done (took 20.141348672 seconds)
done (took 633.88580186 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.41619853 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.261013644 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.15601268 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.006056561 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.257557366 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.03723504 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.003080284 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.062856199 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.73050153 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.067119135 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.651836989 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.015936322 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.745400664 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.021475257 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.128065204 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.055329695 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.539896374 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.629555266 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.180285264 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.068857278 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.175156637 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.938001043 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.074786495 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.768085437 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.751912611 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.979348767 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.171923674 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.546212171 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.010553504 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.162365055 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.718328593 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.373906744 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.010618449 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.998486246 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.05256308 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.034118693 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.337899431 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.009976731 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.126561673 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.738381954 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.070831389 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.616240275 seconds)
  done (took 107.614460286 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.97535679 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.97491649 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.972546752 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.973351427 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.974628497 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.97391419 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.973328424 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.97208932 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.974653841 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.97249262 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.973123181 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.975064945 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.973336818 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.973815403 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.97270569 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.972732691 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.974979257 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.975717963 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.97358748 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.973186544 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.974913296 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.972631012 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.973379093 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.973018959 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.974977576 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.974305063 seconds)
  done (took 53.24572362 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.986135879 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.127227259 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.206240513 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.001466479 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.985962052 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.989657349 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.005133922 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.990463588 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.988884023 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.988176912 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.079119834 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.990671196 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.006495819 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.209057919 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.001274569 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.987211292 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.988046598 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.987451323 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.135166624 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.003272105 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.007670991 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.992525321 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.005951052 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.001201361 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.990069693 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.986951733 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.991459847 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.425147171 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.993617634 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.080335227 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.029395536 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.006841522 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.381942283 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.217491386 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.037048035 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.993496182 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.989308456 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.084415987 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.991816788 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.988098312 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.006126474 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.991590185 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.206364986 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.484697951 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.999060504 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.988737862 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.433956754 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.090560496 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.028817356 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.998005749 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.214321 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.001274765 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.989624096 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.988570558 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.0341285 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.998367937 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.988577725 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.296129772 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.998671735 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.007131198 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.994540011 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.989745056 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.141907201 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.996621761 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.141250581 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.996797906 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.997428483 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.990943417 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.212318505 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.002823097 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.492136441 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.001655614 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.989638809 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.083283519 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.145178616 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.461046329 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.001021072 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.148331529 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.397987098 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.011226157 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.995988443 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.4151254 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.015440259 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.996076546 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.992195231 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.991458959 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.990592892 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.036036237 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.007170484 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.42801288 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.491105603 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.309831771 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.016063357 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.004989895 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.992091968 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.299294663 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.996303373 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.990802797 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.204498812 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.502739134 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.001735189 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.999887579 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.480280984 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.003596867 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.009611847 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.999938627 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.214710257 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.003018933 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.034350121 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.992819597 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.997739708 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.994173312 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.009876375 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.998323081 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.993112131 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.466743641 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.098704885 seconds)
  done (took 245.687609125 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.987465314 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.986701721 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.986376599 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.986825319 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.985887777 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.990758785 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.984633729 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.985538734 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.992370283 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.987059076 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.985739352 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.986013875 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.985416135 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.996070808 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.53546049 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.998719474 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.600554212 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.993553121 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.989789597 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.992095483 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.671332854 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.000973679 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.990574404 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.998713523 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.99370483 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.991527298 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.000456994 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.02977346 seconds)
  done (took 171.539273457 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.998540175 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.178231043 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.015761292 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.032929585 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.007082789 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.995875873 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.021621654 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.020757943 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.003014794 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.9956069 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.995603988 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.059433416 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.010460411 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.132466485 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.030185237 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.032982267 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.106469598 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.006887062 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.996747236 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.995814709 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.027641782 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.998778752 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.060855563 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.124440121 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.016077985 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.116656361 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.004578371 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.000891567 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.999440324 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.115000404 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.014993707 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.059638181 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.029346914 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.017827985 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.11937937 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.114648687 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.105447766 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.030421996 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.003826355 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.99676441 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.996624545 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.986453026 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.115935013 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.019265403 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.999916484 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.107602321 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.015034468 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.00192426 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.00781541 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.999712078 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.013432935 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.018768965 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.066927388 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.131869126 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.032671023 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.025497645 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.024194262 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.281395918 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.011128034 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.099411786 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.994563529 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.11809129 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.017736797 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.988264601 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.000647778 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.004229265 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.028845904 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.036118227 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.107794521 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.008871576 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.100753755 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.036446857 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.010057856 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.998934231 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.001280407 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.1193338 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.121714784 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.036807544 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.041120675 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.034980116 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.00067613 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.000895636 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.990588371 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.018703111 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.00500789 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.118166424 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.118584347 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.009617965 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.002545644 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.001894706 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.003078341 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.026917496 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.128872236 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.034356189 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.100308311 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.070485936 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.077177678 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.017063261 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.013600286 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.006285548 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.065897801 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.016106329 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.013602149 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.326845847 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.072369891 seconds)
  done (took 216.524786356 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.094167965 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.472911697 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.056099783 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.057781226 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.289324337 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.434812973 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.819164321 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.051206903 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.052613117 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.077327179 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.208726242 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.109022298 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.063860692 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.041631291 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.447499814 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.04330873 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.050293821 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.07153618 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.054266908 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.58255807 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.358263791 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.177340257 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.046620024 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.211726409 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 2.028974728 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.339020584 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.372170075 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.432508856 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.084029641 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.390932274 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.381732655 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.733828044 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.252754183 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.294640839 seconds)
  done (took 79.121618509 seconds)
done (took 875.643123246 seconds)
SAVING RESULT...
DONE!
