cset: moving following pidspec: 29709
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.247625372 seconds)
loading group "string"... done (took 0.572199271 seconds)
loading group "linalg"... done (took 8.290476264 seconds)
loading group "parallel"... done (took 0.170830998 seconds)
loading group "find"... done (took 1.246123165 seconds)
loading group "tuple"... done (took 2.000505186 seconds)
loading group "dates"... done (took 1.324588769 seconds)
loading group "micro"... done (took 0.202855998 seconds)
loading group "io"... done (took 0.93882858 seconds)
loading group "scalar"... done (took 40.074033599 seconds)
loading group "sparse"... done (took 12.646317879 seconds)
loading group "broadcast"... done (took 1.03850295 seconds)
loading group "union"... done (took 14.454182857 seconds)
loading group "simd"... done (took 4.820073961 seconds)
loading group "random"... done (took 9.315397816 seconds)
loading group "problem"... done (took 1.548351489 seconds)
loading group "array"... done (took 21.500141772 seconds)
loading group "misc"... done (took 1.622104591 seconds)
loading group "sort"... done (took 3.347890751 seconds)
loading group "collection"... done (took 18.09426576 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.543001038 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126300991 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13756398 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12055704 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15225566 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119927387 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125807432 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084827923 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.938823991 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152627094 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114364567 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.438885283 seconds)
done (took 5.533609482 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172634195 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090417729 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079761472 seconds)
  done (took 1.315023121 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065969158 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12752665 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06717557 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067691874 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067858923 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06748624 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068049196 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068422163 seconds)
  done (took 1.679632089 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073059282 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06918631 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067463079 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068465386 seconds)
  done (took 1.425319482 seconds)
done (took 5.81473161 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.793542153 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.209923836 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.1901206 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.406429502 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137894812 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.184865302 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.646854237 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.334911667 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.204624373 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095107177 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113090097 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.361298578 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125177036 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.651424225 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078294716 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096614128 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141884008 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.439364378 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072249186 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.0884059 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093853261 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131651748 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.093086098 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077132167 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151222004 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071224223 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143896597 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083942468 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069469852 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.222125294 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175707061 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661052545 seconds)
  done (took 10.530183469 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102438563 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099780639 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068927308 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125901171 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09789853 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071113668 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07558705 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068195851 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090019394 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128935425 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091492316 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108783889 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068974928 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070053828 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085507116 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.200265922 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080578155 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082824412 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068779145 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079215471 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108122968 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080970278 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080754289 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081084666 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12994731 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169854645 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096971348 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098380878 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067661814 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081966449 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.120326059 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127461179 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06666288 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067363119 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125634459 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095715473 seconds)
  done (took 4.64936439 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.100090612 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.152932147 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090378098 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141064652 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066167508 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11265298 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066231304 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083427349 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.237686503 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.450335592 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.637692719 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.119939916 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.12299308 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117509529 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104645339 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071452263 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06997895 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068195013 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.272255483 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102187447 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116710073 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084005311 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072252432 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.074391728 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065800494 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072546427 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064942467 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069464022 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.089447827 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079278944 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.350696777 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130451523 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069911795 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.839204974 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168028937 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068643481 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106658664 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166737784 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09443896 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144076434 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068639308 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065155678 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.298890768 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065075622 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073192788 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067001853 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068629968 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087818278 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111525135 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123699416 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067172722 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067331748 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.167248714 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068445006 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08185038 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.246569792 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152945543 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065974388 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.294175777 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095289992 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07234818 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06583196 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065545061 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.19258413 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117658092 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069042121 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068330572 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070010323 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069081793 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364736179 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066504726 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.933882684 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071561148 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080237251 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073302597 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071950998 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0794532 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079641184 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092909191 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068406619 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074756053 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067700398 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06685385 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06755899 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094203529 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065169668 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.390619552 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070049869 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073206413 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066775459 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095849746 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099522969 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067244519 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06661395 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102805205 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070965627 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066653194 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068536503 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11836997 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069961977 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113320706 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067039681 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.182142279 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097652898 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070276182 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101165271 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076970983 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071641578 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.466327589 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065833806 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072604996 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067026179 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06967501 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068725672 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081327934 seconds)
  done (took 22.013452381 seconds)
done (took 39.439107174 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.240317357 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083018182 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083241264 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083454618 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083690227 seconds)
  done (took 1.807760741 seconds)
done (took 3.02675418 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126147742 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104950025 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064569466 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099206548 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066873004 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101258811 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103060069 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083911486 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099671988 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064893679 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097847296 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065126576 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06487669 seconds)
  done (took 2.372306276 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081976325 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083100778 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070568486 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083807168 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064166182 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083422967 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082616134 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090561796 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082942446 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073991957 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064600136 seconds)
  done (took 2.067113361 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081702879 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083318996 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0689859 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082019885 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06289725 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081859643 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081242316 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085184337 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081709053 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073384684 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063440767 seconds)
  done (took 2.048236571 seconds)
done (took 7.689006153 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078532404 seconds)
  done (took 1.271303468 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.533686707 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.667816974 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079103162 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100504732 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192870672 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108820898 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.237574167 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083424953 seconds)
  done (took 8.368975114 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095939369 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07048826 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08148351 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070495479 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069378855 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070463511 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070876401 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071253979 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071220304 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071720371 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071839871 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069770879 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070225289 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069256079 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070166915 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069415094 seconds)
  done (took 2.440858812 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097066451 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09540196 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074355963 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075225525 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072937791 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07230535 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074856319 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074420049 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071694392 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073129298 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076605087 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073819499 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073887172 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064654582 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07465165 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07695662 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071741925 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074567238 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075547664 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075964603 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075740444 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064480359 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074084264 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075114989 seconds)
  done (took 3.112186549 seconds)
done (took 16.396166864 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11560268 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07784374 seconds)
  done (took 1.396568906 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078617925 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079556369 seconds)
  done (took 1.368223104 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077634235 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062956029 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084327823 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074406369 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063748121 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063166268 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.083105597 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063608818 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063576252 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063375329 seconds)
  done (took 1.910639384 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065510079 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072798642 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06946032 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079642575 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070612706 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064223665 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.068764688 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06556584 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07375294 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06383334 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068725348 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084135023 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068335592 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085346125 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068856398 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06862508 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070427921 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067547556 seconds)
  done (took 2.490380673 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063779736 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063873677 seconds)
  done (took 1.34445684 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066463751 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063354687 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066930674 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065994274 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06341172 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063323087 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064171341 seconds)
  done (took 1.664932469 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.403664679 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.124909822 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.322138033 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070480484 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080649239 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.251760668 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064844711 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069519788 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070680614 seconds)
  done (took 2.714056446 seconds)
done (took 14.109208149 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080410115 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08658961 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098060515 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.411980403 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093575601 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068964834 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113798084 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.179272929 seconds)
done (took 2.361048978 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218344031 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.853018872 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.472928094 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208105812 seconds)
  done (took 2.754345079 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346540028 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.080539586 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077858735 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066557329 seconds)
  done (took 1.79981121 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067574335 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070124691 seconds)
  done (took 1.359654352 seconds)
done (took 7.358824706 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.179153016 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090014253 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06433279 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064804613 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.064988756 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064837608 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065203615 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065161874 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064440094 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065088799 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064921609 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.064673585 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.064536717 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064423648 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065428632 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064950531 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064741182 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064279739 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.0651906 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064923645 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065035178 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064891435 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065627138 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06522846 seconds)
  done (took 2.952970082 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081489881 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06697855 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068473552 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.06815848 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069177842 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068434373 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068685684 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067064892 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069246555 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067507094 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068896073 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069521711 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066540163 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069363787 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066853709 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069063734 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068397287 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067277608 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066535903 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069183671 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068729837 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067010518 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069074522 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06878028 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069407804 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069283982 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067066376 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067070607 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069516202 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070227355 seconds)
  done (took 3.295581825 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065476172 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060762267 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061697343 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070218881 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061310479 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062552758 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061144444 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061363178 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062026973 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061762471 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062709566 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061006134 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061976544 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061908492 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.061910343 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065245153 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078599639 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061612191 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061053825 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.061929048 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065325912 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061211204 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061500751 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061010545 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061233354 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061309484 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063974377 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061150103 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.061785094 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061465114 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064839665 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065526286 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061035291 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066313035 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065852697 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061353937 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.064967887 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061428106 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062363318 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061153685 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.060992001 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061313597 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061941847 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07023181 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061193846 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062443141 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061695832 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062297913 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061768368 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063421417 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061085589 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061315557 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063444235 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062571208 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066378842 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061124742 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061863523 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061143101 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062315529 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061502849 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061101639 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061292176 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064654032 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062006601 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078416727 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070059027 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061165946 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062771649 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061851942 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064851526 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062704307 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076454502 seconds)
  done (took 5.792898453 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084836306 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087152768 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067074862 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06624331 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062265784 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061898636 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069668586 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062058454 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066990822 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081228331 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062126403 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066381108 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066737251 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066209111 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06204044 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066765845 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070321352 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062085413 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062293416 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065991124 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062420185 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070761953 seconds)
  done (took 2.740385889 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149023716 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067962328 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105584217 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073280518 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070358941 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072965164 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068495573 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067842147 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067861232 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068597484 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068777797 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068048176 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070352522 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068957155 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068625735 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068292327 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068079624 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068464299 seconds)
  done (took 2.60180333 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078343126 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06694167 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086909197 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067265573 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067308083 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067333337 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071487626 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071963603 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067172654 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067467077 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072045339 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06687611 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066990411 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068315156 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067355065 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067446588 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067210314 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069076882 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073371106 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071024726 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071508038 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072392613 seconds)
  done (took 2.78777337 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078050561 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067426309 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084345649 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069757039 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063715158 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063118106 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.079655258 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068146622 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069092111 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066438075 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068280187 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061874087 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068996173 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06708381 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069554499 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066957003 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066413967 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067227651 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066236271 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062018007 seconds)
  done (took 2.615524457 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082656435 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065126893 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065273551 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071291504 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065473177 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064724877 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071293768 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.064986477 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064824172 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085480399 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065057162 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065673407 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071701649 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069406675 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065119951 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071196262 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071238985 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071480296 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067678719 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064985421 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085768954 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065581576 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071812031 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065231291 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065278777 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06488806 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064890319 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06933402 seconds)
  done (took 3.180654899 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065149455 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06468617 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064876503 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064692554 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064728453 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064934302 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065574709 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06494951 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064832627 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065190314 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064763282 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064693204 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06454862 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064471391 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064518843 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064734937 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064945927 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065534911 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065343572 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065205776 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064797123 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064685557 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06476032 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064974012 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065111204 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06474653 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064490285 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065042256 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064693274 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064631129 seconds)
  done (took 3.193533946 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075188215 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073245873 seconds)
  done (took 1.394567349 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063273212 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079025338 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061049626 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072608126 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070824964 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064771625 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071671293 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070800952 seconds)
  done (took 1.797285957 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085707217 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075131537 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.064514884 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075423123 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074718421 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085392994 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126076482 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064784285 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074468206 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065090278 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082592357 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065989409 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075016426 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069119711 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074616902 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077728958 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062007695 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068669591 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065274643 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062347583 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064585484 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077374024 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073515651 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062504981 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069588572 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091158939 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080033466 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063764612 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070834567 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076065541 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073736284 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061405476 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063606286 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064108693 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06241073 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074806665 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082031097 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070637438 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076783102 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064483145 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071780636 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062027422 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072111814 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074296222 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07966481 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063661796 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063744267 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062050518 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064554729 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069748686 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061622627 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06834929 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061680046 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075811345 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071190935 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07901692 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062578073 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06934612 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070257676 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070911762 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074823689 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070046889 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073640906 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063226725 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0790026 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073779445 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075868922 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061671775 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061102643 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061959789 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077681301 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092939932 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073075167 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06393757 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064503591 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061741718 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071261499 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06475447 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072788951 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075024754 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.0636798 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067978756 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075710592 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068467546 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069892536 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069821157 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06202433 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.066912465 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06534183 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083192828 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062482391 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061927641 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065349505 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078427848 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070594483 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066053162 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064958152 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074822139 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061515751 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063964731 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064511614 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069426632 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077050496 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067766817 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06821146 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076733348 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073733544 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06854932 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070149392 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060999051 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064444905 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065732249 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074619261 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061098605 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070431916 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067591363 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064089015 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07492494 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061733186 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063200176 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076202545 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075349837 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.061694448 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061084706 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070294488 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062961863 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065995006 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076496968 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061698141 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061301915 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061261635 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070829878 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063241868 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070978035 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067565254 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070689649 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.18860941 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062691306 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069281127 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077022823 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067424679 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069384111 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073602027 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070125515 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063126809 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076361471 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070607219 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066217405 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073199087 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067790629 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062200245 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066040822 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070770872 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062789041 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071224373 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065910995 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070834781 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06435651 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062985244 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069541464 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064164084 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066021012 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069286494 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062675343 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078862448 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070176785 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062010106 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061942211 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.070732983 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065449218 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063254771 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066518965 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070451379 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064454975 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061715795 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063255492 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069554921 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071240226 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06661984 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064760713 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072847799 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080883042 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063383183 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070184612 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.062966748 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064479103 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064142999 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077726483 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074161438 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067798417 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070497559 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06102154 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073317198 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075942634 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066267946 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062084474 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06681505 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06749656 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075632317 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067941478 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064038616 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062481451 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069755532 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066541246 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070523609 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063591443 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066079609 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.06862526 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062652023 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069331867 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064478708 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078385632 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070820767 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061987962 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066098682 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062412432 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074763947 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061864787 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06551113 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066407504 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064571871 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062678393 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070532632 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061362219 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075987305 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076657338 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069024927 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06599386 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063252887 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075838688 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069416872 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071761806 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070651117 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073284853 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078831098 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066189762 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07060448 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078826365 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063461337 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061167233 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075624335 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062116175 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06304675 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063133553 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062390625 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070701954 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07069722 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07388507 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060902792 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07082132 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062078473 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066084177 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06217478 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071882189 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070746588 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067792358 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075623241 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064165732 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06361435 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070769018 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063371495 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064060349 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064186041 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070307277 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063523613 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069388863 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066966595 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069832476 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065604024 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061384867 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069294564 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063303651 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068459941 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072139755 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062501045 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069447382 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070006331 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064926495 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.203991516 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.0677952 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067070799 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072182707 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071003181 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069757364 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.0719354 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063241405 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077431426 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065059849 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07830792 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070222257 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062433278 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.0708202 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072285024 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.06974827 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065485317 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066334164 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071241638 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064917235 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072739207 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07749281 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066736622 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081885008 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076692589 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071012708 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071703094 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069749895 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069106709 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065749182 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06831816 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064264618 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069149146 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063639083 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072366509 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070626653 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069246972 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070352443 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064916814 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069295512 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064591781 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061433575 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066524069 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066629944 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064064677 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075969345 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063795006 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066485159 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063253144 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06426933 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063281072 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061447996 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070719668 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071332101 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064311107 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074238964 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066243877 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070087635 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078978567 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06115831 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062522842 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06255417 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064983203 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076970734 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.063973247 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077368553 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069290332 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066582007 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062064548 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064739366 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063097539 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062534419 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063330634 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072367333 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065869492 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062785061 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063565333 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070123057 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064311088 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076389092 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063092145 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068474123 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064101248 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06151368 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066853958 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066000582 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070494506 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064448056 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065121762 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061869078 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063313031 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068508615 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069695699 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063697862 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069461496 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075836866 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064077342 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070463016 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066355848 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061451203 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070589387 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063393082 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063480397 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066501652 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071583725 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07086018 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064169273 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077540518 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065942367 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069220782 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063560604 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062029297 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063016574 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063329224 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063770955 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065630787 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064639339 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076097876 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06171907 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069157573 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068697689 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067244804 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073851944 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064124312 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069721997 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068664815 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064856677 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069860844 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07655726 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067170155 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071076376 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064230161 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069001067 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073095858 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06603634 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074642462 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068934432 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06373247 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068938796 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064690414 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063000266 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063061162 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06278205 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073372868 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.063610093 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.200151451 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067712461 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065395715 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070357261 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067782831 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078546545 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072128993 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072817641 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063413945 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062855068 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066566918 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066664796 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070932101 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071858578 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074896776 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072832073 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069059437 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064383686 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079854136 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07551119 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073338599 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066754582 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073069726 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065922754 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072744244 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069903506 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068385022 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06527646 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071098955 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069298348 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066724474 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074075687 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072239751 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064433215 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069396662 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07004484 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068906893 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061933579 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064153139 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070258828 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072500781 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070356524 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063371443 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078610459 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064818123 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069281076 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0676582 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064904747 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074001733 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063558986 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070304985 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064880447 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064879039 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062080552 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066688452 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065535549 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070825185 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066434149 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062274778 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079790979 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078472119 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069798327 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063372095 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062748786 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062009009 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06221079 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066713866 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06463527 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070189172 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078742404 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066431601 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066472422 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062174621 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0639682 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07112779 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071576396 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06180444 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062475471 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066481625 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069623132 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075998523 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062766798 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063575287 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071101861 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070807621 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062120481 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066739865 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061335973 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071465505 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080318531 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064065752 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069891686 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073831822 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076535864 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064399292 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062474542 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064201349 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070135584 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06925546 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064546903 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064789221 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082731303 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071212334 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066037807 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063252506 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070205796 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06648204 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076955557 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064427564 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067011106 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072184334 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070459621 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070508315 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073606813 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074507211 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069750534 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069707231 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062927807 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068827092 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063815934 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066264379 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065154171 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063997107 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067852916 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070205974 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066341836 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078895559 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080133692 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06710356 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062914169 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067876683 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06774465 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062382355 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06465243 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062860066 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062436533 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062638937 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063114532 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06913267 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073027981 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068743252 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065164124 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06476188 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062559511 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075328436 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.207768981 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070861223 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062690572 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065630588 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06663075 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07390105 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068271965 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06729362 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071852896 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071392197 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071639551 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063742514 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077446599 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065182624 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071942505 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067667561 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065575693 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066522725 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073516802 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070861931 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067376719 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072944469 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072385747 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067634116 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063491933 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063415682 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075105101 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063975359 seconds)
  done (took 42.614189359 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101375673 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064727646 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063844591 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063432107 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073916224 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065345007 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064539161 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065830441 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065210903 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065229093 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062843052 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062900399 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069960913 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077612091 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072693965 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066887738 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062351563 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063656916 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062490817 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063971015 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070159112 seconds)
  done (took 2.751953722 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070784098 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078271548 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074004022 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07965384 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071319647 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067363186 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075097698 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082936464 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075608251 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072093974 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074957538 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067218658 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073592967 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075220396 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074974304 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069595609 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.0774613 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073644067 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068637738 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076833716 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069105494 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077227262 seconds)
  done (took 2.937599046 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065122915 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064405006 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070876682 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062900259 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064583965 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063199807 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067612977 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062964405 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066867131 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067361165 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067186714 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067436527 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071607888 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063280901 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068164121 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063115078 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10996229 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067692513 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065378128 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064761295 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06170541 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070196485 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061740944 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061805796 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06513348 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.065640082 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063509204 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061618774 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.062998208 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066142224 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064692603 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06292063 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071571126 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071065694 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067355181 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066873618 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064482141 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064597194 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066190329 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062683657 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069782976 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06354962 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064934707 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071855844 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063093834 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063051058 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071371974 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064576451 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063265154 seconds)
  done (took 4.593630047 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.076580866 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110715319 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067784643 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09320476 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078525637 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071401213 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069730496 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093890117 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064599312 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065855114 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079712793 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079989669 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067834026 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06919705 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070482199 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065475308 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065840587 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064579563 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068710019 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064932907 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068754023 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069519206 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076955107 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077016347 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066408578 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065100934 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065278065 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066864379 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07634232 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069558044 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066951363 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068000673 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076739456 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070205002 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064691244 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064953424 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077293615 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066006132 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065101493 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063212031 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064703297 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06655202 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069541096 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077986825 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065606641 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069964356 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065760742 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062975874 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076316807 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065311769 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069485779 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077642867 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066195748 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065613344 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066781814 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076432528 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065539455 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064178751 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065199247 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076186223 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063241392 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065844396 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077027349 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064459103 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068777451 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077181806 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070157704 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066078194 seconds)
  done (took 6.270097694 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072748823 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093293854 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079755214 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079064158 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073362614 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073481741 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07299538 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073191079 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073271502 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077139864 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073519708 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114859633 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071098414 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077332669 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075021553 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074830114 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073666466 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073466485 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073133581 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073159237 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07317015 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080229402 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073124125 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079606064 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076165574 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069195987 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073116282 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07320946 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079461055 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073245756 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076545798 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073147582 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073096694 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079312106 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07629272 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072727298 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063124618 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073612228 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073011123 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073397439 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069304643 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07927346 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072964592 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069069277 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073275676 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072813728 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079461231 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07592363 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075036179 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076840216 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07289589 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07907498 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073196516 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072861145 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079405306 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081875599 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079087039 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079167684 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072983578 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079108919 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0792401 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.081752651 seconds)
  done (took 6.061613623 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077921653 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071440201 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083777456 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063689659 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066000523 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074401 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063573784 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063717745 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072398313 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072620891 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074366975 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074325558 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076526978 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074554774 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073821671 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076767203 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074113572 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074040606 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072118806 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07408101 seconds)
  done (took 2.807342311 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077047475 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08275226 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069051996 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071584692 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068855128 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074068638 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068617894 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069161847 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069746399 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069203293 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075312824 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074244929 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068092177 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072563931 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07470397 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072102327 seconds)
  done (took 2.501907895 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082861394 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070368474 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077331056 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064476679 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068624962 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064615117 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064667818 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063625318 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062967975 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07799691 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064607692 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074915737 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063123957 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062221767 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063884238 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070556922 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064593883 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064634177 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063407721 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076645279 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070468192 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064369046 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067004599 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063373628 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06880582 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070683967 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064875181 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066790993 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063459198 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063517537 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068953348 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070508804 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063070464 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064763954 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062438845 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063927298 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063072737 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063529725 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068709636 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06330906 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061842777 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068475278 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064071574 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065377406 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062228 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.08163566 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062730901 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068819708 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06356189 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068570457 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063476388 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066153203 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063982764 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070747355 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065979191 seconds)
  done (took 5.02375479 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079893631 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067158905 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061613407 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062134496 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066938322 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068067326 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067625096 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067623631 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068416764 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06193076 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068041883 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067072461 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068276198 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067622405 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068160093 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067724886 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062427662 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067422921 seconds)
  done (took 2.566449976 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074525145 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068017779 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072976554 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06832773 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066672673 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067681007 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063501788 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062451504 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062457957 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067347749 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066920604 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066512511 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062535323 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066515741 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067212616 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067072733 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067006415 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06235607 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067314823 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06252407 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066605626 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062386274 seconds)
  done (took 2.808270593 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096984966 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083721076 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14062019 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07998403 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087128266 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073001202 seconds)
  done (took 1.911087039 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094000573 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099678177 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068567371 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06781738 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073998362 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07231867 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07158887 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070718991 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074884744 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075782688 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071245757 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077675186 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075096818 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077227186 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07323936 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072896681 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070424765 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070558351 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06759391 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079880938 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070596919 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075539147 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071181663 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070768456 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070671746 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077148366 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075118001 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075361488 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070459771 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075385512 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073058691 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070476879 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076345427 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077471739 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069133413 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076918857 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072422911 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082434079 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074720697 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076870739 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067384557 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073014443 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075337415 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074471778 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074945731 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070677516 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074477436 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070740486 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071756849 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087223691 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074491734 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078479355 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074557609 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077085475 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07675119 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083067881 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077625696 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078739164 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073659086 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074944082 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076440483 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07269044 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076464097 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075114624 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072408509 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076774841 seconds)
  done (took 6.304109518 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105601345 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068168293 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070868326 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075443775 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0764063 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071208282 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070620114 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070792624 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071357055 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067733944 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105720331 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071071946 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07715687 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077185882 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071172205 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071023489 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071000663 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076969295 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06827588 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081944674 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071055199 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077337046 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077061873 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076846941 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075279458 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074380055 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07243402 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070814028 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070492801 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070919862 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074321288 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07080309 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077388025 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067430422 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076841095 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070878606 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070731079 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074560003 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070335593 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0730095 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077088434 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080196874 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07024756 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070705189 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075120541 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070255881 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070512535 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067264534 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070607088 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06767771 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075263819 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075001649 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075472841 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076641679 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070492994 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070721464 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070438255 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070513614 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070261719 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072833869 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076286252 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070647419 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082470632 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072379534 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072122936 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079025962 seconds)
  done (took 6.259595138 seconds)
done (took 128.990929238 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.227750097 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.20010204 seconds)
  done (took 1.769192373 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.078001601 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.105406562 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082939023 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133450777 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071456086 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105362391 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104017109 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083214866 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070940438 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071165197 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071538002 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074106139 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13671875 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070990009 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071395569 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073946965 seconds)
  done (took 2.763992149 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105529505 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.216517961 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108608362 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069192392 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104046991 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077043012 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069022366 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084573232 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07579849 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071139888 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076896266 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075004627 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070757483 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075048357 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07576365 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076988391 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070914336 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077209831 seconds)
  done (took 2.94073231 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106041949 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093919544 seconds)
  done (took 1.565011189 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.171801643 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133633498 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200935179 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343808596 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.150821321 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.423935054 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.137565645 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.137319941 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112318913 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.134288899 seconds)
  done (took 3.300457102 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104322563 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.203452723 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298227103 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120409709 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075902808 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.110632145 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121778698 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081762055 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081192126 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080632554 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080534801 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078059623 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100434517 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076475937 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075610582 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077998587 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103561046 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074681928 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076568727 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076529981 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103629698 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070495515 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077180012 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074842798 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078743207 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078287676 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070950197 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070555314 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07629485 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075799526 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07955684 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.107759062 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078409394 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104736151 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074021171 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106028673 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078322128 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074226699 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075604167 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075308038 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077874076 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078700144 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.0783212 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077679771 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070888244 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078020308 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070866631 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070034365 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082543351 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07282209 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082819678 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081700903 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108040406 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073420862 seconds)
  done (took 6.223363129 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107409926 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106703345 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071633932 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11314711 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104206638 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070426003 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105156577 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09906911 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107421316 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070953041 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069667016 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070919567 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079392965 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081420844 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115668498 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107468349 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072853186 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070983139 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10744574 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107754516 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069589815 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101755955 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09828058 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107389279 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06895715 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070817481 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06948696 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071263675 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076123192 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077762355 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069863864 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079196608 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083422351 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076849662 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068673826 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069084251 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070558748 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078627152 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078531619 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078213635 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077001736 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06873308 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069340297 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070127313 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070134744 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068493663 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077328325 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078862902 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077376183 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069840074 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071114362 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069611014 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070441202 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078061448 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076060618 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078835079 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078444702 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06919522 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069640896 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072161401 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078788451 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078719476 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078145971 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070051844 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078658105 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069075275 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081566546 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081678132 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069312583 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070403336 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069418362 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069255604 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070016434 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076146675 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075959994 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070223466 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069331839 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068819777 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078586545 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076502069 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068841481 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076188748 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068240867 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068878106 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070343333 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0704414 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07588005 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078094893 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070345788 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069117923 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06901321 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068820484 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068359575 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076784583 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078584841 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077575028 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076831841 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069662595 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077016322 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076231553 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070976246 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078067991 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069196783 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070904005 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070248122 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077089299 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076000652 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07796024 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069301248 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068977401 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076523133 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079746385 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068972123 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076144969 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079144461 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076482528 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068273543 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079138202 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069254322 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078381845 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069078501 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212041278 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069930119 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078010298 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069803345 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069086731 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06920618 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078020485 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070686718 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069401315 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070072483 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069679129 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076861183 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080753198 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07123616 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076978951 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.0773393 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070628187 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077532664 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06919063 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077808551 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070267989 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070057718 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068324422 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079723903 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070341205 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069207052 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069479592 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078952698 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069691462 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079237851 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076988412 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069648663 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080656138 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079097546 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076255669 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078690652 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072124989 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069566354 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068971004 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069449304 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075871601 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077998536 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070604396 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069669756 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076540727 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079084688 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069009198 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.0773007 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077147834 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07803789 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069952875 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070144516 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079649418 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079194742 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077114855 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077231544 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077324035 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070211676 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076949877 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077010003 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069476629 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08290615 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069759415 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081186102 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077641916 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076373452 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077442421 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078597271 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079092837 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079076853 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081930908 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068947901 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06930956 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077775996 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069591403 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069609329 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076469159 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070351122 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070473654 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081965795 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069920654 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07888823 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068795781 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077578298 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068623964 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071222658 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081922853 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069438008 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070417862 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077787273 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07163502 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076973804 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078945973 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076932833 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069032543 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070380708 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077818412 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07774666 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069027133 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069150567 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070899356 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076249461 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075667474 seconds)
  done (took 18.523348593 seconds)
done (took 38.464435606 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208533306 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154913369 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.187459556 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115744795 seconds)
  done (took 2.123084003 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.10944788 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100946272 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090573561 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067249854 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.09701295 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06758187 seconds)
  done (took 1.927752152 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.303790405 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.205262265 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180897677 seconds)
  done (took 2.081483787 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212182644 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.201463233 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.463736295 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.283165954 seconds)
  done (took 2.652293064 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143253185 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085148607 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065920989 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08280161 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.124023387 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.149458032 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093183142 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117549447 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075330023 seconds)
  done (took 2.386134184 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147996399 seconds)
done (took 12.728003944 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.101989017 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.247574621 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072480211 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068942845 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.1819461 seconds)
    (6/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.189910231 seconds)
    (7/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.205526511 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.10715654 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076458475 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.146461586 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124849405 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.214878169 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.100796823 seconds)
    (14/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.216008617 seconds)
    (15/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075427577 seconds)
    (16/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069921287 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.115011355 seconds)
    (18/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.297762339 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.099581984 seconds)
    (20/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.079547527 seconds)
    (21/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072055274 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.074907756 seconds)
    (23/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.243214865 seconds)
    (24/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.152983771 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074466803 seconds)
    (26/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075294417 seconds)
    (27/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.183180064 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.099620043 seconds)
    (29/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070168668 seconds)
    (30/309) benchmarking ("sort", Float64, false)...
    done (took 0.131637015 seconds)
    (31/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066215836 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.072805925 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.200461399 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.099613572 seconds)
    (35/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.167329262 seconds)
    (36/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072387204 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137741187 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067599697 seconds)
    (39/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.236540411 seconds)
    (40/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.17357219 seconds)
    (41/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074875364 seconds)
    (42/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11825852 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073683921 seconds)
    (44/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068722669 seconds)
    (45/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075876692 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065104676 seconds)
    (47/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.114900558 seconds)
    (48/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.16776346 seconds)
    (49/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074044516 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087739798 seconds)
    (51/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.218857205 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 0.148656808 seconds)
    (53/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.192527122 seconds)
    (54/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.21111664 seconds)
    (55/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.139823378 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 0.066853396 seconds)
    (57/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.088522962 seconds)
    (58/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07698554 seconds)
    (59/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.084561236 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083206255 seconds)
    (61/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071587809 seconds)
    (62/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.170746124 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065383155 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.209773509 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074189122 seconds)
    (66/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.125005805 seconds)
    (67/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076359126 seconds)
    (68/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.197346665 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064703102 seconds)
    (70/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074700895 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120394407 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073257228 seconds)
    (73/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.173489688 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065755685 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076746906 seconds)
    (76/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.130813543 seconds)
    (77/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.069735981 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.216070401 seconds)
    (79/309) benchmarking ("sort", Int8, false)...
    done (took 0.180066221 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068724059 seconds)
    (81/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071047581 seconds)
    (82/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.130010378 seconds)
    (83/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.06799003 seconds)
    (84/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.214016043 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170451249 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085550586 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.135394457 seconds)
    (88/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.083133568 seconds)
    (89/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.224772422 seconds)
    (90/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.183449895 seconds)
    (91/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.14112562 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071313551 seconds)
    (93/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.087141227 seconds)
    (94/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.07668438 seconds)
    (95/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.22365451 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072266123 seconds)
    (97/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066275922 seconds)
    (98/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.06610988 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078027621 seconds)
    (100/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075491809 seconds)
    (101/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065629557 seconds)
    (102/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.137861383 seconds)
    (103/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.172728808 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066105509 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072454658 seconds)
    (106/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.173549699 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066303992 seconds)
    (108/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.087769425 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11853178 seconds)
    (110/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093833025 seconds)
    (111/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066468691 seconds)
    (112/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074893132 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.088731129 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134661611 seconds)
    (115/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073037716 seconds)
    (116/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.130534205 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074696624 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074751966 seconds)
    (119/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078112833 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073059509 seconds)
    (121/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.170809863 seconds)
    (122/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.171607642 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171465924 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122040492 seconds)
    (125/309) benchmarking ("sort", Float32, false)...
    done (took 0.132291466 seconds)
    (126/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07003999 seconds)
    (127/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.196148079 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181002874 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067160058 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066493118 seconds)
    (131/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.125760217 seconds)
    (132/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080769325 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133325967 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093046524 seconds)
    (135/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066702793 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075882513 seconds)
    (137/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079034798 seconds)
    (138/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065650009 seconds)
    (139/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06614926 seconds)
    (140/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078165757 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074649342 seconds)
    (142/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073474065 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073956875 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066310824 seconds)
    (145/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.170697025 seconds)
    (146/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074227166 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070082522 seconds)
    (148/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074555825 seconds)
    (149/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074813126 seconds)
    (150/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.077658692 seconds)
    (151/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064982883 seconds)
    (152/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067379223 seconds)
    (153/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.087151134 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136420411 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124103564 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087085 seconds)
    (157/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.230234068 seconds)
    (158/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.13023508 seconds)
    (159/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074834963 seconds)
    (160/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065902918 seconds)
    (161/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067077417 seconds)
    (162/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.135667423 seconds)
    (163/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078195451 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072962135 seconds)
    (165/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.078055554 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065405111 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140314502 seconds)
    (168/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066629443 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086787085 seconds)
    (170/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.134497732 seconds)
    (171/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066083518 seconds)
    (172/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092214184 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086144792 seconds)
    (174/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.0677642 seconds)
    (175/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07171316 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089555639 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137879253 seconds)
    (178/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068860984 seconds)
    (179/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066389284 seconds)
    (180/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.169169485 seconds)
    (181/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065829829 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066294322 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113116739 seconds)
    (184/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.078042371 seconds)
    (185/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177032003 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077059019 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141742958 seconds)
    (188/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066546688 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072050823 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06597266 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090553033 seconds)
    (192/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065394626 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091917477 seconds)
    (194/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.065977509 seconds)
    (195/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073251722 seconds)
    (196/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076083645 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074461742 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09255341 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066438555 seconds)
    (200/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066788502 seconds)
    (201/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.138380265 seconds)
    (202/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.064846061 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072672397 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065669461 seconds)
    (205/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.130736795 seconds)
    (206/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064929672 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178729025 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072043824 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064866249 seconds)
    (210/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071953053 seconds)
    (211/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.079920069 seconds)
    (212/309) benchmarking ("sort", BigInt, false)...
    done (took 0.401944165 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078600657 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075716449 seconds)
    (215/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066797705 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137635342 seconds)
    (217/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067178916 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.070177324 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174881654 seconds)
    (220/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067014442 seconds)
    (221/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066706358 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092240536 seconds)
    (223/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074470565 seconds)
    (224/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092511174 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089912451 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.196750717 seconds)
    (227/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07819281 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.078225649 seconds)
    (229/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088104633 seconds)
    (230/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067723445 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074879022 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090498491 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132043492 seconds)
    (234/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074031393 seconds)
    (235/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06705905 seconds)
    (236/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065781916 seconds)
    (237/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.087470527 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068621717 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066968127 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130404224 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065689829 seconds)
    (242/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077860366 seconds)
    (243/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066557239 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091489462 seconds)
    (245/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.217213729 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066159883 seconds)
    (247/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066684076 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127333635 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113322603 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065261408 seconds)
    (251/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066791779 seconds)
    (252/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073887061 seconds)
    (253/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.0670626 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.069062481 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066910416 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065928487 seconds)
    (257/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067859281 seconds)
    (258/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093700959 seconds)
    (259/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181040097 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066391576 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066529171 seconds)
    (262/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069321104 seconds)
    (263/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065500281 seconds)
    (264/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066819916 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066291452 seconds)
    (266/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066934543 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075360177 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094065855 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073358489 seconds)
    (270/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066362207 seconds)
    (271/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.069247421 seconds)
    (272/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067933372 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130475593 seconds)
    (274/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.089517138 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113499426 seconds)
    (276/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.06730055 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067507774 seconds)
    (278/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093580057 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09162669 seconds)
    (280/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068563377 seconds)
    (281/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084042806 seconds)
    (282/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.068737821 seconds)
    (283/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068598175 seconds)
    (284/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073582403 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120021261 seconds)
    (286/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065589174 seconds)
    (287/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067447743 seconds)
    (288/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066426562 seconds)
    (289/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068551952 seconds)
    (290/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069001303 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074649942 seconds)
    (292/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079706705 seconds)
    (293/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.06584008 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065673836 seconds)
    (295/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066485997 seconds)
    (296/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.165279295 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065690684 seconds)
    (298/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073948283 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065864644 seconds)
    (300/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.0681253 seconds)
    (301/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066047833 seconds)
    (302/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066528779 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072994302 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06586793 seconds)
    (305/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065723887 seconds)
    (306/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.064888353 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065192509 seconds)
    (308/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.078064906 seconds)
    (309/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072876451 seconds)
  done (took 32.971021061 seconds)
done (took 34.376656364 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087982776 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097649909 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072605743 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091838316 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08128551 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094710006 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073631369 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078255765 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080984103 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080160117 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078685588 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07238951 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074562169 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074745678 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072721928 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096343323 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079648166 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073925448 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074327589 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065326679 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07468872 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065776192 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065447672 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071917409 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077534068 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073248314 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075223712 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075392487 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068227843 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068136513 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072755798 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07710809 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067926555 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081225216 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077115475 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077041901 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078514292 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080666213 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067363708 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068507756 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075758882 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067171688 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073732035 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072122928 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071354916 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074104548 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076255284 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078464487 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096828572 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070485212 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075972449 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076392189 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077500375 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071210035 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071126008 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074471279 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071777142 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09650815 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074191695 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07068398 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075882711 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075549451 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072003394 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07424441 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074170873 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076341121 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078061517 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072265763 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076016837 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073794013 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06777179 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076360661 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072436676 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067734702 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.081326484 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.08111347 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066997683 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072187709 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075653902 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076442656 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068037438 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072727361 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067209183 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072328189 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072808504 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074929343 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070494443 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073087251 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067309708 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074748501 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072847896 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073567042 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065870607 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078746195 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066012572 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072009956 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066278855 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066218732 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065224079 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071220008 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065695579 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07076207 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074447119 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06478254 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071590874 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079896432 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065434555 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073000967 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065801426 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065344039 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07657465 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075339447 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065478018 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069697976 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065130905 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070479789 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065186989 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065359923 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065183202 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.0653692 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069819578 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065231385 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069673438 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070549259 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079514002 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066808236 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071885103 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072408075 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06800963 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073723639 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067753577 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067231504 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066992398 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081284012 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072303292 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067686227 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072644866 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072782173 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076134538 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065194667 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076119698 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073448866 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071920773 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074155603 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067007103 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07819226 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069777592 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070148845 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064554572 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065171246 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064524569 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065229599 seconds)
done (took 12.632475323 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071383114 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.11930072 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095769811 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095762034 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085175145 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069250643 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077112358 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.094647553 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070641874 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098542067 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088379276 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08828853 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108591225 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065916584 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067113582 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067353453 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06791654 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078804489 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.094093774 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088268049 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105622647 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066446731 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.08585472 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086296521 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083339886 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.087942674 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067733447 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068173813 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069262865 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.08927459 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092009147 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069785961 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068320735 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.089881904 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084284161 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.07991381 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066999309 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.07491571 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.0670512 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066167082 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068167415 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.086939478 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074516572 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075247122 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067464825 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074482576 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067557798 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081915822 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087026596 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075092663 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081493359 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090184204 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070528918 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082443527 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065899496 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08215738 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076032932 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067089158 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066942855 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071893678 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067131705 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069956544 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077585979 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075335404 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071525697 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081258461 seconds)
  done (took 6.665380146 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086804982 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.099443009 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08609415 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085825369 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067520244 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068787208 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069469907 seconds)
  done (took 2.052326116 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069429103 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089401298 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093123713 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092635207 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085709163 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093572671 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076859091 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068827602 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098354814 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067677853 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08965631 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097881406 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072194439 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079024604 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091417645 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067002532 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090937085 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066828692 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068058995 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090974141 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071900107 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093405468 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078299733 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067007904 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079613028 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067161399 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099007605 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075313801 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068439659 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068245279 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068227641 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093510871 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078952295 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078432265 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068086219 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081984125 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080358309 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070210367 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.077621705 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079309403 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079934279 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068022495 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.065950596 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068474392 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069771485 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078882896 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066265356 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068296741 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068278607 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085914688 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065940622 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079496938 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070556498 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072705872 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072596323 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072446406 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075099777 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068640866 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086402145 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068250983 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084427658 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083284838 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080479105 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08319414 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067065154 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079028132 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08051551 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068756501 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068792626 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068758493 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083336645 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070424069 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069030288 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078416788 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06679188 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090549698 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09086791 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066707192 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080233866 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067499481 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068219866 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.078648081 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090986811 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072307724 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06802765 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071873041 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069372723 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069897594 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065955265 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070897992 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069736883 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074551684 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070225192 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072712337 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071619998 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086069919 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066384594 seconds)
  done (took 8.885017233 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071972471 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070468628 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.07161268 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069861122 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069926834 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069891821 seconds)
  done (took 1.940047703 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094306576 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07000454 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083344769 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.06971481 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106107709 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08598661 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08570226 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077085092 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081589329 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079772681 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083724991 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086445122 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.08757393 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069974005 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082846446 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069461819 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082937427 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072351706 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079314381 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070517732 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080651051 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069965012 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070163129 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087282534 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071752296 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069236866 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076922689 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079436699 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07923429 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077488773 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070290196 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071154919 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075524456 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076707406 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08344566 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078615347 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072865827 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076621085 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07323611 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074355517 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088795953 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072534731 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072915879 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076245623 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078353652 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075828318 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074269444 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078944742 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085614775 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076499906 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076518942 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070110185 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074164277 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077037369 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078275863 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079936997 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076509132 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086163383 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071994922 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078424174 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070006208 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073423071 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079322666 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073696652 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078455572 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076349357 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078137328 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070137004 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070128062 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067805478 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074577932 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068663101 seconds)
  done (took 7.047899472 seconds)
done (took 28.102011378 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.522501974 seconds)
  done (took 1.985126618 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.628282593 seconds)
  done (took 2.122923302 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.557864096 seconds)
  done (took 8.056865553 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.408515236 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.46906795 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.737401288 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132933378 seconds)
  done (took 3.279068199 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.709381969 seconds)
  done (took 2.214898366 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24213346 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23162814 seconds)
  done (took 1.9855409 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.352515618 seconds)
  done (took 1.848760702 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.061581906 seconds)
  done (took 2.557203766 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.243424452 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164673322 seconds)
  done (took 1.90672018 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.452321371 seconds)
  done (took 1.947296745 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.202413165 seconds)
  done (took 5.699437839 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.217997537 seconds)
  done (took 1.754409 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238674694 seconds)
  done (took 1.743307856 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.760786331 seconds)
  done (took 3.260137659 seconds)
done (took 41.87123375 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086606376 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.088573579 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089056507 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085096119 seconds)
  done (took 1.827735942 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078443645 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073320722 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076957826 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072764445 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077336363 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073403819 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074860624 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075987063 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073439311 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07369992 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073198545 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073111449 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076254471 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075201853 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071901762 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076983693 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077655928 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073654128 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076762185 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074061649 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071859429 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075949437 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076536716 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072613408 seconds)
  done (took 3.2969455 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081847164 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075794901 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078669008 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074375462 seconds)
  done (took 1.82249192 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080045381 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091583214 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089891774 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07897064 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088970683 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084598906 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067651759 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067653724 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069726271 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077283566 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066770993 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093774641 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086909049 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077782778 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079840434 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064134758 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066032152 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085781415 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078459308 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078616778 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069478918 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077530133 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066611373 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.0873936 seconds)
  done (took 3.380814067 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088287435 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.069461577 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08484845 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092984705 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09450648 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066953889 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.082730869 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094504627 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.138390249 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066936567 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072771375 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066996377 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105696364 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067766829 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083284328 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110531666 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113345772 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070372432 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099865686 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066591224 seconds)
  done (took 3.256300217 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.087139699 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072091608 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073247215 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068108372 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078949694 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076091682 seconds)
  done (took 1.971052886 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071531752 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070502593 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070598708 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069439628 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074976998 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070040152 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071655086 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070679675 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070695503 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069869065 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070351482 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069177248 seconds)
  done (took 2.363735748 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.21847867 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073390398 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072195465 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067105719 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073218232 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067436129 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083239814 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06996446 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08623632 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067713005 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.0675578 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069729699 seconds)
  done (took 2.532695794 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19551271 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077006297 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221866157 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143808363 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102287423 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109216383 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109124427 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108017184 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.132941962 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097738082 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153305988 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158821195 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103521418 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125777072 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087819163 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120501785 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144366342 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152996299 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099986833 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153058734 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13531565 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119834798 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140596684 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096757738 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101433405 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116690571 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072866557 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077308558 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160030572 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126447857 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139051708 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108741523 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093710558 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174376447 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160334325 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135171421 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142153709 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081928731 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.118119979 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128006433 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193088162 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087106605 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151725659 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1031839 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077717347 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122034901 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110496345 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114660695 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101029502 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086981796 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27781862 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17593074 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131746242 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087628436 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119482189 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109512391 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113370022 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115414911 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173134897 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152409329 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121818797 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072826395 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108490219 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145639939 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126695724 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105069137 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.118229906 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091738988 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127852837 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148562041 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124956162 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132753874 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.11230451 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084946143 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113709516 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130209304 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12021498 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159490135 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115467589 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071715485 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11563734 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095230472 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078635926 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143058574 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074399514 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165852733 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096833277 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.124698679 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124865078 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105315329 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105090536 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14970352 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134141853 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102618775 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084517056 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099287853 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114135802 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136458552 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084494188 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104154227 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110097926 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077453639 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127655143 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073066474 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113320196 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093419826 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115761999 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120561423 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077084487 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.260895306 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100816779 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099128136 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123174025 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151071981 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08902187 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081120825 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155281095 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113522621 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102579652 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138051061 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147801498 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117672753 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094016188 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13974531 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163135558 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087823487 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150770617 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099248555 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081702556 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102868735 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114126118 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106428981 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118886868 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079264562 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.112735031 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153929032 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073207927 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09401212 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124169157 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07968097 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079009875 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10154644 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100494419 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094118405 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098199105 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101465825 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130717967 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115484669 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101197574 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118806392 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097801328 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157648647 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085345898 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098920618 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101065735 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07099877 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126300767 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145306226 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076662202 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150880089 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.116706103 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110478969 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1144338 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084632757 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132775305 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077230408 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071538863 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133573107 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108028896 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104334487 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.139822852 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257629897 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.119746067 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11315636 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125089416 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123743554 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122295457 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10310249 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086826696 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10931266 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123062659 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071556642 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.0895053 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080038792 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099762657 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090906337 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081687285 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131991737 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115121461 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10462758 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108832792 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09307145 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139943229 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076639522 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118091032 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115226242 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092808381 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144728434 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143267441 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123175065 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098244167 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129681075 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072292519 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073136673 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087001557 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117514447 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082109009 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081619985 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108785784 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140829491 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120219297 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129294939 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116459237 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112430786 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147787961 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071296004 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116737796 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135869571 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113275759 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101499346 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089974556 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098625839 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136080165 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099550287 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169722478 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107944682 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11674035 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147293009 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097800655 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077503146 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099551912 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122525649 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246285148 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137220037 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096163988 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084845821 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103977563 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076816494 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094412361 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119550474 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112256746 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128323237 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107818969 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122327067 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076533313 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107438093 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114785162 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116083867 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081940768 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112717168 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15600044 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094236438 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111551144 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141774463 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077206894 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133477034 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162308069 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135641527 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083033262 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101073817 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114342182 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120681578 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11348891 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13112493 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10076285 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129005558 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106357739 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083144489 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086938054 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092914949 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100467405 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.110161902 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.102573668 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.107707219 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09316287 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123557072 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099540752 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105646809 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111454046 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097420734 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093659565 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09330797 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162919094 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111947957 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159975734 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.095852784 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.135214153 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150862278 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073963443 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077095893 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07876654 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130286387 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081505907 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267959042 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10680912 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110415359 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116828375 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135317915 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097106098 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072553882 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10762786 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130062616 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120044713 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09662064 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103849455 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153743607 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.117145835 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077372457 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108159996 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109630429 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100218617 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162859729 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079505682 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103387656 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075087513 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077686487 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119783906 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14161941 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084852566 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100895277 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113502858 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106425681 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120540219 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09528558 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105996703 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123848371 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140597199 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124641995 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088633776 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106807978 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122380291 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145007373 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100364839 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097465862 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166460178 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143234512 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.149645156 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085639742 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108696816 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108882244 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107894206 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131604187 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085039747 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151564163 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079219543 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12721894 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097601617 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087125999 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121844594 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.106457759 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086153394 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136532034 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108886704 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079381933 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228139385 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107650645 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113064527 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09963076 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073598778 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131105254 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072889144 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12640455 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158989895 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078746383 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099842067 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092586411 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08040878 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099193249 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097722573 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084117979 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098742377 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163897448 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08816349 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141604131 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129445712 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109248405 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133330459 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100584496 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641406901 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078291 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142106819 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111510239 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16627444 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096425702 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112585748 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105459886 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115681876 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134591879 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098801198 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175745988 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123621819 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.110732518 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077693591 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101132394 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103280568 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089955654 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106455917 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111582259 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112461412 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095657045 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113666439 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120051724 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083523751 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093777939 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144386297 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110988693 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134200048 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131137231 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082432401 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111362887 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127268764 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078104843 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.112265424 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29348639 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103013669 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097756389 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081504583 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.097920951 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159809443 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072341148 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148068464 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112005064 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105135942 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107472316 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.10610978 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121146299 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099741733 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112667548 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090554731 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104778321 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107134441 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081966345 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080213993 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104153925 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109680846 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.131528616 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093075694 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096771136 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141689758 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071104146 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095578754 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108499089 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136483461 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160468486 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.10422516 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081638869 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114347314 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114179617 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.107779055 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113631382 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08028057 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079524045 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079778708 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098924651 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.121192603 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107265303 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114085595 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108957831 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155987694 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.085219676 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227926347 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096622883 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103901946 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087251484 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078292544 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093313193 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093092386 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100001558 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104537891 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160354086 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091109474 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087200068 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089664992 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072871584 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081066881 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119172391 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105317471 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109128331 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100056375 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.230182254 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100801314 seconds)
  done (took 56.924745842 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124253035 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.100316882 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101497019 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144538686 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122332965 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200190893 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150456821 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189098885 seconds)
  done (took 2.739247989 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071909111 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095676884 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10264297 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083863111 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067581851 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069253669 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.229658302 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.0820428 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067397318 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.092347443 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077860404 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069458387 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.462899383 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069041449 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.07019423 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.08068246 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070587757 seconds)
  done (took 3.459657674 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.388228585 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.605332115 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.353775775 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07585834 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.89043349 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093808553 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.163399712 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141949665 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.084853973 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.523331121 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369811023 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134765772 seconds)
  done (took 18.437861311 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086517362 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079216781 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094026299 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094184625 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081040024 seconds)
  done (took 2.043410235 seconds)
done (took 105.606659724 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085106254 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.562529322 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072914157 seconds)
  done (took 2.272994449 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.095622601 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.092478709 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092359624 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090788873 seconds)
  done (took 1.994411725 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078491647 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07999695 seconds)
  done (took 1.770011139 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.238536991 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.178293598 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095209688 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086928061 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08353571 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083306811 seconds)
  done (took 1.870639936 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076373789 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075731821 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076542577 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079480732 seconds)
  done (took 1.919182718 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.074582271 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070006994 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.071458898 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074647207 seconds)
  done (took 1.90271099 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088315233 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088399452 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082453806 seconds)
  done (took 1.871238019 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105764548 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.097995542 seconds)
  done (took 1.817929044 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085279066 seconds)
  done (took 1.696680552 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095841506 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104685524 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136128155 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11874522 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.145990162 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.122522779 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08768943 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092736711 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.081929701 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089480823 seconds)
  done (took 2.688943015 seconds)
done (took 22.009741673 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083021258 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.37988634 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364282963 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096245408 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.676376156 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360348616 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.045207127 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093886368 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11320061 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072976937 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091130792 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653143242 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.038016638 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.335812626 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.024112866 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.333970439 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656924945 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072219358 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07151875 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072420955 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.029660704 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07155837 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072390083 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072299865 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.655000688 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377371675 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070493249 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.330942286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069559276 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073756407 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359553682 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071734101 seconds)
  done (took 16.479014977 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074797865 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127318512 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076258902 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089605877 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074594244 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074023434 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075160538 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073483823 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122950077 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073699015 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092098097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073126833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076979005 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073783251 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094326981 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072989795 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075892951 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073601639 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073262158 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074200075 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093251753 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072949121 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074189276 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073336988 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072338991 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087124188 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075178578 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071796652 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070618278 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074440289 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075578578 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071846609 seconds)
  done (took 4.18064026 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12152354 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.13047655 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078618683 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110838523 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122443679 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072270424 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148628288 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094504545 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126036089 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072592702 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088264308 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069470671 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104682184 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071142533 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092956868 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073697875 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076583285 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073875777 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073281525 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074652757 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093312728 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073490544 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074415461 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073922813 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074148308 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089514992 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075357074 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073476674 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073882517 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077518598 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076733323 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071968539 seconds)
  done (took 4.432369328 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074240171 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076215796 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084501988 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085679272 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070940041 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073357342 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074402365 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071314489 seconds)
  done (took 2.242632208 seconds)
done (took 28.95632573 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081999717 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.0707142 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073855072 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090201059 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.0774984 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082236234 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067921101 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077576117 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074816837 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07523357 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076489144 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072788836 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073707582 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06801533 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075574091 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069716817 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084370092 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073517464 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083977944 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08449706 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073334682 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076142636 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078727017 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084769017 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084838295 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084875975 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079947303 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073317804 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069031609 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071369435 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071363501 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.07905309 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.08149932 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081377445 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068005333 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069901684 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07524821 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071741133 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.085500919 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079452042 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072306066 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079670683 seconds)
  done (took 4.827051898 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.0894357 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092967397 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085128535 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079849285 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090742836 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082705662 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087275078 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07799379 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078282573 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086228762 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074797083 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082023085 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079147518 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073628762 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077683294 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074895518 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079579639 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074461572 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077732716 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078285077 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087959897 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07456316 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088830253 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080642823 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075583439 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081286168 seconds)
  done (took 3.750619518 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076878595 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089110125 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096199956 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.148272062 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115306046 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082959138 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084954618 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095883293 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100446222 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071885917 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076745012 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09646912 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095470804 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075250027 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.112173775 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085286441 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086843966 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073303036 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076331958 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098571034 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090395286 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086790273 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095373131 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086133361 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069086684 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071395885 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073844925 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085276026 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071349055 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080508476 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07191252 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072996068 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070229097 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079657776 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07171841 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068715702 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093100721 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080287571 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081752653 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069545893 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078091809 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069889269 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094483969 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128778982 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067688013 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073312945 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072448089 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079525283 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067904065 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096364805 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080879507 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068657392 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.06920476 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067932897 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068093012 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071852332 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070303339 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070845519 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078542658 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075565487 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090330794 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073983282 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085848846 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068167489 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079049303 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067734941 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069982557 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067372018 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097186894 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070097454 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112901369 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071836679 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069498831 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.08191939 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078704559 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074908699 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069045375 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089015774 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082348993 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074908797 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078296721 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074149581 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072510742 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099007637 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069196531 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068087745 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067435821 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072116903 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075003753 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069509159 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080821328 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067911743 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071987209 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086800292 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068508033 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069525349 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072444575 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071112402 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068280984 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07925288 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073022074 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070243659 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079129081 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069331975 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071975879 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081665236 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075482703 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067414888 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070776517 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072174626 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069931832 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070213765 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071886868 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070904269 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075556543 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076262137 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075942464 seconds)
  done (took 10.896019834 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169893775 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.162480747 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074209685 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153915207 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080580018 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083326339 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156702993 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099830565 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071564297 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073131411 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072150807 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114448912 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110196002 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121907536 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084718665 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07266147 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.097812564 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119399647 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158902215 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153683847 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094544121 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080200823 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074364983 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073760922 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073285283 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.08181379 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.09102808 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078290253 seconds)
  done (took 4.546147247 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081629239 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106720217 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075692961 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094561989 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09187839 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071999629 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073652678 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073395649 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088261654 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08102503 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072146063 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077772925 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076266173 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075224408 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072766388 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07858105 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079299972 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071058757 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075295166 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077449515 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082025301 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097121103 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075859734 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072096826 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074063911 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069744349 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077116856 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081630401 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069562895 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105327672 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067191074 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074389674 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083324372 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069947495 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068930157 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06989652 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069316575 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069271293 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070714815 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068314702 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06782636 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072982982 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068159703 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077007521 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082218106 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071378874 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071299807 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072093712 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072065428 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066442221 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071983542 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071979877 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071963569 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076723428 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073430479 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072304734 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069898589 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096332672 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075147849 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069257938 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068754282 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067912143 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071796901 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.081057272 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.086705081 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072888088 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070091172 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071472897 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.084991221 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08475124 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070860774 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075886933 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069374392 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073059957 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071948329 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072274965 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070537319 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067965058 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069248648 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070920197 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070258686 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070980199 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069228145 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074133232 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06830842 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069095114 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069897016 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07081787 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083023548 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06901354 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072909041 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.07025548 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067986008 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07448087 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.07735641 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075051833 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082570031 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082817734 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07234866 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070111336 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085899281 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074399466 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071122602 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078184294 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076789247 seconds)
  done (took 9.561201373 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095971192 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072087382 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088090412 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095907991 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.080246823 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075520275 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07939118 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06930692 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08553928 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074281096 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076910161 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068389276 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08025672 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079052843 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069803348 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079854876 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072667336 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086445402 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083814185 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06807804 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078243001 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081837347 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081497946 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084021763 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083604194 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084631148 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081456643 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078807211 seconds)
  done (took 3.914357784 seconds)
done (took 39.122043106 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.724848856 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.944523935 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.70019899 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.903995171 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.756373523 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.928921068 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.78544885 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.713632781 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.910390693 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.741646592 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.989988933 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.149922033 seconds)
done (took 65.025344259 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.742214679 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.846763452 seconds)
    (2/2) benchmarking "String"...
    done (took 1.953021049 seconds)
  done (took 5.42953375 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.883158882 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.355632591 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.922105991 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.693725543 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.695933689 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.942995071 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.460020971 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.134641807 seconds)
  done (took 29.836521392 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.907382524 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.916959506 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.402230902 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.442885355 seconds)
  done (took 15.346103099 seconds)
done (took 61.955990712 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.725335285 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.741029455 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.698569266 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.689835528 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.786160699 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.714688511 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.883596392 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.734381809 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.691561984 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.702956978 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.692551046 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.1235681 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.697834792 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.881600409 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.690762183 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.691397609 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.717286767 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.159654365 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.84433885 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.705810056 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.698122462 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.731640879 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.698823437 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.700300236 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.711317459 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.692431954 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.095140067 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.702320038 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.512521635 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.696837524 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.742958728 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.043480616 seconds)
  done (took 201.225733251 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.694223353 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.792169398 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.847959157 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.696054165 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.308740573 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.886212411 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.794202969 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.33952525 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.694827853 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.719529418 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.863233939 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.695332212 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.887065589 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.640857917 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.734401243 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.736697044 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.979132347 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.885736265 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.730597243 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.843430175 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.702582908 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.81956567 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.778534094 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.836297563 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.738180443 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.701397333 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.717367525 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.708473648 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.873628405 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.955094557 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.697703672 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.715577749 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.89385738 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.56687321 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.703964203 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.704416073 seconds)
  done (took 167.516548256 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.877793977 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.698223587 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.696981608 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.697080606 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.703544196 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.698280573 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.818735711 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.817226733 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.346954336 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.227928965 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.753168584 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.698697919 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.699651604 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.470902616 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.69922786 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.765031476 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.707873702 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.694908483 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.714063941 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.725436734 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.699496251 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.700639123 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.820386555 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.707034036 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.694830527 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.70768331 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.699030544 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.704130505 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.085427209 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.695501135 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.946948428 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.696821635 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.703775061 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.941746385 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.696966191 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.700881958 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.530962021 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.673804045 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.778150523 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.697421133 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.705201072 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.699173241 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.918280592 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.694460377 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.699530702 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.698801849 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.699261903 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.70169127 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.812693927 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.695534379 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.821906614 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.699496037 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.172720658 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.695832312 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.70046239 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.063785933 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.271815561 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.700015397 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.703290604 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.701570437 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.699164165 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.700780643 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.705783157 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.93756595 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.77058312 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.70330213 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.703363759 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.706958332 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.700602557 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.783973494 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.698095587 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.01465216 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.714971998 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.924145939 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.822168648 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.702097205 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.768253036 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.791571606 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.698897107 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.701293187 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.700420151 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.701521775 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.782226362 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.697190964 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.782566235 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.697979435 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.711698086 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.701984456 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.754404404 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.772660472 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.698759563 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.51736925 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.704393974 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.700831135 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.934317895 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.763298535 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.699532606 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.702813978 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.77877135 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.818646005 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.407163609 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.70311561 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.968012593 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.777197074 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.699846242 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.821015754 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.704816014 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.785793298 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.706638197 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.70475364 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.739218433 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.704730149 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.715857003 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.69902425 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.075448684 seconds)
  done (took 392.106070879 seconds)
done (took 764.416540161 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.316144883 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.273139816 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.367510766 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.290811459 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.265281843 seconds)
  done (took 13.149201957 seconds)
done (took 14.786148977 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.780585741 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.785820977 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.722403524 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.782481629 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.719878535 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.784599963 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.769150578 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.7241916 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.752674656 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.724839119 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.751361934 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.724362471 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.7106258 seconds)
  done (took 24.370388996 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.931719207 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.936534338 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.769110203 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.932755406 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.744786172 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.933405747 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.856640911 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.849681746 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.839004051 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.716252673 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.713344654 seconds)
  done (took 21.862978076 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.934124346 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.93395048 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.77585352 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.938741435 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.750241746 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.947851572 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.856751504 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.849765844 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.849720409 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.71512653 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.715780557 seconds)
  done (took 21.906553777 seconds)
done (took 69.777678173 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.709052476 seconds)
  done (took 3.347920158 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.725594145 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.883754924 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.707606028 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.706603206 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.704976265 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.707603447 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.705161157 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.705768443 seconds)
  done (took 15.48640992 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.705307511 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.706106272 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.705692465 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.707116709 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.706126325 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.706153368 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.707287229 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.705129039 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.705085494 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.705503963 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.707512727 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.704643319 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.705899215 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.70574773 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.706179137 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.706052739 seconds)
  done (took 28.932415681 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.707833944 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.706859284 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.704407206 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.706348173 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.705874671 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.706092726 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.706878745 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.706800648 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.706806618 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.705837934 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.708273276 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.706065609 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.707382611 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.70663246 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.707593908 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.70720582 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.706066588 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.707127204 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.709598972 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.706088368 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.707472737 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.70673834 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.706305401 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.707566538 seconds)
  done (took 42.60363645 seconds)
done (took 92.007359125 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.414351636 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.547379238 seconds)
  done (took 9.599571872 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.713723711 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.708391989 seconds)
  done (took 5.138463906 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.709164908 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.709398541 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.708836144 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.708707763 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.709493745 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.710587236 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.709633374 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.708099548 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.710957247 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.709736029 seconds)
  done (took 18.734912119 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.709289748 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.708132336 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.707707879 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.707705957 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.707449611 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.708395159 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.708543417 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.708805735 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.709508056 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.708181621 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.708687949 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.709369288 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.709108506 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.710445947 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.709559222 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.709004573 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.708125242 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.708484203 seconds)
  done (took 32.398032516 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.709458912 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.708342949 seconds)
  done (took 5.058026176 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.708828684 seconds)
    (2/7) benchmarking "second"...
    done (took 1.709233186 seconds)
    (3/7) benchmarking "month"...
    done (took 1.709766735 seconds)
    (4/7) benchmarking "year"...
    done (took 1.708569233 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.710106788 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.711016448 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.710594891 seconds)
  done (took 13.60719269 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.711337191 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.864562587 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.931913821 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.348644322 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.71096812 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.713837706 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.613945901 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.712416467 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.713323482 seconds)
  done (took 18.96087751 seconds)
done (took 105.133942054 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.572516777 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.706722351 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.962997756 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.770715215 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.775846928 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.048296889 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.729149218 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.971671595 seconds)
done (took 42.17786937 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.775961176 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.511330533 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.556401724 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.799879053 seconds)
  done (took 15.510529938 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.709994509 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.022219282 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.730818172 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.573439508 seconds)
  done (took 21.685251066 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.07479125 seconds)
    (2/2) benchmarking "read"...
    done (took 2.064140416 seconds)
  done (took 5.790484357 seconds)
done (took 51.404908796 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.71245463 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.712908054 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.71260639 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.713695489 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.713479149 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.714330368 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.713794373 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.713667129 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.713509787 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.714845801 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.715613983 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.715028587 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.715212656 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.714053316 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.713058742 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.714580317 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.713523944 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.713418428 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.714180066 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.71441995 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.71424989 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.715026722 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.715728449 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.714637887 seconds)
  done (took 42.784288107 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.714968559 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.713056317 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.7148995 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.714656192 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.714714072 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.713629182 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.714981789 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.716066812 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.717461446 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.715285501 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.715338501 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.714769162 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.713901676 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.714559314 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.714670689 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.715228956 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.717185663 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.715382785 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.715629798 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.714964769 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.716361421 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715881516 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.716523955 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.71669504 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.716481295 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.716645052 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.719515831 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.71606771 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.716293643 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.718179892 seconds)
  done (took 53.11762502 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.716010925 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.716211135 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.716966835 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.717428108 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.71677649 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.714830809 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.71751322 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.715663243 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.716393517 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.717429744 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.716329054 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.716845827 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.717053 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.715281143 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.716674308 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.71598156 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.718475955 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.716478309 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.718608714 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.717023817 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.717495546 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.717580215 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.715808024 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.716447579 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.717082592 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.717032257 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.717395242 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.716466045 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.718824699 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.718569351 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.718143379 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.717633741 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.716913616 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.717622551 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.717233049 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.718093035 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.716599174 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.717969248 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.718370961 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.719283705 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.71658719 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.718198177 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.717376329 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.717192073 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.719254153 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.718023534 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.7177691 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.716746289 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.721014619 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.719522622 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.719937468 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.719092169 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.71939737 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.719653166 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.720720803 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.719293956 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.721225352 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.720158752 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.721072739 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.718868821 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.721620703 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.722526407 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.720802815 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.719688284 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.722531478 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.719871677 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.720637795 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.720566702 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.719287343 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.719353215 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.720676242 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.721066574 seconds)
  done (took 125.365246405 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.720119394 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.719781685 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.720298374 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.720737425 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.721706129 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.71977568 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.719829497 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.721244462 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.719548985 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.72168813 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.719435005 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.722211314 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.722490187 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.723681876 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.72075266 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.72141397 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.719828391 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.720512383 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.721202932 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.720474793 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.721764486 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.721842274 seconds)
  done (took 39.512817365 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.719267956 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.720122933 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.719944929 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.720321754 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.722601152 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.722365571 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.720896958 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.722061236 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.721825903 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.7235757 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.723462734 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723270051 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.722859044 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.723059272 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.722384913 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.72183874 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.723296715 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.724181966 seconds)
  done (took 32.651153924 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.722493472 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.722932081 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.721921024 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.723565909 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.725509939 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.723583852 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.723499764 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.722132406 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.724033779 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.724342715 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.72170465 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.722498643 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.722362364 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.724030277 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.722272861 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.725563631 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.723023404 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.723810487 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.722791254 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.723675097 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.724158349 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.722784291 seconds)
  done (took 39.566327979 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.722402001 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.723935558 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.725047331 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.724725541 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.723664794 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.723432861 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.723468175 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.725084919 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.72236863 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.722780446 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.723808039 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.723011263 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.721363295 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.7256733 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.723871151 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.724481308 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.724458477 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.722639262 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.724233235 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.724926226 seconds)
  done (took 36.129767254 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.725516868 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.725445457 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.725675353 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.724488855 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.723723431 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.726694948 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.727174287 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.724680519 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.724488701 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.725369307 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.727906479 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.724828322 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.72675799 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.724462472 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.725554399 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.72586612 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.72748578 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.723518266 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.726517498 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.726432275 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.727113874 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.726511587 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.726846185 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.726280384 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.727645589 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.726368922 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.727556342 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.725057144 seconds)
  done (took 49.980347813 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.725253298 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.72558234 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.724488734 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.725476544 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.728320522 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.725139617 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.724773331 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.725056493 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.724730038 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.726067967 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.726255348 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.726229978 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.726384278 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.726799486 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.727884886 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.726282352 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.726440234 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.725597533 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.726094246 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728493565 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.727323973 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.725834106 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.72702482 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.726010911 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.726855536 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.72836658 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.726768804 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.727990684 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.726763397 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.726908921 seconds)
  done (took 53.449939983 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.746793295 seconds)
    (2/2) benchmarking "in"...
    done (took 1.74780618 seconds)
  done (took 5.151852414 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.727819549 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.729572297 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.727743443 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.727065744 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.727892357 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.728088542 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.727729881 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.72691689 seconds)
  done (took 15.480690199 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.728664348 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.725825853 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.725998882 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.72748153 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.72628419 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.725334233 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.732946421 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.727569684 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.727411615 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.72859421 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.734947602 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.736681262 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.727849492 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.728165354 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.72818373 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.73045185 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.726756305 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.726862002 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.726922697 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.727278896 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.724990456 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.729652807 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.729519155 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.726424683 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.728539573 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.740464013 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.731214801 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.723889455 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.728277248 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.732278658 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.726748227 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.726907707 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.724028155 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.726904143 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.726667284 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.727873565 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.735627299 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.727705154 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.731844635 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.727895805 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.726511554 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.726645092 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.73161566 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.727808378 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.729278413 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.727483995 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.727295243 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.728050564 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.727745955 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.732309255 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.737305603 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.731078057 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.728336312 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.733167411 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.731512575 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.736744351 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.728828634 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.732609253 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.740645613 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.740995382 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.739213032 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.740211934 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.730282977 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.730016744 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.738524183 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.757612514 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.735414074 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.730743943 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.727367988 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.729513877 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.737055395 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.742945843 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.740610053 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.729100277 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.732375802 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.73064406 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.731995223 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.730607579 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.737996035 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.732989066 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.729835349 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.728446224 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.739878413 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.755261873 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.730923329 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.728487595 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.73078896 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.73022581 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.731762126 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.744252935 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.731026325 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.730006335 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.730521206 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.731545576 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.732188545 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.730249787 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.729269518 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.733813034 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.731350139 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.7314421 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.730300023 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.734927737 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.74398592 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.729006752 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.731412339 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.739111825 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.728319992 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.732222006 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.737600917 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.729054186 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.729243729 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.729206594 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.738140052 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.730551287 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.733247621 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.738519715 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.730573311 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.732662087 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.730860486 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.731321388 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.74137147 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.76139302 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.730033946 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.730760247 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.735390298 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.742551823 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.730430972 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.734096912 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.730738631 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.731037653 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.730764261 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.734761725 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.731875473 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.733932306 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.733115094 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.735002036 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.729885515 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.731992111 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.731046379 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.732923335 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.732154038 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.733078819 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.733444682 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.735718476 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.731903851 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.734270197 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.739391984 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.732731912 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.734809665 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.731935575 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.732367352 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.733229996 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.734456398 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.732424596 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.732573833 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.732027158 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.73403187 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.73202482 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729852479 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.732661353 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.735198926 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.73643648 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.739290911 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.732762857 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.738013632 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.732559899 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.732594998 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.731437236 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.731950772 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.732862647 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.731314943 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.731680127 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.736383727 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.743629978 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.731678581 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.732953403 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.736694106 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.734257613 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.73370011 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.734885221 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.735664903 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.74443333 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.733947449 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.739876886 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.734355203 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.733441459 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.733372064 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.734305248 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.734939109 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.735579057 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.73759767 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.744268669 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.748512659 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.745012224 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.735519263 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.737169915 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.733753418 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.737766968 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.739681437 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.734323061 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.735009817 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.735486409 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.737156169 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.73482692 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.738421643 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.734384716 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.734867684 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.735271994 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.733756266 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.734017789 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.736309233 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.738266804 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.739205327 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.735871889 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.735061184 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.735596226 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.736881719 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.734848936 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.73600131 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.735761681 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.734861226 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.73628088 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.741179812 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.735880791 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.739761528 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.738951212 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.737198228 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.735868254 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.734279357 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.739359206 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.73943421 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.743227385 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.738089682 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.739308797 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.743284393 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.736609439 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.737827402 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.742156315 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.737677594 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.737788282 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.743075052 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.744072508 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.736718942 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.735449147 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.737426325 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.737268705 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.737361585 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.746096603 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.735979618 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.741943591 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.735735627 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.7400857 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.737542336 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.741929965 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.741827221 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.738499772 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.740225723 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.737581622 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.738581633 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.740011961 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.737031644 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.737159505 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.738771609 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.7421001 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.748708083 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.742963731 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.739911172 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.740695881 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.74032743 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.743531219 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.741065757 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.738462479 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.739049553 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.750711872 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.748632877 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.747102703 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.74123375 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.739014177 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.744731964 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.741733192 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.745377175 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.740442872 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.740191022 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.739211186 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.740225665 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.738975705 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.742053451 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.743156832 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.743306903 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.742539891 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.74342872 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.740656943 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.741589747 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.738861982 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.740279544 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.74056989 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.742396746 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.740373033 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.742770375 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.743604302 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.74053175 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.742305502 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.748777906 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.742324118 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.744737223 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.742496611 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.743055832 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.742229214 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.742166007 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.738678658 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.745622218 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.750402576 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.743453328 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.752317955 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.742746365 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.751101485 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.740991042 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.742611315 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.748299752 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.739209047 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.739269418 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.742576296 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.74073618 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.749338631 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.741323602 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.741072385 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.745903414 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.742147959 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.741924715 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.742184355 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.73976973 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.740415405 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.740868002 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.751577723 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.741639078 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.749285661 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.744744018 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.740577551 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.739872571 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.741869976 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.74018308 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.747215069 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.741778788 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.744430658 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.74240706 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.742038818 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.74092981 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.741600905 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.741931484 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.740787824 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.74136877 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.749440309 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.743544319 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.746657308 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.742081936 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.750179389 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.742532867 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.750680575 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.742881476 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.743146142 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.741597867 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.742479707 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.744124023 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.744334204 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.744698686 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.741711766 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.744006758 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.747913489 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.740983282 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.744131135 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.744852815 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.744512431 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.743826226 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.752828783 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.768723174 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.745942863 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.747815329 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.741852924 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.744048394 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.748138908 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.743339906 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.7417056 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.747023246 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.755114893 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.750562514 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.745771516 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.74259281 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.74531714 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.743299159 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.74312661 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.743843132 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.740863401 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.742813983 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.744994641 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.742949273 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.748625299 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.743727122 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.744443528 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.745161314 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.745221603 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.755194699 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.744285406 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.744382127 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.744193985 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.745210755 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.745397509 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.746032779 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.743995993 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.74881448 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.744972113 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.747206252 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.752895832 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.751620422 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.747873585 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.746125621 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.743922211 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.746177783 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.7452109 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.745687716 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.746146538 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.744902381 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.74970549 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.744612446 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.746112774 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.74604092 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.745315131 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.745590563 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.745602485 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.748766131 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.754710372 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.747809286 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.744745749 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.745149096 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.746544635 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.74656198 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.74882653 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.755667355 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.750515809 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.760913888 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.757799936 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.750772922 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.749368985 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.749523496 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.756073114 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.744703899 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.746738867 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.745902579 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.749254 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.748188013 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.751699221 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.747248643 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.751536223 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.748721762 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.746125691 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.756443948 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.748868704 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.748751766 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.749928922 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.752980825 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.748535276 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.74708025 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.747140697 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.751461811 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.75591256 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.750582255 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.747986365 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.750443658 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.747559766 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.749028666 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.751461826 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.746273376 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.751900704 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.747658827 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.748613255 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.748434572 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.749140257 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.746977137 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.748787283 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.749433051 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.751361897 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.758467458 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.745734379 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.752784524 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.749907391 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.750820398 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.747495746 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.748369096 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.748251101 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.748695089 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.747829783 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.748243331 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.750141886 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.752910004 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.749009203 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.751479145 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.752883439 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.749303099 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.752069606 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.760714878 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.758272051 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.749230193 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.749371373 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.751695745 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.751497974 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.749389064 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.748719366 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.75141488 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.751211042 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.749303139 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.748634116 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.748561422 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.752861809 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.767106365 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.749586278 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.752198951 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.751167403 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.754157382 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.748760192 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.748942573 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.751274023 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.752000736 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.754564024 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.760539224 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.750602523 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.75917079 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.752230033 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.751818138 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.755077001 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.752397229 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.760311996 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.753580698 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.751555168 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.75084012 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.755611046 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.769735668 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.75195169 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.761990196 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.783790912 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.75183642 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.752445675 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.750661894 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.753253865 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.751938563 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.754427143 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.752062473 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.753104204 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.750685032 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.751878508 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.752859979 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.760291001 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.754299861 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.751111514 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.751946126 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.754453516 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.757017718 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.752413333 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.753623282 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.750049956 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.752215735 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.752156048 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.751168465 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.754110255 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.762877217 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.763974139 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.753293373 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.752560105 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.753421112 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.75797359 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.756173445 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.767793974 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.761987784 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.753378816 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.75477611 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.756303147 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.753286275 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.753544868 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.755453916 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.752822682 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.753269389 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.751572132 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.76558866 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.76258808 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.76040591 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.753336678 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.752750057 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.753904856 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.755994292 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.75373127 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.752807912 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.758931854 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.755246276 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.757821369 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.75328314 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.753062581 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.759569898 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.763785522 seconds)
  done (took 1040.025742161 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.756240001 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.754692543 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.75456682 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.755077336 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.754285909 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.753989422 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.755132658 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.754810246 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.756508 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.755928085 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.756390714 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.755396937 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.755951129 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.754574836 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.753592211 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.753749155 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.754595253 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.755871617 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.755128932 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.755996084 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.754914881 seconds)
  done (took 38.54206551 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.755351028 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.754412652 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.755361935 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.75525412 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.753761577 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.754268688 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.754653558 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757478018 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.754961139 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757282512 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.755681996 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757402996 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.75719832 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.754046032 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755137115 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.758255779 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.755715184 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.757244051 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.758129591 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.758125709 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.757475017 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.757648394 seconds)
  done (took 40.320384716 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.757528772 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.757749061 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.760618929 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.758092238 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.757802549 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.758244498 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.757165772 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.757087113 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.757940043 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.758496409 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.75779617 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.759215805 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.767849669 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.765892446 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.759381549 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.757400467 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.902062914 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.758269182 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.757198207 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.75929614 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.756515631 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.763809529 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.757726992 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.759234047 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.758682675 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.758835639 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.756909816 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.758318037 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.756369702 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.760061068 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.763695244 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.759110048 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.765265858 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.759358164 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.756603505 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.756839799 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.760590997 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.759238211 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.754487852 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.756771312 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.767374817 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.782755546 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.757005548 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.764174757 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.754634917 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.753755157 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.760255539 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.764636165 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.754453518 seconds)
  done (took 88.050036593 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.754695391 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.755739379 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.756970823 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.757789452 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.756632675 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.756704837 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.757191506 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.756473212 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.758134713 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.757957557 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.755821497 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.753131653 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.753149978 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.753893992 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.755426922 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.75409526 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.753976892 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.74499007 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.747510002 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.74825951 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.747476274 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.754104537 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.742026772 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.744032327 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.742048551 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.743170305 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.742506222 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.748931664 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.739043945 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.741786139 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.738885857 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.739549269 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.740172749 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.739932709 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.740843365 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.739832998 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.738507685 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.738381071 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.740004723 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.740234063 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.739023305 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.739562662 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.740137536 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.740082471 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.741595057 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.740880933 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.739201471 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.740139007 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.741027025 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.740689149 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.742366794 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.739287202 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.740340633 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.739718659 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.740701828 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.741017682 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.740758329 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.741761257 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.740228429 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.740700092 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.740006405 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.740264701 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.743201938 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.741440363 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.741934802 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.74142542 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.741568493 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.741705187 seconds)
  done (took 120.362078985 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.741520387 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.741129947 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741440204 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.740380002 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.743149138 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.740037543 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.741083294 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.743229002 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.74139806 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.743627774 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.74325251 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.742358972 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.743578382 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.743676443 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.740002366 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.741446571 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.742290085 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.740972317 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.742397015 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.741350696 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.742596378 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.744365534 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.739989697 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.740422145 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.739562742 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.74191432 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.740324817 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.7439195 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.741374459 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.742732018 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.740768391 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.740913515 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.741318585 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.745040762 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.741053004 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.742054194 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.739880274 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.739740236 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.742558072 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.74367214 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.740313497 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.741433634 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.74383214 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.741838188 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.74269363 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.741616219 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.742757952 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.741663157 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.740169524 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.742063233 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.743597149 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.742074955 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.743763957 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.739778831 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.742727167 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.742004888 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.742240468 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.740349511 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.74039455 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.740536961 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.741630991 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.739925148 seconds)
  done (took 109.663611071 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.738224202 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.738961324 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.739569131 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.740018769 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.739814639 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.736609545 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.740309869 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.738628382 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.741320145 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.738420524 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741906536 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.740010971 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739895187 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738708493 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.739009176 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.741228437 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.741632445 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.738321033 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.73939127 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.739911101 seconds)
  done (took 36.465667465 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.741795987 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.739612484 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.737681377 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.738761473 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.737659428 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.736749343 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.738102235 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737039709 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737337198 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.736421053 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.736830377 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.736583263 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739140441 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.737658633 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.737989105 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.737565182 seconds)
  done (took 29.477646932 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.736860741 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.739051455 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.736331677 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.737307166 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.736293383 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.737599038 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.737490761 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.737419362 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.737045961 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.73899314 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.73809379 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.737595529 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.736612932 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.737853502 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.739231789 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.738795573 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.7367515 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.738613056 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.738803864 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.738978859 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.738384148 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.738530118 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.738960563 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.737763526 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.740504055 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.737423704 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.738946622 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.738081498 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.737195762 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.737965021 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.739768895 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.73701962 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.734460328 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.737976641 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.736712585 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.734482494 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.736865289 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.735340708 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.736241198 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.736215475 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.735763407 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.738057517 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.73606296 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.737090125 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.735562746 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.734757077 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.734842578 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.737268385 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.732692129 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.73421161 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.736096891 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.732774518 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.734683357 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.734522333 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.733624768 seconds)
  done (took 97.202093494 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.734478679 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.733143775 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.73313346 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.73291467 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.73486435 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.735032681 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.733120307 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.734072636 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.73599722 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.729619867 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.732986797 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.732997092 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.7319695 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.733786175 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.734723213 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.729985489 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.731508027 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.730976564 seconds)
  done (took 32.85934548 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.731404677 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.733494021 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.732579093 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.730176538 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.73148405 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.732218494 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.731651112 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.734904846 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.729787973 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.731778521 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732213314 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.731487897 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732557619 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.730842889 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.730920492 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.732257812 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.731398282 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.731228193 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.731618203 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.730235113 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.731056008 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.729900947 seconds)
  done (took 39.758471794 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.730556156 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.730684519 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.744355076 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.754195435 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.751301761 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.769469671 seconds)
  done (took 12.144502995 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.730092454 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.729084789 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.730379699 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733083733 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.731333948 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.732520043 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729621876 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.730296157 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.729085061 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.732300921 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.732241879 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.731117955 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.729933807 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729511144 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.730201218 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.730376262 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730964286 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.730118118 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.731582028 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.732016936 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729197085 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.728916296 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.730024346 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.730647724 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.72902886 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72875349 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.729350338 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.727815532 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.72961437 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.732543692 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.729279236 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.731088995 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.730332117 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729329308 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.729977531 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.730746438 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728840679 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.729937606 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.729765783 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.730222157 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.729816555 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.729787059 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.729080194 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.730243907 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.730701237 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.727577379 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730651555 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.728328169 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.730177809 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.729737702 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.729887148 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.730271607 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.730661227 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.72739803 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.728903085 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.729102622 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72970073 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.730552986 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.733259224 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.73091551 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728707602 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.729781751 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730638761 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.731549184 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725733638 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730733464 seconds)
  done (took 115.848189591 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.727629772 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.728818421 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.730928976 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.730908548 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.727087425 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729018069 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729048748 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730199396 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.730516461 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.72949273 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.729546391 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.728359559 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.73045583 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.727223618 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.731762959 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.730407762 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.730320871 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728997637 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729123095 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.729856866 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.729550579 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.729649343 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.729223343 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.729143915 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.729320187 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.728852263 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.729995112 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.731470306 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.728108339 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.728642168 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.729770032 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.729015966 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728317189 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.727761998 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.729378208 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.728782827 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.728345839 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.733753323 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.728523806 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.727009667 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.728843444 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.727812682 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728872658 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.731026267 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.729763074 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.728606142 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.729635161 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.728728263 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.728574899 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.729629536 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.728647015 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.728624623 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730030905 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.730120048 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.729189799 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.727722799 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.727613105 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.728899218 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.729512349 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.729758942 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.731583059 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.730081384 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.729458112 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.729601459 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.728456671 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.730259139 seconds)
  done (took 115.796593285 seconds)
done (took 2411.354969694 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.748920703 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.744157785 seconds)
  done (took 15.153377402 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.890826074 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.845822146 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.730873008 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.73857278 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.727104624 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.753092411 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.745811019 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.72765154 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.730124299 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.732817935 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.730158373 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.913286143 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.785041373 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.726477514 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.72935285 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.82026736 seconds)
  done (took 49.994624764 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.733807751 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.736117285 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.742609931 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.736366165 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.734319582 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.745845338 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.765827459 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.734670515 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.765257187 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.745131597 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.800695709 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.742860618 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.733260071 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.780436091 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.747927244 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.749080856 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.831090449 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.808713164 seconds)
  done (took 33.293531944 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.806246424 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.738377722 seconds)
  done (took 10.213282535 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.748713645 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.734886158 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.785240787 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.754490304 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.75816766 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.736634424 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.757855598 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.755919155 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.763825433 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.785047954 seconds)
  done (took 69.250420762 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.740443429 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.738111177 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.736617506 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.733867084 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.73227645 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.734795908 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.734608242 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.733220143 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.393440644 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.770946363 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.743215651 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.739119562 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.73562922 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.740166694 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.73184799 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.755607925 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.844411352 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.72838008 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.73184245 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.741247459 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.733480693 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.791910535 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.748678222 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.737055603 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.763565027 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.393350634 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.742843045 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.741419897 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.851847371 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.730872727 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.736989528 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.921592867 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.735428476 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.204283625 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.000007645 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.74091747 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.746239966 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.743587532 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.734143853 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.845643013 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.736461731 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.742626292 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.725264709 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.977041597 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.826700144 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.779740628 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.045319552 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.749096266 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.735520645 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.764218911 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.738469759 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.737524707 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.746956424 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.251783789 seconds)
  done (took 125.405354684 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.733337481 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.0773738 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.898196936 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.733758187 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.012794848 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.935452128 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.735303727 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.774237591 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.733330643 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.9596289 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.987652295 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.835634615 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.732297511 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.733525331 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.732783081 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.731909164 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.886204119 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.801838933 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.734076121 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.73294309 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.758404343 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.974725667 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.851724769 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.739061311 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.759182316 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.942176239 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.855580902 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.83536253 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.521577462 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.732255306 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.794682053 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.733389108 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.733821131 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.732212833 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.889054608 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.830510883 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.814786963 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.735750408 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.735339703 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.73506817 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.389385633 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.932846982 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.828502324 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.862531288 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.983327806 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.938036974 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.511672437 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.734947285 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.472005897 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.898488021 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.959000345 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.971894211 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.851726255 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.735978461 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.074216333 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.734540111 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.733065858 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.989232935 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.954957063 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.829672829 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.735226802 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.734610745 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.737417316 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.973092304 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.736513875 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.828609436 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.736427021 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.730641322 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.834159788 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.831043481 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.962234192 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.946186214 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.761786009 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.079780189 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.23404187 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.981201243 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.801592307 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.979585605 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.737163075 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.737132533 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.810903285 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.571347271 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.985695522 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.9774342 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.976845579 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.765574228 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.45942878 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.735893616 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.965932884 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.954179287 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.991953752 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.985955038 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.968306578 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.070066747 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.735980868 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.735458094 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.986391361 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.856588212 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.738026879 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.083229391 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.964827059 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.25312966 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.761187229 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.040865905 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.865469414 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.736397762 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.36208985 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.735590368 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.963185504 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.772499825 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.736975281 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.741391771 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.953642422 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.723145892 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.734350474 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.38374429 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.796028366 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.737746811 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.966249498 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.737266328 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.002901401 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.739457154 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.96664959 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.81645565 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.763474842 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.907333169 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.981670426 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.740558776 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.974992077 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.976310821 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.848738295 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.956229408 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.445914178 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.737195021 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021965581 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.737795809 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.738490806 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.90423212 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.737791419 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.878974248 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.742927135 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.028867386 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.756179999 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.966503844 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.743940397 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.988251685 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.768743756 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.794489336 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.73893952 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.862051593 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.749480129 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.571288013 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.89922506 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.741960958 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.73578449 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.71172399 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.739048248 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.885053786 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.963058992 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.757498431 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.808994753 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.399786127 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.740129182 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.821204373 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.756450523 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.132698438 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.73796433 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.988738292 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.744573285 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.738854684 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.73951202 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.979802155 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.922766214 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.742462837 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.744460614 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.644091699 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.743055696 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.739460931 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.919620595 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.087008031 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.738090524 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.938563864 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.743310386 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.865748149 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.742026698 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.810867334 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.070000183 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.740780938 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.741779235 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.742514094 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.742468027 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.743000301 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.947999959 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.765303007 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.238106796 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.875327989 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.011181313 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.047652467 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.980638702 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.787314315 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.744797681 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.996000616 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.747394236 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.802024755 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.744333746 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.760231502 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.965681832 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.748403113 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.000050867 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.012289925 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.653687585 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.790798313 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.739381725 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.740912377 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.741507275 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.887375717 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.827758851 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.739247633 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.741313173 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.853442663 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.862271301 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.948513857 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.742025751 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.785587714 seconds)
  done (took 873.691116752 seconds)
done (took 1178.663647253 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.743368746 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.741102932 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.743813939 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.747420385 seconds)
  done (took 28.650727445 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.755380332 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.74724274 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.746311178 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.743992811 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.746606167 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.748110477 seconds)
  done (took 12.161552169 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.739042468 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.742746408 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.745262295 seconds)
  done (took 20.905570079 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.817981426 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.133045024 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.878525017 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.220182897 seconds)
  done (took 9.729254656 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.750395666 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.749712905 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.748256436 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.748647352 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.757184741 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.757752151 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.749578831 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.748952611 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.759365885 seconds)
  done (took 17.454775111 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.877655572 seconds)
done (took 94.453275016 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.777010176 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.958514969 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.810019648 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.845095924 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.742254635 seconds)
    (6/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.826115733 seconds)
    (7/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.065336755 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.912714731 seconds)
    (9/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.846780748 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.809232568 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.854971413 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.766715131 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.863359228 seconds)
    (14/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.748307515 seconds)
    (15/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.875737241 seconds)
    (16/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.890566656 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.847191674 seconds)
    (18/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.756334569 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 3.136736879 seconds)
    (20/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.752188098 seconds)
    (21/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.943956469 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.907689198 seconds)
    (23/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.529627598 seconds)
    (24/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.862951825 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.772551722 seconds)
    (26/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.893923881 seconds)
    (27/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.194110775 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.080839041 seconds)
    (29/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.810494751 seconds)
    (30/309) benchmarking ("sort", Float64, false)...
    done (took 5.508458266 seconds)
    (31/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.748278342 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.374940651 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.053045832 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.717987801 seconds)
    (35/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.940800013 seconds)
    (36/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.904274442 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.775726997 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.746747149 seconds)
    (39/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.841468677 seconds)
    (40/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.9966172 seconds)
    (41/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.841515759 seconds)
    (42/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.772535705 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.918032928 seconds)
    (44/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.748744713 seconds)
    (45/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.17923958 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.931270282 seconds)
    (47/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.23401183 seconds)
    (48/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.903301049 seconds)
    (49/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.764461888 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.644996868 seconds)
    (51/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.196681603 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 1.968268246 seconds)
    (53/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.96236289 seconds)
    (54/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.967964089 seconds)
    (55/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.986694442 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 5.435552116 seconds)
    (57/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.750573826 seconds)
    (58/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.745752045 seconds)
    (59/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.560012742 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.999187859 seconds)
    (61/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.84274019 seconds)
    (62/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.909172139 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.908892577 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.006015237 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.763985227 seconds)
    (66/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.844956319 seconds)
    (67/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.75263485 seconds)
    (68/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.931424416 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.837898407 seconds)
    (70/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.75636078 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.872341251 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.87407175 seconds)
    (73/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.85141889 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.067712392 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.769510777 seconds)
    (76/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.633063688 seconds)
    (77/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.9005386 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.863872635 seconds)
    (79/309) benchmarking ("sort", Int8, false)...
    done (took 4.641210068 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.047629651 seconds)
    (81/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.812570379 seconds)
    (82/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.02559089 seconds)
    (83/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.987276063 seconds)
    (84/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.944508719 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.853573493 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.718920676 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.217532962 seconds)
    (88/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.128034023 seconds)
    (89/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.881436726 seconds)
    (90/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.962838774 seconds)
    (91/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.93982424 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.884181045 seconds)
    (93/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.172748501 seconds)
    (94/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.884977963 seconds)
    (95/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.749909903 seconds)
    (96/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 3.166100219 seconds)
    (97/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.857071225 seconds)
    (98/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.852279563 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.75265307 seconds)
    (100/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.830777157 seconds)
    (101/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.835115046 seconds)
    (102/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.999182065 seconds)
    (103/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.618589759 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.060156306 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.767074741 seconds)
    (106/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.983077768 seconds)
    (107/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.861987937 seconds)
    (108/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.07262294 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.758171415 seconds)
    (110/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.838038329 seconds)
    (111/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.189123559 seconds)
    (112/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.777885468 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.087807271 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.754749639 seconds)
    (115/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.771591246 seconds)
    (116/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.933552911 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.962181453 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.771720441 seconds)
    (119/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.256730012 seconds)
    (120/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.931000932 seconds)
    (121/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.991597423 seconds)
    (122/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.947684635 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.752148423 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.752320123 seconds)
    (125/309) benchmarking ("sort", Float32, false)...
    done (took 6.756579192 seconds)
    (126/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.830231872 seconds)
    (127/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.096867662 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.746646302 seconds)
    (129/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.538664889 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.037044535 seconds)
    (131/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.826689497 seconds)
    (132/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.307304068 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.755220744 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.362313093 seconds)
    (135/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.832228205 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.780596266 seconds)
    (137/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.230313031 seconds)
    (138/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.889253361 seconds)
    (139/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.75238967 seconds)
    (140/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.939735288 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.997713355 seconds)
    (142/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.824785342 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.996612372 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.096346563 seconds)
    (145/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.832151723 seconds)
    (146/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.778997641 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.805578099 seconds)
    (148/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.770329415 seconds)
    (149/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.747699796 seconds)
    (150/309) benchmarking ("map", identity, Int8, true)...
    done (took 3.338577789 seconds)
    (151/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.767768332 seconds)
    (152/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.913581229 seconds)
    (153/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.170051299 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.751315852 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.854478725 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.85908213 seconds)
    (157/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.971253238 seconds)
    (158/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.83089756 seconds)
    (159/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.89729507 seconds)
    (160/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.751606142 seconds)
    (161/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.749397719 seconds)
    (162/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.59884236 seconds)
    (163/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.780549096 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.958157314 seconds)
    (165/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.000931873 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.131630349 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.748628724 seconds)
    (168/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.682789006 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.863531199 seconds)
    (170/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.889892894 seconds)
    (171/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.855064747 seconds)
    (172/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.61956224 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.644683478 seconds)
    (174/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.83488744 seconds)
    (175/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.752676658 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.424778027 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.887728196 seconds)
    (178/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.809872192 seconds)
    (179/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.090875285 seconds)
    (180/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.871624654 seconds)
    (181/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.098761623 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.87981225 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.874226384 seconds)
    (184/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.984662899 seconds)
    (185/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.755483362 seconds)
    (186/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.750032239 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.836240506 seconds)
    (188/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.773558302 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 3.090933744 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.752208224 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.463615385 seconds)
    (192/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.837487606 seconds)
    (193/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.526050075 seconds)
    (194/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.768651363 seconds)
    (195/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.776705142 seconds)
    (196/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.199995552 seconds)
    (197/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.77585452 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.749034432 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.848239384 seconds)
    (200/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.975821628 seconds)
    (201/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.856727852 seconds)
    (202/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 3.178328658 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.840966269 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.085855925 seconds)
    (205/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.758008926 seconds)
    (206/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.851132324 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.753394141 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.980820139 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.982902612 seconds)
    (210/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.853256572 seconds)
    (211/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.910372099 seconds)
    (212/309) benchmarking ("sort", BigInt, false)...
    done (took 6.758161424 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.579424374 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.955663689 seconds)
    (215/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.865911599 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.754904743 seconds)
    (217/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.836893461 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.067686062 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.758683462 seconds)
    (220/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.053119161 seconds)
    (221/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.053880973 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.425036276 seconds)
    (223/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.764328945 seconds)
    (224/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.249552542 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.506916238 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.128345202 seconds)
    (227/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.418952285 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.076092079 seconds)
    (229/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.766631327 seconds)
    (230/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.752544497 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.869932881 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.076449664 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.886251575 seconds)
    (234/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.776294347 seconds)
    (235/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.129166933 seconds)
    (236/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.138149335 seconds)
    (237/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.14519415 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.431828448 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.756072893 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.884123777 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.15131324 seconds)
    (242/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.435186398 seconds)
    (243/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.863369878 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.680134207 seconds)
    (245/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.204130901 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.76226049 seconds)
    (247/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.218763847 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.891972065 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.886759864 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.888850565 seconds)
    (251/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.046686728 seconds)
    (252/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.78411245 seconds)
    (253/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.063950555 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.760492783 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.09432307 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.16028685 seconds)
    (257/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.789364728 seconds)
    (258/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.775104797 seconds)
    (259/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.785974173 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.934678563 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.377777879 seconds)
    (262/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.914500273 seconds)
    (263/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.839620052 seconds)
    (264/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.925822468 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.023461973 seconds)
    (266/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.948981204 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.104673611 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.727805603 seconds)
    (269/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.778990838 seconds)
    (270/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.491536544 seconds)
    (271/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.06268397 seconds)
    (272/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.761880733 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.180233587 seconds)
    (274/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.243561264 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.90473826 seconds)
    (276/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.035487826 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.070844105 seconds)
    (278/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.785771455 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.875209658 seconds)
    (280/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.533257234 seconds)
    (281/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.639508778 seconds)
    (282/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.119954357 seconds)
    (283/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.158056931 seconds)
    (284/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.785228369 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.768471891 seconds)
    (286/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.943761188 seconds)
    (287/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.7713906 seconds)
    (288/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.021620304 seconds)
    (289/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.845549106 seconds)
    (290/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.940442475 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.815373498 seconds)
    (292/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.644916012 seconds)
    (293/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.96484548 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.032867321 seconds)
    (295/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.880501076 seconds)
    (296/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.029874516 seconds)
    (297/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.969212272 seconds)
    (298/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.860292202 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.110189961 seconds)
    (300/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.991360739 seconds)
    (301/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.0367012 seconds)
    (302/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.148744351 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.805739846 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.164835516 seconds)
    (305/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.668567566 seconds)
    (306/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.92585571 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.97956849 seconds)
    (308/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.981696789 seconds)
    (309/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.790607481 seconds)
  done (took 969.303940916 seconds)
done (took 971.049867705 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.791757823 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.787249222 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.770559867 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.791189435 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.883393524 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.817342009 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.782819572 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.774608686 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.820074255 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.820352579 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.768465613 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.816141523 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.771497494 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.770934814 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.773410162 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.787432553 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.086394567 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.805366694 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.790601813 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.78355195 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.789137542 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.769568127 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.820364797 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.815018612 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.775112565 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.774631056 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.774419534 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.791099624 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.883631611 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.774620389 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.777392593 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.784466854 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.085564396 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.803656252 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.77089927 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.79234653 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.787236075 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.784246114 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.775123002 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.805150557 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.169494781 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.818799195 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.771634603 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.772737685 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.771691438 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.778285206 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.774514554 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.781719062 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.788073581 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.788458755 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.167867861 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.838617401 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.778197524 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.773565277 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.786736551 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.772524322 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.776154961 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.789710598 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.792076303 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.788656274 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.069630034 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.814110139 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.777577002 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.793118705 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.781380323 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.202788696 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.818669216 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.781106512 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.173073361 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.828723054 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.204941125 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.828273868 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.775240908 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.788572639 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.80629781 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.085541615 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.806121646 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.771795193 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.782313092 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.773127192 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.785764934 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.788350503 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.779248815 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.775232349 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.791848824 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.819814543 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.787746094 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.774476246 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.785190693 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.793293597 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.784492298 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.786568208 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.778111345 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.773424184 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.787483372 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.78008562 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.781441055 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.778439218 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.780927881 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.79076188 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.171212345 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.839218198 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.772694331 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.771842445 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.776935525 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.790577597 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.170852289 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.821943764 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.798873031 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.824746387 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.776787452 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.073920932 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.812758345 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.793456978 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.788193776 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.780099802 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.77480329 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.074945882 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.212110608 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.840834241 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.777340766 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.77268257 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.793544803 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.777914496 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.772426746 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.089418512 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.813186231 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.792887382 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.901916356 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.791655222 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.811399551 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.776636173 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.779580233 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.827345453 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.792041008 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.808866861 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.779716607 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.793300849 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.794522422 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.774638851 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.787442508 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.790636123 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.776064904 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.785694294 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.775166171 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.827663358 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.793254955 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.792811818 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.798261286 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.901853452 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.775756067 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.073097209 seconds)
done (took 279.643269076 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.87150689 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.77478793 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.867845834 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.777361513 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.876197442 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.850851746 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.778327724 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.777704825 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.777118755 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.291918954 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.778800135 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.783606498 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.776062098 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.777014379 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.856383032 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.777541391 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.777757259 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.204442279 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.779994053 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.860907965 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.775758264 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.77835299 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.778327375 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.267867408 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.775831502 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.778457682 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.856949846 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.77805271 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.219480831 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.774394187 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.777704042 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.220075194 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.856334396 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.805894098 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.786562712 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.78489683 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.868823089 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.793678276 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.84908717 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.856041011 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.872657065 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.811968012 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.778059303 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.777412962 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.78393925 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.780391993 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.778626961 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.812101726 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.776039501 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.783554395 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.242574432 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.786343072 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.783669699 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.779570215 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.779050975 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.806909666 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.780367751 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.779913347 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.8620845 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.779823058 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.845664651 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.271226353 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.260121652 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.780244595 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.778401559 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.780872434 seconds)
  done (took 179.159613397 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.845115184 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.856246175 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.84672785 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.788594858 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.828072286 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.848380383 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.78934744 seconds)
  done (took 14.513131752 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.785435102 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.778902802 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.829699659 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.827614975 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.778354689 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.935299942 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.778774238 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.790860866 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.784429324 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.806131212 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.778773093 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.779779206 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.785703584 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.778163113 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.826865626 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.791324568 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.895478074 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.781619028 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.77912246 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.927698956 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.783847171 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.785447134 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.804625879 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.791672735 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.780060973 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.786817532 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.346061756 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.780198403 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.780144807 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.779531433 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.780226575 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.82130754 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.779729776 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.78025858 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.780204914 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.899657774 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.778166111 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.780052031 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.780003682 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.780248065 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.780479908 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.78058666 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.781404927 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.780766355 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.780570113 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.804233908 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.780259191 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.782125939 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.782599535 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.782986708 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.809657843 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.782441794 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.783607756 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.788356093 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.826021691 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.786448455 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.784075409 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.780618401 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.78278074 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.780898144 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.92979656 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.830379133 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.781651158 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.831751748 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.78133045 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.782112781 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.780556578 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.781640025 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.870077884 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.781801235 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.831534378 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.781542381 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.946090885 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.804493635 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.783582794 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.785652182 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.786200088 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.782123684 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.780565974 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.789532345 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.781632997 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.783614881 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.790392471 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.787301291 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.782829485 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.895767372 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.922541187 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.783092693 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.785073593 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.790182049 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.782896178 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.826856315 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.78232394 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.782316852 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.841197544 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.89917511 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.810225311 seconds)
  done (took 197.102807393 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.793239464 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.792974665 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.788657302 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.800359716 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.785399888 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.788095563 seconds)
  done (took 12.464319466 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.790233453 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.788064233 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.784720458 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.783291589 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.784393571 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.78472877 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.783089679 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.788245774 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.787498761 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.783391967 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.784284567 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.785787771 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.785204172 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.785057372 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.783793864 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.782482896 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.783740851 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.785435648 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.784549957 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.783842119 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.039596641 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.784401756 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.784079379 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.787343423 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.789337237 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.78675149 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.801569001 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.785210494 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.78534115 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.796048255 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.791441555 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.787046823 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.788407132 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.793209468 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.788214007 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.78754544 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.78779972 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.785811143 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.784562651 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.784178834 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.786064679 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.785196444 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.784937971 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.787243278 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.78991787 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.792887497 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.790134204 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.802260677 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.785193112 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.788582653 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.785847382 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.785957165 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.78674704 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.786645787 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.790916373 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.794607405 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.790363549 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.786563209 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.786276599 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.789068664 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.790614886 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.787168978 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.790000029 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.790676461 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.789809491 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.786987024 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.789479448 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.790865919 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.786004753 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.785506748 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.786049325 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.785503685 seconds)
  done (took 131.672334627 seconds)
done (took 536.640478362 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.053733325 seconds)
  done (took 8.770715115 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.931796149 seconds)
  done (took 8.710874409 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.38232825 seconds)
  done (took 10.101837884 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.812175529 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.837031539 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.800027574 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.793160286 seconds)
  done (took 28.989968449 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.086947967 seconds)
  done (took 8.805357279 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.810467237 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.786463036 seconds)
  done (took 15.384380031 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.864440429 seconds)
  done (took 8.583119271 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.134652303 seconds)
  done (took 8.863689006 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.806642735 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.7858998 seconds)
  done (took 15.33365936 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.789073067 seconds)
  done (took 8.507174903 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.989388588 seconds)
  done (took 9.811372891 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.812438006 seconds)
  done (took 8.603018315 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.86643436 seconds)
  done (took 8.586744545 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.953822741 seconds)
  done (took 8.673667986 seconds)
done (took 159.443247333 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.790600703 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.791669661 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.792025761 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.789679888 seconds)
  done (took 28.883097272 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.819758735 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.819797423 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.821919982 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.831261165 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.82484643 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.819835563 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.813360254 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.813473973 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.831143617 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.824047487 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.823547249 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.823098769 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.821387775 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.815597494 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.825702044 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.825130479 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.833390744 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.825197365 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.816353864 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.825258745 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.78807981 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.832890785 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.82436806 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.788028988 seconds)
  done (took 45.408995173 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.978915606 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.859913625 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.942647055 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.84358174 seconds)
  done (took 9.344698425 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.839111312 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.841226782 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.85307127 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.8912335 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.914163758 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.851053405 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.815532182 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.810339434 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.797886482 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.844128811 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.918177461 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.837373188 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.92829979 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.790188085 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.978678221 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.789058243 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.790023316 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.842227673 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.894266003 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.907510611 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.790143792 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.840673274 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.844806654 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.838077488 seconds)
  done (took 46.168597726 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.790769776 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.798538924 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.798209373 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.791894947 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.792953285 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.790766038 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.798997732 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.792494949 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.813730536 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.794115595 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.791018509 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.79198133 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.79740697 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.791692638 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.791903103 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.805033223 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.805336619 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.792614429 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.794899941 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.798627031 seconds)
  done (took 37.645199223 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.791129738 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.63655644 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.135707259 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.041415761 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.791261887 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.793087679 seconds)
  done (took 30.91040708 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.805502534 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.801938401 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.791694032 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.849577482 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.937291705 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.803710898 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.791817077 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.802115238 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.838452031 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.857860892 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.813421664 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.821818666 seconds)
  done (took 23.638549982 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.792608986 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.793122488 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.792262553 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.804486783 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.802562499 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.803097269 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.79940452 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.789394563 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.805276445 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.814073957 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.802900523 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.804135736 seconds)
  done (took 43.329722981 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869159072 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.667043024 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231430588 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250410408 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.31369631 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.994062629 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.790912098 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.8756107 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.793248792 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062902155 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.176237058 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999019144 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.034923677 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.568316257 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.797404416 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.276458436 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086789566 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005962785 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823235869 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.485095581 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903293162 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.346634194 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.444217988 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.903160519 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.996005043 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.91553811 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.050366789 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.741650812 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839356486 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797067667 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797987273 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.79391899 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064405041 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915107675 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865264164 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798208928 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.205113427 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.502814481 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.804303651 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.447926494 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.319092646 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.916332841 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796089525 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793002447 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.721684569 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34366427 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883652635 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.795725169 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.494903721 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.793211272 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.798574175 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869660307 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.794029389 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.600941004 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.476230268 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.061080563 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.796027117 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795912988 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.344448332 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832296759 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442842971 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.730922753 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.879432864 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.450918824 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259567188 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.95291489 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.794989705 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.795240205 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.721111477 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.456284316 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910484749 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.931596936 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.815551677 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436155219 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10021295 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.255774846 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.854619804 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067215041 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.618038591 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.728455513 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011990624 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.743569628 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.723021119 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.624592432 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.721969166 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006501433 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827621201 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.390976338 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828300341 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.877320376 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.80069945 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809352683 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799723464 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.010977315 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.690802733 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796345915 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.141351985 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.059510463 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816347372 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.881500119 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.723416452 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.800242427 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041456617 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.998925288 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.062474799 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.305898254 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889457698 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.763010964 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.809645575 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.736946731 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.805656897 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.069683915 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861909764 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.848175082 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918240364 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.745566388 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04419762 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777933785 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.896477488 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.209935992 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037837956 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.138977934 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.040722005 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859047551 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.803732403 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.797485633 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.530449539 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.409611454 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.016017964 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.812691744 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315799585 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.806447313 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.798411346 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732165981 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.418342437 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.217311562 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.884162577 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.011523052 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.773622355 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074421946 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724315986 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.935055315 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.794142574 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.010883218 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.454226277 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.888073746 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046506239 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.060195678 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.047166033 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808646462 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812405585 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890272764 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815039287 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.224973695 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.045117851 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.800198835 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.800136548 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.521427557 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.862066625 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.80044729 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.803238013 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.327903461 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083450587 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.827077828 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.805799011 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.67634716 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.812730678 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861914231 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.802992493 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.803823791 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.31998301 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.305545993 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.805552817 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.442147792 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017445693 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.803198496 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.511001566 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990173143 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.813704389 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.07539168 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870687463 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.727650076 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.501024858 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.501199949 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802484646 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.727959918 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.80394258 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805889797 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.809878417 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.990998103 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.085123631 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857184155 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.46433605 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.912245595 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.808142044 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.805041219 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801915193 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.318551328 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.857935574 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436045685 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.808046941 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931375959 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.813101515 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.728698889 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.80506513 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.804785817 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.801985914 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.749469906 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849287046 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.477026253 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008795404 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052706284 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.20855351 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810742531 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.466163615 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.924601239 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.818508485 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.17311768 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339868151 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.900337495 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856815101 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.809201767 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.473751632 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.539587251 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357928341 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113353287 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12792172 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163371469 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.178548569 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.122480074 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.887507462 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031407436 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.324714005 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860046439 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.892762752 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739278031 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.816285644 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.46207857 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162861575 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.812778789 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021207835 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095171968 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.232549466 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941295301 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007046235 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83358852 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.609968229 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.829736954 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.340958574 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820829839 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.261941963 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013293594 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89033795 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.176682466 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.889107338 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.804883877 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150316599 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84567377 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.509327683 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.15760272 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.202810391 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.356622444 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030406547 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.810378487 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.243520175 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159568561 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.995487446 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.922134918 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731675618 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.809979469 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.809911311 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.817836298 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.775935142 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.650742329 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.047520503 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809571682 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031815899 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.930441142 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176737306 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.711416683 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.808892315 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804500018 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051740442 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.549114484 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958786781 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.102837409 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.379634183 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.813737613 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.732644698 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731929267 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.507156438 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.813854311 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.771183559 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015033746 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.905340423 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.484853729 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.183639954 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11478599 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.048871728 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.816122676 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.082040084 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080596453 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.296843187 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826292411 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.903955266 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.182295064 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.553529926 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.021368331 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.033376705 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362126869 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.023333545 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250803417 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.776963496 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.807837129 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.01267264 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.021135414 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.240706291 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984050705 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.516888861 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.814272947 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166828576 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866803499 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.244664785 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.995956196 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.892523253 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813080352 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882746235 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810425889 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.812405176 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.812035754 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81674107 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.252496648 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.929919947 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.819395591 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885354217 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869698602 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.386440254 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.817892555 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086651545 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177703585 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154107339 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871156509 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.807360246 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.816799821 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734156079 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936933497 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.247046234 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079182824 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.925143119 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.943713455 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831940151 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.189797308 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.063261293 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115736331 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.080515401 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.691016871 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423709901 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.92722889 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.024666373 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81498254 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.011668164 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023599898 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108167553 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366534937 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.940086371 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.998167532 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.082091708 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.170018553 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.810787929 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.390600764 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.820002464 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.204133692 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.841165631 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.25233884 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074226139 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813553719 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930551596 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.813745823 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.014610302 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.260653533 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.536765407 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159889388 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658898066 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.815423871 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091277011 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.145897915 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11558419 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887054822 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814983507 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.502238244 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944584508 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.649459769 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.028573453 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.81186421 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015079663 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.522494264 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.815055115 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091999018 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117716737 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.813281565 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.661742165 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818978269 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.815756427 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.027211692 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031090091 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.056299059 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817368118 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.817889104 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.620072272 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092781304 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874714581 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.737681163 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.813669213 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858707883 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.038658897 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.831399404 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.3303459 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.51302068 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09105668 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.71951729 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829658469 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.221951327 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.197481407 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150685482 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.340181671 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03227767 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.365233871 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.653958429 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188388167 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.817144165 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.22523585 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191855069 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.815589036 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.314173404 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923327488 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.089700217 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140355197 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.826551571 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.584187036 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.850066901 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.028672964 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.170901709 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.744433215 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.819869693 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.8632027 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.814964696 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.798918631 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.82371623 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.697730035 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.237000709 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.658000886 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372511874 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.81823717 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.943876119 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.253163081 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.346297138 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92185805 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.83213342 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81812295 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.517963925 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.102144631 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.059718255 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.321347245 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.907652723 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.818932958 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.816254994 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.73547292 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.998939785 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.004385295 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097038938 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.149321297 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.924289531 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.819262273 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.026390868 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021626833 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.29348295 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954607963 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.945875539 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930892497 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.75714525 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.522532182 seconds)
  done (took 1631.422437382 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.821378285 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.877943607 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.843591135 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.872096671 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.838238995 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.826296544 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.86727906 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.904822636 seconds)
  done (took 56.601743903 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.817207543 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.973893693 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.822750513 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.818044836 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.825840511 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.818244232 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.981051056 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.829110391 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.82412563 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.822610629 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.818593164 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.817702702 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.111128398 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.841637145 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.818818332 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.818418049 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.83582974 seconds)
  done (took 73.353223956 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.820174527 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.978241082 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.855758645 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.820943907 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.514286316 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.819588112 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.699039759 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.876554302 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.822161709 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.859254665 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.116393993 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.860548532 seconds)
  done (took 88.793425616 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.830168743 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.820282325 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.821390097 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.820081316 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.819972812 seconds)
  done (took 10.869773705 seconds)
done (took 2128.109698899 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.044117848 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.007810329 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.072387159 seconds)
  done (took 5.82996873 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.960037471 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.011636034 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.124339996 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.145894379 seconds)
  done (took 9.997401275 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.126333235 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.196766039 seconds)
  done (took 6.074181216 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.134879446 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.854427203 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.190283065 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.819361222 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.824129306 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.825473303 seconds)
  done (took 22.225949596 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.820425815 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.820038781 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.820639325 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.820610229 seconds)
  done (took 9.033370197 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.818720516 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.52926844 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.821912056 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.834266828 seconds)
  done (took 20.755663129 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.967944499 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.944689368 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.963808664 seconds)
  done (took 7.627706578 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.962681865 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.681150263 seconds)
  done (took 6.395511092 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.955117953 seconds)
  done (took 3.706997047 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.850087459 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.09357701 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.306478839 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.337254998 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.396831006 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.630670488 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.105925793 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.037344507 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.267514179 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.255306472 seconds)
  done (took 24.034457086 seconds)
done (took 130.654409323 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.150329872 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.840722553 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.018941249 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.16280604 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.048058406 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.01719329 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.037880871 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.155132091 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.841067885 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.831959526 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.171376194 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.046110359 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.989373729 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.834803476 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.994066672 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.834946723 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.04009584 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.16704636 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.853278547 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.08154777 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.05195855 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.814637002 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.011719234 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.828582144 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.045052114 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.971612121 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.357217125 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.839224639 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.995485974 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.369491638 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.976210529 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.222829965 seconds)
  done (took 166.354455177 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.823500478 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.822982489 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.825138916 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.823599299 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.37011756 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.823589679 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.823436884 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.82275097 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.26191467 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.254482967 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.823820815 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.362482175 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.824237817 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.823467848 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.822771521 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.822644812 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.436419788 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.825235967 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.824183413 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.822392187 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.824657445 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.204865557 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.823331171 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.214470333 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.427031833 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.824179798 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.824496182 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.823356506 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.823902995 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.823733655 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.825374157 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.823897978 seconds)
  done (took 208.059379691 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.778056725 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.826297507 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.826576096 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.843087672 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.823881522 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.82710918 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.825898063 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.837614268 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.568823487 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.569781348 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.827389023 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.825680477 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.82671675 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.825235235 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.827137753 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.82557931 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.825260991 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.815359356 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.825370783 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.825869355 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.827518472 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.432449941 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.82671146 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.439531018 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.82569772 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.827486648 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.825815337 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.826544722 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.825903051 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.825527464 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.828569119 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.826720419 seconds)
  done (took 218.873422791 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.068664979 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.825728587 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.827400653 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.815567936 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.827406496 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.826003455 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.801172322 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.077687456 seconds)
  done (took 18.828323146 seconds)
done (took 613.876728854 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.199650503 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.036105867 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.000817379 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.850099378 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.078129192 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.895518525 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.845687726 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.911837187 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.664773972 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.919050428 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.48058099 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.870918195 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.57717002 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.874106004 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.971000762 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.907750444 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.43120851 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.53830983 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.023688031 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.919596792 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.022582307 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.743565186 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.928063043 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.6962115 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.601592584 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.798429527 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.858884405 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.439555451 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.85792402 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.002158115 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.491108898 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.089554178 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.860701985 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.845744009 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.902629641 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.879013235 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.036155589 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.857255486 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.975967131 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.548371461 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.90411419 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.571232327 seconds)
  done (took 100.664731119 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.83867171 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.834924847 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.832448738 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.834080306 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.841845241 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.834389305 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.835143526 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.834393237 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.833763834 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.834918562 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.835075828 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.841811221 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.833830501 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.843298404 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.833944508 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.834160725 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.834929073 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.842103672 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.833838115 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.835607938 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.834329118 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.835830882 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.831000218 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.834533624 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.833962356 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.835371677 seconds)
  done (took 49.50082764 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.829116762 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.982987842 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.077630041 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.849351328 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.830922089 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.83490951 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.848656461 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.838363907 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.833268003 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.833809743 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.923545261 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.838080399 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.848581538 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.072515248 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.849744347 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.829664307 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.830053242 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.831341644 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.99079344 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.847305147 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.849115862 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.837602067 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.848560965 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.845614729 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.832941866 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.831541758 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.836042738 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.274947612 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.84132598 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.925241968 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.877908206 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.854698034 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.226651477 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.082327139 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.884648679 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.840379545 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.831322699 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.92758543 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.84227115 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.832406915 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.849999864 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.841369573 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.071839994 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.356894151 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.846506221 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.831640216 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.285917664 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.939773842 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.875548383 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.843738499 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.075817857 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.848193193 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.833189488 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.832930878 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.868641799 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.840707042 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.832404995 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.137506143 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.845848631 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.850723706 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.840230615 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.834265574 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.996700084 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.845267148 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.986003492 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.845540804 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.838687236 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.834722859 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.076948629 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.849661998 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.36105683 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.848640193 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.833206373 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.926339299 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.994427661 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.313276349 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.847182236 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.998884707 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.246875318 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.858261997 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.843321038 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.264727104 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.861797052 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.843013658 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.83549603 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.835222016 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.834221178 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.876331314 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.84932958 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.277300573 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.366527247 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.155607477 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.859662614 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.852293302 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.834543549 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.137165568 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.842198928 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.834161556 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.068519745 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.371362776 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.850752668 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.842383894 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.346747012 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.850744856 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.852517152 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.846529731 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.083913736 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.851660742 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.87803843 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.834701731 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.841825316 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.838699689 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.854488098 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.844905438 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.835008114 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.340173645 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.948480209 seconds)
  done (took 227.778194061 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.834671304 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.837321832 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.83496297 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.838277295 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.833320491 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.835031155 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.834125628 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.833765412 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.836401619 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.834299833 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.833862566 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.836808931 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.837136315 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.838602585 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.844569099 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.837121693 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.437694284 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.835816167 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.835649312 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.835589075 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.473759865 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.840024972 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.834534581 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.835471864 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.835154847 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.835045042 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.840427716 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.843136995 seconds)
  done (took 166.43070034 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.836519223 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.947330986 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.858676382 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.86400129 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.845150559 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.837354464 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.933179665 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.855751113 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.841696619 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.836736002 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.837903278 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.897034293 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.850826622 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.932820555 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.869875672 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.942523734 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.94080007 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.845257117 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.837768196 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.838681168 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.865382992 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.846161843 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.896635371 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.962391078 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.858408421 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.949363705 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.858934158 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.83838181 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.83868457 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.948652385 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.858135469 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.898286905 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.868399997 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.855974423 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.952770962 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.955125182 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.941320964 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.941318735 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.845465027 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.838130407 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.838997026 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.840008621 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.94981431 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.860432844 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.839769487 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.952251426 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.859399261 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.838337859 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.839064271 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.839241491 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.851385711 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.855931049 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.901749868 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.967845482 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.876499286 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.862582409 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.935807388 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.962597901 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.83990055 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.935965969 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.846850592 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.950299212 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.862483449 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.841172576 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.841572505 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.842948955 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.8684397 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.944929677 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.943280357 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.848314486 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.934872246 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.875499141 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.848919662 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.840567314 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.840262598 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.950791307 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.957066544 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.874714361 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.877885873 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.873243824 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.848364939 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.840197971 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.841734694 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.856752962 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.844563242 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.950445059 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.958366888 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.847603968 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.84082115 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.84143748 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.841235813 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.865306491 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.958584556 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.877029907 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.942899158 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.90630104 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.915292327 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.855905241 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.85367756 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.845283662 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.902676246 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.856146379 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.853549885 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.128014032 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.899372697 seconds)
  done (took 199.521702357 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.244392999 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.889041362 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.896933551 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.163811262 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.194850258 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.737791026 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.890685064 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.889638307 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.9143976 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.072002537 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.95734413 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.906719204 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.876479859 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.861652778 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.888147489 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.911874154 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.894278662 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.224381312 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.096687398 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.023123458 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.8802313 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.163364488 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.199650497 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.474274228 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.938886215 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.296513008 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.455234574 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.019438046 seconds)
  done (took 60.740761805 seconds)
done (took 806.395287984 seconds)
SAVING RESULT...
DONE!
