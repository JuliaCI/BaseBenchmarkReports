cset: moving following pidspec: 15321
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.352624286 seconds)
loading group "string"... done (took 0.597186817 seconds)
loading group "linalg"... done (took 7.367734992 seconds)
loading group "parallel"... done (took 0.171640864 seconds)
loading group "find"... done (took 1.182885604 seconds)
loading group "tuple"... done (took 2.062078533 seconds)
loading group "dates"... done (took 1.301685133 seconds)
loading group "micro"... done (took 0.243542394 seconds)
loading group "io"... done (took 0.994172909 seconds)
loading group "scalar"... done (took 40.120897601 seconds)
loading group "sparse"... done (took 12.841552628 seconds)
loading group "broadcast"... done (took 1.004269462 seconds)
loading group "union"... done (took 14.123227208 seconds)
loading group "simd"... done (took 4.788514218 seconds)
loading group "random"... done (took 9.969620322 seconds)
loading group "problem"... done (took 2.012724265 seconds)
loading group "array"... done (took 22.451710303 seconds)
loading group "misc"... done (took 2.034989263 seconds)
loading group "sort"... done (took 3.421176184 seconds)
loading group "collection"... done (took 19.408769836 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.56409156 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145787378 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120862562 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.143984693 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191988451 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135142031 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145361304 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08646091 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.939150946 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.169647675 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142722755 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.524452741 seconds)
done (took 5.04165455 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.200067946 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089851627 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098791393 seconds)
  done (took 0.867963942 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06687687 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129837515 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082348963 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068904115 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067813221 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082948272 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068192452 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066346146 seconds)
  done (took 1.251605427 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075321563 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069692067 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086649999 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068753227 seconds)
  done (took 0.985958583 seconds)
done (took 4.060551158 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.942634357 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.261377708 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.195143849 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.472446977 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.154188057 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.191874245 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.669877145 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.338246321 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.217987386 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104341925 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10733609 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.395838548 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10978727 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671138196 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079452253 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.110191719 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.161633662 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.432468797 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082970816 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084101976 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106115338 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143647136 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104244897 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079355555 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.172708825 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070429979 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.155763543 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.097352891 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069354367 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.252564205 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.192271563 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68577847 seconds)
  done (took 10.638198908 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101783626 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.122560751 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070559006 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143609237 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123227351 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073153031 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073763335 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085746449 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094185209 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.164648533 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.119717753 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.126553127 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067677045 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071245059 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104674785 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23314633 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.096220077 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10381046 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073784153 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076323953 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.126869065 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.10076764 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082995179 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096793254 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153411357 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196239015 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101762035 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11489223 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070410819 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100937086 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132764019 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.134695477 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06727595 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085489167 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.161505659 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097255289 seconds)
  done (took 4.646117536 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.114048269 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.178844219 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095270947 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157636286 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087451225 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.131611073 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06789444 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104022704 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256681243 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.176714054 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.497306999 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.147466048 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131765275 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.089186415 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069507104 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.089256114 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066822043 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.086164604 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.640505772 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.113998652 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.140237754 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08637721 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094464615 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.089192533 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360925338 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069339111 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067599708 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08680488 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061231836 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.151661481 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069495642 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.285904551 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.111257452 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070622369 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122592469 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.180220416 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067228538 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113102445 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.127175402 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068777819 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06694014 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17480629 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093957757 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067993495 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.109256689 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121525204 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.107853509 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.086714241 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070022201 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.186933333 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067606481 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102545306 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.952324686 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.169100193 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096142414 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067184217 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298988409 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.105030172 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068500581 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.069144108 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.267433282 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.188791805 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.087718985 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068862927 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084762358 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071040941 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.377353784 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068595442 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.804285733 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073307004 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07867765 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087915652 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06867887 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092470014 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075324452 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104553845 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069273959 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068927439 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086109678 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067736524 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.087552873 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087997383 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.209418534 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.089640995 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068967188 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083858733 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088679836 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114904378 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071654327 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067390428 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119816517 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071775676 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086666266 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10442573 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088451756 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.104512163 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071838141 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.131425786 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069230927 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.13916787 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070452044 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.116831795 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.078695717 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117604209 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09935957 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069957122 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.158938311 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064807101 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.084822923 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.067192991 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067516626 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.086417579 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069781669 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.087494176 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.085074456 seconds)
  done (took 21.718137566 seconds)
done (took 38.797537053 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.318445326 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.097181276 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096068354 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.096129753 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07969315 seconds)
  done (took 1.450915447 seconds)
done (took 2.182816536 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.152178806 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104949059 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082838117 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098724769 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08222133 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103961711 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119344691 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082917204 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120517679 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066150469 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116058441 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065617589 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081002988 seconds)
  done (took 2.039985597 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083091813 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086555159 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087191636 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083369849 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080549613 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08359622 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081279117 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107190282 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081307683 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090417263 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065980341 seconds)
  done (took 1.660678489 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082038177 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084890014 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087518451 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081862665 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080989301 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082527672 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080920914 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103935534 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081460791 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091171851 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06654884 seconds)
  done (took 1.653602996 seconds)
done (took 6.077513472 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080770053 seconds)
  done (took 0.806822941 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.749629706 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.781213269 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.102751445 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.138304489 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.241291128 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.161708156 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.468300599 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113530369 seconds)
  done (took 10.674986726 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.116671303 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089804384 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071674764 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087968024 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07119924 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087427801 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073209941 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070293572 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088062103 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074449486 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.089659535 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07106286 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088939709 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074116707 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089950319 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073900306 seconds)
  done (took 2.110896259 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.106142739 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.1061011 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093972367 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078300299 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.092055513 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075292683 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.09512307 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076915326 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089506475 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075645294 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.094045368 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077417518 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090497593 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067808781 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092766918 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078743148 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.089632736 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078113871 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.094062963 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077513564 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093989056 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067113294 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.09047766 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077412952 seconds)
  done (took 2.900823416 seconds)
done (took 17.222466907 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.136408624 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078275775 seconds)
  done (took 0.949228286 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083983148 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101275973 seconds)
  done (took 0.926341016 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086151896 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083361008 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092405386 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09669498 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08478401 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06774697 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.106732863 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068275344 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084059749 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068501364 seconds)
  done (took 1.579672432 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070515251 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096585019 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072600779 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100234694 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07620711 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082879286 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076256032 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087238367 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081491333 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080773727 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073594836 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101254681 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073549938 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102863126 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092000878 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07113143 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090242494 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069318792 seconds)
  done (took 2.237838153 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067758421 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069011306 seconds)
  done (took 0.876593771 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068465335 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06592931 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08439401 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069276833 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081309997 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065211039 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081858284 seconds)
  done (took 1.256407556 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.414495875 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110427679 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.268594379 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073879424 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.107977444 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.299981537 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067586894 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072885031 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090674706 seconds)
  done (took 2.286807741 seconds)
done (took 10.849328565 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081493055 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088028863 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114243879 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.444744115 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.109033795 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068263558 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14755183 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.219066996 seconds)
done (took 2.010325772 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128863109 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.633853375 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.417795957 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.217635074 seconds)
  done (took 2.014065935 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.388294759 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091976221 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076711256 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068677637 seconds)
  done (took 1.374178446 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068531119 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07142365 seconds)
  done (took 0.887697373 seconds)
done (took 5.148717579 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068610405 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.115897857 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067761356 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067960872 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.083620945 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068241025 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066062878 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083852416 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068379939 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.085372218 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068596593 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068811108 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084260052 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066158871 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065734152 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08409623 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068174747 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06549857 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081726851 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065682831 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081975944 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068759159 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065931114 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.082270111 seconds)
  done (took 2.578796746 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08762036 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085383861 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07438002 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090092467 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072977332 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090912795 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073943963 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068860002 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089939231 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070566639 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088628686 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072411892 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086421609 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073968704 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086970708 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072813975 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090151501 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069159066 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070360313 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089203572 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073475978 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084736099 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07224368 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090472084 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073962147 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089084951 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071693667 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085709972 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07447397 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089522065 seconds)
  done (took 3.157985694 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072388343 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065970736 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083102305 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073240669 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06658118 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.084475576 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066359862 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083182766 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067726891 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06663915 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084366051 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066575697 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066133015 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084453159 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066975187 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086366326 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083571071 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06712035 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083389771 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066672362 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085626851 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066125289 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066743602 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083366414 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066970991 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066355784 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083491364 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066597871 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06658774 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082900278 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069676784 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08665214 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066996456 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073109153 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087091522 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066603587 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070083187 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082677659 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06697165 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081880388 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066093142 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066498288 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.082386681 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073158782 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066628425 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085244176 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065923077 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084129808 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067002728 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069393606 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082319981 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066225796 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067261748 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083555496 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070502854 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.082728806 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067506815 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065365955 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08367082 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06636826 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065354888 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08260092 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06867163 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082779053 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081901046 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073186407 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082081211 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068533478 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084614586 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068576678 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068145496 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096921552 seconds)
  done (took 6.109165447 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.122134644 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095554344 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085275531 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06843326 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082348196 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066128225 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070292635 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082980279 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068692998 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089610712 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066814359 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084779947 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068141089 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081890475 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083403911 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069070971 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089454848 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064443171 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066240053 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085984886 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066709939 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08679405 seconds)
  done (took 2.500333579 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.192499129 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090703134 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113875407 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093750168 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088295358 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076527122 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089821278 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072246473 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073094179 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08751325 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07092959 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089941334 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070306624 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087398811 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071244394 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087992398 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073189078 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087694875 seconds)
  done (took 2.372422115 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079834003 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068931582 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.109320231 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067848832 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086434374 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071833909 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091061075 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078646674 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087801642 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069801504 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094239457 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071583616 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.197041524 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069522904 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070872945 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085321431 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071055438 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085627832 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078116562 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090991328 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073992865 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094190595 seconds)
  done (took 2.651009307 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083314873 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07006964 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104581712 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088537871 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065177281 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067548173 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09252541 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069057752 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092095818 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.07061573 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086194006 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067205562 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07477157 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085710583 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074040809 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085821365 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070918908 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085469228 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071100857 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064692725 seconds)
  done (took 2.329415487 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091279606 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086784281 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070775267 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096382548 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070498295 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087962386 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079535878 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086615842 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070143434 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111967934 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070982539 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087420121 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079652954 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09240638 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070261874 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095862616 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07895813 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096158218 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087097284 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070588311 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112528876 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07037894 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096010562 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071223439 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087365468 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07092923 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069946082 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092678664 seconds)
  done (took 3.117159199 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069554158 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069056356 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083625452 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066510701 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066944885 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084093043 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066520917 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066414425 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086485706 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066899305 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085668534 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068571297 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069609709 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085291437 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068870315 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068458153 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085969408 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066523653 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066537397 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083236322 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068451506 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085166335 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068624299 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066778015 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083275171 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06869939 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066471788 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083526607 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068514532 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066261686 seconds)
  done (took 2.967003376 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078966348 seconds)
    (2/2) benchmarking "in"...
    done (took 0.094135731 seconds)
  done (took 0.940655595 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066840554 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083532109 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084630439 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072696142 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091071761 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069214869 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094994799 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074501946 seconds)
  done (took 1.402148439 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08517383 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080773542 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088564687 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.099066148 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080586085 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086247338 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160808229 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088191117 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07632993 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085455529 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083720338 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068208262 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093607136 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069685682 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092728688 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075576782 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066664169 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.09357654 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071717643 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.084992586 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07141079 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097969217 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072434605 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.085784256 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071072075 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.078069295 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098886998 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069990287 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089630223 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07672527 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092649585 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063935934 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069141146 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086753469 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067640322 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.096456872 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084995798 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090626223 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078867941 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088435713 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080410652 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.081713849 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074261315 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07561314 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096577591 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070310737 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087328645 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064477794 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066749887 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088571725 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06503338 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086880458 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065023569 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076147027 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.09010684 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080758826 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085715969 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071243429 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088939092 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073422378 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075867303 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088315523 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07173366 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085897162 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076030349 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091032081 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079354403 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064718549 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.080968879 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068057524 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096705383 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092291258 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092931429 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070114132 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087066237 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067163717 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072912856 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087170488 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075465243 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092862681 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069504515 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09218381 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076769869 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069484882 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088777023 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077921585 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084832252 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071704904 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084226888 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08658747 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.085635929 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066869317 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067002432 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.097810292 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073086174 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.086004674 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067329795 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076262092 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.080993684 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070770811 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087997182 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070603406 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.098148774 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075551568 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092681494 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07983245 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094197351 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069282678 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072500731 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.084201348 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07094114 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085412115 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076480227 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063591312 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089835438 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069716447 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087374324 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078175988 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067228968 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.087160601 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077530364 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09273958 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067733103 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083308654 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072495336 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.069505645 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091055413 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077953222 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.085717481 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065028675 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064288321 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090394785 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069679486 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.09062158 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07518813 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090007246 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064420762 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068131674 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.0917787 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078673347 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086502039 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070434243 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093475882 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071348437 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068096705 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093704121 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072502964 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086117711 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075444824 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087495323 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064949099 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07256434 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089960809 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068576588 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090650745 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073905909 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071272652 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.088207815 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068248231 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.092279325 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070395871 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085917889 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069130419 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068131301 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.098339194 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07164267 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.082809631 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067247244 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094331829 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067920062 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068988625 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086175169 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072232331 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087701923 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067875595 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068896205 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088558125 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081307933 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091529731 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070812302 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092546402 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081509523 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086934977 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071694608 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069256008 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088048273 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070626544 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.096964754 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075800808 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092644605 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072395635 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066218333 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093466047 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077561693 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086116588 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067469836 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068417575 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091000907 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075280769 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090804327 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070959704 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084948496 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070507398 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072374683 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089505546 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069599228 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085885373 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074737489 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086198879 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076821497 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070562191 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098356986 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073790207 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083539886 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074075591 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085592728 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075920617 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064471381 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085177933 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06885167 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.088404422 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068760222 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07206242 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082423443 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076697054 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095989971 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070325921 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068626298 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.087430639 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077019436 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088491811 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074069676 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090124303 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075868849 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080081506 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087035281 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07294667 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097485999 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070237059 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.081626844 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075790413 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067600927 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086771172 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06837184 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085166831 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072863393 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096497815 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076902235 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063633456 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090586993 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067912678 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086078369 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065901363 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073615476 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089729754 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070551979 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093379815 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07118969 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069638997 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091020247 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069080672 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.088052359 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070556526 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090251768 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070780486 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07283805 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08750345 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072850384 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086590726 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068339878 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070790891 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.087793769 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070038881 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093192419 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070085923 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069966906 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090270497 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071208543 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08822062 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070066592 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068531142 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09129245 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070721812 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.088098585 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072111545 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064300086 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094991582 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069735556 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095945339 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069906289 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083949334 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075608793 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071497989 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.092488614 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070680423 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.088914358 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070814099 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.087520941 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07342609 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076460001 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085284468 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080866762 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095840766 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070688535 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090119913 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070194318 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071362153 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086408568 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070692904 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.08793939 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070761578 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069264033 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.09226808 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072295856 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087529939 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071232339 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.07100684 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.088497429 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071179814 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.081675475 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069500729 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069832175 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.087989191 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079911876 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.088127322 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070154243 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.086008823 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071825754 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068955525 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.084249941 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.078234965 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097346088 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070634479 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095302309 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069583578 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088538357 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081178472 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066513267 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.086348398 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067849036 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08522616 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077299253 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070241411 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.098451542 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069910971 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086771659 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067525085 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070950419 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.086106836 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064828056 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085209581 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074139143 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068394166 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087371899 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.07124301 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090434181 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071193613 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097744308 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069292452 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070643648 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087894622 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067743594 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086117942 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069319866 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073594026 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.089410819 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068347939 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067466842 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087006232 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071051197 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089691758 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070387447 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070532257 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095338278 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069972746 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090384532 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073726152 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082486648 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072654576 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069384093 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08804689 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068876161 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091732562 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073810483 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070182163 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.097772429 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069582366 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088597623 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070677297 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085451913 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069597774 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069891781 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.088232607 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069520581 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08940042 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078274032 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067048017 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.09099453 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069764486 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088366848 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077905253 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08882882 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073157438 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077333475 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087637375 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071860725 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095901594 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074277528 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09133473 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071448318 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071113178 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094953744 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068998651 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094380106 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070328373 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.089370849 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.07184481 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068502096 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088278817 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070375995 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068635398 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095439624 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070922254 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087993239 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069743095 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085838794 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070849667 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073304057 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095889277 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072333832 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091449896 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066206377 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066656072 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088912098 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068554183 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08994169 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073920095 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093329104 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072664328 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070332876 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086848485 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079567811 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094869533 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074046651 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06739149 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091936395 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070561321 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091113043 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071984653 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068938437 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090486406 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073900577 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089937114 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069829321 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094893217 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074583782 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070760828 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08998941 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071105626 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.087823801 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066036998 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070736014 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090449878 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075456795 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.090982219 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070603524 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099556602 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068757519 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070609165 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091766184 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070021439 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092187985 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066004016 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070823346 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089640564 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071270073 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083667633 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069874582 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06802982 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090733777 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069910705 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.084283413 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080855193 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09777945 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074127995 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068502865 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086715577 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065684239 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.083861161 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06957488 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071585298 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090007749 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080460926 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087169311 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069338047 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064975923 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088715446 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073008438 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091808346 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067920623 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065126589 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087310338 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073139172 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093683582 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068558105 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068969118 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092166841 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072504515 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.086225382 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074200876 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.08446235 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07361827 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10160734 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070964265 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070939875 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094687433 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078818759 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.089520256 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065818463 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071585599 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092032641 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070556998 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08899731 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.07163214 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10427144 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073645866 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087291874 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068842939 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072537017 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087828991 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079610965 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089708379 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.07154892 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074206779 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090968134 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079444497 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091552088 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078419935 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091564258 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074149066 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087230437 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070971709 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068841531 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087414113 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071788312 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089526216 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075260827 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095979325 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069944514 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079990019 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098873398 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072556458 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.085738206 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.07014705 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06959901 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.084695454 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071613402 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.087754738 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.069755589 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067691478 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087836869 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071119201 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094721042 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.072921376 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.07062405 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089069373 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065514379 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09082872 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.074219904 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07033624 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085814804 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070664485 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089658774 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074993173 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091876428 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.0684747 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072433802 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.090605085 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071033294 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065755587 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095615093 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06958248 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091829121 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069972165 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070573548 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.090240937 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075075342 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094048854 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071839719 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091026436 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.079338426 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091490583 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068067978 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067967494 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093996886 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069793425 seconds)
  done (took 48.144563515 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112112717 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08641007 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065905291 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084889428 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078391026 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085411862 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066355238 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066122635 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085361967 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069838036 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084398083 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06583589 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093217109 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091269878 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098311416 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089134444 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066316295 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066766689 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084234396 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066665826 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094511086 seconds)
  done (took 2.514703163 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.090902916 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.105093446 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081248136 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103699438 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094437258 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081887598 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100277531 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081214065 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103498759 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096346029 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085841858 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100156207 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.078015852 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.096355561 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077708152 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098353309 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103538957 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076346234 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.100389587 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081292341 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098489701 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081168265 seconds)
  done (took 2.825246775 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071270457 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070421394 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09025929 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06549017 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069387586 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.084213335 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.074348646 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.086545318 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.074227907 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.076478255 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.087553769 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069331422 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08978414 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068568485 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068933698 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086896623 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.138087626 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.074378024 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088475306 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071828018 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065188838 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091021353 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066194422 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.084071919 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068890469 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073899791 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.090063031 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068220427 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087846544 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068095797 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069734609 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.086694982 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071119866 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069438718 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087528942 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069543947 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08820692 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070578468 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064929195 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.086632481 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070890898 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065517715 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089187654 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070681921 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086683135 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067954809 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070757021 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088359477 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065563428 seconds)
  done (took 4.625411644 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089467571 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.145276098 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092325138 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127305747 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.086044456 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.097803299 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074046087 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12740706 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.087668417 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.069529959 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.107100997 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.086244326 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091003032 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.075339478 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.095429336 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071092436 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.09084729 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070139734 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.093158373 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070207207 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.093855348 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07740078 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10464454 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.084256509 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09386081 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069504935 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089153131 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074632662 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.103266356 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.094421474 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.075386049 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094967743 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08606158 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.094599473 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069452279 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091678308 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08760236 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.090211457 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.073034503 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.086561762 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072808979 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093532882 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077867108 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10630714 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070715535 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.094315476 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070984551 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.085984147 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.08433016 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091705263 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.078436024 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.105167509 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073651716 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089987391 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.075127467 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.105844805 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088068929 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068563182 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072855616 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.103710498 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.086773705 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074296186 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.103537892 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.07220858 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096957408 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085793245 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.095070361 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074671133 seconds)
  done (took 6.925094035 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079714925 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095219049 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08641667 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104582073 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096290102 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.078021649 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095804817 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076685901 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095224863 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08207 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096182883 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119164595 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072366604 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098767357 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076928961 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096538911 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076300738 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096030004 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095026995 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07708779 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.096065695 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085359377 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096146041 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.105487013 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106704789 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091174335 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076510998 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095542207 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104358312 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076701758 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108131314 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077114459 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096041017 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104888378 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.089563545 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.096018976 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06917913 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095678731 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077042709 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095236935 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0716025 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104730174 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095714652 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072102509 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09542552 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0763365 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104918406 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.108368343 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080628391 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100873101 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076781116 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10527827 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096187609 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07744244 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104332187 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.129740073 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086018454 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104627169 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096035996 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085629683 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105067968 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.113329811 seconds)
  done (took 6.550139547 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092103072 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098954604 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.10227313 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06560011 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067817944 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09417472 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068078809 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087394963 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08071468 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09867817 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082370638 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092947735 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078250523 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100906208 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093820525 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078251752 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093461727 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074942106 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098598087 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074711112 seconds)
  done (took 2.543916011 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080264762 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10774213 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071560552 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096760931 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073577865 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075876903 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093039181 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073693258 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090784545 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073547222 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100994701 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082127846 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090676589 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.077293052 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100514842 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.077239733 seconds)
  done (took 2.189836325 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084203778 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.101926396 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.086131403 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.09073296 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069516396 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.087042211 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.071202149 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065671114 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087404893 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085701959 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.091525331 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072764613 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.090472299 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.070279976 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066835882 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093565566 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.067864826 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.088407392 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.0710444 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.10451775 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.082298242 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.089423972 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071421675 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.092513885 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071743476 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095302873 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071263916 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068343166 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.089194678 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.071585004 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090544432 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.079108598 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.087470164 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.069726123 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068517703 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.088750782 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.07089696 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090979556 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073869075 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089856783 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.069982644 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069904055 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.090091312 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071914421 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.086793676 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.072044931 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.086465276 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.078042027 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068388089 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090405683 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070555896 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.093382079 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.07192782 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.100527984 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.075388005 seconds)
  done (took 5.28257566 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08458584 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074316827 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086364518 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068879889 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093686714 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.073227848 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073698191 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092568816 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072600448 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087799714 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073094688 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093553569 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07313351 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073902337 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092518383 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074146795 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086204812 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073179135 seconds)
  done (took 2.275475184 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076493642 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070518624 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098340253 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071314027 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.090447182 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074335666 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066820556 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089677124 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070223334 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090124827 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070692824 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073495246 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089519888 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073596719 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090507517 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071815573 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072851649 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088868849 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072032832 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086183502 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07340569 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069254923 seconds)
  done (took 2.561756033 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.076208401 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.097648431 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.170343696 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.112814308 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08643693 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.104383402 seconds)
  done (took 1.47901563 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095626436 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105292137 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071830212 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112468573 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079959493 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092948213 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073413236 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092277442 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082610044 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107120096 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07302782 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102837144 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101995041 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085558156 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098719827 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079188653 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092635815 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072732341 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091064827 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112464011 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07467767 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102880766 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073677703 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09192418 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073707075 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101669206 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101857211 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087544429 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092629706 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082663995 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098303799 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072303856 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102136317 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10609239 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074692045 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101559504 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073108666 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111195832 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098143415 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082251962 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09362511 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079743579 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101993262 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078043944 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102640901 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09288045 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079029844 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093099523 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073834571 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119084986 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098206746 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082409446 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099275781 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082567188 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103516596 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118981523 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106993944 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082740933 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099924873 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107402878 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083458391 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099262489 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081887629 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107075788 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098589171 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08208841 seconds)
  done (took 6.907946675 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088008634 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110426024 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073599654 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107355851 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10258069 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073352362 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092485977 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07360112 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09200035 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073531983 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135566961 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073222234 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102415043 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101931299 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074512283 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093088588 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074301702 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101393405 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07263379 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119371933 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0931762 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082525354 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10171609 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101605403 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087309902 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09877369 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073414508 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093628773 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073227749 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093266441 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099166814 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07336661 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101558321 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07283268 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101281125 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073737147 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093167783 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078262019 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092960399 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079186448 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102435566 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111083689 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073893653 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093123214 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107811177 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073984223 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092269227 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073600535 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09245021 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07247315 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107695656 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087003354 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10739882 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102485818 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074133381 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093055015 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073249686 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092788976 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073865701 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099003214 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102639415 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074060881 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119361209 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073361516 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09339472 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102207502 seconds)
  done (took 6.808801757 seconds)
done (took 132.504578518 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205880476 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.1884492 seconds)
  done (took 1.226477222 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073211202 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101662889 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10285386 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132073427 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092348238 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104616574 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.12362149 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084191284 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071098584 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092442271 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071981307 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.092928847 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136457638 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071316969 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091793715 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073656224 seconds)
  done (took 2.355366312 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.108287288 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.204905721 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.115790723 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06998067 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104864452 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.083117231 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.090682818 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081124019 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100224543 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.07066605 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10285532 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.081023455 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069339466 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.101570932 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.079888219 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.103594981 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069900237 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.104079207 seconds)
  done (took 2.585241229 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098884842 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.114022012 seconds)
  done (took 1.053293163 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.208427186 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.128097275 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.213628144 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.483789859 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.248797622 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.296728793 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.183042159 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.180981306 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.150468276 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.17886945 seconds)
  done (took 3.113111367 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103225716 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178504956 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.325147165 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.145062398 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.091519645 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.122836054 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.145525135 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.114501312 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087941405 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.107370139 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08570133 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.102015802 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.122749854 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.080256629 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099235627 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.082276732 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126948219 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078797018 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099508933 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.081167445 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.123060354 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071453326 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.099857853 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.078440354 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.103056461 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083874453 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.090449826 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070686237 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080076631 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.099923102 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082957196 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12035135 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.103406701 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.138536932 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10714605 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.139337952 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.083123692 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.097854091 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080630622 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097643404 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.083351153 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103220936 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.088893538 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.102172823 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.07106571 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.101812196 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071240863 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070556181 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.105210581 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.082489491 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.105929123 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10344871 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.138189294 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.082323337 seconds)
  done (took 6.487734439 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.769460964 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.1409459 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076416673 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.84175654 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120609916 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08802574 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.764070936 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098793011 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.216496692 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.79655862 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119052504 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.082741982 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.216009801 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.223928923 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.946842931 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.298038366 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.659244772 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.110628329 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.114132108 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.141972066 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.148577061 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.188386474 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.15870466 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.416280689 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.079641244 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098115126 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.144276311 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103866738 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.148750039 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.089634315 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10078049 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.165576208 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.237386635 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.190110869 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.082033595 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.096523881 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075953104 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.156785784 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.250801501 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.179351368 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.165744976 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094191868 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075695378 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.14767061 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.139370554 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09454645 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.150962758 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.162634038 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.15537949 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.100606188 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.082990862 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.171138382 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.149143217 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.152758943 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.107170487 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287597267 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.297097575 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073763483 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127656412 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111780712 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.247055244 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087930081 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.211869809 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149286494 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.177453154 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.096957269 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.736398164 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.177764655 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075867678 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.101243047 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106945668 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102695941 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.147414792 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.153044237 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.376371691 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.153083657 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.099983558 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075579048 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205847799 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.111660563 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074132568 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.148409263 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102659359 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130534376 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.154425087 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.153982692 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.177115965 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.223397368 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.152617364 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.148339088 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.100627987 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133720681 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.080741838 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.199006722 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.206694228 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.149819379 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.193870705 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.171009538 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.150843575 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.156437247 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10407402 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.161044875 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128406595 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.087153449 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147188659 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.20491835 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.131598436 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.109168946 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.079474906 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.147417775 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.132977193 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.112826107 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.149906523 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.157498532 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.442186705 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.178211136 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07286141 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113034225 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148157351 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.150729882 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080118965 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246393601 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130952361 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.155823659 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129391581 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071911391 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128428681 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.170988963 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.086309575 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131067795 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.147680182 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104015983 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.224299201 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20356228 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.08506365 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22739145 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.146598171 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.102983261 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.158682639 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129137558 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.153855762 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104408611 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.148637122 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.079842045 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76774836 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.151760333 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129749121 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100111903 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.150880241 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097288434 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087654383 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.110436822 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071316577 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.760188468 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112977466 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.086404567 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.110394901 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.080738784 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130119288 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14383518 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.101714209 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.148769282 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.216211802 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.082883437 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126427508 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.110454078 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.148708043 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07987347 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.111141978 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.111044399 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.088719766 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130682681 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099789409 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088755226 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.156129075 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.171920623 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.18551982 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574871065 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.076216488 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.110312838 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.212954906 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075895439 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.27524321 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146008576 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.18768921 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.17258876 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08565013 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.294974964 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.152928662 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.173995066 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.113411772 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.161212821 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072588737 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.143995125 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.152354264 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.097424447 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.08061141 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.171416047 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.155543654 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.152910778 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.950016683 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.076015165 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.211592027 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.094436432 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.159488254 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07956439 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10459062 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.283309641 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.076174962 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.15629869 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.172022245 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077900466 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.109904697 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.679068004 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.110753213 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.148284668 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.081523245 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206745052 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.150649888 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.143802456 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.168343069 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.082859668 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.14835889 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.192778683 seconds)
  done (took 42.312351158 seconds)
done (took 59.966340265 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.288026849 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.200050163 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.263897935 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.153008802 seconds)
  done (took 1.849830326 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.153829419 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.111253868 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.124399184 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.09148269 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.110439816 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091374966 seconds)
  done (took 1.552258952 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.437106706 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.286991178 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.247988956 seconds)
  done (took 1.843788553 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.311340687 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.241005659 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465516319 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.311610975 seconds)
  done (took 2.302543535 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.200424286 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.121480245 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.094210576 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.089393638 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.192042962 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251116954 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.133800314 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.196061794 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083385659 seconds)
  done (took 2.274676776 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.210003594 seconds)
done (took 10.898664662 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.286929283 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.208050318 seconds)
    (3/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.233601681 seconds)
    (4/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.222368501 seconds)
    (5/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.268375107 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.10347003 seconds)
    (7/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.136329861 seconds)
    (8/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.076930943 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.099571691 seconds)
    (10/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.166710453 seconds)
    (11/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.095789128 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.105471007 seconds)
    (13/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.186579242 seconds)
    (14/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.136050794 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.209204681 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.080169096 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.136685665 seconds)
    (18/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.206294399 seconds)
    (19/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.179179553 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.221862039 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.180976242 seconds)
    (22/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.21037868 seconds)
    (23/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072415188 seconds)
    (24/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.101729943 seconds)
    (25/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.078831955 seconds)
    (26/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.097655027 seconds)
    (27/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.148608406 seconds)
    (28/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.121943071 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.176401363 seconds)
    (30/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074698799 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.171373891 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.100395472 seconds)
    (33/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169753997 seconds)
    (34/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.180505698 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.056109508 seconds)
    (36/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.10923645 seconds)
    (37/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.215650631 seconds)
    (38/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.084670371 seconds)
    (39/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.108540095 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.101579021 seconds)
    (41/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.102856754 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.168327994 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.138409571 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077293877 seconds)
    (45/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.101209306 seconds)
    (46/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.079741338 seconds)
    (47/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.102650471 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.098382993 seconds)
    (49/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.10371723 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.137326573 seconds)
    (51/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.098022592 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.093509361 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.162429863 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072392936 seconds)
    (55/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.102764378 seconds)
    (56/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.153214909 seconds)
    (57/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.080637024 seconds)
    (58/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.083095333 seconds)
    (59/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.174605702 seconds)
    (60/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097329181 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.110517783 seconds)
    (62/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.169105092 seconds)
    (63/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.087416944 seconds)
    (64/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.167202336 seconds)
    (65/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.080301211 seconds)
    (66/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.100097835 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13110519 seconds)
    (68/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.134936536 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.080638905 seconds)
    (70/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.102573347 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144749596 seconds)
    (72/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.140250486 seconds)
    (73/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094099381 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.176438438 seconds)
    (75/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.114245158 seconds)
    (76/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.056716608 seconds)
    (77/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.101510652 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.157115554 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 0.093436031 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.149751704 seconds)
    (81/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104138422 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.071111752 seconds)
    (83/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.078700192 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.197439739 seconds)
    (85/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079237519 seconds)
    (86/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.081112418 seconds)
    (87/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075658334 seconds)
    (88/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.173706915 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.128570187 seconds)
    (90/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07842574 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.180100096 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.071412524 seconds)
    (93/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.186686041 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.097904751 seconds)
    (95/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.056869458 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.077608506 seconds)
    (97/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084932137 seconds)
    (98/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.161626787 seconds)
    (99/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.106772585 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.081645041 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.128975685 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08728321 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.092785077 seconds)
    (104/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.143905404 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.094283917 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.099267281 seconds)
    (107/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.195686914 seconds)
    (108/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.224036522 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.119923244 seconds)
    (110/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.057355418 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09524845 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.174246914 seconds)
    (113/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076116632 seconds)
    (114/309) benchmarking ("sort", Int8, false)...
    done (took 0.171026214 seconds)
    (115/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.120744333 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.056314469 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093491936 seconds)
    (118/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.073461526 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.083812805 seconds)
    (120/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.080025047 seconds)
    (121/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.139623662 seconds)
    (122/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.101042552 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.165432406 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.080536138 seconds)
    (125/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082216105 seconds)
    (126/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.163912896 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121812105 seconds)
    (128/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.143842341 seconds)
    (129/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.186608231 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.11323211 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.076990711 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.070408178 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.101346915 seconds)
    (134/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.106582333 seconds)
    (135/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.088050674 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.153360089 seconds)
    (137/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.208111944 seconds)
    (138/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.138430391 seconds)
    (139/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.079688296 seconds)
    (140/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.178852736 seconds)
    (141/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078931333 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.101902872 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071802406 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.094653223 seconds)
    (145/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.077456556 seconds)
    (146/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.143871121 seconds)
    (147/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077947556 seconds)
    (148/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.056335452 seconds)
    (149/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099762059 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070566851 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079482535 seconds)
    (152/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.175849781 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.056766979 seconds)
    (154/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.09558932 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.077671508 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.081553132 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.121702764 seconds)
    (158/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.070573847 seconds)
    (159/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.137798703 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104397532 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.320305384 seconds)
    (162/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.057028833 seconds)
    (163/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.074508653 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.125096667 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.070334531 seconds)
    (166/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.079253875 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.057702539 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.070611634 seconds)
    (169/309) benchmarking ("sort", BigInt, false)...
    done (took 0.238490772 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.097780568 seconds)
    (171/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.056813623 seconds)
    (172/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079590629 seconds)
    (173/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.073015155 seconds)
    (174/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.094498488 seconds)
    (175/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.144548 seconds)
    (176/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.071295465 seconds)
    (177/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.107262664 seconds)
    (178/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078252236 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.057478277 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.150603996 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.057155204 seconds)
    (182/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.104407864 seconds)
    (183/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.0722661 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.196802927 seconds)
    (185/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.146738643 seconds)
    (186/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06649199 seconds)
    (187/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.071071656 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.100236634 seconds)
    (189/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.114241051 seconds)
    (190/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.06641166 seconds)
    (191/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.081214745 seconds)
    (192/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076898058 seconds)
    (193/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.182795068 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.172546047 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.101414544 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.102277989 seconds)
    (197/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.078703035 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.094435002 seconds)
    (199/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.093713676 seconds)
    (200/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078487931 seconds)
    (201/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.055392952 seconds)
    (202/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.079175597 seconds)
    (203/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.056153227 seconds)
    (204/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071014869 seconds)
    (205/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.200467357 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.144003752 seconds)
    (207/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.057666912 seconds)
    (208/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09981086 seconds)
    (209/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.105029863 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069765176 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.093785992 seconds)
    (212/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.056926988 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070864141 seconds)
    (214/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.19840928 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.094432168 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.071065756 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099598207 seconds)
    (218/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093481283 seconds)
    (219/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.056435534 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069938032 seconds)
    (221/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093500712 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.076278809 seconds)
    (223/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.094341476 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080111348 seconds)
    (225/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.164979976 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078574058 seconds)
    (227/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073279406 seconds)
    (228/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.099384602 seconds)
    (229/309) benchmarking ("sort", Float64, false)...
    done (took 0.130830846 seconds)
    (230/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102184208 seconds)
    (231/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076767049 seconds)
    (232/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.067778741 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.081019666 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.098427649 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.123448945 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.056462856 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.095399169 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.099454116 seconds)
    (239/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.057546263 seconds)
    (240/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.055433601 seconds)
    (241/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093413403 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.069959162 seconds)
    (243/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.106618118 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.057113509 seconds)
    (245/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.080291923 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.078271734 seconds)
    (247/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.056710554 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.169244374 seconds)
    (249/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.070980456 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070596796 seconds)
    (251/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.07938869 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.108986059 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.117460791 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091015603 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.160868928 seconds)
    (256/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.057063755 seconds)
    (257/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070457963 seconds)
    (258/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098955649 seconds)
    (259/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.072231452 seconds)
    (260/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.0556716 seconds)
    (261/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.17434886 seconds)
    (262/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.057179608 seconds)
    (263/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.078974291 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070789114 seconds)
    (265/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.106467624 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097458576 seconds)
    (267/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.118444183 seconds)
    (268/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072244913 seconds)
    (269/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070572568 seconds)
    (270/309) benchmarking ("sort", Float32, false)...
    done (took 0.157421435 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077121362 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.1204261 seconds)
    (273/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.056283427 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.199961215 seconds)
    (275/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.056401741 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.103485591 seconds)
    (277/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.056754948 seconds)
    (278/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.056438522 seconds)
    (279/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.110657111 seconds)
    (280/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066511697 seconds)
    (281/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.058312462 seconds)
    (282/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.100652995 seconds)
    (283/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.057511917 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.078490484 seconds)
    (285/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.080433749 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069458832 seconds)
    (287/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.056849622 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.09303104 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.079176721 seconds)
    (290/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070673759 seconds)
    (291/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.089922479 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.208659066 seconds)
    (293/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.058658953 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110825776 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.101500237 seconds)
    (296/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072219824 seconds)
    (297/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.166003568 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.071247309 seconds)
    (299/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.058090482 seconds)
    (300/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.096594995 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05707 seconds)
    (302/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.120128939 seconds)
    (303/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.056652028 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076464336 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093993959 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.068521947 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.071482161 seconds)
    (308/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.080819128 seconds)
    (309/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.057414327 seconds)
  done (took 34.780624042 seconds)
done (took 35.644252764 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08703368 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122092414 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080749577 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.122556508 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086838588 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.107531786 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078883859 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.107685206 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086425852 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.110889031 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.085361192 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05959312 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103482868 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080962586 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103693665 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099395105 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106822458 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078681055 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.101637693 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070132886 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.079491231 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.093368593 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073047161 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058765375 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105971389 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077565089 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.100785776 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080524649 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070594249 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.093901535 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074233854 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.100811648 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.07136661 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.084251672 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.10064238 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079062976 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.103674275 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082891155 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072687084 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.094046056 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07921403 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.093536124 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077965844 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078939927 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.100043776 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076997384 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.079907099 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.109162595 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121752849 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07353776 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.079428403 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.105703875 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.083473371 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.100955014 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075451859 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104846546 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076160879 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098703638 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.105230628 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073919442 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.104528209 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080690005 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.076413947 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.102825699 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.080073055 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.104445363 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081922273 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.09915335 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081499556 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076750662 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.094696624 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079348496 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.097264949 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.071389012 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082222285 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.105194842 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.070174428 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077438983 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.101451119 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07793369 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.093426435 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073781539 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073043258 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.100302873 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073200266 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.059690473 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.098267416 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.077212202 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070209938 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.103869483 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076688301 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.101171697 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.073560815 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.082494217 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.093857522 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076700512 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.094394087 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.072632661 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.073364959 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097649876 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071791549 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073361585 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.103431856 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072985651 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077843424 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.109557571 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.071562151 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.101106756 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070451848 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070634014 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.111065913 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.081433229 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.094596684 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073723362 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.070909884 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.102013576 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.070933692 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094497797 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.071838238 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.071144693 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.100231727 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.071266662 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073088955 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.101529144 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.086004085 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.097059718 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.074734882 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073407363 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.094573341 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.076741633 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.071630764 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.09450941 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.07294553 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.067945838 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096896906 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.072046069 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.100905223 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074249909 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.079577919 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.095657977 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.081177985 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.098011113 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.077333808 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07623172 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.093505788 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.064221885 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073869327 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095925488 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.073118221 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.070786761 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.095934487 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071133806 seconds)
done (took 14.014269901 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071441984 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.180845812 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.134818615 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.103372686 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.118325199 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.071846196 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.106649284 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.136683605 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073215428 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.136214043 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09484368 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.114851955 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146939214 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070670056 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071602711 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.098728032 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.073296656 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.119636582 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.110096993 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.116071681 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150929243 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.07091255 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129198389 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.097375303 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119389822 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125243422 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072403858 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.076326575 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.098739462 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.133908041 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092100044 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074945013 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.095223859 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.10857439 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.125009059 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.116306935 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.072119962 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.115025113 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071607994 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.072178385 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.124310963 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131415489 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.088552849 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.112692528 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075281158 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.097299979 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.0734186 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.116593774 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098848484 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.111381738 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.119244213 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.145040993 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.0759992 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.11316845 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.071145188 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118237843 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.089258221 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.097772627 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.072902766 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074907603 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.094374802 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.076165394 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.119669236 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.101348564 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.099810573 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.089649754 seconds)
  done (took 7.676603144 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090659423 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.122588413 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.090938971 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115201806 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071444132 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.072442869 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.095499418 seconds)
  done (took 1.590227365 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072999771 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.094764575 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119788691 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.095809494 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.116213271 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.094074734 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106556033 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.072632923 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.113399675 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073604488 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11821098 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112740944 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.097979604 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.080404809 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.121649244 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.073170946 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.096949048 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.096215206 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075488935 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.120598368 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07562182 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.117744883 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074805166 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.0720144 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112113838 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.073038617 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146877145 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077404519 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.097884885 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075640619 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071293609 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.148422061 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.111084729 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.083481336 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096094073 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088841669 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.087864809 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094304623 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.090224242 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.101811772 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.088776494 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.09639798 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.074261563 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.07125347 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.101551804 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.084687414 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.073703302 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.097257319 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075549091 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.117360422 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.073603512 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110997773 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073539438 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076827658 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.098455077 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078361566 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105820447 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073681773 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.093809707 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.098190325 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091439968 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114505836 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.087856083 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.114244183 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075824996 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087007696 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.112261647 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075431035 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097899656 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.076066763 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.114036452 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070728428 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07407128 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.108780443 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074992806 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.121444164 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.097660685 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097930458 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083584197 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073059166 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.097211041 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072990966 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.121216711 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077216819 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072776474 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101193896 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076379864 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070156729 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.096375179 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.076709433 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.094443484 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074985501 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07640027 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.096869954 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075534938 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.114875387 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07401135 seconds)
  done (took 9.863654355 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.074117998 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07364482 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.099142356 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073615833 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.074744429 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097661984 seconds)
  done (took 1.436346203 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.105477614 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.100167601 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.088072222 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.102863876 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.114053331 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.113163898 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.089445738 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113937403 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.091134355 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.110630412 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.089319535 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.113440884 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095478925 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.103403342 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.089253546 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.10315433 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.089590385 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10718791 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.085003764 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104710012 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.094682798 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.104133286 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080203727 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.114331179 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077368384 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.102995233 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.084814743 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.109906067 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.086545915 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113522961 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.0801081 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077034551 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.1023388 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112481489 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.089300538 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.101019614 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079542842 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077827527 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.108266699 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076703435 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.113595062 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080003899 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.1094581 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077933722 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113421693 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078578006 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.101525749 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083500936 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.112563266 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077881804 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.101688949 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.079097249 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076001101 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.102322242 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078283712 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114537697 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07751861 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.113297035 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.079435698 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.102095982 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.076354553 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.101130903 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.089355564 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.100301746 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08804684 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.101641334 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078387448 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.103761071 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080322226 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.103440238 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078569387 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.076108182 seconds)
  done (took 7.776690521 seconds)
done (took 29.265040719 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.671291691 seconds)
  done (took 1.60705995 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.815767178 seconds)
  done (took 1.758285305 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.809301389 seconds)
  done (took 17.756310339 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.66151587 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.844122768 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.840142845 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.164654962 seconds)
  done (took 3.452288165 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.905110236 seconds)
  done (took 1.867918038 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.251962745 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261153128 seconds)
  done (took 1.460207001 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.740087521 seconds)
  done (took 1.692085935 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.328480221 seconds)
  done (took 2.274528118 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.348978952 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.193976038 seconds)
  done (took 1.498263675 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.541225801 seconds)
  done (took 1.496769604 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.741475415 seconds)
  done (took 7.702985368 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239404924 seconds)
  done (took 1.20727 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.278856249 seconds)
  done (took 1.237079532 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.493349245 seconds)
  done (took 4.453886317 seconds)
done (took 50.406091432 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084485757 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.087626346 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.1120689 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084876282 seconds)
  done (took 1.324200544 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.084864882 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.079142288 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.108003553 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078598168 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.108937801 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.079125681 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.105463372 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.084839873 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078318949 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.105356802 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.079658374 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.103144385 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.082005262 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10497167 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.077342091 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.081921932 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.107605769 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.0790246 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.106973902 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.079491026 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.101103571 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.081863059 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.082323758 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.102668734 seconds)
  done (took 3.151045335 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084208388 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.079650097 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.105228004 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.078535275 seconds)
  done (took 1.314533535 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082934116 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.123511506 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.096995303 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.108245009 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.100827626 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.118737557 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.075865122 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.075649171 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.102436078 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082794336 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.098299948 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.106518486 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.120086904 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083228831 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.109420599 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.072487477 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.074792179 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.119544914 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083324834 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.108232014 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.076608875 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.10747151 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.074461648 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.121416178 seconds)
  done (took 3.293378641 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083353258 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.134066402 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085553321 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095271859 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.124162909 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.071039351 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.107444708 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096909214 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.158173548 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.071034057 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.101487881 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071555135 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.102613595 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.071924206 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082998934 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.141426253 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.143837392 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.075270701 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.104526159 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.096880516 seconds)
  done (took 2.987831593 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.081878108 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075971994 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095849962 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.076069187 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082427566 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.10389075 seconds)
  done (took 1.490826604 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.074914959 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073224487 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.097543641 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.073493608 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077709754 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09861075 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.073048323 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072919185 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.098949166 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072936987 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072619042 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.096960065 seconds)
  done (took 1.953075025 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.475365499 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.074977081 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.099634413 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.07212359 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076434033 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09793879 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.088079055 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.074659565 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.122699314 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072969628 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.097822368 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.075363907 seconds)
  done (took 2.404034997 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2764442 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084103046 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.345055473 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177362061 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148855632 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166570695 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111054592 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149552701 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.21044421 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148148961 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24193202 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21143836 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14243976 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176806213 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121629466 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.141139437 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197129827 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233746861 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138839327 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239302603 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194769296 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166161469 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218291268 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111201851 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143127443 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155062645 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.104089081 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087485139 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247875247 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196387072 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188728419 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146801056 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129557571 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247720271 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236046525 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183143467 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171613383 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117725417 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.144109372 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.199418229 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275966351 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095981641 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233900833 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14400025 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087745186 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209821392 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155922693 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.157156995 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146763851 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121320643 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186286509 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256313549 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.176794695 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121181772 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145791959 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150014042 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.153997133 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111159296 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287197653 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208144536 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170876855 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.102845778 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104779849 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225982939 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16995677 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152532987 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.164782383 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128871294 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209084431 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20188007 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154464207 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214626966 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.169902096 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123148738 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158001252 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184123398 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166032766 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246893387 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165863527 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.079972122 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189055579 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111652213 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116383145 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.17964616 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083814064 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250879235 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134802341 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.150845445 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121912993 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146197113 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145882899 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236014496 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191581073 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140462032 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.098295122 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113058582 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160215476 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214243633 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122568002 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118447777 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185052468 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.086266706 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177755535 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.109103717 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163561653 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.084834072 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190325689 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173998936 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.083602543 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163084633 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137429239 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.137299794 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176119447 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234287718 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097072929 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11716682 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241343057 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167687115 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142014899 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189539391 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229084435 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.109698897 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137844136 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219200064 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260584069 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097294574 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237858413 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140881948 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117068367 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.096451859 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167785147 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149364753 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159299599 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116838976 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.165656724 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242542934 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.081854082 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130784083 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177454778 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115146736 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088904221 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150580357 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135201974 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.13035912 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.109771882 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.143239363 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207957665 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166134884 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142814982 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16539792 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134944094 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235328541 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097760584 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.140250128 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139469488 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.076520159 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.202441607 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206811069 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113123894 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214793655 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.193333428 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113432582 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15720908 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117764804 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181538846 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112871829 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.078688189 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210117302 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122738452 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146295254 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.224462479 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139224097 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.168157485 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163508058 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173046487 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172659386 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.199845291 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115855666 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.121945843 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151280422 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164827611 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.107341913 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.103782144 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.11785806 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1413272 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129348399 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092134273 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211813169 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168048158 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105674192 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149931286 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132922194 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218315165 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.084723708 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170882957 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.157893896 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130292832 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.226398228 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204037084 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200996336 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109739157 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215155377 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.077937182 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106677899 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09806139 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194429786 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092126019 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117887648 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154983289 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192989898 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167609484 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204646611 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120729247 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187801562 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202340115 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07721574 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.152375364 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219981096 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164738585 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.14295153 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119900696 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.134597652 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188910018 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141263311 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263764455 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153661664 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162115697 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222873534 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.139284722 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087818945 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140414673 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179390869 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141614698 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22312737 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136107758 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097436043 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149340912 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.115727984 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14173373 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168619526 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158060209 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17635603 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155479522 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199782734 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085031205 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153894124 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162195131 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160241693 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.097257226 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158981761 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237171784 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102957409 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183289462 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200799634 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113049507 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134704684 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251776879 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215979776 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119357295 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146378831 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161036653 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171256934 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158792649 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182710742 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146554132 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176104719 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14861348 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.119385098 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096528286 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134698199 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144381578 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.130939251 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.15224634 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.156062706 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.102486489 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198589147 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150287906 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146958764 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157312365 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.106989154 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.126384764 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10586935 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25010331 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161287267 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249779626 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.136946787 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.221441575 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216048993 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109514936 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085987231 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.114896272 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183024112 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119233967 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173464788 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.131758963 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114572276 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19317685 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18789591 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131267433 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.075796343 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147114697 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174516822 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148286712 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134257246 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.142428125 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210113026 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140090071 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113695144 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164262627 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114129724 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139879722 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252395308 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.094388611 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106440475 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109241572 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089906877 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170484834 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229565897 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.117878299 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.138405223 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15708227 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160804484 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196943674 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109330534 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133164422 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148833036 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191689964 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19553722 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.098721341 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15166335 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171166905 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230210528 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143249343 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.13063296 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246739066 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201470464 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.240531578 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.124439186 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154743444 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154584206 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12294943 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2133419 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117581819 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215458954 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118387056 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17879842 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140328193 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129091737 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168543198 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.13263129 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124770175 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211421929 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1586223 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116792056 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086934144 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151736621 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161577887 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139229574 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.108595105 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180866197 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.106638516 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180439856 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242074871 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089514582 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144505441 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132291117 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089884153 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14368756 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140504962 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122403116 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.129069778 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245831408 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128441673 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223624609 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185068955 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153824824 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207669048 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111172846 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.672127916 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.114190916 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20047689 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183022667 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256545221 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107887004 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157531165 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148004177 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161933115 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213196883 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143998756 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.215125245 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175208653 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.161306466 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086547769 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139316485 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148687742 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.126220826 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145040218 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154052901 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15497407 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136835941 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.160884502 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169075848 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.117205878 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10561224 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232998567 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157137854 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184044264 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210843886 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09387016 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159496061 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212736504 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08728752 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.189360614 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203164728 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146116816 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136388932 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.116419074 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.14440888 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219545642 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.108392244 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236454684 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165174888 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148206971 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153467063 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.161102694 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174896375 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143096655 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164662276 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133259324 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.151441452 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155172197 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120076083 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.086214277 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142904228 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151761897 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.135787969 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140195484 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.129814321 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223664147 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.078958816 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131257511 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139087346 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186212072 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257131204 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.125275704 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091508943 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157862709 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151300428 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.155077472 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191412705 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.090741903 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116963154 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.091607423 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.146709629 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.149018948 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152957568 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113052576 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148610179 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243973095 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.119693462 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.233262486 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132475732 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145886038 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.076440575 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.115348539 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132848286 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106658641 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141404615 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134561803 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247625046 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.107424222 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.126871259 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129924203 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.081076289 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118195038 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170606781 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149515945 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161661731 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133169261 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.070757103 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146614503 seconds)
  done (took 76.452819638 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.142160552 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.112304292 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.126920438 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.182032307 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.156026632 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247703897 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.190081569 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233843836 seconds)
  done (took 2.440347919 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.075957765 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.126354986 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.109806586 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.124304468 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.097812991 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.0754504 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.313526945 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.117966162 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072993494 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.124844425 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.128339907 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09978482 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.491593248 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.074982547 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.101073541 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.092532953 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073836748 seconds)
  done (took 3.341773642 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.451004388 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.687059441 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.458639069 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078707564 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.04929246 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.116708832 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.587419712 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.173533222 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.098499653 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.451554215 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.742286074 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.162661325 seconds)
  done (took 18.105156489 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081615246 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075760883 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.117657877 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091435142 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.105652106 seconds)
  done (took 1.517832331 seconds)
done (took 120.727947077 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08665074 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.391353031 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.059504599 seconds)
  done (took 1.531124417 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091485629 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.092535136 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.120072587 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.090994003 seconds)
  done (took 1.45092688 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.08148831 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08252946 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.119791119 seconds)
  done (took 1.336781242 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.303344652 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17742645 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096683283 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.090444106 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083812897 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.112072233 seconds)
  done (took 1.342107256 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.079486123 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.082191905 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.107518686 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.083782965 seconds)
  done (took 1.402290289 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.083194921 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.058920548 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060810234 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.088883783 seconds)
  done (took 1.347149538 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.097837113 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.113831297 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.087840256 seconds)
  done (took 1.353791227 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.116929364 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.12110246 seconds)
  done (took 1.296312889 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.089618676 seconds)
  done (took 1.142085216 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100863772 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.151006219 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.174047293 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.147903403 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.183707151 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.147723067 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.122687187 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.095847173 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.112812611 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.124989402 seconds)
  done (took 2.419361568 seconds)
done (took 16.323981252 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08534539 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.491496974 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.368594306 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12677502 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.676307991 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.390042021 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.022642722 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.128054778 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117514913 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.102247018 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091809227 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681638658 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.976172493 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.420638302 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.988784336 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.424544062 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.683979018 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075014044 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074036181 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101876478 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.007392149 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101484952 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075512107 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101950877 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.670080615 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377578163 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.102009365 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.424839479 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101713534 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077546341 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.361437318 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102304789 seconds)
  done (took 16.578046597 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077889616 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153108603 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.082131983 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091053292 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.105394176 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076065534 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.106619441 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.076605597 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157019806 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074915412 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120679944 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075353378 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105896548 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.076274702 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094322185 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.103260021 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076067135 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102339168 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076317227 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075312356 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.121367984 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074954344 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.102665233 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076051771 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075340477 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114766551 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076217701 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.102379236 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076264579 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076936599 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10600812 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075967178 seconds)
  done (took 4.040620562 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123323837 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.162398625 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.081940868 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137897195 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.150058843 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078038469 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.181475738 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101204996 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.161108488 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.075301787 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119782163 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074686524 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.136241559 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075832991 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122532773 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075356633 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.103254573 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07559293 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074354148 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102737055 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094456845 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.102126749 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076093105 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07486589 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10259991 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088800203 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.102684239 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.078938542 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074710765 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104352171 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078043545 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.103102698 seconds)
  done (took 4.357363005 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.079237955 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.081855795 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.117772928 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.091039155 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.104014199 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.079389068 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.079598318 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.104879573 seconds)
  done (took 1.796437099 seconds)
done (took 27.817463202 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.086332351 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.076565879 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107933869 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088391098 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.106872418 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.086797712 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.074024852 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.109281882 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.082105442 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07908991 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.110835169 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.074105247 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.105384695 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.074960027 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080847069 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.10286093 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.087231494 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.106882483 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.086876816 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.114452894 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.078024808 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.082169939 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.108799447 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.086475462 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.114228831 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.086738387 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.114395382 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.081334447 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.075528101 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.104663268 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.083787961 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.120430956 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.076589749 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.086866253 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.104037416 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.074799082 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.102132646 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.0750886 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086250691 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.110333273 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.077681091 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.110126259 seconds)
  done (took 4.937262102 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.097259615 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09981055 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.121996483 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068851561 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.103986813 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068632553 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.125371783 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.067942402 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.068267442 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.124791066 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.06288455 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063979326 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.094391776 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060403071 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06429532 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.062363499 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.094603331 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.063104317 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063492565 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.092297459 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.067213329 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060370783 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.093991061 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066613121 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.062750404 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.068485831 seconds)
  done (took 3.152120872 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.082308721 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088824153 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.122704928 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132663743 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.142121303 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082402335 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.113211384 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093640038 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.120425617 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.075166964 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.078132396 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.132623347 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092436284 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.109319567 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.077667502 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.118341803 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089749059 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.076534372 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.109856059 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09629677 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.119250314 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085235844 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.124034441 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087024866 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.074194268 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.105097112 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.080917007 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.116708744 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.083328015 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083913818 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.109274752 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.078344174 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.104422033 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.087234933 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.117046326 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.076967801 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093897185 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.113002205 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083947111 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.103732404 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079144724 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.077322252 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.123842204 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.119015366 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.103698432 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.081705541 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.110150941 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.084967111 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.076649015 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.122037531 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083459044 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.103627137 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07824898 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.076447923 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.104486263 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.091039551 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.105103556 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.077973318 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082133777 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.106273972 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.088034548 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.079095232 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.119521745 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.075461035 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.110672415 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.07610846 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074847888 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.102564304 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096818468 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109394719 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116821077 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.10503011 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.076417947 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.111498837 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.082361548 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.081325765 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.103219605 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.090430126 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112660116 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.079240177 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.084556487 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.106670359 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.077347412 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120798125 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.077725871 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.075963186 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.103903754 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.081377264 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.077012465 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.104096428 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088989353 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.103608365 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.078398077 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087303449 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.103179618 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.076146581 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.108831079 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.079558116 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.073573923 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.115609307 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.080736342 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.103722807 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.084342612 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.103308879 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07841477 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084751177 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.107827492 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.074321759 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.078788659 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.109245513 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.075150904 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.106575794 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.078298559 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.076284705 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.112519371 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.080763334 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.107855252 seconds)
  done (took 12.185391166 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.209139218 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.200283331 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07798805 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.1916817 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.086865821 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11716717 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.193664418 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.107300099 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.104472919 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.075745389 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.105023083 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115382914 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139164633 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.153857957 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.087597904 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.074029146 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.12294035 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.146498096 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.193984103 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.158212888 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.124892597 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.083299995 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.107018763 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.076287337 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.076358333 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.114803625 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.092042928 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.1133553 seconds)
  done (took 4.527134434 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.089610621 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.136019932 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080938324 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.12492012 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.1011568 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.103611638 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.080252765 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.077265735 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.117176342 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.087978652 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.103666618 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.082000656 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.081524289 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.112911105 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.076194423 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.112999789 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.085506335 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.105553459 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.079301074 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.079722391 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.110975176 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088158666 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.108153276 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.074717926 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.082397638 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.103798914 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.072233497 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.122654015 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.075247095 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.126103961 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.073227995 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.109925097 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085315371 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.075633091 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.104621068 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.076931518 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.076560594 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.105751191 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.077101383 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.101568527 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.0742444 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.064972618 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.102789278 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.088386651 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.109727744 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.067447987 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.081520642 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.109366484 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.080682568 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.073064045 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.105824218 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.078628207 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.106770296 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.082952663 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.079020299 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.109553275 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.078098578 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073297862 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.11002202 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.076383808 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070900972 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.102407461 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.079849721 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.103408357 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083616771 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.107968356 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07407621 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.076558455 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.108247645 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082608328 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076297927 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.107391863 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.073067004 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.104827115 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.08082138 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.079885331 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.107761032 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.074433978 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.074203002 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.104260662 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.062886064 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.074794909 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.089722707 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.078322505 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.073365666 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.102477413 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.077605442 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.111984843 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.089596752 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.105173007 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.081913712 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.076572624 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.103759739 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.079322314 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.070113385 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.107168865 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.090478679 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.121985756 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.074671968 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.102809072 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.089034997 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.080430045 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.103767154 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063969191 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.111756011 seconds)
  done (took 10.60379592 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.100250942 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.100421935 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.106443808 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089181782 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.131815691 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.100521214 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.11255692 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082261721 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.076493561 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.121785719 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07558214 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.112685752 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.079133484 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083525303 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.129518714 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.083223994 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.107146422 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08403172 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.082770172 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.142101007 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08885204 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.118392805 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.085657265 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.104795059 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080161517 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.087823114 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.132757809 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.085083763 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.114137288 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.08911362 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.11463708 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.103616217 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.089855513 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.108962191 seconds)
  done (took 4.492235664 seconds)
done (took 40.950390164 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.14812681 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.379269128 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.134859371 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.093563833 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.180191654 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.152458227 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.14906602 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.135288193 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.607972909 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.137779026 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.394371206 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.810819256 seconds)
done (took 59.403526279 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.166120737 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.273742851 seconds)
    (2/2) benchmarking "String"...
    done (took 1.408602928 seconds)
  done (took 3.761435966 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.495226486 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.139406397 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.416340541 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.13513019 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.13535048 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.564488904 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.781460976 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.512443211 seconds)
  done (took 27.762438361 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.140117277 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.525765376 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.887930882 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.878579205 seconds)
  done (took 18.5120652 seconds)
done (took 59.775975434 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.141735041 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.163611692 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.155033194 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.118628666 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.265557397 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.169062253 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.462774919 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.367885994 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.135731866 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.121829974 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.152901103 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.135531644 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.138405591 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.451880621 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.135758092 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.133821252 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.184103226 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.62724028 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.536148755 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.141068164 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.144053349 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.154941949 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.15325248 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.138759927 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.170152909 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.135972643 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.135116047 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.137311486 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.647191618 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.136104391 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.138390741 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.656591838 seconds)
  done (took 189.566633868 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.134802598 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.137081406 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.23609551 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.196987704 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.59172028 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.335894716 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.273964845 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.669118787 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.154163033 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.13920249 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.383998602 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.138217068 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.468033953 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.181075644 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.144934886 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.244778712 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.480400129 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.453970724 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.154697061 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.40644381 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.153558274 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.420897168 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.465343567 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.337270978 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.176804792 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.187646138 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.16229238 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.150423952 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.325773981 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.407658934 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.152160526 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.162894041 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.757459638 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.994469668 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.14788496 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.142070995 seconds)
  done (took 148.150936474 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.416756721 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.135241721 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.136036843 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.13614472 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.169001314 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.136446451 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.712063362 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.71361809 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.647441371 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.619950089 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200216588 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.136946274 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.390438905 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.135953571 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232078051 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.14746138 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.136219383 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.137268339 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.151391539 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.164114603 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.141826274 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.137286566 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.712212828 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.153903233 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.257444511 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.148010227 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.138153617 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.169006274 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.532167603 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.13717217 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.168710372 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.461506724 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.184476203 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.137584474 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.47096508 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.045671179 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.137398911 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.247914145 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.139688797 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.170547579 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.138207431 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.410300753 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.138842162 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.136811497 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.140805864 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.743480587 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.137492118 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.71590253 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.142996404 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.065106997 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.138716416 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.138097259 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.270721626 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.643668017 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.138878627 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.138054194 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.141028885 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.139115103 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.137623909 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.172112528 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.2970031 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.240854884 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.139996187 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.141692986 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.170402699 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.139688094 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.139010819 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.140451723 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.42435163 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.201869874 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.358929959 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.715017889 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.142677401 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234474804 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.260534859 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.13918537 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.13916437 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.138790296 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.140200005 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.247457217 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.13945985 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.565491089 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.146093386 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.141650414 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.199709736 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.234335878 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.139646266 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.467647291 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.139102148 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.139452034 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.875820271 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234637491 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.139922731 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.141086201 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.140237521 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.564977144 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.715917774 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.379595636 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.145143261 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.2582267 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.143989211 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.577489787 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.69519617 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.749840101 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.143081798 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.250069694 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.144641371 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.141021304 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.142875415 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.140623044 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.170478012 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.140667391 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.199810756 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.14178558 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.53836144 seconds)
  done (took 337.625687029 seconds)
done (took 677.839816073 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.827704895 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.780660783 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.913090191 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.794494607 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.780557535 seconds)
  done (took 10.181758351 seconds)
done (took 11.265284809 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.329891031 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.329579202 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.204052719 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.332907482 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.176043883 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.347719197 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.310459742 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.16684185 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.244254396 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.220041501 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.244394359 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.191695813 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.17118432 seconds)
  done (took 17.356817777 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.461238687 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.455188767 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.214675884 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.461644292 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.18471928 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.449235242 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.342659695 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.35742133 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.352446386 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.160600289 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.158645706 seconds)
  done (took 15.687056247 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.459683227 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.46166041 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.215141556 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.467726986 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.186172022 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.467873209 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.352858231 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.355089542 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.3420578 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.160230413 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.158653249 seconds)
  done (took 15.716186441 seconds)
done (took 49.845783084 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.153675531 seconds)
  done (took 2.242805123 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.189099989 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.353159276 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.169587771 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.15942493 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.1550204 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.158243768 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.161159732 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.154843508 seconds)
  done (took 10.590408241 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.154602352 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.152587269 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.152015665 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.151627793 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.151060475 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.151809777 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.153653696 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.151571463 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.151738076 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.153833014 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.153966657 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.151833516 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.155425176 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.1553765 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.15523789 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.156055942 seconds)
  done (took 19.542071658 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.153778181 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.152119553 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.152488612 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.152599773 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.152317431 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.153539063 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.152872584 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.152811838 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.152111252 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.152682135 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.153359881 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.15234368 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.153670479 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.152291559 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.152728551 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.154046723 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.152135 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.153493093 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.156762094 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.152653963 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.154280825 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.15311348 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.152823095 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.154346011 seconds)
  done (took 28.76824255 seconds)
done (took 62.230909896 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.346518205 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.902386726 seconds)
  done (took 9.340176118 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.155208061 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.15567114 seconds)
  done (took 3.403137171 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.156079648 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.155894518 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.15542256 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.156713762 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.155567076 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.155525799 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.155512889 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.156549754 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.157005692 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.155018003 seconds)
  done (took 12.650586501 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.156738299 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.156209933 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.153343448 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.157140456 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.156833439 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.153976058 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.156662809 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.156559587 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.157340593 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.154372943 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.157518294 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.154398512 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.156435819 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.154750117 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.156057239 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.154608638 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.155449319 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.153713615 seconds)
  done (took 21.894357705 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.15745671 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.158056681 seconds)
  done (took 3.408396965 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.155307395 seconds)
    (2/7) benchmarking "second"...
    done (took 1.154303448 seconds)
    (3/7) benchmarking "month"...
    done (took 1.154810866 seconds)
    (4/7) benchmarking "year"...
    done (took 1.154930509 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.155482894 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.15529332 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.154187214 seconds)
  done (took 9.177444876 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.158327362 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.334392669 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.416113232 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.755163824 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.158627113 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.161871908 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.004582168 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.163015481 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.164208793 seconds)
  done (took 13.410164665 seconds)
done (took 74.373009525 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.164788054 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.151646773 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.055424603 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.170857983 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.17208351 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.452243535 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.166641027 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.27570961 seconds)
done (took 36.701664805 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.167227463 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.913746866 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.934828429 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.15453871 seconds)
  done (took 11.097842314 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.137010379 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.099664459 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.147423348 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.202833554 seconds)
  done (took 17.682332995 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.223098917 seconds)
    (2/2) benchmarking "read"...
    done (took 1.490731755 seconds)
  done (took 4.808037146 seconds)
done (took 40.847535089 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.160226846 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.1565709 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.159690187 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.159607206 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.157537897 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.160621012 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.158518392 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.157199577 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.159834684 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.159720821 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.160180871 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.161181289 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.159929753 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.157838454 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.15743735 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.15968168 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.159552235 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.158206962 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.157548394 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.157720256 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.156704871 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.160901724 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.158934507 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.158029653 seconds)
  done (took 28.908188401 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.159723288 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.158816358 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.160491231 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.160907038 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.158404812 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.16076011 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.161289281 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.157696766 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.160729684 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.159985427 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.158015458 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.157943043 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.16032356 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.158283945 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.16102445 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.15820094 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.159810417 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.158400976 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.161542761 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.158681463 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.160602437 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.158389383 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.159203434 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.160722766 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.160185829 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.158707493 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.161113742 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.15930568 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.162424904 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.159019417 seconds)
  done (took 35.887287752 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.166542427 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.167518018 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.161550016 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.162386694 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.161894016 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.161525045 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.161987154 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.163235493 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.161853139 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.161904448 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.163908131 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.162468618 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.162087104 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.163433684 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.162804955 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.162417601 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.163362095 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.162690193 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.162119191 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.162260875 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.16168283 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.162515728 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.163522513 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.163732877 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.163476016 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.162110099 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.162173271 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.163324346 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.162303412 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.162281851 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.164619723 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.163470557 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.164152719 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.163120654 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.16351919 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.16381688 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.168389824 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.17150584 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.163442513 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.163643496 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.163320943 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.16355382 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.163752827 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.163420801 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.163424543 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.162834794 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.163746327 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.164266677 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.164879939 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.164690613 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.164094796 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.163964162 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.164531636 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.163956256 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.164526009 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.165213741 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.164482773 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.164276784 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.164211774 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.164539587 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.163824415 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.164777499 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.164757987 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.16374414 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.16486823 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.165252382 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.163979001 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.165133927 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.16500843 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.165441164 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.165542451 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.165533483 seconds)
  done (took 84.892982052 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.164196118 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.163165981 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.162800589 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.161956233 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.162140503 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.165663506 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.16350492 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.165126233 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.162245804 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.165533258 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.165493138 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.163963548 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.163464318 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.165588552 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.165004622 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.162869673 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.165635004 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.163235559 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.166686698 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.165831976 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.165728916 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.163817367 seconds)
  done (took 26.71406702 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.166058879 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.166195934 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.164547113 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.166237262 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.1640752 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.166233185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.16685535 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.165909519 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.166425994 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.168433319 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.164565748 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.16710261 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.16378582 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.16368671 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.164330156 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.165420908 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.167420752 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.164879167 seconds)
  done (took 22.083355657 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.163865835 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.164802962 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.167420611 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.164309357 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.165938683 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.168040711 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.164995799 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.167183563 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.169092809 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.164870483 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.168478471 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.167845841 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.168609109 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.165593412 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.168336301 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.165443785 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.167859577 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.16554902 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.168145662 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.165504408 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.165754044 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.169087144 seconds)
  done (took 26.768637368 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.168632059 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.167627782 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.165419334 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.166760064 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.166116819 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.168278831 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.167511768 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.165899845 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.169603717 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.167951814 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.166325219 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.168711638 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.165971733 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.167301055 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.165489284 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.165297955 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.168470627 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.16660384 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.168480923 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.166054656 seconds)
  done (took 24.446831884 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.169671506 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.170071509 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.169160578 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.168885744 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.168554106 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.168999768 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.168715257 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.170081193 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.170780839 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.170272051 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.169978578 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.170694199 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.170077595 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.170412336 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.170390416 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.169433981 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.169513128 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.170244775 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.169633204 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.170349445 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.17080533 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.169847946 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.170627815 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.170137052 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.170377382 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.17107226 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.170017607 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.171334814 seconds)
  done (took 33.864126189 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.17022323 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.170570681 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.16796105 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.167661045 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.169584538 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.168762704 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.168740264 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.168722602 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.17063646 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.168043901 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.171743479 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.170916642 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.17040272 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.17168342 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.171929381 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.172570162 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.170962607 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.16897794 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.168398149 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.169430141 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.171609511 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.172036207 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.17173362 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.168564182 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.16932974 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.17172148 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.169886192 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.169636503 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.170855773 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.168590583 seconds)
  done (took 36.208549895 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.190549455 seconds)
    (2/2) benchmarking "in"...
    done (took 1.191361703 seconds)
  done (took 3.487728301 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.169176158 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.171688521 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.172017182 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.170190592 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.170184171 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.171890947 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.173124673 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.170627094 seconds)
  done (took 10.4757658 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.170506427 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.172592985 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.172351344 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.172369747 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.173371114 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.171056102 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.179310288 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.191773325 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.174207912 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.173528383 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.178754918 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.180058131 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.175014664 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.172586423 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.172751329 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.174944806 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.172688378 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.173597904 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.173148854 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.173471949 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.173228084 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.174886298 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.174820021 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.171625011 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.174693638 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.18317335 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.177147394 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.173696315 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.173124876 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.177719791 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.172512023 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.171917497 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.173892319 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.175054461 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.173399323 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.1742076 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.182252277 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.191954403 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.181008212 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.174680368 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.173927913 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.172110079 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.174832701 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.174201729 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.175592101 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.174510667 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.175472589 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.171083053 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.174648222 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.176925333 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.180395941 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.173430902 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.172904426 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.177885896 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.175738147 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.182290254 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.193173295 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.177834835 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.184072083 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.186278989 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.188724996 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.183792705 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.177669885 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.17631895 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.186313868 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.19900851 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.183243094 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.19088513 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.174290481 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.177213356 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.182614045 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.187911112 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.185306417 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.175944659 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.177297173 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.176141983 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.176461004 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.177434951 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.18279086 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.195744859 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.177519007 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.176872848 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.18527077 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.199242435 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.17542766 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.17812885 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.175992891 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.177475421 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.177909918 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.186237629 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.194778103 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.177225992 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.176324219 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.176127105 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.17740173 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.177203135 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.175590007 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.176958194 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.175357162 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.177469937 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.176976035 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.180593751 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.185659783 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.176986301 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.177517067 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.183445377 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.178026595 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.17625279 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.184349246 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.179575412 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.178241936 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.17832867 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.183572834 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.17623873 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.181866805 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.185516826 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.177634916 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.178424541 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.178513644 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.179015785 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.186770812 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.204446192 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.179214606 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.179046269 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.182638032 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.190287584 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.17890515 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.180501246 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.178543023 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.176195207 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.176799323 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.180822811 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.179482792 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.179571889 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.179893029 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.179313363 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.177456447 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.179635038 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.180114848 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.179727112 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.179783329 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.179518844 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.180778288 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.181666115 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.180396131 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.181392845 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.186424209 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.180155705 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.180868377 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.180410344 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.177713134 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.181048192 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.181199244 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.181461612 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.17942233 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.180722981 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.179314269 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.181064816 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.180636651 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.181880939 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.181163111 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.180560559 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.183192405 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.181132328 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.184838854 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.180695675 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.179165554 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.181495104 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.180676041 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.180508092 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.181236066 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.179959209 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.182919543 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.190497428 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.181712911 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.181877812 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.18321224 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.181635668 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.181750559 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.180197145 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.184457655 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.188823193 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.182504686 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.187308335 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.181969211 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.182354643 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.182481041 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.180781029 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.18039914 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.181634343 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.184194663 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.188965226 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.194070857 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.191478417 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.182645887 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.185772897 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.182998282 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.18527735 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.186287145 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.183249641 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.183022671 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.183255425 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.182213553 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.182188476 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.183623238 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.183968816 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.181660021 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.183224655 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.183257396 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.183176821 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.18223686 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.182664115 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.182358375 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.181283388 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.184251369 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.183330461 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.182794832 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.181457693 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.181127693 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.182402385 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.183994919 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.184544051 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.189153959 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.182269831 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.18511949 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.184847582 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.184873416 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.182524338 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.183964002 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.185799488 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.183317132 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.189420672 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.200184002 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.182941676 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.189651334 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.200110683 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.182759528 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.186918294 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.184553812 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.182680868 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.188344912 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.192264572 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.184088002 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.184720492 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.184833809 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.18422319 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.186531661 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.191236966 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.183139861 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.184460687 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.186234776 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.186863794 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.183032111 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.185966431 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.185898947 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.18570201 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.187182113 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.185157584 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.186685213 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.186072284 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.185879949 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.185437944 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.185717133 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.188541308 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.192638427 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.190527047 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.186687126 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.187431111 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.186172069 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.189524185 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.187064235 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.18586018 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.185258348 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.1985068 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.195552379 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.19281999 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.188104974 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.187214539 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.191260619 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.188108818 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.190353675 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.186331064 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.187356816 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.187137775 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.185712175 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.185428868 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.188018272 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.18767444 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.187454544 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.187719656 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.191279746 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.187645485 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.187184281 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.187652679 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.186898387 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.186715772 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.185919211 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.188226893 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.187826785 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.189509921 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.187184904 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.187059983 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.193479551 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.204397393 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.187613536 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.186555818 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.187797674 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.187613231 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.188850985 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.188487789 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.190543443 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.196085154 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.190407701 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.195976106 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.19040073 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.197433496 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.188439735 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.191488824 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.196292744 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.186880548 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.187084724 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.187574135 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.188428615 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.195244194 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.206831633 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.190404432 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.193006343 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.189677277 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.189173884 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.189986021 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.190568668 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.190415385 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.190283385 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.19715516 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.207691366 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.19208357 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.191036366 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.187148988 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.18986539 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.19000772 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.187699761 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.19199423 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.189473261 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.190349517 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.188498947 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.189737947 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.190220315 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.190257757 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.189663733 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.187988874 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.190552106 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.195775068 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.207960037 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.193687422 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.190893083 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.198335816 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.191066171 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.196797442 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.207870149 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.190766313 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.191439313 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.189945346 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.192227709 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.189749145 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.19049372 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.190292073 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.1924545 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.195254838 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.190977033 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.19300265 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.191154078 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.191148153 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.189953856 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.201207143 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.214889211 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.192610656 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.196156206 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.189317756 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.191353787 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.195358708 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.19237712 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.189594374 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.194333678 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.201914738 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.199296714 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.192080961 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.192247208 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.192719921 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.193379151 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.192326176 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.193862917 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.193442389 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.192950268 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.192988517 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.192053947 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.195964488 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.193792066 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.192339057 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.193077796 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.193654981 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.202558209 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.193286049 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.194197442 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.192721067 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.193456035 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.193650646 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.192617489 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.193510725 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.193849622 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.194494892 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.194794543 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.199976932 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.199331025 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.19532863 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.192387017 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.192634665 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.192625271 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.193169961 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.194836634 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.19421346 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.193549454 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.195539195 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.193849808 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.19384893 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.19179312 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.194323937 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.194224631 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.193912124 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.196871178 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.201250275 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.193440199 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.192746499 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.194318297 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.194421959 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.191709074 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.192958046 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.202393539 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.197398305 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.204055781 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.201876252 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.198008145 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.193428165 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.198026616 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.201912318 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.193587328 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.194714059 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.19565906 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.194788541 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.194712509 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.197932916 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.195346654 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.200414605 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.19515077 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.195340493 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.201980659 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.212941554 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.195654387 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.196696583 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.199297 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.194886461 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.193799582 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.195692388 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.194874492 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.201892954 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.215336359 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.196058799 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.196589114 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.193012297 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.198087046 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.201191195 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.197077207 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.196357682 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.194725992 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.196943421 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.196500448 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.196427234 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.194627103 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.19531534 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.195190469 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.198979288 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.203055914 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.193880677 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.198199527 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.196323998 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.197368891 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.196738847 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.197850296 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.193954229 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.195752507 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.196044636 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.196448416 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.19658314 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.19938695 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.195833621 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.197722707 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.198893846 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.198084627 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.199867931 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.208269896 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.205597339 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.194262585 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.196621733 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.19834797 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.200091374 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.197680104 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.19695602 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.196610066 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.198532795 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.198011224 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.198545431 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.198414857 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.200100589 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.21218284 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.216637277 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.197653397 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.19872149 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.201420568 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.198414838 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.197234163 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.198392162 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.199821727 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.201610064 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.206101815 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.198993352 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.204302215 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.216362214 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.199952447 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.202839506 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.202185772 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.20566232 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.200929329 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.198842851 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.198791049 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.203062159 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.214370759 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.200420717 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.208723214 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228226608 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.217996359 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.199801079 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.199011536 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.19825243 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.198848858 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.201394264 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.200018906 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.199501408 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.200079385 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.200618217 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.200848108 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.204564548 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.201217359 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.199790921 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.200583018 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.199197882 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.200900611 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.197012597 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.200001983 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.200802387 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.200326254 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.20092206 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.201914696 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.200007977 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.211690932 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.211082241 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.201996526 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.20087152 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.199008332 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.203189729 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.202831457 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.211105351 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.20827253 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.201301774 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.201811388 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.202375395 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.202539319 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.19947796 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.202267321 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.201909954 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.200713216 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.199385911 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.213652395 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.211135789 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.206373951 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.202417273 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.202419139 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.203101494 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.201765054 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.202647713 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.200914203 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.20282162 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.2019221 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.205784949 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.202418567 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.202499742 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.205372452 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.209527535 seconds)
  done (took 710.153290387 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.200286345 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.199647192 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.199454986 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.199584316 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.200498153 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.200462521 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.199681581 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.201378368 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.200903944 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.201629001 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.200901034 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201079119 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.199903441 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.200695775 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.200190126 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.200743726 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201972588 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.202400115 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.2013948 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202808909 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.201363458 seconds)
  done (took 26.352242588 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.203597453 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.201318962 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.201839801 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.204398729 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201868634 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.203656522 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.201554519 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203977597 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.203662861 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200720532 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.204233464 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205085657 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.201392025 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.202141577 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201685782 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203518351 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.204023977 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.201031018 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.205878012 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.201520769 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.205229449 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.202510341 seconds)
  done (took 27.602035093 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.205462574 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.20488532 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.203814814 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.203182185 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.203734157 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.202048168 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.20458045 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.2056282 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.205690704 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.205031532 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.202209172 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.2064617 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.211235716 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.210329607 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.206275574 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.20520279 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.350059615 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.205105362 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.206277955 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.206317729 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.203288918 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.210126685 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.203518733 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.203070333 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.2036302 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.205881567 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.206432083 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.206230333 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.205427293 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.206742048 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.210249942 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.205709629 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.204730913 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.207600686 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.206684953 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.207853265 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.209840055 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.20657125 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.204689975 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.206835942 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.21646778 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.226715086 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.206741084 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.212152324 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.207097227 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.207868365 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.209041696 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.214231935 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.204161205 seconds)
  done (took 60.42215013 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.208264926 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.206902579 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.205311289 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.208103644 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.207730076 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.207445463 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.207866092 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.207385095 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.204647766 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.206375081 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.207846587 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.205357586 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.205070899 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.207578358 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.208451603 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.20431642 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.204234637 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.205509103 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.204214914 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.206007941 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.205755394 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.207539559 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.208942863 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.204965537 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.207668962 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.205024908 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.205743837 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.208213721 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.206160055 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.206204554 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.208625913 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.208326681 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.209228862 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.207033596 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.206399655 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.20856977 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.208826366 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.206037752 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.209734339 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.206556829 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.209369195 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.208783733 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.209337624 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.209132003 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.206184333 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.206888327 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.206210597 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.206508333 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.206692325 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.210506746 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.209708277 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.207891471 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.20938131 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.206693921 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.208948124 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.209445693 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.206436167 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.206485945 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.208942642 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.207662677 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.207220559 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.210729421 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.207709363 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.20939021 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.21001859 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.207275177 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.207772544 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.209975915 seconds)
  done (took 83.24763829 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.209254583 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.21043682 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.209443667 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.209409752 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.209703188 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.210335878 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.210614157 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.210603223 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.209158093 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.211105908 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.210425306 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.211304384 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.211102125 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.211800162 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.210997943 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.210811498 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.210771601 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.210829076 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.21109791 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.21072769 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.211687728 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.210853805 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.210066068 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.211730656 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.212186962 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.211595754 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.212187867 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.2122208 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211687993 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.211567045 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.212231235 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.212562585 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.210645147 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.211718875 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.213492018 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.212017343 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.211979016 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.211432639 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.212263873 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.212867559 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.212003464 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.212189711 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.212589477 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.213329619 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.212132338 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.21241475 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.213030084 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.211999745 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.213361073 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.212582152 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.213310009 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.213552039 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.213363551 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.21174009 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.213455798 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.214112475 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213784435 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.213039998 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.212204137 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.212426229 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.212203265 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.213111265 seconds)
  done (took 76.274396993 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213293383 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.213359117 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.212335796 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.211208575 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.213564055 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.211463847 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.214273709 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.212992802 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.213835168 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.212448065 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213866683 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211009525 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210671715 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214208761 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.212407131 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212256589 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.210681665 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.211977108 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214224374 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.212414312 seconds)
  done (took 25.398657763 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.211323531 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.21462368 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.212154387 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.212191767 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.21439594 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.212757216 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.21490629 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214257207 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212716924 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215512188 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.21489746 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.216147193 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212729626 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.213029135 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.214623778 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.213193815 seconds)
  done (took 20.566942944 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.213545746 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.215488432 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.215707993 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.214449889 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.212622062 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.212634597 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.215877799 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.212215194 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.213452976 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.215936074 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.2160906 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.216102372 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.216440664 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.215915728 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.213771375 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.216546261 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.21304793 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.213925121 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.216622247 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.21575282 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.214301068 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.214276071 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.216951759 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.216960677 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.214733319 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.214676304 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.214609916 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.214835329 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.213549594 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.216576851 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.21456233 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.215119667 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.21491193 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.214049228 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.216794502 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.215808894 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.216729674 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.217309167 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.218419227 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.217011936 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.217515634 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.215754168 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.217897896 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.21767487 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.215187314 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.21802698 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.216234035 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.215792464 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.214903169 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.215507462 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.218841285 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.218337418 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.219910976 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.218934311 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.219881086 seconds)
  done (took 68.018498465 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217219469 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219508472 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.215156032 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.218106242 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.218684162 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.216611157 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.21790575 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.216305607 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215908899 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.218681417 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.217770685 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.218695116 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216759112 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.217995677 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.217216224 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21937379 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.216701931 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.217350743 seconds)
  done (took 23.066910551 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.218010226 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.217491169 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.219117197 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.217226441 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.216873592 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220265765 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216970644 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.220188565 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218830914 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.21858376 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216493039 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.220955099 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220450927 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.219995369 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.218260578 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218139729 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.220701205 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220059961 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.217862852 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217070966 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.220439616 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220847543 seconds)
  done (took 27.966186696 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.217735695 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.218802784 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.234893951 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.261853198 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.249834637 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.217728392 seconds)
  done (took 8.553105156 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219135651 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220321798 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.218765394 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22163596 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220508473 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218687325 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218942563 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218983946 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220696901 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218997092 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219949252 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220126545 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221706322 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218138767 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221132759 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221735761 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219872548 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219177639 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220158419 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222608622 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21965825 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221810779 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219987571 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219752586 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219436652 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218768998 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223058252 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219376052 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220622499 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222845261 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222864171 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220638048 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223212697 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221137573 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223921761 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222389926 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22008732 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221726407 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223195408 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219915163 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.222645182 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222589094 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222355577 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219951815 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222848973 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219531039 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221083984 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219645045 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220226216 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223544831 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223411859 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221368717 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22325992 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222909905 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22274865 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223243919 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222056343 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221647836 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224152022 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222013929 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221268267 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224429839 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220565599 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221742417 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223743558 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222308644 seconds)
  done (took 81.75606269 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221504387 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.220499356 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221937213 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222516678 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222874265 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22097367 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22190968 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221705473 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221916914 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220981639 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224889652 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222408137 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222249894 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221740393 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222361151 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222091694 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222850977 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22255797 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222718915 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225020373 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223269939 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222221825 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223643323 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2229285 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223066736 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224590889 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222780463 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222967676 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222378927 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222777974 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223627535 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223860617 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22353108 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.222954354 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223603406 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223515487 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222854875 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223393386 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222991009 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226737501 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22409834 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226311017 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223960609 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223467223 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223999289 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222906051 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.224400101 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222941431 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224111618 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224495207 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22596995 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.223981088 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223937383 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224596745 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224108187 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22394712 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223874343 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224655421 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.224541058 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226966102 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224188469 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2254645 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228307769 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225265924 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223943812 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225520602 seconds)
  done (took 81.911650641 seconds)
done (took 1656.120972456 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.272764848 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.267682261 seconds)
  done (took 13.698050357 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.391203764 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.338078278 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.223804854 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.252916334 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.223962234 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.226624048 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.237695268 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.220765312 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.221713173 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.222296457 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.221079474 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.412177116 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.240377165 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.22165629 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.221312011 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.315820873 seconds)
  done (took 41.350970826 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.252754982 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.22915463 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.345845433 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.247964647 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.252166186 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.416943446 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.287925467 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.226653474 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.407254858 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.272655562 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.917364362 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.252057613 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.226861177 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.374124584 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.244798178 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.416013927 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.478427563 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.842256979 seconds)
  done (took 28.847368585 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.6969485 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.26037703 seconds)
  done (took 9.111986206 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.22615199 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.241743483 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.239479042 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.221317354 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.247593448 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.294751131 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.281752068 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.281225683 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.248169 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.245131406 seconds)
  done (took 63.691150162 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.24381228 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.226195766 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.226335827 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.2227228 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.230143645 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.215610086 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.223676584 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.221165284 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.040050008 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.355782438 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.244698704 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.231919087 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.223575829 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.2269829 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.223985463 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.261667591 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.37229438 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.223360322 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.223259972 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.230580317 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.225797383 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.309554525 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.267417278 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.22700616 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.355598776 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.061465286 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.227098368 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.232179536 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.354358978 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.222871435 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.224869996 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.225464482 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.226775677 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.795937371 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.750540449 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.232797738 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.252758789 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.237358622 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.225033235 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.34520877 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.226291688 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.231663903 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.218769578 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.730847428 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.383967563 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.340560186 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.490890434 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.227978463 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.227976491 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.288609713 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.226594656 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.22644091 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.257129108 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.995528428 seconds)
  done (took 105.899161296 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.258012668 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.707855757 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.391105265 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.239725525 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.093437206 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.990014013 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.220042637 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.518991466 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.243304136 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.219706802 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.559457728 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.744560687 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.228121056 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.222075351 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.681523094 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.221357078 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.220845882 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.989012665 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.22004932 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.225325451 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.648713637 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.237722705 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.219631577 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.390053238 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.26054011 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.695304127 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.747777894 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.634464329 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.225504235 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.2206834 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.703144739 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.223757612 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.270243642 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.219911664 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.50299602 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.59195344 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.562533961 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.225729068 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.268488157 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.225579238 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.247895773 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.692317574 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.576782569 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.221517157 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.221366208 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.713948836 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.221327709 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.230668957 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.228635858 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.43138684 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.151285504 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.22188227 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.750511092 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.227099523 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.511131523 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.226791972 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.300355946 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.722640847 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.222015849 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.314580434 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.248923268 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.22314249 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.222486807 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.225864115 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.226147352 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.579695968 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.518717084 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.229965636 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.581270067 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.696020022 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.221839689 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.762517674 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.106491352 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.24860249 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.265342316 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.222910434 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.819338995 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.722764587 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.269001221 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.223532904 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.568348075 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.224182377 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.548683688 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.236796174 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.240696656 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.656982393 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.241861723 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.261431341 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.224130125 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.224296019 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.001924325 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.225793556 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.497692944 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.290544792 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.225886851 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.226548707 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.253600161 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.225888836 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.224353895 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.229975883 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.7701225 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.23322931 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.533099219 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.246760296 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.227331683 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.227244135 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.223855263 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.224172961 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.451153584 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.743233184 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.231448988 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.223526373 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.223752404 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.231692556 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.364359695 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.229013056 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.543820743 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.227722016 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.226024647 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.23041449 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.03874219 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.257754496 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.225264501 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.227817736 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.058062721 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.43426656 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.246002177 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.22659936 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.226882804 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.243265669 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.618772749 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.225963474 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.246290931 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.231412034 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.951171288 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.257196579 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.226600508 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.821933641 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.234352554 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.225928004 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.23500183 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.227117047 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.53734914 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.506735295 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.358283154 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.231007587 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.226600283 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.934302766 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.266840735 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.368234531 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.244830826 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.227814343 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.426346472 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.412131279 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.226302701 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.789527138 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.227221923 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.448303127 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.227248715 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.568473632 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.734926616 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.230107298 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.227775971 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.952351646 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.912910391 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.86870736 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.231082304 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.5662014 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.217150276 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.683033931 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.228889181 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.228493585 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.813638439 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.228110714 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.235378376 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.226789596 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.228142944 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.297171175 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.404278804 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.969669116 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.229821564 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.700171303 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.259162197 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.228462917 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.234196896 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.230901801 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.583388261 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.291380378 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.23347839 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.266354994 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.22880175 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.2354458 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.713325315 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.144166707 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.22845173 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.383479796 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.879009752 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.233602231 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.234631738 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.882764564 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.462218091 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.749315758 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.259519915 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.549252931 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.236887704 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.270879932 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.037092028 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.2399787 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.754373422 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.234043992 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.230764587 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.848023746 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.229627897 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.288287616 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.229346328 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.232518061 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.779052788 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.229806276 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.234152023 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.63260335 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.240573715 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.486652865 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.234238363 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.250226973 seconds)
  done (took 1088.685793438 seconds)
done (took 1352.441131042 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.230611133 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.232270576 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.22092944 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.234435113 seconds)
  done (took 26.086051915 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.243520975 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.237631619 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.238591785 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.238514959 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.241892387 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.237405646 seconds)
  done (took 8.607230088 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.372244116 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.232533928 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.236417698 seconds)
  done (took 19.011878096 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.465361069 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.55414477 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.622099208 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.5312442 seconds)
  done (took 10.342131385 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.239171653 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.238516613 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.240109068 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.242283855 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.244808247 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.245655401 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.243241584 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.242971754 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.246279342 seconds)
  done (took 12.351101404 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.333313781 seconds)
done (took 82.89830434 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.662001544 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.342380085 seconds)
    (3/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.55802036 seconds)
    (4/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.559499887 seconds)
    (5/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.782218545 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.277720857 seconds)
    (7/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.336637223 seconds)
    (8/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.296743114 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.501689864 seconds)
    (10/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.62288525 seconds)
    (11/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.2474914 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.274482473 seconds)
    (13/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.909228153 seconds)
    (14/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.622434977 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.240640386 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.26076283 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.41065174 seconds)
    (18/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.733379683 seconds)
    (19/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.914369996 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.111549111 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.894703345 seconds)
    (22/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.221832925 seconds)
    (23/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.299724627 seconds)
    (24/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.259902106 seconds)
    (25/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.425028378 seconds)
    (26/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.318318501 seconds)
    (27/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.093787628 seconds)
    (28/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.648326943 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.23365377 seconds)
    (30/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.298561924 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.233628243 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.365152307 seconds)
    (33/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.845944135 seconds)
    (34/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.629868818 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.65958348 seconds)
    (36/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.233665787 seconds)
    (37/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.662475757 seconds)
    (38/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.23516511 seconds)
    (39/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.395454125 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.649113352 seconds)
    (41/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.280553179 seconds)
    (42/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.737767639 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.219705018 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.346527113 seconds)
    (45/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.24538088 seconds)
    (46/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.320797223 seconds)
    (47/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.260762416 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.495103477 seconds)
    (49/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.324593216 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.35627164 seconds)
    (51/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.734699618 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.66034011 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.251834655 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.308104647 seconds)
    (55/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.234800868 seconds)
    (56/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.257284976 seconds)
    (57/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.363963036 seconds)
    (58/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.342025484 seconds)
    (59/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.235199023 seconds)
    (60/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.256158108 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.414643121 seconds)
    (62/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.847770698 seconds)
    (63/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.957570678 seconds)
    (64/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.606014109 seconds)
    (65/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.343577361 seconds)
    (66/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.448104306 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.328188928 seconds)
    (68/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.633263628 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.665181858 seconds)
    (70/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.357543266 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.335838947 seconds)
    (72/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.222115632 seconds)
    (73/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.332326721 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.241171505 seconds)
    (75/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.76513716 seconds)
    (76/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.26722239 seconds)
    (77/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.448661788 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.241915282 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 5.472998776 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.22762922 seconds)
    (81/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.253944901 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.604282491 seconds)
    (83/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.254554283 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.242098985 seconds)
    (85/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.105549098 seconds)
    (86/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.247223075 seconds)
    (87/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.364786808 seconds)
    (88/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.04929117 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.242323792 seconds)
    (90/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.257592332 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.22192773 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.242632571 seconds)
    (93/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.894510363 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.257043423 seconds)
    (95/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.453689634 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.007955476 seconds)
    (97/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.230040466 seconds)
    (98/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.590138129 seconds)
    (99/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.365304964 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.238299677 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.241857646 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.801061102 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.662734692 seconds)
    (104/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.241309489 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.97747346 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.452786972 seconds)
    (107/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.668385088 seconds)
    (108/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.889583741 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.82564198 seconds)
    (110/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.898862423 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.133956919 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.239654087 seconds)
    (113/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.345209185 seconds)
    (114/309) benchmarking ("sort", Int8, false)...
    done (took 4.329300734 seconds)
    (115/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.26783564 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.118662902 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.654816987 seconds)
    (118/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.408435914 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.903700099 seconds)
    (120/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.137702264 seconds)
    (121/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.465271027 seconds)
    (122/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.279972899 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 1.757429211 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.263575237 seconds)
    (125/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.263763133 seconds)
    (126/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.778037011 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.532386206 seconds)
    (128/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.062779493 seconds)
    (129/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.354682039 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.864563826 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.036703113 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.842439726 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.519125847 seconds)
    (134/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.904077205 seconds)
    (135/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.615496188 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.267139329 seconds)
    (137/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.251172271 seconds)
    (138/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.510580495 seconds)
    (139/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.358264159 seconds)
    (140/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.769535498 seconds)
    (141/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.280183596 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.342881427 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.248681631 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.240502216 seconds)
    (145/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.75104623 seconds)
    (146/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.108855236 seconds)
    (147/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.267416592 seconds)
    (148/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.554843951 seconds)
    (149/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.27185714 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.055286313 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.266612496 seconds)
    (152/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.58001593 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.951447731 seconds)
    (154/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.328092408 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.039370331 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.204677537 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.10594622 seconds)
    (158/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.344436078 seconds)
    (159/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.617521013 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.252127911 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.272506709 seconds)
    (162/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.431941848 seconds)
    (163/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.187966827 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.22077399 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.148947011 seconds)
    (166/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.936553614 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.225027327 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.141476931 seconds)
    (169/309) benchmarking ("sort", BigInt, false)...
    done (took 6.242379947 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.752534258 seconds)
    (171/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.164252644 seconds)
    (172/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.499874676 seconds)
    (173/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.244076099 seconds)
    (174/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.26449296 seconds)
    (175/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.227433812 seconds)
    (176/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.79625814 seconds)
    (177/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.640458777 seconds)
    (178/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.271736007 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.210019911 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.281485325 seconds)
    (181/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.226224313 seconds)
    (182/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.272832528 seconds)
    (183/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.364924517 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.34590589 seconds)
    (185/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.256756143 seconds)
    (186/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.621439363 seconds)
    (187/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.246103415 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.270801988 seconds)
    (189/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.081870387 seconds)
    (190/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.185837662 seconds)
    (191/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.227074632 seconds)
    (192/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.382457883 seconds)
    (193/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.218327515 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.370854657 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.582764437 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.285594754 seconds)
    (197/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.549902776 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.681548245 seconds)
    (199/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.268074079 seconds)
    (200/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.253568586 seconds)
    (201/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.441668942 seconds)
    (202/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.640647917 seconds)
    (203/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.872869503 seconds)
    (204/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.249501312 seconds)
    (205/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.248679988 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.239338979 seconds)
    (207/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.879943795 seconds)
    (208/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.061626553 seconds)
    (209/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.900010753 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.305016271 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.198538039 seconds)
    (212/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.140244075 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.249208968 seconds)
    (214/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.246282653 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.283387525 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.611914052 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.308370187 seconds)
    (218/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.325719163 seconds)
    (219/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.638584387 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.208815218 seconds)
    (221/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.118962869 seconds)
    (222/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.717683125 seconds)
    (223/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.293677836 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.888616159 seconds)
    (225/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.383128303 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.445674048 seconds)
    (227/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.309926554 seconds)
    (228/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.270338014 seconds)
    (229/309) benchmarking ("sort", Float64, false)...
    done (took 5.588405739 seconds)
    (230/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.244492377 seconds)
    (231/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.29747818 seconds)
    (232/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.253353226 seconds)
    (233/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.655974671 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.110233235 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.298756711 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.956808954 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.4550776 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.283312752 seconds)
    (239/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.90008974 seconds)
    (240/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.877552287 seconds)
    (241/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.7295241 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.286987054 seconds)
    (243/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.65514719 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.737214392 seconds)
    (245/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.348440593 seconds)
    (246/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.627765622 seconds)
    (247/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.695333143 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.243631583 seconds)
    (249/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.260418728 seconds)
    (250/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.045187604 seconds)
    (251/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.679305644 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.319163228 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.896593825 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.93475641 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.249717367 seconds)
    (256/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.842879734 seconds)
    (257/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.103494447 seconds)
    (258/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.464283571 seconds)
    (259/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.321034274 seconds)
    (260/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.700315001 seconds)
    (261/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.580905352 seconds)
    (262/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.847510276 seconds)
    (263/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.746690172 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.464749358 seconds)
    (265/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.995769257 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.795290631 seconds)
    (267/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.25080767 seconds)
    (268/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.295331666 seconds)
    (269/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.507653228 seconds)
    (270/309) benchmarking ("sort", Float32, false)...
    done (took 5.271601054 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.273711668 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.822377125 seconds)
    (273/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.4177786 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.246081766 seconds)
    (275/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.255361644 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.629360607 seconds)
    (277/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.225973927 seconds)
    (278/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.05862127 seconds)
    (279/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.499819432 seconds)
    (280/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.617616086 seconds)
    (281/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.232236722 seconds)
    (282/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.273807648 seconds)
    (283/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.578756017 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.331136351 seconds)
    (285/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.261791769 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.338198812 seconds)
    (287/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.444300828 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.376109796 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.095985679 seconds)
    (290/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.767638969 seconds)
    (291/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.657064558 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.247176938 seconds)
    (293/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.232975678 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.348294233 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.290044237 seconds)
    (296/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.367757644 seconds)
    (297/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.140173283 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.02010055 seconds)
    (299/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.344773961 seconds)
    (300/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.350471988 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.479661548 seconds)
    (302/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.334333962 seconds)
    (303/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.792879399 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.289451588 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.907865385 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.87637639 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.278873603 seconds)
    (308/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.240703456 seconds)
    (309/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.646860332 seconds)
  done (took 903.427797449 seconds)
done (took 904.598624441 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.282796348 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.275594572 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.261303661 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.283197373 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.371782695 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.289350874 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.271867394 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.263930225 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.307669237 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.311016173 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.259165067 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.287503744 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.260981087 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.260263664 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.261234915 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.274023733 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.350034192 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.261456568 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.27650469 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.27211945 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.276571256 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.258128527 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.311676915 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.287551423 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.266440491 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.266438303 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.26384438 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.279673844 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.372735824 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.263480215 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.266845426 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.272763037 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.35156856 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.261335414 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.257993828 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.28057751 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.272836765 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.272345801 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.268629106 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.295290693 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.826744462 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.26520752 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.262890573 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.264555834 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.264150555 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.268908446 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.262332924 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.271378701 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.274762393 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.275546389 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.832649479 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.281235138 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.264826962 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.264580481 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.275013218 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.261940902 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.268101916 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.278021887 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.281953058 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.277733086 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.342373219 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.269853838 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.266136395 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.279145293 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.269933027 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.878751447 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.264628061 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.270008446 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.774281804 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.270893352 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.800368786 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.271684912 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.266112421 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.27784241 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.295839615 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.357234186 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.260094794 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.264331132 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.270938645 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.262291433 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.273866645 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.276606914 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.269359001 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.265607112 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.277646043 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.292806437 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.276542544 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.264857793 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.274653273 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.28293842 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.272105543 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.27523151 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.269225918 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.261856867 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.277238474 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.270993305 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.267576536 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.267863536 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.272234702 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.278245513 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.77992422 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.281362268 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.264228447 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.263625718 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.266264048 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.27912471 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.779605833 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.266735846 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.289349199 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.314639096 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.269106306 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.349513013 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.26742382 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.281150399 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.277585734 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.270528245 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.262477029 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.350210609 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.774081674 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.279404033 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.269203227 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.263020309 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.281614388 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.269052738 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.263763843 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.364002305 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.269018386 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.278419175 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.386275279 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.27749838 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.297060886 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.264845837 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.270775087 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.29558808 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.282684215 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.297985684 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.27078595 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.281827535 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.282704032 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.264850422 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.277494321 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.278457798 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.269255312 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.275141659 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.263338651 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.299176427 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.277690756 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.278748059 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.290000392 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.38846284 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.266506056 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.350379593 seconds)
done (took 216.134710324 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.32526719 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.261836931 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.349717323 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.264084651 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.36446186 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.363607269 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.260118032 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.261114924 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.261504494 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.705455482 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.26192866 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.262141215 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.263625239 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.261754512 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.347009012 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.264833481 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.261485169 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.609438702 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.263963156 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.333629449 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.262690263 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.262460094 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.263955973 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.647660279 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.255931336 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.260989659 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.333755798 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.26466112 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.611455353 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.257507358 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.260909935 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.610955101 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.353854062 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.281030927 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.274099388 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.271469113 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.366634488 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.282751547 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.345363229 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.345975852 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.350290054 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.303459964 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.257377655 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.257410818 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.265376448 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.265875294 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.264010341 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.292819942 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.260364754 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.262596945 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.610015868 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.276127429 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.264120368 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.265321037 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.265203891 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.295375326 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.264272475 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.265902268 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.356582632 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.266752199 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.327781496 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.647935914 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.667648449 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.265200986 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.265205677 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.264463744 seconds)
  done (took 143.902852155 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.332290784 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.338439243 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.379549319 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.26765006 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.316220442 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.384784454 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.265924979 seconds)
  done (took 10.47955835 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.270949632 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.268087917 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.316039541 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.315674424 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.266089482 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.420646462 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.268359839 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.277166802 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.264614867 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.319446551 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.269398702 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.268309486 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.274013884 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.268452867 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.314572902 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.277797586 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.381967393 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.267066214 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.267503762 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.417732507 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.265445784 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.27507982 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.318640833 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.278230793 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.270183426 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.273049958 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.83543987 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.268506518 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.264955393 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.268597325 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.266982634 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.306841283 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.26943785 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.264569545 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.265496654 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.383879445 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.268598301 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.266820288 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.26902596 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.263362653 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.268274608 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.269298318 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.268552689 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.268126313 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.269501843 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.291885584 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.269045231 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.269361047 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.268933626 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.269673043 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.319356355 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.270534083 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.267265965 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.266623236 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.323978419 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.276967349 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.270017077 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.268082529 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.270128362 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.266901123 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.419513859 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.315900946 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.269398022 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.31864931 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.269680794 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.271110454 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.26992712 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.270355498 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.323583433 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.270138967 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.317807256 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.268146905 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.424224507 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.292292512 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.271532835 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.272406063 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.271911446 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.270964053 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.263889901 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.27701722 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.26811164 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.271633131 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.276413837 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.269090732 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.268174633 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.37269661 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.37928802 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.268459676 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.283189814 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.275713239 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.269258191 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.323497568 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.270799253 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.269334996 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.322512273 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.383978989 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.322842171 seconds)
  done (took 146.871304964 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.275169392 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.279452271 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.273196109 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.286805152 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.271296882 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.271902444 seconds)
  done (took 8.857462816 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.27483014 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.274979854 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.27356638 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.272819189 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.272672373 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.27346196 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.273367119 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.272925583 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.276589804 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.273944733 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.274000817 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.27563105 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.274116687 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.273258952 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.273696928 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.272742069 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.273008198 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.271210849 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.273540853 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.27355828 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.377573547 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.273307717 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.273000884 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.273574492 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.279259228 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.273875852 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.280742942 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.274470005 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.27452912 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.281433361 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.27590901 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.275092454 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.274319255 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.279636555 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.27722932 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.273851506 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.278321015 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.277131968 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.272255012 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.27515674 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.277832762 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.274227844 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.274225768 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.276651267 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.276818587 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.279287272 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.280583638 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.281039882 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.27533139 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.277481681 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.277748005 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.274956599 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.275805436 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.276732336 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.276113256 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.278807486 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.281782643 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.275924661 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.274769583 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.275684204 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.277196016 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.276754295 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.277733257 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.280137116 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.272594603 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.276990196 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.276136945 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.278454146 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.275309556 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.27586677 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.278820988 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.27303802 seconds)
  done (took 94.158199305 seconds)
done (took 405.460308111 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.771737444 seconds)
  done (took 7.976568422 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.37073926 seconds)
  done (took 7.576383614 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.992255948 seconds)
  done (took 23.202440192 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.364712109 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.272099947 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.272806061 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.275464056 seconds)
  done (took 26.390000311 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.828102897 seconds)
  done (took 8.033525727 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.268346077 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.268761173 seconds)
  done (took 13.742735183 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.820226795 seconds)
  done (took 8.025539961 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.883777657 seconds)
  done (took 8.093112006 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.269471093 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.271071294 seconds)
  done (took 13.995378993 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.253664669 seconds)
  done (took 7.45781906 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.376384021 seconds)
  done (took 8.581902028 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.280049159 seconds)
  done (took 7.486927836 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.326499214 seconds)
  done (took 7.531331557 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.772200576 seconds)
  done (took 9.976197065 seconds)
done (took 159.273283442 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.268991457 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.270481064 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.268551972 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.27072302 seconds)
  done (took 26.284717286 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.310719717 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.31065164 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.312078499 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.320865761 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.312819426 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.311258366 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.302547123 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.302878452 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.32246387 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.312825666 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.31252645 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.312735745 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.311148649 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.303330207 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.314020855 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.313418734 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.322382013 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.313294134 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.304492886 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.314524515 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.27877254 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.321892178 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.315111249 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.278324751 seconds)
  done (took 32.642150804 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.477853125 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.350656468 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.434727581 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.329136806 seconds)
  done (took 6.798380196 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.330561418 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.332979785 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.345436851 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.381540247 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.416617492 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.341832764 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.306419287 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.300805194 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.286570329 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.333834737 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.408812504 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.348274124 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.424214749 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.278741938 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.464564407 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.279049785 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.279145967 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.330606631 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.38389323 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.399078598 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.279905742 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.331138459 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.33576066 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.347981463 seconds)
  done (took 33.474782768 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.279123924 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.287360535 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.285491187 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.279613164 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.278879832 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.27932426 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.286081869 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.280378552 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.300267944 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.280537502 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.278646945 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.278750054 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.278025718 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.280809342 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.278627452 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.291542382 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.293201277 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.280247407 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.283555902 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.28535037 seconds)
  done (took 26.874870419 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.272311261 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.126433756 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.623669293 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.528903138 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.273474157 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.27310821 seconds)
  done (took 27.305825027 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.355666572 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.494878754 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.280147365 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.66474616 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.741109769 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.282406853 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.279908562 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.534744788 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.866135356 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.881499932 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.344601307 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.348995151 seconds)
  done (took 19.285103886 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.290972643 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.277853836 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.293086219 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.294202777 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.339194597 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.283541343 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.286960139 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.274453758 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.344702331 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.342831143 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.284069631 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.341723901 seconds)
  done (took 36.863501677 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363142292 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.324937449 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.378349566 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.116315716 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.007528646 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.488387999 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.168086764 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.719406559 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.285253236 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549802257 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276608867 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370836731 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.53425261 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283507453 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.282224118 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.3579573 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508764534 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79222391 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278290408 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.485939636 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307620291 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.281226582 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.587533741 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.311925074 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.490390602 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.259563273 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.5384226 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.054180622 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584557182 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.293192167 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287832965 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276450845 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552113526 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96285617 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374224991 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288631776 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.148714446 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.909588507 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.264364179 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.483439304 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284950832 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.284909005 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288470086 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279213827 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.21368568 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.29033106 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.727153186 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.285618705 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.98994909 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.279845232 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.289165232 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372502963 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.283219418 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.270433359 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.407570896 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.286320289 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.276552885 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285012597 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.30770891 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.043616308 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292728505 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.218528792 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.75862073 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.587672375 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944806851 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.382138707 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.283827649 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.283232721 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.214150713 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.552051385 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300476449 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416997237 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.304647865 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.940670206 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032354493 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.285222647 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.214701622 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866194711 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.281317917 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.219195478 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.508659452 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.057100187 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220118689 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.228974654 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.214553308 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037989194 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289612954 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.716388734 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.286872058 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.719301394 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.300254189 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302413876 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309357985 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.50966952 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.168987058 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280238553 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.286651316 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402950894 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303074431 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.722867777 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221433411 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.285531422 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539494701 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.492474831 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.280400599 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.371472064 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.497488528 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286478813 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.301880823 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.284128432 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.297282569 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.895604036 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.299932465 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.047053399 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303368542 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.060659112 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098023218 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295440848 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.387548492 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.29148753 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545051661 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.099901384 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.165865605 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349265725 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.285523771 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.282337771 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.595381 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.14021193 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.16426227 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.283994123 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28990955 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.297126986 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.282351535 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241398251 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.291797811 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28956631 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.068086228 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.507730019 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.282853968 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563766732 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218246186 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422772172 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.299837006 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.508619293 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.557096574 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.282060362 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545368836 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282090429 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.305653046 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.30028831 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301554504 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381489967 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305510093 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.284371068 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.564134395 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.287719983 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.287658081 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.622355455 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.066873915 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286052532 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.288918108 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.182759998 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906843204 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261027873 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.293218017 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180598637 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.297917151 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351951449 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.290767928 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.295480059 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.250786832 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.245185645 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.296197091 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.282570988 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.510670483 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.296943862 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.521796949 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368122868 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.492908169 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.914941344 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.304500865 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.219362493 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.996565761 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.978725457 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286429327 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.487006173 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.285951285 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294562126 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.296818004 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.944626317 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.907174567 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.293415225 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.51321369 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.297287871 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.297184625 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.29223409 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285668798 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.226773188 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.066563913 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.294085697 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.302659563 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430216338 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.299497739 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.220687708 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.803206133 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.292592168 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.286980506 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.065517413 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321196059 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.53116031 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781637188 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550511398 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.112908946 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.30356637 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.70292476 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.326222434 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.286157858 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290275545 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296064945 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.299251682 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300443595 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.298855116 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.580350353 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.741531153 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856989658 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071711442 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877810204 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317963938 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.305031548 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.175931334 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.737063669 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228383024 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.948362602 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.49113109 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.73638824 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25087701 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499511563 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.618718466 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.110835089 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.29823322 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.517259604 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306793194 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.298809145 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.306466886 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.501217872 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322832646 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.294662107 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.223156431 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.574130717 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.528808742 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.289002138 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374961563 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740606976 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.296985126 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.074305332 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.287781034 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.742333226 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477669951 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.842715938 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.684566467 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.289768163 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.308254994 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.780691992 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.299001203 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.819468764 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972716952 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.293496203 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.504786375 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236131457 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.301380496 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.301295542 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.290514129 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.726080523 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.291893087 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.55249218 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.301918156 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22444566 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.291981567 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85412514 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.14675491 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.295727199 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289596045 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093246667 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.29155734 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604787637 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.307080249 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.242733991 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297979017 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.225521483 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.225472137 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.983899298 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.293741639 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261461598 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825277368 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.71926837 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.365220144 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314859218 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146904863 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.548579198 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.304582814 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.912696381 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517525476 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.233668226 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314125242 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.391324008 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305744476 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.282690096 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.173480501 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.527294582 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.182626098 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.51867364 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.400731273 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.204533711 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.289742284 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.509723606 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.175878214 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.291852865 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571642971 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.003138178 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.311021732 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042541119 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318611467 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.291387766 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.318642839 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.773382907 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.300595215 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364258236 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.303644981 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.304512737 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.303524474 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476644574 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307796334 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299284604 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.306499192 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387149221 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.103269916 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.257586661 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.072522504 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920984996 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069639387 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.917359492 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.306336635 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.293369441 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292902454 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227874751 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442871137 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.822010735 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566727178 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412920129 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.853499248 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321494564 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.304606281 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.309531073 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.511972232 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.570382903 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.171741579 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294502864 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.963326418 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.17788429 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.306554984 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.506966611 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832995585 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893030781 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420214768 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.296664126 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.744313561 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571208551 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.388111621 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.294833651 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.888782713 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.318484221 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.749831561 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.305670482 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295988905 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448687491 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.306071184 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990319755 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.306693816 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.451714611 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.069872056 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.562318228 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.560069502 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.830062701 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.309019904 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923328853 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.053002124 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566330296 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367508394 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307505638 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.400245637 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442537404 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.299569507 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.179117982 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298597565 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145012463 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.005800209 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.30655563 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921784746 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.562619972 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.293226537 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.301509549 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319619925 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.307431997 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.521574652 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065356948 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.522583133 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.307398232 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.299012634 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.871379335 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923254225 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.310865678 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.23331044 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.300633578 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553491649 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.532626505 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.32315704 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.749765127 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.008982664 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890979424 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.272845934 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32007173 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.298027692 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.048256905 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921710254 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.234533805 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823802515 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.960389244 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.309191802 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.578613437 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.303836489 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.308195238 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579342766 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.302445848 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.301249765 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.316645078 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.924425008 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123213547 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.298520919 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.584295615 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.241144478 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.527718832 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.998229277 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241996758 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.304803058 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.497289662 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.305007854 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419985386 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.311885449 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.307029279 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311700213 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.066464768 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.591777183 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.30560338 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.29053316 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.287866996 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.315354582 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31064102 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541792681 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30623681 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.973691566 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.650759407 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.557321594 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.300476281 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.290685679 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.304353707 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302587852 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.026561458 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.278644133 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.950223807 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907902175 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.303186828 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.316094417 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.305838539 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.517645264 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.514413568 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.311993958 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.318389333 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300443958 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.321393242 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.206927264 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.074785479 seconds)
  done (took 1574.676685637 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.317384304 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.349214677 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.315494856 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.330636138 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.35731928 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.313117301 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.380682931 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.317506053 seconds)
  done (took 51.916466557 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.300803965 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.458857761 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.332728224 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.312676542 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.311359731 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.302289888 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.806403389 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.305923476 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.310507422 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.312168025 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.303273291 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.311372746 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.020193122 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.316877614 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.314929047 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.297986357 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.310183954 seconds)
  done (took 64.871952677 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.313608868 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.651782604 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.324257466 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.306881198 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.577041861 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.304495847 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.554947319 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.357211599 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.312016321 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.514578622 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.979802556 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.324093998 seconds)
  done (took 79.758240863 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.310373771 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.309544683 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.309000202 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.310607601 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.31101395 seconds)
  done (took 7.785884813 seconds)
done (took 1989.744456688 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.723094641 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.066984386 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.039378796 seconds)
  done (took 5.344216097 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.449038458 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.501190792 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.68491551 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.67752647 seconds)
  done (took 7.549020491 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.578855576 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.686767261 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.491696526 seconds)
  done (took 5.992742385 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.848426122 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.308712806 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.454947824 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.300730338 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.308421292 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.308364566 seconds)
  done (took 20.155696496 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.308656652 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.310308226 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.308281144 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.31126312 seconds)
  done (took 6.477421706 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.28739459 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.016251426 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.291055849 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.306892754 seconds)
  done (took 18.138248612 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.05478848 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.066107468 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.053549753 seconds)
  done (took 7.411311223 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.305205393 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.149490298 seconds)
  done (took 9.692595736 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.62924731 seconds)
  done (took 2.86603409 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.44047615 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.638507229 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.451733879 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.333823208 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.437323132 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.559813432 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.13009898 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.662124539 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.323451176 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.718389446 seconds)
  done (took 28.935177025 seconds)
done (took 126.132132388 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.395771416 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.705588002 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.508926837 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.40739114 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.534732454 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.509207517 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.799152335 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.373558248 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.875658461 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.866985514 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.413047199 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.535903586 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.526062043 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.706927764 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.524938305 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.707726702 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.53743887 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.445772267 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.093199588 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.251931965 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.802203725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.003662489 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.233630184 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.025883023 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.537576045 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.46027379 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.583085598 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.708216009 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.268541693 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.608532021 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.461051961 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.309687226 seconds)
  done (took 194.960811998 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.321857028 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.30672194 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.316357549 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.310055058 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.305507217 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.307689149 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.305679529 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.320810359 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.305638234 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.30695597 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.315034349 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.313095808 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.323587696 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.307587874 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.326903414 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.333237542 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.306573289 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.306660245 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.306648005 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.306405944 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.329279866 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.335207173 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.307321694 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.307500665 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.30632437 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.307312427 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.328433859 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.306976972 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.321420397 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.305929465 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.323896937 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.322576167 seconds)
  done (took 203.294863647 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.306239811 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.307054014 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.328099581 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.307197166 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.31896906 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.309840785 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.309180604 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.31434583 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.314487755 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.309108959 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.324555891 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.315112885 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.31051454 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.3315196 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.310986935 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.307890241 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.319727186 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.318896926 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.308844524 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.307875533 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.308920453 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.315633422 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.307892594 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.307781669 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.331786752 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.30934484 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.320674174 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.309030125 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.32580042 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.329136018 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.310501879 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.3084964 seconds)
  done (took 203.307404127 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.506328896 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.317596473 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.321309646 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.255626343 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.318362783 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.317083289 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.317059791 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.515267784 seconds)
  done (took 14.110980049 seconds)
done (took 616.910944276 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.701785382 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.405852639 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.520286808 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.339317959 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.167315971 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.338064512 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.338186347 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.517201432 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.271793541 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.519461447 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.632764877 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.337182435 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.783213139 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.33761056 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.596625501 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.440819254 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.217955653 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.338128861 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.669673862 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.912987263 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.604172339 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.876264112 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.516675844 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.271407666 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.784088407 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.876000157 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.112123001 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.220736567 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.33939579 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.673108524 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.081669734 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.377725739 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.403836917 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.386715938 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.441382899 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.418228323 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.381943334 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.385892365 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.529266948 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.633948013 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.934163061 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.093146095 seconds)
  done (took 91.972859445 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.306544579 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.307234624 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.306404418 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.307429215 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.3077061 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.305638326 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.307286412 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.306274123 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.307294546 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.306245496 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.306321786 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.308918946 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.305676942 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.307808097 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.306662858 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.306319079 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.307872215 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.309511415 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.306913481 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.30687471 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.306916712 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.307648795 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.307594967 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.308509426 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.308202608 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.310185976 seconds)
  done (took 35.236498477 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.321510101 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.589394664 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.751585611 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.326029017 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.320971125 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.325474939 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.405867393 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.326949794 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.322932 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.325604316 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.498652673 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.325176804 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.35985686 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.787965714 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.329263656 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.323224399 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.322623359 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.32120738 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.601799838 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.337692361 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.407477347 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.324689943 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.406816337 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.336626298 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.324403668 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.323031681 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.326425238 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.884938169 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.32888224 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.497592609 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.192221927 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.40996653 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.82720075 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.772458451 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.217898355 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.33015534 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.323511315 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.50304409 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.325119287 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.323283068 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.407555805 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.327177099 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.769749178 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.972533722 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.341754323 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.324824165 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.903264125 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.502015165 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.591516287 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.331479439 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.795980595 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.33195096 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.326458251 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.325629743 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.591857169 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.330653656 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.324373079 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.918908958 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.346994028 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.407743103 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.330390842 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.325406263 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.602267509 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.32520494 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.585417618 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.326779779 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.334093112 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.325931586 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.767943701 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.327916822 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.997686875 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.342460258 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.326889835 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.498871317 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.585712506 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.93749997 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.328898587 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.607007249 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.834902878 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.408939673 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.334833124 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.871931283 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.411565855 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.333506889 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.330605409 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.328802598 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.326321887 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.378217696 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.407668655 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.926933588 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.98170158 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.93779303 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.429502878 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.338843095 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.327336361 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.921704746 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.346268208 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.327460312 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.765959783 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.991682562 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.343601434 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.334769413 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.978913542 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.344746316 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.412816373 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.337716204 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.776030956 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.32753069 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.379246268 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.328229811 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.334105841 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.33101949 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.411520633 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.330240373 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.329076605 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.964923851 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.529593509 seconds)
  done (took 175.967162476 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.319708004 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.338397822 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.327516225 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.321340089 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.319764368 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.328524039 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.319870435 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.321976682 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.325668486 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.321630162 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.321739393 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.320357048 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.324137198 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.338753154 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.330062126 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.328987001 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.932166652 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.321292907 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.32223293 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.323183596 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.141226882 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.321801613 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.323887859 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.3227281 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.323992327 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.322829643 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.346015244 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.324387954 seconds)
  done (took 151.78926228 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.33045568 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.936381237 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.330791338 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.47117665 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.352516262 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.328320597 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.470196234 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.390984553 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.330455019 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.327737173 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.328446458 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.654521191 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.33199108 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.885711739 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.53819097 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.476851599 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.88473788 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.331282819 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.328502128 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.330116655 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.473084548 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.34036496 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.656855348 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.940004378 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.332109601 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.941210746 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.3203518 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.332740397 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.329595065 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.94382994 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.328400058 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.657861853 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.413000815 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.39414284 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.944682343 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.890150829 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.889827581 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.489841299 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.33010981 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.329714859 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.33027836 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.319482503 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.972167921 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.33891401 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.331263738 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.966250457 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.355417318 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.332307538 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.340235624 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.330090508 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.395059199 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.395704662 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.679604142 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.980691036 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.42012035 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.352503877 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.472402786 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.728842621 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.334111482 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.88732504 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.319382111 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.973135503 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.340966367 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.320734828 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.331750995 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.338515215 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.493232796 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.473220922 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.889071382 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.331440087 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.889595427 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.494550059 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.331874889 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.332223312 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.333856957 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.976413648 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.89708368 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.494703791 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.476449208 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.544532245 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.327451442 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.331412183 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.321753271 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.414964662 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.332769539 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.975130772 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.891490684 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.334746544 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.333646767 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.334288675 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.333540731 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.526000399 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.960045762 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.416937991 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.887923619 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.678244875 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.662369802 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.333762623 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.398371293 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.337763918 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.665066495 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.335286797 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.395598623 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.796612901 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.665574555 seconds)
  done (took 160.733087309 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.600575909 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.61887048 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.431982948 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.451610519 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.957000434 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.923031091 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.606645097 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.464829771 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.453077999 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.58490424 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.591754068 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.431437338 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.513790109 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.422952688 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.08530797 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.404539676 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.429639354 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.462292626 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.434035468 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.387311536 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.993982125 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.634217973 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.512482195 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.369740165 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.435298502 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.128406948 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.903260197 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.908600199 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.514483526 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.737558732 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.878564142 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.504505992 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.34265386 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.027851761 seconds)
  done (took 65.408423986 seconds)
done (took 682.349881486 seconds)
SAVING RESULT...
DONE!
