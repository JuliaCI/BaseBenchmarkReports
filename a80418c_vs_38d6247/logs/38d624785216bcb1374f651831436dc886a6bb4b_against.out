cset: moving following pidspec: 28563
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.244512586 seconds)
loading group "string"... done (took 0.571774291 seconds)
loading group "linalg"... done (took 7.263568816 seconds)
loading group "parallel"... done (took 0.169871082 seconds)
loading group "find"... done (took 1.173324461 seconds)
loading group "tuple"... done (took 2.024828324 seconds)
loading group "dates"... done (took 1.284959088 seconds)
loading group "micro"... done (took 0.238094209 seconds)
loading group "io"... done (took 0.984636498 seconds)
loading group "scalar"... done (took 39.978865215 seconds)
loading group "sparse"... done (took 12.745330534 seconds)
loading group "broadcast"... done (took 1.006643622 seconds)
loading group "union"... done (took 13.914722317 seconds)
loading group "simd"... done (took 4.681754489 seconds)
loading group "random"... done (took 9.381084724 seconds)
loading group "problem"... done (took 1.973668275 seconds)
loading group "array"... done (took 22.272409752 seconds)
loading group "misc"... done (took 2.02463498 seconds)
loading group "sort"... done (took 3.406409113 seconds)
loading group "collection"... done (took 19.237578651 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540320883 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140490606 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118809662 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.136093167 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18704066 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131245742 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127356672 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101959491 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.915096929 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144537162 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137915913 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.503054643 seconds)
done (took 4.931872934 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.198025861 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086641805 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094824312 seconds)
  done (took 0.858026121 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066419075 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127013002 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065394819 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.082645019 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066537758 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080932147 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067425445 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065883399 seconds)
  done (took 1.240325877 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073797437 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068199859 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085059064 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067877566 seconds)
  done (took 0.979787893 seconds)
done (took 4.031233856 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.928909043 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.240104295 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192994033 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.453552401 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.151597616 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.190631581 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.666400768 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.364161671 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.20776627 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.073162841 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.122289617 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.373748133 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124979023 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.705291272 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075390492 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107380909 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.162548806 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.432626401 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082473608 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082981967 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103885501 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130959057 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101087436 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089553947 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.157802041 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069968335 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.150187144 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096360686 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067899594 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.258566251 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172892012 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.700358256 seconds)
  done (took 10.560549554 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097473412 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.11946536 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069144181 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141502866 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103158579 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.08710267 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071303266 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082634478 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093081096 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.161247408 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116076824 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107612919 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08151378 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070908196 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.100101714 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214423268 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106865531 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086626317 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086082162 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076777051 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123253115 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084034686 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095088411 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079923706 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151266638 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193823777 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096999476 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112080937 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068763164 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09874716 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.129738029 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131508915 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064905157 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083496581 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.156370872 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095299931 seconds)
  done (took 4.537781705 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.070503212 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.097740172 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.174625187 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.109264874 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154279939 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067661643 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108775336 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.128396554 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065921961 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099372563 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244408149 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.088655692 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.45771263 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127706291 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102376061 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069822813 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06869419 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.084290806 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.527166639 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.110217883 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.137688898 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082898522 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092445275 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070488629 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.718487895 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083046254 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066990752 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067653294 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.075110836 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147273497 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068758175 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.187951552 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088185089 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067991576 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12301408 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192277629 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096198751 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120306572 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067261405 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065678072 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161103351 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091400705 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067024176 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107092829 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104893872 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121532739 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083734655 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068599619 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182000276 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067130736 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101675879 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.90243002 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165855281 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092939992 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065942421 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289694629 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088391663 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085378386 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064333793 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.262827171 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.175545041 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084987715 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067608259 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066201217 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085538816 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.727970374 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067834677 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.944924071 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071890651 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076669635 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086048719 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067233521 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090958543 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074219389 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101368309 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067575998 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069172725 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083360963 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066149748 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067976438 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.081279344 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083571547 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205126842 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.087704215 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066619399 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.08099024 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06552314 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08576517 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113955807 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070010036 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082666613 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100337211 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085278776 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067687006 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119829093 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067732819 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100840454 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085932892 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114110405 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081934815 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.125024912 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068019384 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114462197 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071753466 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115705754 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096274003 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069252412 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156023835 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065505196 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064631021 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08528435 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065289642 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084444871 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069679924 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07860775 seconds)
  done (took 21.837530927 seconds)
done (took 38.687357654 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.308014344 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093724408 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09367102 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077163519 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093914799 seconds)
  done (took 1.42682786 seconds)
done (took 2.157645531 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.133811296 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.119849385 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063873298 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114733884 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06398483 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119556338 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116750261 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082404213 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118070803 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065463648 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113503945 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065470124 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06429158 seconds)
  done (took 2.002722611 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082701137 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084528587 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086020565 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081452774 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063224514 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098290967 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080114496 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104508975 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080658015 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071440981 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080373658 seconds)
  done (took 1.644195256 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081523045 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083419363 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084995263 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080613726 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062642324 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096264582 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07932273 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100982254 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080191099 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071795934 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080200496 seconds)
  done (took 1.634537892 seconds)
done (took 6.002995266 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077920965 seconds)
  done (took 0.803014419 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.733614393 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.660495987 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.099523445 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.135522281 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.215865832 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.155359407 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.450246782 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110375197 seconds)
  done (took 10.463489312 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.10091982 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.099788818 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071544545 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086305429 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071600135 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070482841 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085853843 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071736861 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087301228 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070851566 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06933588 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08747971 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071612787 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084657312 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069106503 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086794781 seconds)
  done (took 2.079131101 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.104832303 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.104049143 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091755624 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076129329 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090323495 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073210687 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091964769 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075748789 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087601271 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073676126 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076979915 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091193908 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088341207 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066419192 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075076538 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092715579 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072211191 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.092024815 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075910423 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.09209861 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077485767 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.08124293 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073597232 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091731812 seconds)
  done (took 2.851583927 seconds)
done (took 16.924311431 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116957426 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087455394 seconds)
  done (took 0.938135123 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081953532 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09810414 seconds)
  done (took 0.920014672 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084123647 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081719101 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089729354 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093870625 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067092588 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082811584 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.102966214 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067778774 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067324373 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082382817 seconds)
  done (took 1.559901079 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070153424 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095072933 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070489042 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09727876 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074284817 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081120822 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074143973 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068501414 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095696459 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063783519 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.087370726 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099675895 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072473702 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101061391 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074209093 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085592055 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071273897 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084329471 seconds)
  done (took 2.206146602 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066173026 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067045988 seconds)
  done (took 0.873534462 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06739062 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065082728 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082988937 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066849743 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080299121 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063821362 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080075782 seconds)
  done (took 1.249198163 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.410845077 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108803773 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.248324845 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.088614843 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105510782 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.281166681 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084187859 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071901242 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089277983 seconds)
  done (took 2.267561446 seconds)
done (took 10.74814028 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080220461 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085409326 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110812091 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.421681366 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093362194 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.081344246 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131296405 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.226901712 seconds)
done (took 1.969817906 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126945439 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.619231378 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404858079 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.215029404 seconds)
  done (took 1.984191896 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.380565351 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090301529 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073682863 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067776138 seconds)
  done (took 1.361432068 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066261111 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070035272 seconds)
  done (took 0.885157051 seconds)
done (took 5.100305895 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066825067 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067194852 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081070463 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066750666 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.064438457 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081280819 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.099763785 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085812377 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067022733 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066671426 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.084341006 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067275966 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067085442 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082291795 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064319795 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066955668 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080492983 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064447221 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064402584 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08065685 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065314608 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067135257 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080328759 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065209546 seconds)
  done (took 2.529433089 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085729909 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084463679 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072519451 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072495095 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.08757718 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073280656 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088951247 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067988163 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088777053 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069380637 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08703744 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071291743 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070098169 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087758291 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069772658 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088104813 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073110638 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084615738 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07010366 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088601073 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072898723 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067678481 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.087640417 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073923053 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.088759421 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071219685 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.086101518 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067922886 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08970505 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07136806 seconds)
  done (took 3.111715772 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071568765 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.0649866 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081781723 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07272515 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065154627 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08303619 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064658816 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064773914 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082697403 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064733177 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.067170916 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.08139535 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065444884 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082756447 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065870781 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068753524 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.099104301 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065568298 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065365702 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082387531 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068081904 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06428072 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082055183 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064474566 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081494754 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064499101 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065956373 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080858747 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065612459 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064232896 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084469382 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068331699 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064706573 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.088108577 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068819335 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064479122 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084972155 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064144142 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065486036 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081502505 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064607236 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064705703 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080919683 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071801017 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064513828 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083825034 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065440652 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083317937 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066133258 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067914649 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081663003 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065388161 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066156082 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082665687 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068838226 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080848395 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065283447 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064629501 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082288294 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064329174 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063920122 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08050985 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067383997 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065323795 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097186881 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07149926 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064640371 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082175618 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066720953 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083892978 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066650474 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078477505 seconds)
  done (took 5.976304682 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119808636 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093820496 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084032936 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066669839 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062801789 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082345373 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068966062 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081270021 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06707442 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08737288 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065661008 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066489926 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082566075 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080310382 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066291151 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083225033 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070756516 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080293441 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06569237 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069002713 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081624028 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068610829 seconds)
  done (took 2.451370553 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.191073098 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088542679 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109727332 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091848802 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069564538 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091676177 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071756469 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087844179 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071838857 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087235411 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069821979 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088656067 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069101328 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069344533 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086343552 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069922868 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.19717516 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069673515 seconds)
  done (took 2.437482032 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079515922 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067291643 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108010297 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067180859 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083808125 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06917298 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090316522 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076709774 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086239151 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067717954 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093742952 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070047747 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069620441 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083714325 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069883836 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084158925 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069983008 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067692825 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092750193 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072246399 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089595678 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076522642 seconds)
  done (took 2.493951331 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082253389 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069219708 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103529998 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069774394 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080318171 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065492991 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090409166 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067154102 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090693761 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069546116 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067798172 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083419804 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072061236 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084386082 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072742517 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067766238 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085860096 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067851277 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086367807 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06379624 seconds)
  done (took 2.300706704 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088435353 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085538105 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069466286 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094071238 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069593658 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068934419 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094245849 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068832684 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085188238 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109758955 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069582398 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068835469 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094707544 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090270332 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068776164 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093865392 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077191968 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094563107 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06896393 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085632288 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094021472 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085993858 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077919908 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085570531 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06940957 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068350555 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085843944 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073638262 seconds)
  done (took 3.049684891 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067661029 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067992683 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082003868 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06523772 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064941292 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082116579 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065106754 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.0648363 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084277714 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0652 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067440266 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084517133 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067723005 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066971065 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084449766 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066996173 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06696392 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.081750194 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065611366 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065531956 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084486754 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067605612 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066791619 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081995491 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06500078 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06787627 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082516019 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06524011 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067753162 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081633889 seconds)
  done (took 2.921543821 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076396198 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074040394 seconds)
  done (took 0.913966345 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064650571 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082095181 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081808451 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071286241 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089011495 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068685798 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092927096 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072394553 seconds)
  done (took 1.387886312 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083025033 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078191095 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085920242 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081336007 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095500815 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084814398 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159498352 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086781903 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075319332 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065672706 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.098632685 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067426562 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091580104 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068090705 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072611202 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091949788 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065466015 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091091665 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070250086 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06642278 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085739662 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079824963 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090210423 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064806988 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068913976 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094633321 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079853885 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.086482884 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071176621 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093143819 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073465754 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062126157 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08479073 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068703375 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066219018 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093946739 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084689837 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088220288 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077861179 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086494017 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078898122 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080502684 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072363568 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074659818 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095394304 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068591038 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085952517 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06356029 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.0651449 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087577932 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063548364 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08464463 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063428752 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075666272 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089145668 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079339641 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084367084 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069509326 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071401643 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089175994 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07466202 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087898548 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070997299 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067830624 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092149061 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072584332 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095603648 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063763085 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062329222 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083581391 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078431342 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108560955 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074522393 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085796245 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069244581 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06604037 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089670548 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06947925 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091498746 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073939447 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068464104 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091208935 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07575374 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085664539 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070914736 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.0923445 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06612605 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070039609 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08302828 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084718682 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084747945 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065650006 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065394534 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096694081 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071375956 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084673384 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065891225 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075169325 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079957005 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069384004 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086160044 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068651183 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078615767 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090565669 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07332104 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.093990097 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07545702 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085894403 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071487531 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06543114 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086036338 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067201453 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092175757 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062313659 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071243196 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085503084 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068918571 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094230114 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066109498 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068105091 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093512884 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073809955 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083707707 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065061926 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070870443 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08567186 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072196743 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094257674 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067015635 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063532673 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081151748 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071785585 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067828041 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089262564 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073349533 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089413753 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063356563 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084222492 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072801203 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077177319 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085766041 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068721923 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092689367 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069638864 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067631689 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092430106 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071231 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084362765 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073825053 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.0687736 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080638354 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071649863 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088318025 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066589684 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071933942 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089674484 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071057612 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086501434 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067009457 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073050562 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086556872 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067372803 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085362736 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066598391 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079102756 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087897763 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064328741 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082653636 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076386173 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066178107 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085508584 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067454201 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087988499 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069267565 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066795306 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084790017 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070333753 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097060352 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072532425 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068861161 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09127581 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080765544 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085863709 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07155998 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067648607 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086976984 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069687891 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09414873 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073789728 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091097013 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070675481 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064833761 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091476447 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076654045 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084728767 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066509208 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067427502 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089231807 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073736366 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089214564 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069358443 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065969568 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086891595 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072305703 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088107254 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068202082 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06754724 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09041477 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067720751 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091757217 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069673351 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095723845 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072906325 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063584262 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089167445 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067008791 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091961946 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064453513 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066727794 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08476565 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06994348 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067313823 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08833223 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062936512 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093183763 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075614983 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068398646 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085049564 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068935279 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092314211 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069851528 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071951406 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088881391 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074887108 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096295473 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067869117 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071606946 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096672008 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068543535 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.08033499 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074320181 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066582704 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085106316 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067443607 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084055811 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071681631 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076324586 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.094117146 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062377581 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088420855 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067141526 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066810912 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081548422 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073659813 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088320745 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069199237 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074063872 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086886763 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068977108 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089198236 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.0687048 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069525518 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086882942 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07141495 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086814818 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071907887 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06838961 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088851075 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067854649 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066919057 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087353866 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068789404 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08585736 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074215046 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067826771 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086993977 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071297643 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086987487 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06927094 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069222337 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085530281 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071673102 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086090297 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068259881 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071293901 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081081833 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076170466 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06816395 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093744763 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068802691 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082876023 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073959536 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.0714646 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.091629761 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069469238 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.087605081 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069708023 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067519419 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089874251 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075363643 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.083593819 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079804448 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094631175 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069719588 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071663794 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086111145 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070586452 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067633695 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086848084 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06987962 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086004732 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068212822 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073166342 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088816494 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069613652 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08703076 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068983575 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068485216 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087402805 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063746412 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067349369 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085047599 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068927623 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097002247 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069130245 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085694556 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067550914 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070025361 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085496097 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065692949 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094336013 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077459659 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06838238 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094300947 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067479282 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087766377 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079657739 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.083761767 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066571173 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066197705 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084757287 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076285799 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069130652 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096529114 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068821931 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085998264 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066608278 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06987817 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.08548926 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063863256 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066224539 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09063262 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068122881 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085425688 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068838335 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072091856 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088217349 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078477493 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.086050078 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070006391 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068711374 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.084112169 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067578916 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068011076 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089369951 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069822024 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083917937 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066178516 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068016907 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087416755 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070228865 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068786743 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087934405 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075987548 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086314179 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071992457 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089247606 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06378277 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071627418 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086280716 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068816893 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067752801 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.0902602 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072303627 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087933861 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077593757 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086034695 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069378981 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068941596 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084621349 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068124794 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068463587 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086612542 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067847596 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08780024 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077137957 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067031186 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089651825 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068094629 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086155863 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076002449 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068945039 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09014242 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075958773 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086660801 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070631918 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077146602 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09066748 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072973903 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087820122 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.07105908 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093215893 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06850807 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075263437 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086949569 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070032345 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070431311 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085610007 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069060268 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086772929 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067776291 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07435541 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088017648 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067969567 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086579665 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066609126 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069440859 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090567687 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077456605 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089770706 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071504602 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064104664 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.084240751 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070578332 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065515321 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088152812 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072438126 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092310386 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071625504 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06910291 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085669528 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07804802 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092493421 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.0726992 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066404067 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089912029 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06979631 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088512424 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069801919 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068414079 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088241517 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072717269 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088398475 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068620933 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077177198 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090893885 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070310075 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088339407 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069464212 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06907768 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082201834 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070011645 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070856393 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091770573 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071589914 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087297018 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080325452 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06632625 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086970021 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072023201 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086204424 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073393978 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063336063 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088382934 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070656368 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08774141 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063703299 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068186397 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085039365 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070858501 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067231454 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082274576 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080389247 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096105623 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072780998 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085576763 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068460071 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063766476 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081671175 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068191905 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069465257 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089055697 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080189312 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086318409 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068835242 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064501899 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087037605 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072404893 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090054697 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06618831 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065019016 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086411858 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071825708 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073900795 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086171515 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069158199 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090599546 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070961904 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066101755 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090522558 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065720602 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090519014 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082296654 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088555052 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070308909 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074859898 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09551933 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069184366 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082919911 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070010563 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071518872 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.088023092 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069969265 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088183834 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085378908 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072430745 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087103396 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068023224 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089483009 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068311274 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.0770828 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088756852 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070522893 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091998376 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071047692 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096150193 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072096014 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076591664 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090654575 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072601025 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086007872 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069763034 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067174711 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086364597 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070105945 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088021923 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07398784 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076499145 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086371475 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080143776 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097414029 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071644141 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084016061 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06885712 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068398879 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082572057 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070384685 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067373756 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.086646622 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068499093 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067282492 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088301343 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075815431 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088547341 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070298087 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068356998 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082828607 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071846458 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090264386 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069711202 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066567792 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087762217 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070750266 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072739972 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091824431 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067131103 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089028783 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070810652 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06868693 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082823705 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075292549 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085478426 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07163299 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068227639 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087283514 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070312935 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073011392 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092523144 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069839009 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090234676 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078103975 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08942158 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066397856 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066906154 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092483455 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.0673758 seconds)
  done (took 47.120263245 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111013917 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084244732 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065204042 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082544967 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077818353 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083888463 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064634288 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065251191 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08397075 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068520821 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063294522 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082638852 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074700655 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10805923 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095568646 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069639543 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08255447 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066055859 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06360886 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084270904 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073811567 seconds)
  done (took 2.460969628 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088889551 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.103376909 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079528189 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101860938 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073746087 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100492962 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098004817 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080049388 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101324577 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076262043 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.10241161 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098453029 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076025351 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094879019 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076595142 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09552782 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083255656 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092943374 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.081400867 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099159605 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078035594 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098714372 seconds)
  done (took 2.790303011 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068738328 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067499587 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088538372 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064009267 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068134869 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082427086 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07261182 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065268472 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090616801 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.076105628 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085700148 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067857839 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070857058 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.085034388 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068576883 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06648768 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134922306 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.091627761 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068498687 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08772458 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064000452 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070320114 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.083239947 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065069392 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066353349 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090797235 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069679982 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084993979 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068375426 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068555505 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086730265 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067062778 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069550048 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088235446 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066993897 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067431619 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087132393 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068937751 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082813726 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067087882 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069308547 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.08377873 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069452743 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069036023 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086120516 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067134107 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069026835 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087585208 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064292619 seconds)
  done (took 4.531455628 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087975115 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.14379027 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090529602 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106018962 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.104171796 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095889607 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072116592 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12531451 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067183756 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087125746 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.086303552 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104207791 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068752729 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093467491 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076149795 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088651568 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071482011 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086502769 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073666314 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086857722 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.074420711 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094046206 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084502544 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.101067128 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07315601 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086129989 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06872016 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.092236848 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081965729 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092695552 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074412563 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093302906 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084555582 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.089835295 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068335503 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089720179 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086179078 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088170381 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071745765 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.085071416 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070850499 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092141999 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076009494 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105344269 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069132824 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.093450216 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069816604 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065006018 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.101814007 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089726895 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077155278 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.102726603 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073170115 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087945258 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073656037 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.103620888 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069901303 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086063627 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072492904 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.100482877 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066872607 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091535144 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083509577 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089639329 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076839556 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102446745 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073675984 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091451436 seconds)
  done (took 6.792256296 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077716751 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094494718 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085175817 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104060652 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075188215 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.095477865 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09337874 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075518349 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093055595 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080804548 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093159116 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116037303 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070697179 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077393503 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.09532662 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093667816 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076057809 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093549468 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076741943 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09411279 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075979501 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.10298279 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076355937 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102871653 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12330254 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07097185 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094695454 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076130143 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104100354 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074640981 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10611628 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093685408 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075315786 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102944498 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.106172132 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075944164 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086247519 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075597432 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093919376 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075717425 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089129491 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085187819 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093920358 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071230997 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094539212 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07549059 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103711572 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.106292716 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078850589 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099213578 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076442232 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103357113 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092542226 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076171312 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103228107 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.109252362 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10393273 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102353925 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076161454 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10320483 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102950193 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.091481166 seconds)
  done (took 6.415386464 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089774909 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097746887 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080459857 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084901734 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067414566 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092987773 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06716912 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066830787 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0969387 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077611424 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100588497 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091560071 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076119373 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0992284 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073369553 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095986381 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072850219 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092112822 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077213286 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093023163 seconds)
  done (took 2.520982398 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077768422 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106209141 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070114139 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075137749 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092009481 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075380497 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090872268 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073243297 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089161565 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073026031 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100051876 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08059914 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069569693 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096113322 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098364347 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076366257 seconds)
  done (took 2.171887136 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080886047 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.100033061 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084027342 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089404042 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067634201 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065619426 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089945691 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06583858 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08524219 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084813702 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089576848 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072738105 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068929034 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.088171411 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066658768 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091604506 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065658073 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067226749 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.088613231 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.084256473 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.099901701 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068181701 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.089552163 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.071792581 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068751875 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095370859 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069613135 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.086987038 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067752525 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.089159625 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071200573 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.095888901 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066955947 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067574156 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087422086 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067548444 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.088509828 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070844323 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072688777 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088778193 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068291842 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.088451052 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070049583 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069632613 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08532504 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070679955 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084324153 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07593736 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067400135 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089252789 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06986406 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091246261 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070533893 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099785636 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073926916 seconds)
  done (took 5.185366005 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084123062 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072648122 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085180536 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068268859 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091956926 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071305048 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073425113 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091508753 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072342325 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087399037 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072226623 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072564643 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091067906 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073927687 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090767669 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074068628 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064633953 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.091184172 seconds)
  done (took 2.261632198 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074989418 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070045126 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097359164 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069922478 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089160826 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07241541 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066334307 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087973454 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068599977 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06882305 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089036984 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071811241 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087777633 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072107003 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069023065 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089027893 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072173889 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067342538 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089323023 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065814149 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090850505 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069140987 seconds)
  done (took 2.52914304 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075773481 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095396554 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.167797737 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.111088471 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08598014 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.103277447 seconds)
  done (took 1.474103981 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094320925 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103482409 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0705836 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090494025 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099243309 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070160261 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091912572 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071760771 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101142708 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103980315 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071949311 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101453557 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08189181 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1032005 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096440636 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078245785 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090718239 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071658514 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069230414 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110654325 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090955809 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082396801 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091125239 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071725872 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091382197 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079606269 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100199279 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105571691 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071839912 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100432138 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077266787 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091512111 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081185394 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106666374 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072462757 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101208096 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090869138 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090871775 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096999852 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079972238 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0925224 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078689716 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100997942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095989075 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080502533 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0906879 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07719443 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091333011 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072022052 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117838288 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098998447 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080262299 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097837488 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081303021 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101622006 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117690724 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085809329 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10127441 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098264842 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086543336 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100010972 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097031316 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080491451 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105624159 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078122987 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100729712 seconds)
  done (took 6.791480773 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08634693 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109308674 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07166526 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105113366 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079715053 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092697726 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071274272 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092279301 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071419103 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091475804 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133518461 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072070253 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100096174 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079997254 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091858975 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071482762 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092015692 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099787875 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071226706 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116669342 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072600962 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100365389 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100844537 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081384773 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105306489 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077227255 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091947378 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071846309 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091210437 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07255282 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097329024 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071141406 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100808623 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069705433 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100298217 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091196634 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072513861 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096928318 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073117339 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097576983 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08037789 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111355291 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091849236 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072526431 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105845704 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072445287 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091970981 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071428549 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091562705 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071820612 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104267489 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085955731 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106413775 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100284692 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072569044 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091886817 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072664118 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092231154 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072419402 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097517984 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081002456 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091552545 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117219346 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072379745 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091578098 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081140319 seconds)
  done (took 6.667791447 seconds)
done (took 130.03212597 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202266151 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187744412 seconds)
  done (took 1.224631567 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072052688 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098963158 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101411039 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131771605 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.09079579 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103006582 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101667978 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.101955045 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070424713 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090008631 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070525814 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071456583 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.155155665 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070237796 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06945461 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092694976 seconds)
  done (took 2.332986141 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097851202 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202122426 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.083754612 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.0898683 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.074135918 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.092831563 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068094193 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075489954 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093963927 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069311979 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072017452 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090976946 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06884551 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069679759 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.093699999 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072597466 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.088783685 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072408129 seconds)
  done (took 2.417300967 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.096836581 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.113164821 seconds)
  done (took 1.055330413 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.206303444 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.125721815 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.210672898 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.428338607 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.253225181 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.28512929 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.179705102 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.180398648 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154417369 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175851902 seconds)
  done (took 3.041353762 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103602141 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.164944277 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.276383367 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139467358 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.111741609 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.088603472 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139917976 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.093180259 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.104809571 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.104972345 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084677703 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.101904299 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101408295 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.098976122 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077733979 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101550519 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103565227 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.09785824 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077918529 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099442347 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101049688 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.090340006 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078971157 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096684376 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.082023918 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.10261939 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069714789 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068920354 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.099932248 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078001374 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.09635615 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.086634843 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.101618949 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.134840076 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10671873 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136827763 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081129397 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095294597 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079125669 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074940832 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.101917624 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101268457 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.08800145 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100305651 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069843094 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080680066 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089939389 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069829485 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098319104 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.081684321 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.097967623 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077117466 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.135628751 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.101986459 seconds)
  done (took 6.268953442 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.768674558 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.117051718 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098973741 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.833620308 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120140334 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086998078 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.732929874 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12222534 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.21181029 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.733210388 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118334564 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080444845 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.211189608 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.218441662 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.934614486 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.271555491 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.618156928 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108896783 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111164404 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136709439 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102135283 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098604958 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115211388 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.413112406 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.078260237 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096760558 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.080768663 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103000014 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.142640426 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086552224 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099326472 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.159790929 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.231750554 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186419143 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.079397255 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073054407 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095674818 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.152814892 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.223266343 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196112098 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162899484 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070837569 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.094970711 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.084635064 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115682778 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071625401 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.143512884 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.155930524 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.151368151 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099445222 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.080753209 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.104483308 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.082616512 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.168173322 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083688822 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.301743975 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.267884421 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09629668 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.082308567 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109252749 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218962574 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107436527 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205218971 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.100485689 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192271769 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073740724 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753375422 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.151510214 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073424034 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100147354 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.082071645 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099291771 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.083641764 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.149974645 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.37488862 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.084834457 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.099302135 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073300232 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22308014 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086309749 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073309228 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165517761 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.078289075 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103910638 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.087067951 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108532819 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.150960645 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.216831574 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.083825914 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102944704 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076807598 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109881711 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.077050516 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.192213824 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.199967891 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.143921459 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.188970946 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105573233 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.14712394 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.149802008 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101875209 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.154121319 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.082441309 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107652785 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083943686 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.198163873 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127552297 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085114374 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098665835 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.080698728 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130449137 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110161045 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.080506237 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.153017142 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456933872 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.149669361 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071014225 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110153024 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.082006926 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.144906689 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09995325 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218682033 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105417654 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.151064801 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.081134231 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09251519 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.083484227 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.144473779 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105238102 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.083204402 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104994065 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080852538 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.215858621 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.197789067 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103994256 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203778516 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.165843624 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079484528 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.152282178 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105282 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147850606 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080381205 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104432116 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076970856 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.761823615 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106964581 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.082368161 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098339159 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.148084047 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095500709 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08547885 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107707273 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070741227 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755254897 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088341746 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104017365 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086311452 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101049005 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.081762869 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101152175 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.078036467 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.142731182 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209384177 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10303341 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.081969016 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10766037 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.142221078 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.078228063 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106954712 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086475374 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108683252 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.082617347 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098709385 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085958242 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149021526 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.166551546 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.178217175 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.571006844 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074663969 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107644664 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.186260396 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095712495 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.247836167 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103216688 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.18341572 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166811722 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083155018 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287646621 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.146951884 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170273333 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08855104 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.154349905 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09321173 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.080551664 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.144979001 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.095990628 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080112452 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.143832855 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107771589 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.084215837 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.940806397 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07400141 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.206027947 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09292123 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.154486194 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07773164 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104050374 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270270276 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074107634 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090069605 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.167314764 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077321585 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10820022 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.690354266 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085742595 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105621447 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100596482 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.179999315 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.14550289 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102933196 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.080435885 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102881573 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.144615031 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.189149238 seconds)
  done (took 39.067422525 seconds)
done (took 56.246628398 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.237748292 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.198561092 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.22942 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.154353813 seconds)
  done (took 1.784052911 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.13280727 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.132549407 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.127180933 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068522002 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.13401545 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068270329 seconds)
  done (took 1.53276564 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.320336696 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.284045263 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.205387518 seconds)
  done (took 1.681134273 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271386578 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.228264088 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.454115267 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.282863546 seconds)
  done (took 2.231595254 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.190168963 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11556712 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071575519 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109585556 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.156125865 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.227627551 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124472676 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.159025641 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.10422515 seconds)
  done (took 2.174265221 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.156152483 seconds)
done (took 10.426777175 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.283685678 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.188294634 seconds)
    (3/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.246177891 seconds)
    (4/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.136076063 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.208480419 seconds)
    (6/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.079556734 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.217471159 seconds)
    (8/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.18005383 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.110348114 seconds)
    (10/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.223890873 seconds)
    (11/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.081998968 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.128318663 seconds)
    (13/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.116370955 seconds)
    (14/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.153320754 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.081906237 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079713961 seconds)
    (17/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.240821673 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.123919925 seconds)
    (19/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.194855751 seconds)
    (20/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.107085291 seconds)
    (21/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.105546288 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.227918268 seconds)
    (23/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07749767 seconds)
    (24/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.079691192 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.170991494 seconds)
    (26/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.120304136 seconds)
    (27/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.23114742 seconds)
    (28/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.205917956 seconds)
    (29/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.080473081 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.176999129 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09588537 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.123597962 seconds)
    (33/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083168571 seconds)
    (34/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.221425051 seconds)
    (35/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.22620215 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.100835003 seconds)
    (37/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.057696534 seconds)
    (38/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.147451662 seconds)
    (39/309) benchmarking ("sort", Float32, false)...
    done (took 0.133307814 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.103446205 seconds)
    (41/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.083034046 seconds)
    (42/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.082059575 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.214302464 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.185537959 seconds)
    (45/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.137017866 seconds)
    (46/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.087625837 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.155658228 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.101217055 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.115664156 seconds)
    (50/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.152856099 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.129787843 seconds)
    (52/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.205088928 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.09955125 seconds)
    (54/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.161998243 seconds)
    (55/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.154096898 seconds)
    (56/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.208486164 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09934827 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.097479968 seconds)
    (59/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.164293388 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.078137853 seconds)
    (61/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054479426 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.118861611 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.099937129 seconds)
    (64/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.1334267 seconds)
    (65/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.142786333 seconds)
    (66/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.105844669 seconds)
    (67/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.107055912 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.129418508 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071781583 seconds)
    (70/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.118672363 seconds)
    (71/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.056548067 seconds)
    (72/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.119314033 seconds)
    (73/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.079777418 seconds)
    (74/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065738259 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.078392797 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.097834901 seconds)
    (77/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.104424889 seconds)
    (78/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.057071449 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069679407 seconds)
    (80/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054515148 seconds)
    (81/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.185475707 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09175426 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070589431 seconds)
    (84/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.055572687 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.093827274 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.071327469 seconds)
    (87/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.08006549 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.119267855 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.198744787 seconds)
    (90/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.143233815 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.117358446 seconds)
    (92/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.113677721 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.163360975 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 0.070650863 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.198409551 seconds)
    (96/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.115477629 seconds)
    (97/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.152489221 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.199410648 seconds)
    (99/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076930825 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.196610866 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.143164888 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099850708 seconds)
    (103/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.163951276 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.097325368 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.14066673 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071082533 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.09408848 seconds)
    (108/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.057122106 seconds)
    (109/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.113804267 seconds)
    (110/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.089963753 seconds)
    (111/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.05596928 seconds)
    (112/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.193148405 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079857811 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.161138253 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.131209282 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.173413615 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.131210667 seconds)
    (118/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.076745223 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.075586401 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.119811406 seconds)
    (121/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.158309722 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078308233 seconds)
    (123/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080457886 seconds)
    (124/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.351850801 seconds)
    (125/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.057307666 seconds)
    (126/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.056149144 seconds)
    (127/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.091034026 seconds)
    (128/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07605041 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069514176 seconds)
    (130/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101805337 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.15198398 seconds)
    (132/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.09717009 seconds)
    (133/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.08062147 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.082420198 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 0.149459356 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.10225975 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.078154733 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097894692 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.170762419 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09871149 seconds)
    (141/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.085786803 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07685268 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.120618732 seconds)
    (144/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071320794 seconds)
    (145/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.100422144 seconds)
    (146/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.16041026 seconds)
    (147/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.07786594 seconds)
    (148/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077212011 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069218498 seconds)
    (150/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.079566498 seconds)
    (151/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.105141487 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077703718 seconds)
    (153/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.164891702 seconds)
    (154/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.097384384 seconds)
    (155/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.055669518 seconds)
    (156/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.056304457 seconds)
    (157/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.165257626 seconds)
    (158/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.070596614 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.093188315 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069400499 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077640675 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.122566999 seconds)
    (163/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.056727553 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.176321612 seconds)
    (165/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054961931 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.197183644 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.072881452 seconds)
    (168/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073364399 seconds)
    (169/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.166260475 seconds)
    (170/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054845813 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.101643377 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072581312 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121466334 seconds)
    (174/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.077952962 seconds)
    (175/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.055151013 seconds)
    (176/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054725993 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.104271601 seconds)
    (178/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.056977532 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.114997052 seconds)
    (180/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085007525 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069193182 seconds)
    (182/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.077736862 seconds)
    (183/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06915294 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092000204 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.079138257 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.070252198 seconds)
    (187/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.070107476 seconds)
    (188/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.078896324 seconds)
    (189/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077925722 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069027288 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.092365435 seconds)
    (192/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056520679 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076772422 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.118289275 seconds)
    (195/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077583653 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.103072772 seconds)
    (197/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.079043028 seconds)
    (198/309) benchmarking ("sort", BigInt, false)...
    done (took 0.214868917 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.098020916 seconds)
    (200/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.055272956 seconds)
    (201/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.112996251 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.102114269 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094698468 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.136291697 seconds)
    (205/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064548827 seconds)
    (206/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.055042661 seconds)
    (207/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.099964707 seconds)
    (208/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07639686 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.07026961 seconds)
    (210/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.131690657 seconds)
    (211/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077108739 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068158564 seconds)
    (213/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094211513 seconds)
    (214/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.083300924 seconds)
    (215/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.113767198 seconds)
    (216/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.109802834 seconds)
    (217/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.099735634 seconds)
    (218/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.055588233 seconds)
    (219/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.074779739 seconds)
    (220/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078753842 seconds)
    (221/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.085497386 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079222916 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.09985246 seconds)
    (224/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.070584614 seconds)
    (225/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071452327 seconds)
    (226/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097211131 seconds)
    (227/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.055395713 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.206088565 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.056081418 seconds)
    (230/309) benchmarking ("sort", Float64, false)...
    done (took 0.15528372 seconds)
    (231/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077165563 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068887663 seconds)
    (233/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.095649797 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075735249 seconds)
    (235/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065683458 seconds)
    (236/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.102253696 seconds)
    (237/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094945681 seconds)
    (238/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.095148857 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068586969 seconds)
    (240/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.199871225 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.071127185 seconds)
    (242/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072761187 seconds)
    (243/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.078950274 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070811346 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.170176307 seconds)
    (246/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06526542 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.169454687 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068913665 seconds)
    (249/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094632128 seconds)
    (250/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.127850515 seconds)
    (251/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.131623793 seconds)
    (252/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071879942 seconds)
    (253/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.066364505 seconds)
    (254/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055406478 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.176283248 seconds)
    (256/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064983839 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.141739168 seconds)
    (258/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065893629 seconds)
    (259/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.10163781 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069992499 seconds)
    (261/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070748498 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093873644 seconds)
    (263/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.074255635 seconds)
    (264/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055983784 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.092972331 seconds)
    (266/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05567646 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.070412279 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.131296153 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076930583 seconds)
    (270/309) benchmarking ("sort", Int8, false)...
    done (took 0.171930041 seconds)
    (271/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069294334 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.080997419 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.102080556 seconds)
    (274/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.057249571 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.102272846 seconds)
    (276/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077002191 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.205160409 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.055823277 seconds)
    (279/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.080129746 seconds)
    (280/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.056406564 seconds)
    (281/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095799618 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.124035472 seconds)
    (283/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069360592 seconds)
    (284/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.055314204 seconds)
    (285/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.094320918 seconds)
    (286/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076802847 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.079131865 seconds)
    (288/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.099169714 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069844152 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068569942 seconds)
    (291/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.09482922 seconds)
    (292/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056767352 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068740113 seconds)
    (294/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079785522 seconds)
    (295/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.113447421 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.079045972 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.169828215 seconds)
    (298/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076080431 seconds)
    (299/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093497471 seconds)
    (300/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.056832325 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.11728012 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.056131982 seconds)
    (303/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055327974 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07533173 seconds)
    (305/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.078389538 seconds)
    (306/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077772741 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075479221 seconds)
    (308/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079158515 seconds)
    (309/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.055837103 seconds)
  done (took 34.293271608 seconds)
done (took 35.162216234 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082710992 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09405459 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.102780575 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094240382 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.106116166 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079754379 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.100452664 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080851943 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.106119529 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084670825 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081013273 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.081538672 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079680574 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.102357485 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080527637 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094195258 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106434924 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077241084 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.100845934 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069039395 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07785151 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092762912 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071583385 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058496954 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.104190585 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077201717 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.099490722 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079125135 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069454258 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.093280126 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072873684 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076967553 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093057871 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.084113659 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076329762 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.101562601 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080943354 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.10302411 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072083766 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.070249422 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.101614774 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069621674 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076502539 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.100306561 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076555442 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.098874468 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07786823 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082826722 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117680127 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07240325 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.101958422 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080087227 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07860601 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.100623919 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074125035 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104408988 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075458592 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119714813 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07908672 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072508835 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.101220982 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077405089 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075836244 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.10157602 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078913266 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10446096 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081450917 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075484059 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.103637254 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07592678 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069869816 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101665321 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073556662 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.093451975 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079889791 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081429792 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.092703392 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075675622 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077618036 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.099033722 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069564047 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07162201 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.094953429 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076236926 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072467167 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.082311055 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073839585 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07654094 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.092866554 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07977494 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.099878148 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076961344 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072537174 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104701452 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070297706 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075900138 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.09380713 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070709257 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.07239778 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.098022349 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069726755 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072316987 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.102043794 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071789309 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076007474 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.105583525 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069752732 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.100686653 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069212349 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069892834 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.107385682 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080491147 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.094016293 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072376947 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069998748 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.100832245 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069788682 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069781801 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.093148862 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070320812 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075833062 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.093840784 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072425261 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077159013 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.107362889 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.070303013 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073420822 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095264533 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070701296 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075721978 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.093816183 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070906368 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.09554584 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066384217 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07215872 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.093580618 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077563891 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075492169 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.10236855 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071925881 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078730308 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.098718826 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076115427 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075149681 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092973116 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063188297 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072416468 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095818736 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071703112 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069884292 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.095156899 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070059471 seconds)
done (took 13.716173775 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070667698 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.166503203 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.109178444 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.12378617 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.115022213 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070271963 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080512462 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126433224 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072218913 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125692438 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.093464923 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.114912536 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.105633171 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.093264147 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071106304 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.098921862 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072304067 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085655368 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.128665335 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091867336 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.146177268 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.093306423 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.104148025 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118328491 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.079903672 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.121713421 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070561285 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074130999 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.098091992 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.086450145 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.114611986 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07371688 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.0713682 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.115699039 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.087725112 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.102891245 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070185735 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.100269409 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070776978 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070873357 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.123858499 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.091860724 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099191 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.076190233 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097692632 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.073523468 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.073203096 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.104151091 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.081739528 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075131166 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108718696 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.138397118 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074129789 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104368851 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069852115 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08142717 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.103923699 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07274672 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.095214748 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073413267 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070388327 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.097439881 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085803382 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.123340189 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074816363 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103901293 seconds)
  done (took 7.183051435 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087803158 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097643285 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.112097561 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088632909 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.094621934 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071802937 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.095305688 seconds)
  done (took 1.578043228 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071339111 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092808646 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118392844 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093711549 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.113776876 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091999214 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105220942 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071394025 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088349033 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.097409578 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091781288 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.133728997 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073319301 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.102945806 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095578311 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071229218 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119247869 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.07171084 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.098179728 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095386598 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074510711 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115935716 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073805862 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.096300638 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085946944 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071763698 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144848175 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076484597 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.097571216 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075077297 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094017989 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.122504509 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109286761 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082451383 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095577683 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086556537 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086285437 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093332688 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087954537 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.101120394 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08531037 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072995002 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.096568498 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070036874 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076507273 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.106067858 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072936704 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072337252 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.098229007 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090906381 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.096685816 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085242927 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071764546 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099956573 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07314058 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101718717 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081779862 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072751121 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.114561154 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073596564 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113385334 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088663936 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.086348024 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111804429 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074036547 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109387821 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085439872 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075090161 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098119037 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075881104 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112731528 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069828514 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073687281 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106015137 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073294281 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094868347 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.119725449 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073524926 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.106432272 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072128424 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072208375 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096773324 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094596486 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099659655 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072027537 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076510637 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099516218 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06944891 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071207533 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.09991483 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070197558 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072821859 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.098744488 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073160224 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074907029 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.112218031 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072773766 seconds)
  done (took 9.661133988 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072966371 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072731162 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098608722 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072768549 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072826308 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096961951 seconds)
  done (took 1.433659902 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096055743 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.098880152 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.087017868 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07888753 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.137119936 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086146396 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.111146704 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079959281 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.115140757 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.085277156 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.110828333 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086942345 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.117249348 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.078788771 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.110718892 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.077320843 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.111400894 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082308932 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08432323 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103029047 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093736119 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.103214536 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07917664 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.112535858 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076418536 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.102902092 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082873282 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.109910383 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084573795 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080391824 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.103218598 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075654179 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.101134627 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079748132 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.111822758 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076698826 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102330432 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076914335 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082209902 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.099742604 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087544912 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103848142 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.084652842 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.100704232 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080806131 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.101873009 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076258712 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107903671 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086348564 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079520427 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.101070727 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.078046068 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.099650993 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076800006 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076993161 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104748606 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077656777 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.111889747 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.078668649 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.101625574 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.075531306 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.100338632 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080400207 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075252065 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.110451998 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076996903 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.101812898 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078643732 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104514314 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.077689449 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.100573852 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075832336 seconds)
  done (took 7.591732576 seconds)
done (took 28.371297181 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.664562421 seconds)
  done (took 1.604604156 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.692036031 seconds)
  done (took 1.634810245 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.642452061 seconds)
  done (took 17.584160433 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.472464667 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.547244609 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.785244568 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158774306 seconds)
  done (took 2.907495939 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.900092014 seconds)
  done (took 1.862324767 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.225376455 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.21178073 seconds)
  done (took 1.386611833 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.751231559 seconds)
  done (took 1.705583522 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.306862316 seconds)
  done (took 2.253799922 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.312266802 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.142871175 seconds)
  done (took 1.411747686 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.538553364 seconds)
  done (took 1.498652395 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.703907702 seconds)
  done (took 7.662820024 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215004914 seconds)
  done (took 1.184850144 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.269916626 seconds)
  done (took 1.235318248 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.491674598 seconds)
  done (took 4.450998323 seconds)
done (took 49.328011855 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081510031 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084774196 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109228678 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081798582 seconds)
  done (took 1.312729066 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083344077 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.079157135 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107520173 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.078633527 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.108230407 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078717367 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.080190313 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.107623124 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.0779588 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.105105804 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077972136 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07740101 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.105715233 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079542211 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.101043358 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.081022232 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.106842247 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078684337 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.08119534 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.103143968 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075890462 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.105707013 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.081476492 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077599251 seconds)
  done (took 3.106558711 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081752002 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076931239 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.103054302 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075737833 seconds)
  done (took 1.30691115 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082322492 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.098022092 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.120159805 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082473169 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.123593881 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.117601475 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.0750247 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.075419153 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.101839256 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083043848 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.074181602 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.13088793 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.119399582 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082882317 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.083733716 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.09616366 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.07440902 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.119090807 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083261344 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082655269 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100160205 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081344074 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07249478 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.120370834 seconds)
  done (took 3.250400095 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082139711 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106390934 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.109276556 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094196478 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.122610533 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069856862 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.106413938 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096893971 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.158595427 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070068738 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.100487255 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070747396 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076995935 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.095738706 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081846448 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.140914527 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.118509035 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.09924102 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101327976 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071029314 seconds)
  done (took 2.944751695 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080624965 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074725514 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095686547 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.074252565 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081606773 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102310418 seconds)
  done (took 1.484578876 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073230824 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072435012 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.097121725 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071626629 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076809281 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.097619987 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.07087503 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072611895 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096922389 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071925176 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071239529 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.095385746 seconds)
  done (took 1.937669972 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.467478452 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073744994 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.098602312 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070830985 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076148343 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09756911 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085598212 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073119766 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.122817237 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071415 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.097030882 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074691055 seconds)
  done (took 2.379474323 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21663375 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106355685 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243047692 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170332564 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139741929 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152205241 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133963747 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120090395 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203765846 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138662964 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188037182 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17650486 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133211702 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171692239 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093223304 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.131187439 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179162301 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22505118 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136579805 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186007087 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181923771 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147550436 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159849679 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132810565 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094895379 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150630674 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.102879568 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086787729 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215484841 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159377543 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170678538 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144734822 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127067552 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194156771 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228585552 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176671613 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168861202 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116952073 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.131001699 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.146429718 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242404151 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093755042 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188303111 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139430496 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112834621 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173794549 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148619468 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.155347918 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129948547 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094887564 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201632337 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192914803 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.17265554 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119080427 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116673123 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141284484 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146566411 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133358508 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231411279 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179020493 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160456187 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076210417 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127913521 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17094646 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161533225 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.147372361 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160458326 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126937058 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17156081 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167960031 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145628411 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171201159 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.162685021 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118568662 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149890176 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153852237 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150174679 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207826619 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159649719 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101889834 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146758313 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104123507 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1115499 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.174225931 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080806478 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19284686 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130285213 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.09413583 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143588278 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140542337 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142355764 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177947928 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170361551 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127672558 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070104167 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135632323 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.136700211 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168326392 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093900894 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140111979 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14119676 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.111487666 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157315764 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079091406 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156293273 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077775285 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154363249 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186701748 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081372884 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138718762 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105939355 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.129684021 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157187801 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179598206 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121320182 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087811286 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186614122 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180163613 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104102474 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159274995 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179200492 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128821215 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12994555 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178533483 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223914137 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095079518 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183840857 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136135124 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116789671 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093610241 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158664108 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136413859 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.142068653 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088275872 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.161059271 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215753083 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.081054504 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119409706 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169011423 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087950977 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112914639 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141271538 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102329958 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.121191348 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.126627857 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105457024 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160847235 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157748528 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133763868 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145583407 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132199393 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230882576 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095511588 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.1306503 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102487523 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.101988383 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.173687877 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176842512 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111846791 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183698044 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.152183361 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136358761 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12419606 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116055534 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157676018 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085127005 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.101568958 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174790983 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146978954 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143237567 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.176149004 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109705549 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187024997 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160890433 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152843761 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153912986 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.117998071 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140082795 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.118949407 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113226155 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145375812 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.104321866 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097516135 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.114706396 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137931875 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097413715 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115658827 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178588317 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148118099 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128999145 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112581277 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13059934 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160324495 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.083119662 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181566516 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.157531086 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100462528 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.177218489 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198247922 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166782435 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097201935 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213343596 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076378582 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079406921 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.12245083 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151023862 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114931129 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090396625 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150545411 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159973435 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163744851 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155939441 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143480283 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156235139 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170128622 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.077413236 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.149251152 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164041835 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156025242 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.142165627 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119969705 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.13180384 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129287891 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135906135 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234240706 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146956307 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15654943 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188170409 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.13001859 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086742557 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13303099 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164076928 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134079784 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157574979 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101001629 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121164903 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140531864 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.087317017 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139512974 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188906237 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115331573 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196780375 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.104986596 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162684671 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108926837 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145484197 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139422506 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118240023 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.095181154 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154629075 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182628754 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127768856 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149982209 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172023001 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086223398 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.157279254 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188331569 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200965249 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092509864 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138912802 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140105399 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145194609 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153722 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130865041 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139694836 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167729041 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137995772 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.116735308 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094548654 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129954862 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104546554 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.119127116 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128577082 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.156567742 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094175125 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165212841 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1412908 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138375727 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150106522 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103901191 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.124975984 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130406069 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196632872 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154391136 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190404714 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.130152054 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.158492098 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182441649 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107082464 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086293804 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.114253343 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158131836 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090672741 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169383371 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.128048327 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138102569 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160358816 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171788011 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093240236 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.101520196 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110119309 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153088802 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144517719 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132593526 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138493115 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184741716 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126815596 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086799938 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152190223 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109863191 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129021591 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175559906 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.094154062 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102750307 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108674001 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087804773 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144471357 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185379248 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.116647915 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.138684926 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14627584 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147696032 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146106803 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130206516 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102993145 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14564452 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179349903 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163103058 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.11326884 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137604156 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155078178 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174133008 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141343052 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094570778 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181917908 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19867331 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177178493 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.095097782 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146964097 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147007546 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136364039 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164310546 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115511119 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184625612 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087820761 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205344433 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1330843 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096445321 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153986794 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.12929441 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112245586 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193301843 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153816136 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089542691 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114085693 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148502761 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159020711 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107736347 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.108269172 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160787242 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.078531174 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169144291 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23815869 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113868491 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107234914 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127748317 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088598056 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136758953 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137743569 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119713025 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.118067516 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181522784 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.115340387 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169468255 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209205757 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120773931 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179925376 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097053825 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.673492609 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.111698143 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173191349 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107262596 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21090897 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103785191 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151235211 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138147641 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147169582 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173107081 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138660947 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.211252642 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172706893 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.157150831 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085298571 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137904103 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141949391 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.125141634 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132095314 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119042569 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139425204 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132639879 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156653289 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14913702 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08676686 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121377473 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176590169 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134655646 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164722758 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158841594 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092792373 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152248113 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162465293 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114306877 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.160156585 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213208492 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094915552 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130778909 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086820513 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135160879 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237611263 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.079419208 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177927937 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154357069 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138543668 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145468161 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.127258964 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168633792 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1374999 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155782373 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09866161 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.138382194 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136379275 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117949113 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.083675615 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133763047 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146199317 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.1014334 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139293848 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.120584352 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193637269 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.078394357 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124977058 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109040792 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16804111 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221495175 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.0956656 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116410349 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14201247 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10420077 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.154040576 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155847982 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.11676935 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088673071 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.117716994 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.117512016 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.121818091 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107971604 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134297935 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144938533 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183586764 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.118471777 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.258404354 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09367661 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133675899 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.076386461 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.111801685 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10395282 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126868287 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137577853 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103185169 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239417632 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.126076408 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087052303 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128224053 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079986675 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116809882 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118548068 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143841395 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15840623 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126542696 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067709086 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139460005 seconds)
  done (took 69.007655922 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.140714684 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.110809969 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.126096477 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.181010658 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154907414 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247819534 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.188058759 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231592199 seconds)
  done (took 2.421829337 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074733125 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.125770959 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106958873 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.115968743 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072392731 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.099640097 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.308869466 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112212986 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072192637 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094114106 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.151993807 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074807578 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.489900787 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.07072107 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.100782729 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.091640306 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073269563 seconds)
  done (took 3.271179027 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.437807113 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.671747481 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.476116316 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078749426 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.056382947 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.114794962 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.729234367 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.172983023 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097162637 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.450609754 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.731850131 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.141783482 seconds)
  done (took 18.206890781 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080126459 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073975408 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.116304279 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08973084 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077326244 seconds)
  done (took 1.491228214 seconds)
done (took 113.071617185 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085512585 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.372135369 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058977479 seconds)
  done (took 1.512339201 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088896642 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089417483 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.118291544 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088826775 seconds)
  done (took 1.441036121 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.079978805 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080806195 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116805066 seconds)
  done (took 1.33033259 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.303550738 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.141909359 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.121206373 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088056969 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082620212 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.110824142 seconds)
  done (took 1.332957293 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078980932 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080982867 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105707016 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.08233491 seconds)
  done (took 1.395277391 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080826199 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057827148 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059297559 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.088104677 seconds)
  done (took 1.339878979 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095152848 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084058853 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.11283534 seconds)
  done (took 1.343107725 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110496107 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.117969608 seconds)
  done (took 1.28308782 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086884246 seconds)
  done (took 1.13782676 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098157801 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.150068155 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.169602501 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.144007757 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.180933028 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.14435371 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.093260636 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.12278986 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.110850395 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.095712527 seconds)
  done (took 2.366696287 seconds)
done (took 16.17932284 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.085011104 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.402229393 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.367425802 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125290135 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674535281 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361745159 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.049255837 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098368592 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.142052891 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072959851 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117999083 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653414669 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.001521999 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329833112 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.987495616 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.423346623 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.658787152 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101331808 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073842083 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073544257 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.028631226 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073568163 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100436913 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074229952 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.662265522 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.405533377 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073384391 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.451556026 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074015933 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075053449 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.388869964 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073691134 seconds)
  done (took 16.328171923 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075971787 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151290817 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.08030476 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089045213 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103994239 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07458505 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104694891 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074997875 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155270016 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074811543 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089659033 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101550062 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077208976 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102130183 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093037878 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073681019 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102143523 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07377 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100807181 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074500162 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091539893 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100766995 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073813371 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073622027 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100931041 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084740248 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101554421 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074051033 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073504619 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102673965 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076846983 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074314235 seconds)
  done (took 3.962991567 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121665058 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.161196164 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080245484 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13642947 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120690248 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.104161763 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.178387216 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099097074 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15904654 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07392146 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119196309 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074541068 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.135087098 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074703198 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093051372 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.102161176 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075313607 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101296439 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074690591 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07339325 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120691967 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073668653 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101929118 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074745647 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074634378 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.11493464 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074803361 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100545921 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074508365 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075375714 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104894758 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075082005 seconds)
  done (took 4.2877243 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077470452 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080353853 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.116293931 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.090211576 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07536598 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.104971412 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078460816 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.102995495 seconds)
  done (took 1.790833686 seconds)
done (took 27.420978583 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.085027489 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074571845 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106853075 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087498214 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.078977135 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.110875724 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072675305 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.108456085 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080776071 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078211315 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.109354636 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.07349035 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076690869 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.101011961 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080665758 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.074281002 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.112491156 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076865088 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.1123834 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08475564 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075475436 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.109065388 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079777523 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.11173011 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.085379 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083829738 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.116485363 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.079142295 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.102800253 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076075302 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081187374 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116765388 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074663483 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.111729466 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.074003693 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073285597 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.101164701 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073551946 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083963974 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.108485983 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.076057184 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108422608 seconds)
  done (took 4.844185182 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092706955 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095896837 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118359268 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068045314 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073509437 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.095460072 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093684511 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.094235613 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067420801 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093338746 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.089358045 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063146217 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064947097 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058573909 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.091323437 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.062080006 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065785065 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061480762 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.090946733 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063685319 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.06539729 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.086888259 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.065734551 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064189177 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061831963 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.09569523 seconds)
  done (took 3.108756207 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.081427002 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08719912 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.121541125 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13249376 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.140598201 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081751565 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.112303211 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092141745 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.119559109 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.074161928 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076982158 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.131786404 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092298687 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.108641264 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.077025944 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088951224 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.117292759 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.076597312 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079810627 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123762677 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089457607 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.112028885 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095159345 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08560306 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.102034988 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075357268 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.108109123 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.088106554 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.08020853 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.11112702 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.078877416 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.105305463 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.076037659 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084963184 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.108097581 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.075452645 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.12122218 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084016816 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082060982 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.103697306 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077368891 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.076693331 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.122289198 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.117783464 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.102276394 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.080403268 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.108841646 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083419672 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.083702591 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119956773 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082271515 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.101886493 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076954485 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.074197747 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.1042472 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089516673 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074765394 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.10467443 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081016868 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07585483 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.114339694 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076739369 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.118166924 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.074713683 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080397638 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.10285531 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073538011 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071943982 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.123836855 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078311911 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.143732336 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07377545 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.103551482 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082533673 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081102937 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108363362 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.074033737 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.117401877 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08390218 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07725723 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.112352791 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.077299805 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076426116 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120791993 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07605331 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.103273076 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074468081 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079546508 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.105252653 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.075095738 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087476743 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.102517504 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076474667 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.114954939 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07444576 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074202098 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.10879261 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.078226324 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072604833 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114745422 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.078139772 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.102709966 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.083765475 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.074182606 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.105132253 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082991571 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.106700395 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.073692076 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.078257652 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.108806346 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073948424 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.076486648 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.105343916 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.075671353 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.082877609 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.108843805 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077504651 seconds)
  done (took 11.952331196 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.206741054 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.196889674 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.076065922 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.188291616 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.085252809 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114063967 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.190437609 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.10524126 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.103712378 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074393199 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074584414 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.142452239 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106493805 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.147714913 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.111492217 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073765677 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091275331 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.143835888 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.192814571 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.185688695 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092333247 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.112006501 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075725653 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074231451 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.104932165 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083207775 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.119384861 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.086491713 seconds)
  done (took 4.442046624 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087714595 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.134855157 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079399535 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095139552 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.127529411 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.074171009 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.107354165 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075767886 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085617197 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.115035913 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073688397 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.109142283 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.081384304 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.1121158 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074465584 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.082975772 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.112514261 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075088121 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.105839256 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078612327 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080252518 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.116136559 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.078169071 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.10225437 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.080408505 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072695458 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.100471245 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.092320306 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.102393164 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095285477 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.101376018 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.080020154 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083229894 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.104524204 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073424975 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.075674133 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.105604018 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.076359295 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075760676 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.101314003 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072989233 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063314494 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.101990699 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.087199057 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.109805643 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.065693581 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.078907884 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.108105548 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.079708142 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071756051 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.105378934 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076373427 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.105588636 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081304361 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077944432 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.108173815 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.077075966 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.071469626 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.109427849 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.076069551 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069309518 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.102994768 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078264412 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073102528 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.111143573 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078675902 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.101592294 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.075791416 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.0784232 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.109552818 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07598313 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075897477 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.101067216 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.076700657 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078778294 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.106862529 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.077344357 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.07267323 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.102094757 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.075020427 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061114293 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.102200939 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05967668 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076692032 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.101467052 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.073192398 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075455797 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.108106223 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.087379414 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.103988315 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079742543 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.103382316 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.07325109 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.077380634 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.098103403 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.077082158 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08841725 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.121165788 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073635082 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.102210284 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.087558825 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078965824 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.102520871 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.061996661 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.080609248 seconds)
  done (took 10.380114882 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096720732 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.099741048 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.104572541 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088801663 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.130121358 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.097571619 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.110683377 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080250353 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074928691 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.120536985 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074035339 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082539551 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.10738712 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.0832291 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125623408 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082297934 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07650441 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.112897364 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.082319816 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.139005229 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087501386 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.091143113 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.113418646 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073892343 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.108338942 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.086602196 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099065394 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.113329806 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.083096985 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.117030424 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.08461915 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.098864178 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.118006527 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.078166909 seconds)
  done (took 4.417032804 seconds)
done (took 40.19674624 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.158708023 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.359749319 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.133364377 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.079494047 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.190075308 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.160710403 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.146735985 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.138123908 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.686441554 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.135791533 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.397710669 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.792679393 seconds)
done (took 59.457552957 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.160559189 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.276524028 seconds)
    (2/2) benchmarking "String"...
    done (took 1.404866407 seconds)
  done (took 3.759738105 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.501693588 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.142756013 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.416823296 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.133557978 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.135193501 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.558797128 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.771777329 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.492809428 seconds)
  done (took 27.728001135 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.131879108 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.528284129 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.901370371 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.803272124 seconds)
  done (took 18.442751134 seconds)
done (took 59.669579993 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.135252055 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.167588871 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.169552675 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.11952518 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.245288138 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.177188396 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.440313954 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.362010497 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.13439458 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.127781738 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.152624918 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.143092157 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.145452091 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.428191452 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.13490199 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.136101779 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.244241002 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.600102726 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.547710145 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.141068671 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.145780264 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.13620649 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.157443654 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.135625213 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.163313345 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.135283188 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.160321395 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.140867807 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.692718197 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.140837879 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.141266552 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.698421798 seconds)
  done (took 189.680537105 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.135585542 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.137050794 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.226659108 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.188472008 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.528135188 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.336333691 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.276139148 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.616614405 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.152926605 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.149054774 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.361004637 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.137655259 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.431717042 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.121633638 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.145255158 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.236287147 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.328431453 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.429862351 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.154599537 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.413686553 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.15454711 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.37840863 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.287207404 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.322407542 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.170848331 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.190432018 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.151144727 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.157697012 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.326408126 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.271119526 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.145677327 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.147251413 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.756925856 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.997099021 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.138934543 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.147592149 seconds)
  done (took 147.335228759 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.415497927 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.135031687 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.136087612 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.135528419 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.136186469 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.168595994 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.135604005 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.135716762 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.699609698 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.698628299 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.641921506 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.342212452 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200083795 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.383346119 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.136188097 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230698092 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.148299861 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.137872944 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.151834848 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.162793108 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.14135916 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.137090166 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.700430284 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.151326807 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.188089619 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.147868 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.137179478 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.168830992 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.532311012 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.136997708 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.169702324 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.460364655 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.18493774 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.138326243 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.456034946 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.068786976 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.247727855 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.139819676 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.170745583 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.137681243 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.408578145 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.136644805 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.138959019 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.140912131 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.743405851 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.139016767 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.715358016 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.143169103 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.064250293 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.137442904 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.138193879 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.661492584 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.634610996 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.139070255 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.138224847 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.142081308 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.13886763 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.138407504 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.17135785 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.591442548 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.240196773 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.139449589 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.142949738 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.171631988 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.140511689 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.342762891 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.144084148 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.72280869 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.20125424 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.256171907 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.716983392 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.144290527 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234242054 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.260688691 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.139565782 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.141385017 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.140872685 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.139469305 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.247848461 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.142489256 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.140912514 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.56276953 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.147415967 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.14079328 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.199975725 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.238136781 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.140391884 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.140026038 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.478798879 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.140730035 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.141054197 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.860325261 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235008345 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.141118313 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.140953964 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.139890186 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.561374211 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.706183973 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.355054355 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.143296728 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.612897585 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.145130498 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.571382356 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.697729532 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.763384807 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.141983422 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249195055 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.144847547 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.142588487 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.141773081 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.170207157 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.142034712 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.19978549 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.140703429 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.538646073 seconds)
  done (took 338.647895215 seconds)
done (took 678.156459374 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.835448734 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.788515997 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.92171635 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.806854415 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.788722418 seconds)
  done (took 10.22652164 seconds)
done (took 11.309819555 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.328994502 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.329532911 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.203001529 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.331832555 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.171631874 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.348219701 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.307891368 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.16384699 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.243808517 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.220369494 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.243304922 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.190831211 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.168488053 seconds)
  done (took 17.337540536 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.462200267 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.45894549 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.207084617 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.459756997 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.184129075 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.453382684 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.348725969 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.357557509 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.348752919 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.158832374 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.155769379 seconds)
  done (took 15.682011023 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.459583656 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.461049928 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.210364064 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.466163742 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.184281648 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.465490194 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.348208126 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.35689802 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.347144847 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.159470579 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.157007953 seconds)
  done (took 15.70192293 seconds)
done (took 49.805353497 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.152981201 seconds)
  done (took 2.240249938 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.188221318 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.351968895 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.169233662 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.159565831 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.154056617 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.157346752 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.15882505 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.153576124 seconds)
  done (took 10.580320528 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.150213269 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.15315986 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.152121783 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.149259287 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.152785619 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.150769851 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.149753921 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.152491172 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.153202162 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.150370523 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.149561817 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.154045357 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.152324598 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.15116817 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.150044886 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.151339988 seconds)
  done (took 19.510426924 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.153176104 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.150886265 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.149679204 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.151147125 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.150453053 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.151551173 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.152358034 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.151417517 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.151301296 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.151235516 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.152459674 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.150310903 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.152373375 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.1510855 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.151151634 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.151821474 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.15122755 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.152731045 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.155151556 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.150688944 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.152342886 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.152508401 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.152408087 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.15202967 seconds)
  done (took 28.732233891 seconds)
done (took 62.148707771 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.295089278 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.822006499 seconds)
  done (took 9.207320353 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.154649828 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.154709976 seconds)
  done (took 3.400190437 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.154060777 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.154137907 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.154151227 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.153559581 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.154354885 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.152789918 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.154721483 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.154997695 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.155475015 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.155161421 seconds)
  done (took 12.632509378 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.154605864 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.155462079 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.152215403 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.154603533 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.156006191 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.152164655 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.153830649 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.155016981 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.155504373 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.152787922 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.155172551 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.152284563 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.154778607 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.152499524 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.155103769 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.152432331 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.152818358 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.152094406 seconds)
  done (took 21.860919694 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.154527962 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.156092533 seconds)
  done (took 3.400998868 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.153925037 seconds)
    (2/7) benchmarking "second"...
    done (took 1.153055255 seconds)
    (3/7) benchmarking "month"...
    done (took 1.152884036 seconds)
    (4/7) benchmarking "year"...
    done (took 1.152602731 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.152988896 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.153229186 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.153630186 seconds)
  done (took 9.163171516 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.15665463 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.341788666 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.421943224 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.770508157 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.156564078 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.159859042 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.999500696 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.160068314 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.16135552 seconds)
  done (took 13.419816352 seconds)
done (took 74.172726868 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.16232629 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.150152059 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.039924542 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.172087155 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.169875028 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.450002442 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.177686257 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.273372488 seconds)
done (took 36.685194611 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.171875991 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.900974719 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.920880125 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.15103306 seconds)
  done (took 11.064812231 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.141789401 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.124328922 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.14190157 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.171103541 seconds)
  done (took 17.671540048 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.196713934 seconds)
    (2/2) benchmarking "read"...
    done (took 1.483615362 seconds)
  done (took 4.773039932 seconds)
done (took 40.77213296 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.158436841 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.156979902 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.154260274 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.157798112 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.156068892 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.154138925 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.158899842 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.158349875 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.15840985 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.157612177 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.157482934 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.158392105 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.158993851 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.155874876 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.155648131 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.158922961 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.156008715 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.155129562 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.155313305 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.15586844 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.155548865 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.158734029 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.155458091 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.156589585 seconds)
  done (took 28.857734272 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.158360895 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.157250976 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.157627666 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.159852055 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.155999176 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.159249955 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.158514957 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.156038373 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.159350774 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.159914151 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.155934965 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.156786366 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.158623596 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.156579878 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.159096358 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.156268738 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.159842029 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.156173301 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.16016052 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.156806106 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.15968749 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.157455809 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.157328402 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.158939726 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.158117231 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.15756656 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.160575282 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.159687228 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.159456428 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.157734809 seconds)
  done (took 35.839487002 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.164467583 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.168444175 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.159869692 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.16095077 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.160863315 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.160529018 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.159634194 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.159862679 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.16107725 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.161292334 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.160468855 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.159916229 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.161208046 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.159723704 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.159883876 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.161521703 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.160628436 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.16029912 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.160183569 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.161033344 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.160646371 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.161368358 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.161315035 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.161121844 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.16096007 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.160112533 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.160938012 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.161017312 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.16024754 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.160606975 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.160993027 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.160861027 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.159648447 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.160860862 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.161058215 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.162448542 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.164625859 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.16649226 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.158816973 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.159238954 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.161480043 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.1603271 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.160471058 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.160362547 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.160821806 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.157719133 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.1567711 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.156695294 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.156604667 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.157194163 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.15742843 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.158042417 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.158054874 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.158578618 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.157682828 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.15809788 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.157736861 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.157942789 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.158242221 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.158836892 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.157627469 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.163166629 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.157461565 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.157895649 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.158150839 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.158410062 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.15876137 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.158111504 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.157559204 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.157754797 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.161821836 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.156594119 seconds)
  done (took 84.614804952 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.157479544 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.155374255 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.154651285 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.155121357 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.155665721 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.159095772 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.157593196 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.157451026 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.155784369 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.157760132 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.157591848 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.156139024 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.155590783 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.159087472 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.160563172 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.154531145 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.156251645 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.153729844 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.157508708 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.157236069 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.15773 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.152874385 seconds)
  done (took 26.538889037 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.15864241 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.157902902 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.154833199 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.156643512 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.15530408 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.15826854 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.161695622 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.15790876 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.15699708 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.155674367 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.155486516 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.157105406 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.155010291 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.155243735 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.154725707 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.155609734 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.157652537 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.157485841 seconds)
  done (took 21.913909018 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.155557014 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.155549973 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.157827174 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.156297667 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.156276522 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.157464384 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.155393581 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.158702439 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.158175449 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.156639571 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.158909622 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.158291245 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.159266799 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.156151923 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.158557131 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.157427018 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.1589214 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.156796331 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.158738079 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.155999086 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.156901287 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.160175576 seconds)
  done (took 26.559490847 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.159884062 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.158632948 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.156672887 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.156561194 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.156071249 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.159421435 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.159281299 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.157178585 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.160188102 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.158960155 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.156944286 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.15994019 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.156348616 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.158726383 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.158039216 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.157626365 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.160978064 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.158667746 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.159639006 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.158491139 seconds)
  done (took 24.262437783 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.161270551 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.161133594 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.161072358 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.161636339 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.161782873 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.161506977 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.16097577 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.161942627 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.161942916 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.161715219 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.161486362 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.161948429 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.161107828 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.162111049 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.160870065 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.160639281 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.161826171 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.160984301 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.161468974 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.161792717 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.162123724 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.160793752 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.162137612 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.161841344 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.162056115 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.161817846 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.162023311 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.161198793 seconds)
  done (took 33.619622077 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.161302627 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.161559204 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.159220934 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.160704797 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.159049404 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.160053924 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.160140375 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.160389358 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.16190085 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.159445215 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.161799247 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.16183354 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.162226414 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.162387488 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.161045354 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.162768394 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.162492325 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.15958777 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.160832074 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.160483375 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.162206296 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.16253043 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.161659116 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.160401538 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.160858803 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.162454311 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.160318755 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.160645738 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.163227388 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.160186947 seconds)
  done (took 35.931491524 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.182565695 seconds)
    (2/2) benchmarking "in"...
    done (took 1.18174031 seconds)
  done (took 3.462140205 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.160980463 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.162182102 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.162635445 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.16205028 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.161295442 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.163469438 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.163609711 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.161344826 seconds)
  done (took 10.396300503 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.162629318 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.164171981 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.164215188 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.1629772 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.164086938 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.162958303 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.171147998 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.18133806 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.165196794 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.165152825 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.169780433 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.171256271 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.165678008 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.163327804 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.165259341 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.166512721 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.164860904 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.164945417 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.165890501 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.164589625 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.165055032 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.167036738 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.166544096 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.163985069 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.166243598 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.175025669 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.169891867 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.166034337 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.163592276 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.168214082 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.163659547 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.16353864 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.165413957 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.165395145 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.165234749 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.165149553 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.173635277 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.182694804 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.1721291 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.166365552 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.166853838 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.16412554 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.166410702 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.166880765 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.166295248 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.166150361 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.165842683 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.164123574 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.164280971 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.168040981 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.171303361 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.165371579 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.164950475 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.168562619 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.16723478 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.173502604 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.183233708 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.169502323 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.175470475 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.176643425 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.179408754 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.174686293 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.169719089 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.168523979 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.176600889 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.189621694 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.173233144 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.181487028 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.165012895 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.168785878 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.173993728 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.180497011 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.175636401 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.167571199 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.166127411 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.167241224 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.16705279 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.168616482 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.174512746 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.186837494 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.167961106 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.167081183 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.176947054 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.189058717 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.166883735 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.169080851 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.170195383 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.167740342 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.169258486 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.17863511 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.185633491 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.168633993 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.166486818 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.167866115 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.169998162 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.16941045 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.168332171 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.169377759 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.167187401 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.168328528 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.167864961 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.17217805 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.176314039 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.169039635 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.169155043 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.174923538 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.170874792 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.167702738 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.175385012 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.168783886 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.169179208 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.169951662 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.174321551 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.167233525 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.172621691 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.17718346 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.168875953 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.170069301 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.170112132 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.169661373 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.179211445 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.194725142 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.1706782 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.170581022 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.174424471 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.179794237 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.170483058 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.172656725 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.169919657 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.167613799 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.168253879 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.171382235 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.170355546 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.171364085 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.169690587 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.171719579 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.16877326 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.170810786 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.170957613 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.172457081 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.171483672 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.170917088 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.172097679 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.172219893 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.172088192 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.172688825 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.174654382 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.171410996 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.171304292 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.171214953 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.169523358 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.171464762 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.172014564 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.171530227 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.170288103 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.171774871 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.17039168 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.172351937 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.172305153 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.171831742 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.172088107 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.17201181 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.174988809 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.17279516 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.175493171 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.171124674 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.171021413 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.173575864 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.172570496 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.171825299 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.173179927 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.170900424 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.175065875 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.179566432 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.172466081 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.172824564 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.175387048 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.172762643 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.173039235 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.173121287 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.17598849 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.179877889 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.173302044 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.179636203 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.17374592 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.172193817 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.174439 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.173698376 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.172651488 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.173634353 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.175444644 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.181857145 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.185156795 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.182667797 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.174749606 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.178530429 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.174925804 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.176887687 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.176647227 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.173180537 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.174582594 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.173707159 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.172497134 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.174204593 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.176005795 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.174705586 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.172296368 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.175314987 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.173090673 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.174602727 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.175019431 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.174840633 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.175961278 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.172006292 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.174970691 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.175486143 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.172537255 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.171779296 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.172466091 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.1734573 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.175571535 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.174538739 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.181215775 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.17265501 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.175598743 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.175978387 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.174241252 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.173753276 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.175575127 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.176516977 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.173267488 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.180915981 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.191964636 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.175755844 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.182164115 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.192333007 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.174372721 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.177578734 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.176662775 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.173507319 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.177076746 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.183008592 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.175502111 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.176525329 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.175998868 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.173892485 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.177470988 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.181382273 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.174526402 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.174554459 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.177635368 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.178106394 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.17484975 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.176016543 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.177425316 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.17714839 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.177380786 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.177382693 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.177212231 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.178809965 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.176854857 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.177997888 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.177696058 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.179273446 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.184315331 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.181101708 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.178698948 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.179279083 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.178324921 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.180924161 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.176859711 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.178003778 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.176780282 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.190571362 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.185801769 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.183781288 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.17915087 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.178575904 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.184148882 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.178931073 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.180196737 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.17781329 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.178298548 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.177619638 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.176884949 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.177158271 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.178384238 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.179162056 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.178482728 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.178387526 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.182578868 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.179877204 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.177465548 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.178830201 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.179683197 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.179341717 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.177834784 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.178602187 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.180537489 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.180197924 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.177773846 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.17762685 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.18443191 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.1963394 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.180349263 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.178108306 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.17868877 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.178782069 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.180811441 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.179911653 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.182236567 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.187171955 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.182146063 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.187461627 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.18002398 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.187313698 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.180606745 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.182055394 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.19189639 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.177822952 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.178412658 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.178985679 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.17957243 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.186514071 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.197673783 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.17976998 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.18311493 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.179671992 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.180259049 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.180999333 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.180474256 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.180400818 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.179029065 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.186659925 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.195299653 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.181616162 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.17980217 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.176167149 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.179823414 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.180181562 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.176830994 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.180755051 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.17879197 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.180564269 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.178582864 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.178806472 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.179804405 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.179132709 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.179097357 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.178058638 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.180117112 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.186692134 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.197399871 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.184175498 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.180513031 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.186849711 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.181932929 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.187352302 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.19760906 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.180180418 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.181084413 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.179739191 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.181498761 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.180888592 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.181275918 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.180968994 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.18118997 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.185966641 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.181511445 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.182350523 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.181672772 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.181535994 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.180052798 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.190428064 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.203890373 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.182293421 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.18559271 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.177220943 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.182302178 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.185087477 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.180118513 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.179767139 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.183035023 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.191171579 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.189812042 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.180700621 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.184616948 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.181147988 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.181976762 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.181031476 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.182244855 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.182528495 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.181553288 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.1823785 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.180526175 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.186277618 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.182544382 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.182530191 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.182339377 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.182855491 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.191140984 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.182225439 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.182416096 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.181857151 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.181638009 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.182685294 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.181547541 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.182387177 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.182244007 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.182522111 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.1838036 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.187839811 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.188513248 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.184421214 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.18215244 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.18310958 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.182613627 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.182700653 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.183047051 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.181746568 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.182895467 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.182587679 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.1831216 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.183750667 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.181375279 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.183017696 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.183946335 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.184430054 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.184754048 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.190682147 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.182361569 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.181729728 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.183988511 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.184407102 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.181573192 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.183353517 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.191035487 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.187530902 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.193521835 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.192761986 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.18845035 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.18367055 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.185831634 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.190924774 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.183187672 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.184385503 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.184317674 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.185263735 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.18543543 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.187545504 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.185921925 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.190977732 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.185060618 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.184511836 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.194819035 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.203021792 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.184262543 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.185823738 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.187626825 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.184615142 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.183886828 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.186964841 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.183293166 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.191265424 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.203484671 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.186129401 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.187388565 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.184481717 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.187496659 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.190001444 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.186677576 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.186809473 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.182658047 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.186013366 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.186433045 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.186368824 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.184082666 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.185959608 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.186507969 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.187282111 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.192460505 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.183023282 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.187409721 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.186565892 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.187688766 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.186657486 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.186839324 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.185485142 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.183701085 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.185719952 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.186358828 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.186900217 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.187734069 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.185755833 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.187058322 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.188054577 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.188782043 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.189281489 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.196117257 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.194259332 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.184921111 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.186329986 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.187605938 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.190904216 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.187253503 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.187912847 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.187254773 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.187309059 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.186939533 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.187157836 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.188337766 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.189731753 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.20218478 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.205680364 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.18720394 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.188270644 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.191394596 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.188206057 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.186887031 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.188502992 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.188844253 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.191149874 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.195654528 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.189685177 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.194701521 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.205125078 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.189063751 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.192843826 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.191805668 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.196672514 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.19118727 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.18807368 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.188892354 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.192983471 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.20445415 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.189021655 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.198535895 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.218762708 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.205963716 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.189814553 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.187981889 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.188310519 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.18877037 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.189833185 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.187879647 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.190133488 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.189964492 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.190177461 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.189926765 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.193465698 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.189952494 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.189903641 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.189251755 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.189186714 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.190306078 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.18756282 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.190044083 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.190415325 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.190699831 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.190228575 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.190776574 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.189235066 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.202431005 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.200427779 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.190537526 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.19015662 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.187959882 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.193686573 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.193701064 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.199728278 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.198710183 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.191699877 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.190283864 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.19138448 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.190580906 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.188258202 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.190708883 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.190590767 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.189270408 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.188786814 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.203336031 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.199874857 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.195194672 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.192099935 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.191746336 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.192647076 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.192170317 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.191183649 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.190738107 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.192493485 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.192479176 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.194141687 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.190380433 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.19223693 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.194645104 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.199594147 seconds)
  done (took 704.477311399 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.189493475 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.189360029 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.188791472 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.189383326 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.1895635 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.189908605 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.189233607 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.190224494 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.189546609 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.190515928 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.190461661 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.189908061 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.191530123 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.190941329 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.190460542 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.190881796 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.191250822 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.191017721 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.191036744 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.190515867 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.191137579 seconds)
  done (took 26.120348353 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.192464233 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.190651205 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.191101704 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.194364349 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.190842148 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.193905668 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.19231341 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.193803623 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.194459768 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.191864632 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.194609983 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194665953 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.19138957 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.192033412 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189991666 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.193197281 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.193805202 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.191064521 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.194028339 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.191870608 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.194398503 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.192898631 seconds)
  done (took 27.365890347 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.193651209 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.195140128 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.192811089 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.191323566 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.194944689 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.1917332 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.194680187 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.193833821 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.195508321 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.193694873 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.193078466 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.195374913 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.200483828 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.200569368 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.196260513 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.195247539 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.339739262 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.194439595 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.195038277 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.194101018 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.191504677 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.198930998 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.194472598 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.192565177 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.194262417 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.194553518 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.196169733 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.194493498 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.195881354 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.196110826 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.199113525 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.195996596 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.194785702 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.198453867 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.19502774 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.196712381 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.199337229 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.196128445 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.192320333 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.197028794 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.20531598 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.217489233 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.197165229 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.201417928 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.196327395 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.197222311 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.199543538 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.203028177 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.194425882 seconds)
  done (took 59.895551104 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.197195978 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.196427711 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.19490907 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.197216415 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.197083579 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.197436588 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.197067359 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.197733224 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.194413483 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.194718245 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.198248148 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.195976774 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.196133126 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.197555234 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.198244813 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.195955187 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.194700872 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.195450648 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.19455836 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.19469634 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.19520981 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.197191833 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.198114199 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.195848725 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.196592601 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.194999509 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.194351078 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.198711351 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.195320164 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.196100101 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.197945311 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.197741411 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.199106183 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.195076707 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.195668747 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.198539582 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.19890137 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.195850115 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.198934384 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.195869881 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.198416845 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.198912834 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.198639808 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.199279781 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.19596759 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.195836246 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.196490187 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.196776897 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.196195815 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.199534553 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.198495549 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.197491392 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.198934454 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.196148422 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.199154382 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.200752443 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.197161049 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.196801089 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.199197608 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.197331703 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.197930508 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.199625889 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.19736235 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.199693015 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.200625492 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.196647194 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.198416549 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.200196646 seconds)
  done (took 82.541958413 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.200351407 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.200594972 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.199824439 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.199845617 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.200887814 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.200219444 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.200165708 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.200029828 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.200009126 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.200778008 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.200713439 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.200955158 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.199766439 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.200974476 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.200749049 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.199865317 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.201493655 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.200416247 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.20025365 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.20062832 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.200398446 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.201513831 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.201142533 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.201600459 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.201389821 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.200955385 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.200889401 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.200197947 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201382731 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.201490124 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.202223742 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.20092689 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.201838607 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.201637081 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.202231687 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.20126583 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.201828247 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.201641178 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.201778472 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.201375072 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.201869353 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.202401696 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.201973156 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.202322914 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.202050023 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.201228813 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.201495745 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.201968264 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.201834845 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.202264555 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.202685788 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.200836385 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.202175471 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.202298903 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.20086797 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.202073226 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.201716825 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.201812291 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.202609256 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.202573257 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.201503663 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.202368196 seconds)
  done (took 75.61406628 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203268406 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.203510006 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.20094818 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.199947921 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.204140752 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.201274779 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.203362779 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.203279657 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.203704294 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.203570214 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202678193 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200654803 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20093528 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204209264 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.200954428 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201998593 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201195471 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.201343204 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204050361 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.200790068 seconds)
  done (took 25.181058131 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.200585509 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.203801585 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.201180303 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.202639402 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.204192512 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.203544973 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.204161981 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205345841 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202439559 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204413512 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.203918677 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.204573994 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.202083809 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.203671357 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.205133678 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.203842657 seconds)
  done (took 20.390869167 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.203488244 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.204807807 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.205374455 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.20550945 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.203394755 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.202550408 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.20523063 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.20274553 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.202497782 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.206341214 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.205849496 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.205171832 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.205917545 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.20625407 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.203298744 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.205950995 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.203795728 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.203728504 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.205802847 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.205728476 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.204885807 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.204509899 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.205929675 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.206150921 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.203922691 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.204394024 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.203183892 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.20363074 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.202634216 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.206805697 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.20334951 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.20377791 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.20360309 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.204036407 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.205945164 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.204773946 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.207325445 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.206141869 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.207459264 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.207400644 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.206292825 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.204029193 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.207027093 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.206164424 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.205023795 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.206954201 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.204963136 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.205398453 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.204064705 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.205034874 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.20806269 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.207768331 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.207096118 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.206660584 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.205587973 seconds)
  done (took 67.422332845 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207138671 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.207141566 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.205714619 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.208126899 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.208520357 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.20538505 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.207711747 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.204823148 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205310811 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.208080631 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.205481681 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.207473009 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20520797 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.20727148 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.206196299 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208004273 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.204975628 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.206121444 seconds)
  done (took 22.85830172 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.207188007 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.206871854 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.209928316 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.205978682 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.2068216 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.209559214 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205751494 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.209221278 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208596576 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.207240454 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206184052 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.209456474 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208690025 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.208511392 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.207654102 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206303004 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.209396166 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209313592 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.206596446 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.20691723 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.211435706 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209652374 seconds)
  done (took 27.719246202 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.207125619 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.208313285 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.22437023 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.24901387 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.237400957 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.208303256 seconds)
  done (took 8.475399597 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208671236 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208850448 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.207717494 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210984597 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210561889 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207606968 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207180776 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207971993 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210430268 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208354247 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208129038 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211130692 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211280147 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207694309 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209655108 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210229205 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208362065 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208102636 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20948063 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210537219 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208936458 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210793435 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209130076 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208505168 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209071388 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208068069 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210865596 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209920642 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209060127 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211396673 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211220377 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207897873 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211193616 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208885241 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21247514 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211672383 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209418511 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212298991 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211908872 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208726829 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.212456618 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211288478 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211689683 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209930539 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212456786 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209946851 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210243873 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209508997 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21007233 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212843014 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213177703 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212019586 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213680555 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214756278 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212705115 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213516082 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210224555 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211299025 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213575526 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21098477 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209158458 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21380467 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210953858 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211650949 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212615302 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210732693 seconds)
  done (took 81.033778448 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210850227 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.210726062 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211305501 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212663836 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211819811 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210977814 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212614989 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21216006 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212381547 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211447326 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215801879 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212028788 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211715365 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212072223 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212538528 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211444563 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212186222 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210903917 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212481336 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215035491 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212971695 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212215271 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212297416 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211870338 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212427628 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214914217 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213102727 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213347847 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213039354 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212397155 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212106702 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212159504 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212633194 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.212477524 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212994261 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212129415 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212507859 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212600958 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212315247 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214696377 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213472353 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214870289 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212107071 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212368269 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212667925 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212092653 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212810933 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21339296 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214466059 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213792141 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213820996 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213850632 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213904291 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213002568 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212866432 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214374103 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213083743 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214459226 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214223085 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215924517 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214419525 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214842125 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217122938 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213842007 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214239024 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214615016 seconds)
  done (took 81.207297416 seconds)
done (took 1643.391513053 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.246357528 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.256725777 seconds)
  done (took 13.650213697 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.377908588 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.328706996 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.214406018 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.243673469 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.215129694 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.237256081 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.236078221 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.214724984 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.214025839 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.213172086 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.213788806 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.402435554 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.268460855 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.21429955 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.215131296 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.306331972 seconds)
  done (took 41.265822648 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.244469311 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.220969363 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.336816968 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.236846564 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.24175793 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.411653472 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.274356016 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.219429221 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.394824117 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.259944345 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.830827938 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.242665201 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.220336143 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.356820212 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.235534279 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.40951109 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.468018089 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.826586804 seconds)
  done (took 28.578921387 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.681121762 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.21864959 seconds)
  done (took 9.04850988 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.239002758 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.230352688 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.215780653 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.229270241 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.235578939 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.245726732 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.233964024 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.233909066 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.220631698 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.264498776 seconds)
  done (took 63.498077801 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.236670707 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.218062084 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.218351481 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.215384265 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.208955695 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.207360093 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.215123352 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.213687881 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.99014343 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.344261203 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.231970139 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.224165274 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.217753789 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.218998876 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.216322008 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.253467017 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.365195119 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.214588701 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.214665738 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.222934268 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.217854627 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.303571809 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.259308894 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.213959248 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.344127643 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.97663089 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.22038442 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.224426591 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.34679255 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.215388842 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.215764301 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.217359709 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.218234881 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.788580271 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.751328038 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.223313021 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.241328698 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.224958191 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.214744872 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.337343096 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.21622574 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.222581868 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.222824468 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.714420946 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.371553756 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.327734576 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.45042338 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.216438079 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.219782997 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.276953282 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.214296104 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.217164745 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.244746053 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.97181382 seconds)
  done (took 105.23918456 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.259263419 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.702485108 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.377512501 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.231887197 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.068273088 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.995236287 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.20716362 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.493873563 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.24589378 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.207460607 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.543424132 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.714250385 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.213727133 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.251132403 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.767924625 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.266861531 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.210653243 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.993671264 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.208757321 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.210790761 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.631329309 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.223203903 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.206179177 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.380796266 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.247610829 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.669275849 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.622865155 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.708788278 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.209819474 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.209109971 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.672820605 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.212402256 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.243882623 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.206622327 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.478315427 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.555756791 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.530271262 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.209344508 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.234825238 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.209877824 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.22614359 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.656329394 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.541664751 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.206968578 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.205054787 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.659542243 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.204789227 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.206137282 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.210751838 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.412823623 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.119904184 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.205131103 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.569505155 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.203450741 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.482393888 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.293657657 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.260901917 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.677553007 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.202784374 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.2537482 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.22145931 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.205225013 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.209704087 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.205077292 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.204437136 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.529734807 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.494175752 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.203562717 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.529986823 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.644337596 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.201069585 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.711488189 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.060405523 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.211124265 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.243088446 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.199559962 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.850144213 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.670984159 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.222863091 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.201468593 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.5137701 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.205024707 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.510507762 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.2154322 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.201982793 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.622897521 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.218959242 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.234557714 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.214069774 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.201219141 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.975650876 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.203419327 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.475570675 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.221447658 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.201588533 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.20217223 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.2086585 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.201333416 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.205828681 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.206641649 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.711381997 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.201981844 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.492808441 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.219875811 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.204284123 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.207237701 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.206144692 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.203403105 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.425112371 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.731782788 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.2084376 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.204997916 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.202758378 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.208003682 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.360581402 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.207199767 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.488622522 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.203002152 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.202751402 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.224511534 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.008917172 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.203978762 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.203052922 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.206786613 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.023667042 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.409658695 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.219514303 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.203751592 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.204517286 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.224959189 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.482992767 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.203626493 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.27218765 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.205642028 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.889792412 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.238690716 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.230538924 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.776507973 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.204413191 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.135019623 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.225872668 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.206037027 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.503184249 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.470838456 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.408349975 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.205298309 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.219511688 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.865965405 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.208692874 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.344421076 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.222260576 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.20191544 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.401292103 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.391079899 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.205159281 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.758664509 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.207785784 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.420996089 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.206387111 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.516467232 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.676864572 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.204827555 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.210477122 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.892661483 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.873932899 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.846910624 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.208847975 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.529938278 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.191137528 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.658852814 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.204884006 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.20548127 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.770858617 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.206752981 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.210284351 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.206794496 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.205708192 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.268740525 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.381336182 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.760696025 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.211609306 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.647551561 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.265353657 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.206041142 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.23123268 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.209130197 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.558322708 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.268718829 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.206035673 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.240846047 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.206462342 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.20606546 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.659378527 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.102848873 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.211917024 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.359606129 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.819352016 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.207153793 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.207721558 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.871200036 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.414038811 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.694351764 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.253291848 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.49587092 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.209001502 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.245534752 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.982337903 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.278762895 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.700311168 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.208015926 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.208154434 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.790350953 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.209187767 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.271109768 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.207937283 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.20707317 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.725288588 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.209424337 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.214488889 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.494264971 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.208729488 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.458236682 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.20876864 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.229174327 seconds)
  done (took 1082.638243435 seconds)
done (took 1345.064807742 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.210044792 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.212601431 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.200869065 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.21452802 seconds)
  done (took 25.983731786 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.221610486 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.216643878 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.217031874 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.21479575 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.217887725 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.21562117 seconds)
  done (took 8.450303191 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.281590577 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.219624534 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.214418172 seconds)
  done (took 18.86339356 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.420100088 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.443100693 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.562977827 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.319173838 seconds)
  done (took 9.893125794 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.218150691 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.217266635 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.218118291 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.219613201 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.221539948 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.223439525 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.220011129 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.220658061 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.22466282 seconds)
  done (took 12.130638898 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.918124304 seconds)
done (took 81.384714717 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.083114883 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.221612956 seconds)
    (3/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.927903003 seconds)
    (4/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.238145382 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.220904633 seconds)
    (6/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.237651412 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.232995586 seconds)
    (8/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.198284175 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.458869001 seconds)
    (10/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.234768243 seconds)
    (11/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.300955606 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.570788818 seconds)
    (13/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.226362797 seconds)
    (14/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.971738748 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.259135165 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.238728767 seconds)
    (17/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.79711074 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.449791274 seconds)
    (19/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.021867045 seconds)
    (20/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.23176109 seconds)
    (21/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.200831127 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.588307047 seconds)
    (23/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.244797995 seconds)
    (24/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.27122827 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.307778077 seconds)
    (26/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.903526236 seconds)
    (27/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.771331586 seconds)
    (28/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.440037207 seconds)
    (29/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.245345464 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.315863803 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.089123644 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.217939402 seconds)
    (33/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.375358046 seconds)
    (34/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.747150481 seconds)
    (35/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.030195461 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.348685952 seconds)
    (37/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.198556411 seconds)
    (38/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.254242695 seconds)
    (39/309) benchmarking ("sort", Float32, false)...
    done (took 5.194808359 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.238597187 seconds)
    (41/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.23793425 seconds)
    (42/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.288576927 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.420390382 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.217057969 seconds)
    (45/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.582423762 seconds)
    (46/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.507656125 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.244106816 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.257927343 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.566429092 seconds)
    (50/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.766455562 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.653583209 seconds)
    (52/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.528434171 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.811958784 seconds)
    (54/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.051113674 seconds)
    (55/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.502730377 seconds)
    (56/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.914243831 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.342582856 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.60829374 seconds)
    (59/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.585764195 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.487593698 seconds)
    (61/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.508536018 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.044361884 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.654750174 seconds)
    (64/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.567604496 seconds)
    (65/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.295761422 seconds)
    (66/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.349572861 seconds)
    (67/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.80051452 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.076461981 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.278581549 seconds)
    (70/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.216196575 seconds)
    (71/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.736727679 seconds)
    (72/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.232081755 seconds)
    (73/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.300485357 seconds)
    (74/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.585121502 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.621035816 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.797159511 seconds)
    (77/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.214438414 seconds)
    (78/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.53648508 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.79636449 seconds)
    (80/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.764681933 seconds)
    (81/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.237279481 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.838957171 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.215027313 seconds)
    (84/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.034326558 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.215334144 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.243206595 seconds)
    (87/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.226214679 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.096847057 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.215609035 seconds)
    (90/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.00645569 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.574124321 seconds)
    (92/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.452842438 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.217116342 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 5.363376158 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.308292762 seconds)
    (96/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.245072829 seconds)
    (97/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.533360924 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.215796219 seconds)
    (99/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.24317838 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.217523006 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.214565579 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.118086479 seconds)
    (103/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.029772305 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.103125967 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.29214194 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.252839189 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.058097586 seconds)
    (108/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.238271331 seconds)
    (109/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.982474384 seconds)
    (110/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.942574733 seconds)
    (111/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.619372498 seconds)
    (112/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.525698325 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.21815977 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.208027625 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.210014673 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.416871666 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.290559563 seconds)
    (118/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.014635949 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.019065815 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.561004761 seconds)
    (121/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.219283812 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.443293606 seconds)
    (123/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.339676289 seconds)
    (124/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.249631098 seconds)
    (125/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.768723521 seconds)
    (126/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.208798385 seconds)
    (127/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.236691629 seconds)
    (128/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.563910691 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.956280167 seconds)
    (130/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.220327208 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.220720392 seconds)
    (132/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.293326776 seconds)
    (133/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.310127426 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.204907549 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 1.732487703 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.24064134 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.490033856 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.419095381 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.538048672 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.938033108 seconds)
    (141/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.925342868 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.487644873 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.055655371 seconds)
    (144/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.336013555 seconds)
    (145/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.243237733 seconds)
    (146/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.349858972 seconds)
    (147/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.418297487 seconds)
    (148/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.235122689 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.146536125 seconds)
    (150/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.582184209 seconds)
    (151/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.824302733 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.325966159 seconds)
    (153/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.207119879 seconds)
    (154/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.285131679 seconds)
    (155/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.510271222 seconds)
    (156/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.209337354 seconds)
    (157/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.378347202 seconds)
    (158/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.220043806 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.013575398 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.740290029 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.245848679 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.268399928 seconds)
    (163/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.067198 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.22439701 seconds)
    (165/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.763519109 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.697560189 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.752728416 seconds)
    (168/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.289524879 seconds)
    (169/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.452966588 seconds)
    (170/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.70229712 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.243844293 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.284550604 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.340428472 seconds)
    (174/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.662864501 seconds)
    (175/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.633840641 seconds)
    (176/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.440898676 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.224102438 seconds)
    (178/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.265037371 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.619448347 seconds)
    (180/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.349364276 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.61682343 seconds)
    (182/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.218848444 seconds)
    (183/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.502562239 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.618940577 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.223745167 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.230989323 seconds)
    (187/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.240181844 seconds)
    (188/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.8098204 seconds)
    (189/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.25324916 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.623420341 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.57932369 seconds)
    (192/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.55480813 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.247499811 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.497669107 seconds)
    (195/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.320342032 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.231513161 seconds)
    (197/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.249489434 seconds)
    (198/309) benchmarking ("sort", BigInt, false)...
    done (took 6.228244803 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.94092111 seconds)
    (200/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.566069595 seconds)
    (201/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.42067708 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.264798012 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.273890551 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.244924661 seconds)
    (205/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.573330067 seconds)
    (206/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.528091697 seconds)
    (207/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.304072718 seconds)
    (208/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.248372964 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.848208962 seconds)
    (210/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.311655997 seconds)
    (211/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.323623958 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.279367901 seconds)
    (213/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.33882013 seconds)
    (214/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.328751065 seconds)
    (215/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.51081407 seconds)
    (216/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.57420263 seconds)
    (217/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.305271073 seconds)
    (218/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.861017942 seconds)
    (219/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.682729024 seconds)
    (220/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.737443372 seconds)
    (221/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.53934671 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.884794237 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.425239648 seconds)
    (224/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.221863641 seconds)
    (225/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.353800832 seconds)
    (226/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.327680981 seconds)
    (227/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.458542242 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.222370496 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.21632223 seconds)
    (230/309) benchmarking ("sort", Float64, false)...
    done (took 5.504325953 seconds)
    (231/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.231957143 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.052900088 seconds)
    (233/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.385400498 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.246729312 seconds)
    (235/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.444825142 seconds)
    (236/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.272482546 seconds)
    (237/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.305869976 seconds)
    (238/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.308535029 seconds)
    (239/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.263533853 seconds)
    (240/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.223984833 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.218440815 seconds)
    (242/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.292361416 seconds)
    (243/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.578744096 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.227281014 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.229416865 seconds)
    (246/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.467948786 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.329657139 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.946625661 seconds)
    (249/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.223471149 seconds)
    (250/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.017712089 seconds)
    (251/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.417428509 seconds)
    (252/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.338578824 seconds)
    (253/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.595910912 seconds)
    (254/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.657933912 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.224888227 seconds)
    (256/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.607759775 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.264409246 seconds)
    (258/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.967183266 seconds)
    (259/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.251007456 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.936946073 seconds)
    (261/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.265525751 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.434824457 seconds)
    (263/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.967624566 seconds)
    (264/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.452295895 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.11602679 seconds)
    (266/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.471799419 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.635646264 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.310717518 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.251534798 seconds)
    (270/309) benchmarking ("sort", Int8, false)...
    done (took 4.238254204 seconds)
    (271/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.308415619 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.210061609 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.21604033 seconds)
    (274/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.949954623 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.630081273 seconds)
    (276/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.345501237 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.223695103 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.857247923 seconds)
    (279/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.975718414 seconds)
    (280/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.409688543 seconds)
    (281/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.254538378 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.273933731 seconds)
    (283/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.349062022 seconds)
    (284/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.591242058 seconds)
    (285/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.226017769 seconds)
    (286/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.258577263 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.30903584 seconds)
    (288/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.25261897 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.660830775 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.308792773 seconds)
    (291/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.312212558 seconds)
    (292/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.818457849 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.343034322 seconds)
    (294/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.550997375 seconds)
    (295/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.456432257 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.014196889 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.226946166 seconds)
    (298/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.334976694 seconds)
    (299/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.591953365 seconds)
    (300/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.41519964 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.627579763 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.967211794 seconds)
    (303/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.651160495 seconds)
    (304/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.27303936 seconds)
    (305/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.771296121 seconds)
    (306/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.242058081 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.253984449 seconds)
    (308/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.768874863 seconds)
    (309/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.81384162 seconds)
  done (took 881.453695413 seconds)
done (took 882.601833419 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.261186033 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.254537714 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.239245355 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.261920532 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.352798245 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.267885549 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.250294129 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.243304049 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.288121939 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.289598651 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.238869818 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.266297318 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.240779833 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.243252974 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.244706014 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.254539711 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.230226967 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.241087763 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.257297585 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.249497826 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.255757565 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.238966763 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.29083579 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.26879372 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.24397504 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.243139413 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.24288596 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.257446689 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.35143191 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.242583499 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.244201149 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.25131439 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.226424925 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.240026398 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.236343532 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.258827358 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.249494146 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.251428325 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.244463184 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.272795057 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.608451279 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.239419038 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.242364064 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.242620061 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.243038895 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.24586554 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.241893577 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.246654232 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.253232072 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.254247458 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.5965401 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.254572409 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.243868036 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.243438672 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.253618248 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.240715787 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.245692899 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.256529446 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.259968861 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.256496569 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.217915572 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.245818538 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.244214249 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.25835825 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.249222831 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.636156002 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.238274946 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.247062642 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.611830456 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.247987984 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.636514597 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.249860371 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.244955337 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.256976587 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.273528164 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.230533048 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.238614916 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.242354244 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.250707129 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.241601262 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.253972803 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.255389948 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.248035832 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.244863045 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.256687337 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.273401982 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.254462796 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.244492788 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.254023602 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.261796789 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.249677892 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.253860742 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.248026089 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.240911709 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.255082929 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.248616384 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.246159229 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.246045654 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.249736374 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.256079028 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.61354034 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.259676171 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.242294394 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.241245956 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.243923491 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.255881991 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.613530617 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.244193228 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.266021302 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.292064445 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.246757668 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.222946636 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.248004979 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.260072984 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.253834521 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.248767316 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.240760538 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.225312217 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.607904667 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.258318004 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.247459218 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.243305873 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.259640142 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.248340518 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.242908444 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.237205537 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.248081859 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.258687491 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.365297626 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.25618445 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.276219848 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.243673185 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.248592296 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.274814982 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.26013749 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.276911534 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.249390104 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.260929665 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.262235539 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.242874972 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.256931456 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.257209031 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.248970661 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.25210411 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.242168605 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.278324268 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.257996809 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.258303578 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.26826377 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.365929163 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.244224208 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.227085187 seconds)
done (took 210.673419949 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.302369749 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.239882799 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.325649958 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.242362432 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.340202928 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.356869651 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.240664272 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.240236792 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.240656463 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.620964716 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.240944191 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.24051178 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.243060572 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.241884355 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.324856777 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.24296458 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.240080686 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.612597305 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.243620369 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.312282675 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.242485596 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.241223168 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.242899786 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.656122311 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.237165512 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.23831261 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.322477318 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.24369271 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.586577619 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.236559191 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.240843564 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.616732509 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.344976978 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.260856113 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.252905471 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.250594368 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.355361521 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.258738792 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.337333262 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.323230687 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.337298821 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.281158274 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.237553712 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.245044617 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.245125156 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.245258106 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.241163346 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.270764648 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.239376302 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.242063529 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.588532307 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.25398387 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.251934737 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.242012777 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.242530464 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.263679259 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.24199472 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.245229307 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.333301006 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.245372885 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.315593781 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.625395366 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.652851397 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.246201474 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.244025167 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.242896889 seconds)
  done (took 142.575861664 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.311241217 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.317649306 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.353075977 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.244998309 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.295393621 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.357675304 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.244901246 seconds)
  done (took 10.299701266 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.249927946 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.244883548 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.294362236 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.294734916 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.244984168 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.393905228 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.245409279 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.256734571 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.242890039 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.298969963 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.246158195 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.245992687 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.252453542 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.247059954 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.292367102 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.25629103 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.359853256 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.245885271 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.246201295 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.396752243 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.243556504 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.253896877 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.311765668 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.257971672 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.247651806 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.251690363 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.813590036 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.245836434 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.245241253 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.246759503 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.244172109 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.284611746 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.247575982 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.245838501 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.244524449 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362882892 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.247339006 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.246032599 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.24872391 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.243381679 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.248124877 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.248516126 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.247842655 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.246071912 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.247374347 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.269989665 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.248221764 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.248289573 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.247336057 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.248104742 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.300609735 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.248600661 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.246549987 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.245493298 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.305245519 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.255365506 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.24746882 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.245879817 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.248560689 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.244741853 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.39797536 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.295441495 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.248639022 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.295817054 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.248583988 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.248077705 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.248318459 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.248579865 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.301661801 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.249090657 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.296553566 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.246116773 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.402953367 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.271033774 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.250515777 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.250643203 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.250881986 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.24922609 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.243790684 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.254342732 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.247472133 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.249191156 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.254418122 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.248082637 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.24615147 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.351901176 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.358016818 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.246645116 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.260792065 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.256183941 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.246699155 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.30465332 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.249782609 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.247264487 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.299532338 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.36315851 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.316263082 seconds)
  done (took 144.799940342 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.255345719 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.25822377 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.25160849 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.266484118 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.250557445 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.249775698 seconds)
  done (took 8.711370619 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.25251335 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.251262563 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.250477782 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.252308784 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.251615794 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.251889657 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.251978323 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.251456253 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.254161268 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.250818986 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.253350251 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.253733243 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.253153482 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.251496614 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.251681031 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.251513839 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.251794985 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.249146586 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.252133001 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.250899403 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.355867842 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.250419747 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.250544227 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.250825012 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.255762901 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.250770397 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.259714853 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.252426811 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.251798665 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.259461104 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.254988164 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.253148389 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.252063952 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.255831414 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.255511692 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.252242123 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.254411675 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.256312196 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.250638281 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.252979038 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.256308498 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.253364593 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.252425077 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.255454304 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.254071785 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.256206661 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.258837529 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.26029826 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.254263735 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.256088 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.255325427 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.252599513 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.254055859 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.256456966 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.254501557 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.256436867 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.259634313 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.253994828 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.253291837 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.253856117 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.254028393 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.254472535 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.255210223 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.257186528 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.25206913 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.257122593 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.253762533 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.257927758 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.254643368 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.253293118 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.257217327 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.251948632 seconds)
  done (took 92.562249346 seconds)
done (took 400.118072364 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.55525272 seconds)
  done (took 7.738492337 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.282745676 seconds)
  done (took 7.466343652 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.260398349 seconds)
  done (took 21.452628928 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.308170538 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.351605954 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.250262069 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.259496759 seconds)
  done (took 26.353720209 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.582366058 seconds)
  done (took 7.764967801 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.24669906 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.247380098 seconds)
  done (took 13.679052893 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.778719603 seconds)
  done (took 7.961997878 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.835052226 seconds)
  done (took 8.027662632 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.24801481 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.250423532 seconds)
  done (took 13.932592785 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.233769789 seconds)
  done (took 7.418386901 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.026190345 seconds)
  done (took 8.21138766 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.257819084 seconds)
  done (took 7.444703327 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.281526356 seconds)
  done (took 7.465501238 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.055954914 seconds)
  done (took 9.238900121 seconds)
done (took 155.338714924 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.247014375 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.253837539 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.252193711 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.252443519 seconds)
  done (took 26.189082686 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.289564718 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.290418954 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.717547752 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.300381863 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.292093501 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.289350809 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.281789675 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.281923869 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.301082973 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.292624267 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.292651947 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.292435836 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.290658202 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.282586269 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.292167787 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.292262401 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.30110051 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.290532193 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.281394947 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.293482738 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.258006249 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.300246039 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.293928901 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.258426885 seconds)
  done (took 32.542355777 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.453616561 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.328657165 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.408880062 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.307178617 seconds)
  done (took 6.684601122 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.308825206 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.311271177 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.321891023 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.360962596 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.388100415 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.319920397 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.28392397 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.278254095 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.265786538 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.310359615 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.386199585 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.327431564 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.407127312 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.258394994 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.453683926 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.258938668 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.258181922 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.310420643 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.361326508 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.37610281 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.258932635 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.310120167 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.313424037 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.32762455 seconds)
  done (took 32.943183234 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.256920434 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.265551164 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.264212053 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.256880447 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.258190883 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.257538316 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.264006282 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.259598857 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.27869477 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.259356046 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.25629399 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.258149487 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.258550275 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.25866429 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.257847876 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.269930934 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.2714986 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.258426184 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.260987161 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.264004312 seconds)
  done (took 26.42253908 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.251829213 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.117600763 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.60445481 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.506870424 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.2520956 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.256015955 seconds)
  done (took 27.176253306 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.32536655 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.460219252 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.260740164 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.603583386 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.679201731 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.260597919 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.259268233 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.491480665 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.785340946 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.791566611 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.316433894 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.324671559 seconds)
  done (took 18.746728057 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.261193361 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.253637551 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.263937788 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.268771898 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.311445944 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.261415917 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.266762743 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.253379985 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.316675584 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.316472229 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.263069211 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.313539287 seconds)
  done (took 36.540233327 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342253415 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302334452 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.238136475 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.001680205 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.972677029 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.466939652 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.019398142 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.670098865 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.260914821 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.528529743 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.251668757 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363023356 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.509870107 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261338911 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.260274297 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.242214991 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481089613 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.738636221 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258066138 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.110984764 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285464565 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.262163618 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.287176246 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.2882303 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.467167611 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.231950427 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.519043524 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.03245601 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535229459 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.269577171 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266272756 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.255132207 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.529074407 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905091628 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.35341719 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266507806 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.953235538 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.800277465 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.252013772 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.218151024 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.992273502 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.26241295 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26715234 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.255217112 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.189718391 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.26429175 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.681702336 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.264195814 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.969178049 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.257527863 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.267638743 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351646803 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.261731935 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.828327959 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259884024 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.264018621 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.255279462 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263755581 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830759407 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.622472632 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.263656222 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.196210323 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.634357255 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.118969866 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900145669 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.359308878 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.260859402 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.261739255 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192681182 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.120316043 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.279768978 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405356855 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.28381624 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.907059776 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010367303 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.264697417 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.193910127 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803740181 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.265070053 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.197317581 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.485158817 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.033789383 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193846889 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.234487033 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.192789038 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011352298 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26852359 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.661342883 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.266387536 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.675173765 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.271872849 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277658136 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282394113 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.480867787 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.143063488 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.25856406 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.054217775 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402666523 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280398198 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.678103597 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.19449268 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.263594835 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.515102436 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.471221248 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.268635121 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.259183325 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451544564 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269594596 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.278453383 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.265622386 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.275560352 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.818487438 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.273200431 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.597409514 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282417593 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.037807579 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007966379 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268799729 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.365342593 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.263796746 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505632318 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.034679152 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.420852498 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.32828974 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.263441477 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.261296492 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.233330999 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.114907166 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.151242458 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.262351316 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271998721 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.276448423 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.262637147 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209881351 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.268418428 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264058325 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.0455476 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.48549497 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.260246708 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542423619 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.196116188 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409933921 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.272355286 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.485135837 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.44771029 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.265372342 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520559725 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272505239 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.277160149 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.278592243 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281471053 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359311767 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28466019 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.268159413 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.521817439 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.26606069 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.267456922 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.282276143 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.044654171 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266186328 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.268383599 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.087145889 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870620871 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245283162 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270911052 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150829522 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.277176762 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.330005535 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.26934999 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.273237756 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.053372781 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.072571941 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.269369345 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.268896239 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.492581465 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.272949594 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.278000018 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349861926 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.452129529 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.880089326 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.278173748 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.197762053 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.975797346 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.95697101 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265315358 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.452367347 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.263098029 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272941885 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.273795637 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.777832305 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.822098505 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271573096 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.203298052 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.273748836 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.276054012 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.26962734 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264853034 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.00761411 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.654342794 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276605363 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.279574408 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408563472 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.277923129 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.197529452 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.781202393 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.269550648 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.264703805 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.040276065 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300417997 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.147261383 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.741372892 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524524127 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.95115235 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.277809377 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.288752706 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.30073795 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.264620835 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.066036735 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290409142 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.284772128 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278167493 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.27676409 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.26896796 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.707284248 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836671432 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963396646 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823438233 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177247515 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.271521128 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.151235308 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.697001431 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200771711 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.92321508 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.450532487 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.691169947 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211164401 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4567664 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.458030506 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.01599897 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.277247208 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.494284689 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171638442 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.0904006 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.297174615 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.47863474 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301120159 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.276635195 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.200423337 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.552155013 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490018294 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.077060523 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350589853 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688733434 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.067184105 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.064816349 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.265555587 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.622868032 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433148494 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.813431795 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.655685871 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.277413241 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.273040919 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.736602439 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.278803863 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.793212229 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87203602 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.283591048 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.462620912 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204164243 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.278424415 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.278510226 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.268642055 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.524094664 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.270052074 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.541472975 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.279632194 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.202946652 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.279133385 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78365612 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.128869271 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.273771399 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268863391 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067687199 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27064698 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551416641 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.283390777 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.016577384 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271320333 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.20335621 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.202542228 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.961413632 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.270699374 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244694012 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79612794 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.62664675 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.255345129 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.29099621 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115981243 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.525926413 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.285301097 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.880717375 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.50042849 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.048484492 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296334849 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.370312355 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.135544529 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.27421088 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.151536123 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.505782649 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.093969993 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.493825379 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.273029873 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.175686906 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.26956372 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.487091003 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.15826482 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271036826 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51475745 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.989021852 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.29034728 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964993686 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301987362 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.283925889 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288815709 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.633365172 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.283388492 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343791055 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.280905043 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.281497318 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.282249384 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436298084 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287365122 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279504879 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.284482894 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364840086 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.642202335 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.013410759 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.049999694 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891237579 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056333139 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.852919288 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.288829806 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.271586383 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270580361 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207652369 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419746525 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.797758962 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546009518 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401744929 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.71865328 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295019306 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.161564072 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.291018808 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.489122874 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547536642 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.142276075 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279852403 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.934828694 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.431631569 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.283961038 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.483961061 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804392477 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859729858 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393449176 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.271900504 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.712066454 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547525334 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.364366585 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273864911 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.865962176 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.276611313 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.640960117 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.278886706 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280354819 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426108055 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281977605 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929665902 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.283823103 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.43310661 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.04714062 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.31507474 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.534630956 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.751734135 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.288866505 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890907708 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.008592289 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.541866308 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344831742 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.285107413 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.378600737 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420888106 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.274621934 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.182158933 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.275827918 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119223575 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.984908877 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.285794498 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845013377 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543028121 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.27197733 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.277211966 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302094187 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.284114094 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.497980405 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995082544 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498763527 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.284476767 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.276269408 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.845812831 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.847097517 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.292862734 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209620832 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.279986677 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511002947 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.516151399 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.300728025 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.729836108 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.985995889 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828522469 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.248561565 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298501957 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.276041844 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.973106861 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847209251 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.026328876 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773240555 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.935436387 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277028489 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.5698224 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.281460833 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.281958293 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55630142 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.280245157 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.290280855 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.291545945 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.892455649 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039605396 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.286005807 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.255153889 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.218446973 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.503141716 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.912226012 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.214053441 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276310578 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.456215841 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.282706437 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407875332 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.289828873 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.279207932 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282384501 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.034000329 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552165288 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.283154685 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.261585563 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.226099024 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.285056303 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288802183 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504672378 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285331685 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.953277353 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.626141804 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.533842163 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.291095935 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.2675669 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.283110219 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278143396 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.99476751 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.24830761 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.802874952 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865723728 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.29136749 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.293385186 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.281906142 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.494741928 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.489261379 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.284485521 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.295532339 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284658316 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298009541 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.184144193 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.046714035 seconds)
  done (took 1549.799240577 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.299275461 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.333639732 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.292310416 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.368173173 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.335419988 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.360856798 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.382098042 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.396024561 seconds)
  done (took 51.979927566 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.282221946 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.433219583 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.308360547 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.285268994 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.293752508 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.279215637 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.731907692 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.290655739 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.287220428 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.289722853 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.280222539 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.296654824 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.925611602 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.294159431 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.278650175 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.274831122 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.292216841 seconds)
  done (took 64.343098012 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.279712857 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.788074919 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.369737768 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.285582979 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.190043614 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.297773214 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.989467016 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.30192884 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.280750007 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.485239708 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.932252292 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.288753889 seconds)
  done (took 83.703521153 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.28823892 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.287481961 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.288459485 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.287837089 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.28817631 seconds)
  done (took 7.654395006 seconds)
done (took 1965.909840597 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.527416206 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.956460314 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.931384879 seconds)
  done (took 5.102236329 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.429663854 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.478077148 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.597749745 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.604248155 seconds)
  done (took 7.326432488 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.557322556 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.666714319 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.468750731 seconds)
  done (took 5.909366224 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.658920067 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.293152201 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.40988827 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.282822775 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.287890194 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.285763469 seconds)
  done (took 20.073347021 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.287329957 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.289632739 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.288538927 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.290295053 seconds)
  done (took 6.371959703 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.267867453 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.997027894 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.270131025 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.286793133 seconds)
  done (took 18.038819031 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.032373783 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.046174334 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.029689638 seconds)
  done (took 7.325191115 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.28209309 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.130020307 seconds)
  done (took 9.628609777 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.591337543 seconds)
  done (took 2.807759045 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.41996069 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.614412514 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.328367555 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.252420948 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.324269704 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.050961146 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.888340201 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.477773517 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.234734709 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.389107973 seconds)
  done (took 27.198186934 seconds)
done (took 122.883728213 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.026079342 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.285561345 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.489590013 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.047912925 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.512398297 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.490410893 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.713986551 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.010273128 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.553508483 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.505851084 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.004322665 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.513240077 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.44491612 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.285944272 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.444768264 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.662717003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.542754543 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.16797513 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.728640686 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.883769589 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.711736076 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.638980671 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.834968641 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.70808633 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.613147938 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.44180676 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.217930346 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.662074283 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.896681856 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.287629363 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.447441128 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.053843354 seconds)
  done (took 188.048230428 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.28446428 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.299197032 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.286337351 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.284863717 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.285293832 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.291131519 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.284528606 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.289427561 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.284484599 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.285119629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.285596196 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.313030658 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.286119859 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.29957953 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.285829856 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.285903434 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.285810375 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.297787193 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.285791681 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.303780474 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.288680676 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.286481246 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.286536088 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.286769259 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.291057747 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.285882134 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.2863185 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.28585761 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.28660007 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.285651324 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.286755564 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.287801087 seconds)
  done (took 202.468771518 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.290392351 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.285637653 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.307426937 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.286916288 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.298843093 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.290393173 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.304694473 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.28799245 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.310095173 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.292631746 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.286593457 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.301473379 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.289964093 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.30133212 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.288123179 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.28888594 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.288328973 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.297976349 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.287527671 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.300659103 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.292125136 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.301687582 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.288176506 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.289254331 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.29676464 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.289489394 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.288602058 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.287959235 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.294167486 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.288308579 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.30794309 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.291893831 seconds)
  done (took 202.624726653 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.48368536 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.300407187 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.298742509 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.23307556 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.298761483 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.29645472 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.290002379 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.493761595 seconds)
  done (took 13.918519924 seconds)
done (took 608.289639818 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.541446778 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.270272318 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.492794488 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.317160362 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.054079241 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.322320664 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.317858038 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.482428214 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.214226892 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.484854017 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.534480008 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.31419859 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.673385694 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.315909855 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.566032482 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.418293357 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.197072122 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.315595746 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.629896986 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.801834557 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.572340479 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.769570648 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.481524216 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.223044866 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.674701781 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.768464306 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.982975327 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.192533899 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.316680949 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.635740125 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.907565263 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.240916567 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.373911522 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.355504622 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.40936897 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.392194052 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.228834069 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.358349616 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.497263721 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.540076678 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.830377477 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.053531268 seconds)
  done (took 89.294076139 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.286891125 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.286719139 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.28549989 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.286967376 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.287798215 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.284969601 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.285305624 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.284685299 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.285664774 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.286532122 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.286565033 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.28806081 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.287496278 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.287527545 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.285047957 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.286546135 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.286868579 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.287813897 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.286239181 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.286267435 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.287775463 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.286156545 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.287055689 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.287130803 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.286699697 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.287208802 seconds)
  done (took 34.677903028 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.300485508 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.551750291 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.710964236 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.310978984 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.301248419 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.304799202 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.376505367 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.307444948 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.302123213 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.303077585 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.467823564 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.308428263 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.336710426 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.737516217 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.308093232 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.301639033 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.30216829 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.299527904 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.560456172 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.311411315 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.378117694 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.304352067 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.377403895 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.313876444 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.304118914 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.301990247 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.306453831 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.829564457 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.308425116 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.466897641 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.0706369 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.380134165 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.819309327 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.727998331 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.07792347 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.309288639 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.303442686 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.47218828 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.308868177 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.30396947 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.375557434 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.307750996 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.719226621 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.941573124 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.322551748 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.30408329 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.848261146 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.478136587 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.550137185 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.315193656 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.742922005 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.311318853 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.305197027 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.30495139 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.543102941 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.314199262 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.303493294 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.882423075 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.328664318 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.37772275 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.309883516 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.302812722 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.569506128 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.304089974 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.555701833 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.304299445 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.312849124 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.304770033 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.723506219 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.310335085 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.957003708 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.32443147 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.304488675 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.470096155 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.561742433 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.880252407 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.311619467 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.573711652 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.830252656 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.383092896 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.313738537 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.818699353 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.387274964 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.313602105 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.308688569 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.306976093 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.3059248 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.354139009 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.377881542 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.887203808 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.954719246 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.903030148 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.402656584 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.316652659 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.305528787 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.884011182 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.326611517 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.30538106 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.718799013 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.966390005 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.326346217 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.314139832 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.941328835 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.327809251 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.381631482 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.316144433 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.729487956 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.313264966 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.354818565 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.307809936 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.313636247 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.309611779 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.382023812 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.314889504 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.306766367 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.932909904 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.500339805 seconds)
  done (took 172.601321503 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.307518222 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.299126512 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.303784123 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.299993574 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.300894748 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.306508844 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.299848861 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.300529719 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.305488356 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.299422212 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.299977123 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.30119861 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.301730423 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.304865687 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.310661182 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.307925956 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.908568984 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.300251227 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.30054938 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.30188831 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.091375693 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.306626699 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.301144684 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.299851288 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.301052688 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.303304482 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.303319974 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.319853278 seconds)
  done (took 151.120911002 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.308643983 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.860318894 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.314323864 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.434643854 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.334023842 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.306218718 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.432715871 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.369273062 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.314233733 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.307009911 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.307139579 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.605234109 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.314570543 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.810310285 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.496590015 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.441906333 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.817256038 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.315165033 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.307527534 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.306565946 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.438303224 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.323229921 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.604657719 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.868754204 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.315728893 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.864321223 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.304868037 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.310319694 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.308615781 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.866889553 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.313373873 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.608282699 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.389108374 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.371553026 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.86965704 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.81693662 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.82149131 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.456074605 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.313065053 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.307284483 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.307639362 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.298243709 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.866532467 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.316276652 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.3100488 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.859781174 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.330301964 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.310941233 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.319236638 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.308779394 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.365998792 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.367152965 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.610665855 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.877065641 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.3899184 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.335480773 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.436018258 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.695179348 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.318350836 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.813527 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.3020827 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.86830835 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.317372487 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.299984152 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.310275562 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.315414268 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.456724718 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.443286198 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.822280662 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.316578433 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.817272279 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.463493255 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.31507514 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.309625358 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.313026895 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.871964998 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.822224539 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.461677766 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.446081102 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.50365564 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.306290578 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.309777915 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.301075057 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.385353024 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.31615106 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.87398993 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.822457474 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.318161913 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.313079821 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.313349886 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.314657215 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.481471709 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.879614793 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.393974446 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.817242465 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.632403029 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.619493083 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.317889694 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.369844016 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.316251415 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.614559541 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.318203396 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.368135073 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.760066173 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.620686058 seconds)
  done (took 156.712714751 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.549531364 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.476055721 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.399562251 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.427192844 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.911855924 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.885880001 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.590281407 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.442530194 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.423057973 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.553551526 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.443261002 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.402407114 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.476572684 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.399216617 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.019377329 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.382068627 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.405669023 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.436922652 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.410938376 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.321641694 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.947613227 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.601487365 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.484801615 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.20515744 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.404575753 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.051952376 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.860911271 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.847141018 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.490482192 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.573126482 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.829559067 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.410622308 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.263054782 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.973939997 seconds)
  done (took 63.541699983 seconds)
done (took 669.170140623 seconds)
SAVING RESULT...
DONE!
