cset: moving following pidspec: 3401
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.164922 seconds)
loading group "string"... done (took 0.558847068 seconds)
loading group "linalg"... done (took 9.58865701 seconds)
loading group "parallel"... done (took 0.163255077 seconds)
loading group "find"... done (took 2.468025414 seconds)
loading group "tuple"... done (took 2.25199042 seconds)
loading group "dates"... done (took 1.398496877 seconds)
loading group "micro"... done (took 0.554438717 seconds)
loading group "io"... done (took 0.555542267 seconds)
loading group "scalar"... done (took 53.288597445 seconds)
loading group "sparse"... done (took 13.142993405 seconds)
loading group "broadcast"... done (took 1.238930095 seconds)
loading group "union"... done (took 2.623801488 seconds)
loading group "simd"... done (took 3.533354413 seconds)
loading group "random"... done (took 13.306697177 seconds)
loading group "problem"... done (took 2.25221428 seconds)
loading group "array"... done (took 23.701761486 seconds)
loading group "misc"... done (took 1.082422015 seconds)
loading group "sort"... done (took 3.728391119 seconds)
loading group "collection"... done (took 20.560973494 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.757756339 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.16163456 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.246236246 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.299812175 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.301533662 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.204535891 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.197703833 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.163190698 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.644080346 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.231563483 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.198706936 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.403718647 seconds)
done (took 6.620902114 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.289773542 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.135165916 seconds)
    (2/2) benchmarking "String"...
    done (took 0.228086394 seconds)
  done (took 1.013314194 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.149573059 seconds)
    (2/2) benchmarking "String"...
    done (took 0.164577507 seconds)
  done (took 0.966449187 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.128946539 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.172153202 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.148127156 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.133563795 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.150317075 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.148740835 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.135289937 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.147982293 seconds)
  done (took 1.688683184 seconds)
done (took 4.737387549 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.539048721 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.920003339 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.541424908 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.203980915 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.357532491 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.317798461 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.318343685 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.274384244 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.135879443 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.115281627 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.211898522 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.458582584 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.431470459 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.952805987 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.103092801 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.156318256 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.175805927 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.81923545 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.125577446 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.157106283 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.535522278 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.262035967 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.162578956 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.13836646 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.309465048 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.175560592 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173467492 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.15062961 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.71968448 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.178833671 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.240084083 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.129403814 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.172165486 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.201321352 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.283670214 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158778377 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.727712827 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.246255806 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.126746566 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.145813938 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.732379695 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.167071274 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.240915951 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.151340074 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.117527418 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179807759 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.144070553 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.127827317 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.161078953 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.14662299 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.212732807 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.480605839 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.152335534 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.232561862 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.156104847 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.727277544 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.147415916 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.332307388 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.181811086 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.152754909 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.123940074 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.151632608 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.203928848 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.143151002 seconds)
  done (took 22.798179027 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.209084039 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.227505682 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.142419068 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.206040918 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.173497933 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.142722249 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.13474387 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.141405529 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.160187816 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.239957955 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.185127176 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.23645357 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.120782311 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.153818977 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.200105262 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.28039931 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.170876071 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.170466328 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.13628275 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.157954184 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.171071191 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.160580638 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.154811327 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.140720819 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.218979293 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.253473417 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.167439135 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.171450986 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.151540096 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.14352294 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.189245471 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.207111979 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.123469647 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.151545779 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.218913261 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.169903539 seconds)
  done (took 7.05950442 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.268560077 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.149360517 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.275315772 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.235507498 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.192268783 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.224488857 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.228287043 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.316937302 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.248477109 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.540122331 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.21003379 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.175523575 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.160296698 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125840082 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.142564316 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.155406039 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.144024492 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.888129367 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.198095263 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204072389 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.22011352 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.159407774 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.14494718 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.394542052 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.148841392 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.130714263 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.15719937 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.096099583 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.268410223 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.141253712 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.523649035 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.147893117 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.143154895 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176925243 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.252259641 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.17005239 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.183371126 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.139671846 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.148544442 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.25559106 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163617097 seconds)
    (42/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.07046906 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.128514828 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.142788951 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.162428028 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.178924403 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.154910886 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168801105 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179540633 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.132800607 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.17016206 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.897548731 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.242480368 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.130522376 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.199394267 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.1318441 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323991834 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.171962662 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.161748393 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.13714934 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.248384682 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.167351645 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.144936449 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.124792844 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.15864466 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.141488523 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148553746 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.3159786 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.145305676 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.15739024 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.147743729 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.760602214 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.151636198 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.133044409 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.168321781 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.132568055 seconds)
    (77/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.214376753 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.148642217 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.126895563 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.154143319 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125949631 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.138992529 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134751709 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.143352364 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.196340837 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.146580429 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.142131479 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.170253481 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.170531635 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.136242869 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.147511156 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.160029172 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.144592212 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.151478001 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.206704828 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.161112639 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.140372506 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.15933036 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.177349875 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.150480088 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.257693542 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.130799637 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.170474429 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.147167757 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.160746455 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.160522877 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.128278946 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.150390196 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.143116198 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.129802852 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.2065636 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.134289122 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.143626575 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.135769049 seconds)
  done (took 28.104052468 seconds)
done (took 58.613599486 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.409024789 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.11225278 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.110089969 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.131764296 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.111471333 seconds)
  done (took 1.603700709 seconds)
done (took 2.31208286 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.17262455 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.264567775 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.198425065 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.17242037 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.14810006 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.1667603 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.167968538 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.147334021 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.167563062 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.187461963 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.134411159 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.191615007 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.180007793 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.158344431 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.158168681 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.20369207 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.151475384 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.16905868 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.202673694 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.153059139 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.168243409 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.151881907 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1682581 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.13738223 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.169232813 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157110926 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.166933836 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.15237707 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.162557854 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.136452784 seconds)
  done (took 2.442034052 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.16570283 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.152241588 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.168620249 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.142949489 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167976291 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.13746435 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.167819315 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1514723 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.172496933 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.151042756 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.165670873 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.137638483 seconds)
  done (took 2.433704799 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.150949883 seconds)
done (took 9.278394818 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.766530484 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 13.001751353 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.202934998 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.337454026 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.681915673 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.314052217 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.674006689 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.247201427 seconds)
  done (took 18.057530749 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.214725565 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.157916157 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.14268363 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.161235962 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.142015444 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.158043708 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.141585651 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.155823752 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.143844489 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.156068509 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.138468043 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.155785712 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.139246829 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.159130559 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.139619516 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.155402552 seconds)
  done (took 3.240576615 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.166140224 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.183118971 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.144959989 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.165297049 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.143328373 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.161419216 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.146867131 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.162342697 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.142292767 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.159513312 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.162808402 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.14654868 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.161514456 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.14243045 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.163612633 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.147809013 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.158859631 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.145983231 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.163712882 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.146077498 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.164550941 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.14452192 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.162300931 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.146625566 seconds)
  done (took 4.526775403 seconds)
done (took 26.546857022 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.197546127 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.151145049 seconds)
  done (took 1.080062841 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.202916855 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.219712862 seconds)
  done (took 1.162828658 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.162229691 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.155226453 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.16724698 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.167695157 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.139641243 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.155867986 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.179249547 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.140156773 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.156303302 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.144178427 seconds)
  done (took 2.310882342 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.142482975 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.160214942 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.152971997 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.207322315 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.146649773 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.160074144 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.143900806 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.15965507 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.161206162 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.139822892 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.159137541 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.155738598 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.159997147 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.15719434 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.160505832 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.144294225 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.16441758 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.143861362 seconds)
  done (took 3.563351401 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.140986464 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.141041082 seconds)
  done (took 1.026958707 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.143689148 seconds)
    (2/7) benchmarking "second"...
    done (took 0.154935125 seconds)
    (3/7) benchmarking "month"...
    done (took 0.142523219 seconds)
    (4/7) benchmarking "year"...
    done (took 0.157915365 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.140333179 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.154587902 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.139648758 seconds)
  done (took 1.777700444 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.622972836 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.269918746 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.419571539 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.123904106 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.136680963 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.368645946 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.156354868 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.107514325 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.125921517 seconds)
  done (took 3.105956324 seconds)
done (took 14.768142639 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.141423609 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.22811607 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.655673403 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.161361728 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.158685627 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.200769616 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.340476882 seconds)
done (took 2.638331958 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.369125244 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.18478011 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.121663482 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.140738771 seconds)
  done (took 1.563093542 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.132703068 seconds)
    (2/2) benchmarking "read"...
    done (took 0.163918313 seconds)
  done (took 1.053977726 seconds)
done (took 3.374324899 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.156008512 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.158039474 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.142660087 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.158910288 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.142768399 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.159700567 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.141895374 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.156375454 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.14185477 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.156832542 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.142473413 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.158868051 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.140352045 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.160004046 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140595726 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.159600024 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.142012494 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.157466602 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.14008038 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.159609864 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.142594169 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.158212004 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.159925222 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.143326272 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.159828973 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.145206698 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.157853333 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.141518884 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.160060326 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.143316734 seconds)
  done (took 5.277185047 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.169912537 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.153971621 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.141095146 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.164361599 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.13712714 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.140315446 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.154110165 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.138028934 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.158425006 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.139261028 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.158922298 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.140128592 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.154082545 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.259167745 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.158980471 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.163933388 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.165992198 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.138134065 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.155530337 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.142487377 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.160655071 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.137644974 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.157550775 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.14121753 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.157979292 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.137073779 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.156587887 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.139080828 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.157515716 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.140015233 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.160414747 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.143203626 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.157542754 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.149202873 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.159334029 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.141897816 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.164792221 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.136739195 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.158748223 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.137327065 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.154491136 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.141030667 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.154715138 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.146676015 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.156856945 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.141110662 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.138267559 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.159550157 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.141008776 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.160373614 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.138241232 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.154914899 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.142922876 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.160023424 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.143929104 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.155451464 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.140412071 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.156046901 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.141444152 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.158239638 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.13848107 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.154701736 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.144996894 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.158916437 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.154630388 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.16357775 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.137404641 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.15973647 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.142113796 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.163049615 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.14236055 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.168131568 seconds)
  done (took 11.704622548 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.141139276 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.139442773 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.157741508 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.140735766 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.158673085 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.140371475 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.157964449 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140498677 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.158408164 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.140608371 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.157820618 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.140406825 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.158662088 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.140102497 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.157645226 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.140411958 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.157680309 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.14028439 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.157367167 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.142295293 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.157752256 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.141617883 seconds)
  done (took 4.038621138 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.283342823 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.147491623 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.209634353 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.170624124 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.158310445 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.169965 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.145138627 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.165046842 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.146764658 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.167494238 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.150351242 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.164840294 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.17886432 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.150324696 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.168691532 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.152255406 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.164559754 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.151251976 seconds)
  done (took 3.817970057 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.141552222 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.1411528 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.160375541 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.141867627 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.1604943 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.141468855 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.161020944 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.142003553 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.159707389 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.142038595 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.159553992 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.142593098 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.160437728 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.142160622 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.161055878 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.141638794 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.16112762 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.14195367 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.16020275 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.14287139 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.161550983 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.143003122 seconds)
  done (took 4.086655403 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156226287 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.162636532 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.161711546 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.165606047 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.144493528 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.162969692 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.148465636 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.162140695 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.14986236 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.162471733 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.144045667 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.161476789 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.158713943 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.162771074 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.149496822 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.163536705 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.14472914 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.163761866 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.145928487 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.161800427 seconds)
  done (took 3.912570068 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.234401131 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.179116352 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.178911796 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.167856149 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.180323875 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.159773603 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.184175999 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.158797542 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.178670675 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.187597935 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.159436278 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.1794214 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.164969245 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.181314152 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.158035017 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.184908797 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.184584857 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.166863325 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.178910229 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.159742976 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.188644149 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.177975951 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.166835971 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.17937178 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.15990704 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.178974733 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.160642368 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.182865909 seconds)
  done (took 5.705535514 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.155341354 seconds)
    (2/2) benchmarking "in"...
    done (took 0.171159092 seconds)
  done (took 1.110601957 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.14555014 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.145095534 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.164058339 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.145219338 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.164040144 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.145576447 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.165861708 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.145305412 seconds)
  done (took 2.003622229 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.207905954 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.231319328 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.169613702 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.15551664 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.233242109 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.222468516 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.22568468 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.148787406 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.166363038 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.136696655 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.225348504 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.135507103 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.165840677 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.160703977 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.145252582 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.169749625 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.145750878 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.17138262 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.150375879 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.166264604 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.148836697 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.167655224 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.146302541 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.173113651 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.138814815 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.166928528 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.147789345 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.173342491 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.140434819 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.165329844 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.142771127 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.164262922 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.148577017 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.16830679 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.144442496 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.230964737 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.172200595 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.141059934 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.16571039 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.148584904 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.196057509 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.144064147 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.166738299 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.143260109 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.168691199 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.166625811 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.149361612 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.163607517 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.138415997 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.159416197 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.145852848 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.159336062 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.14543254 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.164303241 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.146644082 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.170204144 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.147165774 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.160605311 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.141998682 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.160426861 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.143958362 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.160137579 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.147191503 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.166675149 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.146356633 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.166469588 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.144133682 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.164458195 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.145689449 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.165341403 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.144691809 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.203027874 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.14676794 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.168177472 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.157920071 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.165350774 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141670785 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.168804763 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.16251381 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.146580764 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.167665079 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.171677475 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.166774344 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.142118902 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.159801536 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.151309688 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.165279422 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.14763862 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.15728769 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.153358998 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.165732066 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.145868394 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.157910732 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.143892403 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.160428567 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.147530758 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.158385272 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.146139406 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.163113331 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.14877738 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.168399399 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.145116709 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.16925709 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.15017845 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.171070659 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.144543936 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.210815233 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.161653497 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.141639029 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.16559484 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.149581647 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.159359369 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.147404702 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.163583111 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.142869285 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.161153972 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.149648359 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.166224771 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.147361428 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.168729663 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1485344 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.167144436 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.147418837 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.164648002 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.143450777 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.16939691 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.152992022 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.168388736 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.149083082 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.166653141 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.146686153 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.166157418 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.150217324 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.165172358 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.150781697 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.163863771 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.145740798 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.166897416 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.150082298 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.167137855 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.141749147 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.167092737 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.147418268 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.166099688 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.148524576 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.167226083 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.141354056 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.158368442 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.166402554 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.14324108 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.165956744 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.154249799 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.161753572 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.149744801 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.162026306 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.152808471 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.162454188 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.151605659 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.168095723 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.15266214 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.171131898 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.140541266 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.163475396 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.149623701 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.167274384 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.143745691 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.165671297 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.147341345 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.174020528 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.140362918 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.169260395 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.139431875 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.163339827 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.151112478 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.166466818 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.149519839 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.172663124 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.182750336 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.177171762 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.151409463 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.166998076 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.14681218 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.170243533 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.14661267 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.170658704 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.151642194 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.173659016 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.144921304 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.165696787 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.151058363 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.163467165 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.147316118 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.167204963 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.1482751 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.160229268 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.148333099 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.160656139 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.150553661 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.168871952 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.149755533 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.173292543 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.149154084 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.166317447 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.153553376 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.164774834 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.150107362 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.160468432 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.150858585 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.177811678 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.173098642 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.153404996 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.170094231 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.146747686 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.167304794 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.155994189 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.16947154 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.149783304 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.168242762 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.14369924 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.161034654 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.154661984 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.170658186 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.144040502 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.167494699 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.150316451 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169786863 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.145568119 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.16174512 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.15285893 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.1712698 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.144571257 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.168875798 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.144972388 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.16744169 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.155383883 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.162428602 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.144646871 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.170860299 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.151874811 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.168812528 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.148438759 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.171443653 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.152857805 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.17148977 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.150151342 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.166785746 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.155358023 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.1682073 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.147356957 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.166648545 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.150362423 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.163943747 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.152902364 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.171539413 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.145988357 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.166055217 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.152197654 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.17404723 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.152839654 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.167567242 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.151599696 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.173425901 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.154071184 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.167687071 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.172828755 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.144666241 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.141410015 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.165508708 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.161556641 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.149902318 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.144705295 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.172892941 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.167718284 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.148020898 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.172539704 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.151056085 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.166686802 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.152453754 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.179486324 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.143077597 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.161974804 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.146322321 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.168386355 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.14503576 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.166256906 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.149495809 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.171410644 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.152921675 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.171069478 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.146529279 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.169239357 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.154441889 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.168719152 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.153567308 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.175050609 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.15479257 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.165998658 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.152797028 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.167583011 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.152678108 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.163282771 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.149295245 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.169173421 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.169699785 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.147720858 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.169406774 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.146159018 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.16254827 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.146823669 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.174186335 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.148341615 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.173100452 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.149514899 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.168012897 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.146229899 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.165455694 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.155458198 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.168892215 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.156269393 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.169820072 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.143733204 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.164219172 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.153500228 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.170571795 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.154219459 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.16494212 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.154152796 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.17690289 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.153240421 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.170620677 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.15755373 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.178259449 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.15563153 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.175556374 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.14298879 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.169112831 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.15448338 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.172735926 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.152673163 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.171809244 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.144788271 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.17362963 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.155843913 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.173101528 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.149081584 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.164994588 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.151893213 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.177184184 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.152943934 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.173203934 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.152693363 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.172185895 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.147148166 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.175540908 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.155390614 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.173498019 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.156136217 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.171958022 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.154965902 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.168240551 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.154516871 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.172080882 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.145516456 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.165972299 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.148268565 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.177521051 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.144469509 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.175988386 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.154382327 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.169743016 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.148917524 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.176497364 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.146753924 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.174203683 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.155071764 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.170479575 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.159023413 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.172271406 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.148972993 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.175607081 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.154393576 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.165125093 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.150196177 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.171435633 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.156073495 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.171017711 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.153878856 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.173108099 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.175103977 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.15386218 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.154893335 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.177575929 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.15558024 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.165721308 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.156895136 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.175369028 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.172871432 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.148807717 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.170688939 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.145988022 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.171224243 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.157975215 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.168587295 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.159297988 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.175975802 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.149945296 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.170132993 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.156938854 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.170239479 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.157921199 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.168147977 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.152749057 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.166883834 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.153794818 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.171130946 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.157660488 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.169903955 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.146336081 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.177991023 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.157464032 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.176762017 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.15492539 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.178140422 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.146471348 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.166586348 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.153587766 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.170004303 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.160888073 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.175710498 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.150137841 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.171265046 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.153407923 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.174000727 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.157686211 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.166986599 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.148640718 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.174659726 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.152985588 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.172080431 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.146043233 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.177232783 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.15128154 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.1755102 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.171869321 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.147569894 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.171764011 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.159073166 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.170717924 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.149119127 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.170140903 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.159124705 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.17259373 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.149867538 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.16763554 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.158340423 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.175680374 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.158674682 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.171196262 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.153503312 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.17100276 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.153959171 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.179219341 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.150457009 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.174401761 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.151674171 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.179025172 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.158713563 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.165294356 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.151127712 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.182422434 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.157763783 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.175618781 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.153568884 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.172713758 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.158485071 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.17984361 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.153770239 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.168056523 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.147977724 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.173319795 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.146697635 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.175449596 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.157976274 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.172963994 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.170965985 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.157130346 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.154948288 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.176586703 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.154437721 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.168314937 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.158019079 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.171860325 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.155015435 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.169766092 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.145876924 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.175233013 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.15702773 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.172941178 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.173328324 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.154372207 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.153993907 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.169159669 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.149734008 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.18001186 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.175935942 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.158913734 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.172442626 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.1517991 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.175339545 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.162250142 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.174125673 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.153247973 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.18072785 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.15930742 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.173578429 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.154871521 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.176990995 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.159660933 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.175948973 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.159454025 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.171892204 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.153842226 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.180364595 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.161233896 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.183683926 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.152106456 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.169383519 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.157328678 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.172716162 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.14783085 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.178192274 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.159319283 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.180459795 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.153771317 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.171695963 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.162301861 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.179299441 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.174392008 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.151750233 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.172260313 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.157894035 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.172718877 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.156577239 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.170929858 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.161091559 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.180392349 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.159529664 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.183747802 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.148056141 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.181078683 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.156776632 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.181681775 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.155418305 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.168799176 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.149139824 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.176443772 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.161086944 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.180078812 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.157927282 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.177581312 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.159446127 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.175553586 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.154731181 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.172038727 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.161123609 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.179192518 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.15484696 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.176740084 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.153970449 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.175385794 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.156029051 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.179270953 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.160736377 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.175749137 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.163179867 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.179340261 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.156808341 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.17234554 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.155305332 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.177355514 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.155924525 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.180115535 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.15126455 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.16990717 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.161463795 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.182496096 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.15473256 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.182530722 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.161022126 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.174803463 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.157456045 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.181991465 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.158310315 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.176998088 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.156479213 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.17870177 seconds)
  done (took 97.231063404 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.202487581 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.183956252 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.157501925 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.177881181 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.172832379 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.180945555 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.155886338 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.179379178 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.158003375 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.187693136 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.155488914 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.177401487 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.169835905 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.198858356 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.193432172 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.16692473 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.178609633 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.157940508 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.177263892 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.15908086 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.191234967 seconds)
  done (took 4.5656432 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.156528351 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.155700383 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.177966702 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.156196334 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.177470716 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.155798844 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.177371343 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.156728103 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.177241185 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.156789043 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.176844058 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156995914 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.176897755 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.15657895 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.17672363 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.157800395 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.177260561 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.156450195 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.177615665 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.156562497 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.176984284 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.157009828 seconds)
  done (took 4.537050695 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.185459235 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.180221181 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.154693047 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.156819787 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.18237712 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.155746605 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.182918466 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.157590229 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.186278273 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.150369272 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.170673964 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.150786496 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.176698856 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.157722634 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.174830072 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.157121984 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.186275425 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.160448236 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.183844286 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.157664107 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.170594943 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.15736462 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.179622207 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.149161862 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.184989652 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.161068284 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.184604761 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.160852146 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.171100742 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.16083075 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.180862538 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.152183521 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.171139187 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.14871672 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.170854409 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.16127579 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.182749374 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.15825781 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.180793876 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.150577838 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.158758149 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.183667537 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.148886321 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.181564729 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.157069569 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.173758121 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.159930243 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.180930527 seconds)
  done (took 8.943023188 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.185093504 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.216625947 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.161101673 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.209582118 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.19327564 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.165724742 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.183633927 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.187066212 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.183083283 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.161420452 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.194892488 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.193445093 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.162176074 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.186023253 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.161118586 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.183469243 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.163224793 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.182926028 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.165575786 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.182873108 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.165181415 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.185855127 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.169315595 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.191897265 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.185137578 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.161398405 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.182383335 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.16421399 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.191043398 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.166629928 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.186842678 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.165874751 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.192395836 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.162545228 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.183935774 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.183560611 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.172040392 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.185183996 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.163171688 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.182314007 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.162548739 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.186562571 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.163362752 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.193982202 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.162317403 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.185605111 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.162036643 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.181723887 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.190721306 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.163985149 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.189506601 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.172480842 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.185403994 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.163130929 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.187110879 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.169920921 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.184915504 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.161196969 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.185712998 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.191681786 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.162645256 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.186444422 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.171111687 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.185312043 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.166629645 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.193725661 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.163518906 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.185821185 seconds)
  done (took 13.100313744 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.191829549 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.188654197 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1723901 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.195039518 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.16646292 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.188251557 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.16588858 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.189227469 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.188667166 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.171018158 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.188435632 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.296489317 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.168555697 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.193325779 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.166789239 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.189787973 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.537778476 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.191329439 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.166004057 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.188861881 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.187575472 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.173902527 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.188795879 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.171957544 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.199149386 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.162964246 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.188290567 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.188174515 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.174155446 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.188149169 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.176148043 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.189078095 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.165110601 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.196169843 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.199219689 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.166463083 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.183059289 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.166317459 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.188621735 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.166146368 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.186198986 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.173127153 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.188976106 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.164282468 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.188876618 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.165377836 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.196142986 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.199939252 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.169769628 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.193360005 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.166444824 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.195389326 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.188205232 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.167634208 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.195712297 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.18104562 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.195869396 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.19581821 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.168355524 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.196325433 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.173426069 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.202577404 seconds)
  done (took 12.681016782 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.163050316 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.161073675 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.184362306 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.163225256 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.184947265 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.162384116 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.185318109 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.16190976 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.183750564 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.162142817 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.185211125 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.163016724 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.185094163 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.163602856 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.184040337 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.162199091 seconds)
  done (took 3.676192113 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.179522903 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.200418947 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.266353251 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.165985922 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.18478316 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.171003921 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.185775732 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.16477398 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.183083445 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.167714071 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.187712835 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.164207766 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.201069713 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.163209258 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.185551556 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.164596437 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.183125014 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.166743531 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.184764636 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.265536261 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.166450496 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.18756037 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.164501561 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.189857462 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.164286558 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.189556093 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.168068494 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.187193105 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.164257338 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.185185933 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.164960185 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.192438087 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.162218692 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.190161374 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.165011602 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.187275069 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.162834627 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.186950403 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.165067412 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.187087328 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.165185427 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.187703864 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.162852893 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.188684893 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.16166778 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.18607507 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.161360005 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.192635848 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.164646267 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.188312618 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.16312093 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.195763562 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.166819823 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.195653734 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.194373028 seconds)
  done (took 10.865840617 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.174150785 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.187875088 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.175410797 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.184739405 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.164740226 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.188454667 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.165282043 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.187730216 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.16436655 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.185225584 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.165055137 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.187939039 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.165029264 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.188258965 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.165129162 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.188120051 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.162724496 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.187791575 seconds)
  done (took 4.116166437 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.16230272 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.161025689 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.187526548 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.16096796 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.185910336 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.162827595 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.186812027 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.163327467 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.186436323 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.162873401 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.185948872 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.163134002 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.185909747 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.162956817 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.185575413 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.163439492 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.185588655 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.163147078 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.186143779 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.16285393 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.187021899 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.163358069 seconds)
  done (took 4.745701169 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.173288569 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.263774853 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.194475995 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.246785325 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.18712475 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.181125454 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.170941236 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.183103193 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.175643978 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.18181303 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.15846917 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.181789516 seconds)
  done (took 3.235799334 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192309317 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.22156106 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.164558573 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188631298 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171960972 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19299561 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.167166715 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191975351 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173712014 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.20212879 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192947548 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174772417 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198273665 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17417996 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195159891 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194980625 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.169159455 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191746854 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16553453 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.205845931 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168499373 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197678047 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167983491 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192338109 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191546046 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17653098 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199464196 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.179586859 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192428715 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174366711 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196404727 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.191463453 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.177327327 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.202996522 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164944193 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198223792 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.168321727 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.204593543 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196171194 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175004096 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.19001248 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173234833 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.200702737 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195187142 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176316832 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.193486599 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173475385 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19257262 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1690211 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.212156855 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19588814 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.176540877 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197754444 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174579715 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.199517623 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.211059892 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.179445655 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.200045682 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.172159365 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.203947537 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199791701 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17319045 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.201431393 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17979193 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196683174 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.200356684 seconds)
  done (took 13.325677505 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.203328647 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.190615044 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170445935 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.205147265 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.175384496 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.194172312 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192530254 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170889904 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192215625 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167657168 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.235580732 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169582747 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.202468789 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19973309 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.171020396 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192800735 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169997269 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.201114409 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166276854 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.212620275 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193209371 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.177136839 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.199802801 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.176916703 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.205035253 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197008251 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.170873589 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194220555 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170520799 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193767511 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.174116668 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194863929 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.176535472 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.191115423 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.176483582 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195651137 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193323789 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175911003 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194508691 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173188617 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.201249978 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.182231055 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195421612 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193938052 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.181404276 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194541423 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170074422 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191292658 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169642114 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190731591 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.180084893 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.205157684 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.206132444 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.177048386 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195197053 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169504377 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195051881 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.170015948 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195228276 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.198882664 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.178593981 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195109661 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189088656 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195629465 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192072596 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.179995503 seconds)
  done (took 13.351541028 seconds)
done (took 236.785085981 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.332720749 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.346664451 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.156659622 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.226395681 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.165691177 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.866507156 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.707567166 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.22793343 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.183384483 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.155986006 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.182969078 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.175254038 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.488968967 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.180750557 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.160082639 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.195812717 seconds)
  done (took 31.703097494 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.349509809 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.394781504 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.173140178 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.188436596 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.163489986 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.188729432 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.162579568 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.187489422 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.161005844 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.192021793 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.161042815 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.182546721 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.190085585 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.161527422 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.18485474 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.163887328 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.190415139 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.162837903 seconds)
  done (took 4.517938487 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.182873239 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.328914894 seconds)
  done (took 1.479187454 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.192855951 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.283672445 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.388543982 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.235077315 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.183014517 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.2034424 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.235548792 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.174447162 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.27517914 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.196325502 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.174532935 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.184034522 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.187959133 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.192839423 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.178054118 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.186078637 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.189434241 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.201596841 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.198999282 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.166029145 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.212041884 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.16844905 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.192559028 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.176857497 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.26749653 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.19882544 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.168821059 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.192995651 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.164457146 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.201175017 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.168907625 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.206634476 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.198675898 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.242674789 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.167535341 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.240525009 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.194377791 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.16371562 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.199850795 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.163674445 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.191312012 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.166439485 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.201075871 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.161525335 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.191923214 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.170885396 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.192045784 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.167591304 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.196958098 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.194744189 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.171530799 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.195188158 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.238754229 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.170954778 seconds)
  done (took 11.690103427 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.010954525 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 1.075288818 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.201278316 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.217986543 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.092459004 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.170380128 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.025489494 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.160155116 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.300549327 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.13651617 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.177518957 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.194718917 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.188346238 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.192590184 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.185402809 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 1.178604088 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.173534854 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.196309919 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.168655968 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.97959087 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.194674325 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.987803307 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.207030212 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.306442925 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.164276724 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.192300227 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.16493084 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.187825476 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.244917513 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.167948834 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.183524518 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 1.02912511 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.172912401 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.200193298 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.163802344 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.186313666 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.160861193 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191335797 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.335270476 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.278793549 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.245649881 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.161244705 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.191896872 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.166009788 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.196092112 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.160453434 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.192366836 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.185417201 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.209029276 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.160043113 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.207256047 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.171654401 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.190144044 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.174274431 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.190888843 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.307674013 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.331527658 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.161513947 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.206529361 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.168318081 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.345670226 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.173736258 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.202119949 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.963979906 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.285157294 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.184798408 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.881661239 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.175303405 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.186248551 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.167791247 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.189280517 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.165120271 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.193493793 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.241000393 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.308613497 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.175083601 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.185248663 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.171160017 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.275165498 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239328029 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.166393987 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.24315365 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.189743801 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.181338208 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.198780832 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.167727221 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.221225006 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.163145261 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.196609007 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.168162538 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.191254081 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.182498718 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.190649986 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.304124524 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.168759581 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.199181679 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.296665112 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.170259649 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.198384039 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163186463 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.203525891 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187656547 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.19079589 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.175304206 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.192665529 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.171706303 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.198554949 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16824655 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.207398621 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.170051359 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.198709034 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.173799856 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.190149726 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.182933573 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.350847302 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.165700719 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.185657158 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.187410757 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.193677068 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.243618455 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.175226535 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.324976891 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.192670723 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.16877121 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.187422496 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.162703239 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.208951025 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.177548379 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.186608812 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.171289192 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.192226618 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.167031683 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.194298152 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.27924485 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.182510562 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23982567 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.207638977 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.195532722 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.216190685 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.17231286 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.250925097 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.170301374 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.21037206 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.191114348 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.87184413 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.170893582 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.196208125 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.167749042 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.24975865 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.191742516 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.170779672 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.218176117 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.16450244 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.870092311 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.194323548 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.170940345 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.195216624 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.167447859 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.196212743 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.167403409 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.21027626 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184901428 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209500299 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.195709684 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.169373076 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.241097406 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.22272842 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.193831068 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.288630576 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.194068768 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 1.090642028 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.18593913 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.193629764 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.171885034 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.248819984 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.198492137 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.182092059 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.601167115 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.172191339 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189958549 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.199060145 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.188243436 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.174852273 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.197742049 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.1697057 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.261113287 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.197741307 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313398072 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.249919381 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.244476154 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.198549837 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.176927907 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.187901382 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.170811344 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.212026696 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.171600221 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.193244124 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.17776264 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.195227093 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.175154684 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.200076923 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.173509384 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.321006682 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.189006903 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189765879 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.192505732 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.165852777 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.201412189 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.166028156 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.203765542 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.177563245 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.189257054 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.184621895 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.870742166 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.206342189 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.174539782 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.190547544 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.176949345 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.250541944 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.193861776 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.185671419 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.202018252 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181523926 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.304493807 seconds)
  done (took 58.40074345 seconds)
done (took 108.753338143 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.325783369 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.232933934 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.427654965 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241221721 seconds)
  done (took 2.28877481 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.351470626 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.208692913 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.309947804 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.190611029 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.317229355 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.165337121 seconds)
  done (took 2.558236024 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.235244695 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.23435074 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.233940783 seconds)
  done (took 1.725326141 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.274868013 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.278768984 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.417186317 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.329032392 seconds)
  done (took 2.38256873 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.344087782 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.18367479 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.223133276 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.294099331 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.309785204 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.274713543 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.189520791 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.243290091 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.222319686 seconds)
  done (took 3.337493285 seconds)
done (took 13.302651213 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.210480686 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.22705069 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.18771471 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.205750164 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.202060263 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.229209427 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.194616095 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.224040354 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.193990876 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.20689335 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.217371002 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.178998409 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.288110135 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.197794614 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.204137903 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.192101114 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.203551526 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.228559925 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.200256884 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.202231012 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.201212287 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.202399792 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.176884875 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.211698461 seconds)
  done (took 6.001585108 seconds)
done (took 7.026228076 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.271881349 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.184148851 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.173749184 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.202298356 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.281846535 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.18250633 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.219024628 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.176313921 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.213088785 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.175035693 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.19159768 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.188326425 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.201732098 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.276455571 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.17846716 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.192629191 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.166583581 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.212962515 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.191476066 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.217569499 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.285431636 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.170829727 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.213099219 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.166593919 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.28501239 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.195041091 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.176197081 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.20260843 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.190178842 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.201818506 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.177753724 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.191145617 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.192826846 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.218032377 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.169164893 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.201558496 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.169586284 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.13654475 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.204984932 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.17743685 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.215995568 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.176503611 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.201620573 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.193398045 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.17922908 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.203346955 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.169970069 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.204760745 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.167216966 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.203734783 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.171948192 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.217239339 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.17672907 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.191851423 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.167399067 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.193964329 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.18692433 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.195211585 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.191325894 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.19378127 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.168127454 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.194978016 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.179283166 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.194834973 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.177256496 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.194263505 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.177072685 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.205183554 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.176608958 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1967395 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.169537903 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.202314508 seconds)
done (took 15.095110088 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.17239609 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.240384367 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.278267699 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.259250363 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.226061231 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.209833714 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.182588358 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.220433361 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.180772709 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.214014335 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.201883245 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.226868319 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.291850156 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.182982789 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.235977033 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.179226972 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.207342967 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.175270017 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.284734412 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.220692801 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.217000631 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.185865374 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.22094734 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.187134243 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.197448493 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.205685416 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.203682456 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.180052841 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.198702591 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.181242145 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.218733287 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.171844498 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.203431864 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.216938231 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.191347329 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.207711115 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.183919935 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.207828577 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.172425035 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.199178618 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.177975686 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.217347043 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.171894574 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.210843454 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.179927635 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.216431209 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.179668656 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.214447609 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.197580319 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.181167363 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.199570891 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.197352554 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.210979664 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.188330157 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.210415207 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.188719772 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.212710133 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.187680126 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.203088747 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.184926667 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.200972876 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.173421264 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.201268766 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.190649982 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.203149284 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.18470541 seconds)
  done (took 14.457813485 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.19073616 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.229189777 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.182757048 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.211099629 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.175835205 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.195049066 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.166443369 seconds)
  done (took 2.407410299 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.16926604 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.295580511 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.292243303 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.29315698 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.287783704 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.299394031 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.192824367 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.194491139 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.208007613 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.20607158 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.295067906 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.328867166 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.179885889 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.211138153 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.295736626 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.168220065 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.295993211 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.276438327 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.183037072 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.292685127 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.217546182 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.201868037 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.209191261 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.19543992 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.259926652 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.200550276 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.342573297 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.213965456 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.180152502 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.2098514 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.185119343 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.277838986 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.291571594 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.18211677 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.206093664 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.291440209 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.288233684 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.184119265 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.301289918 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.20029486 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.259146172 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.213660861 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.211247835 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.185743834 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.212290728 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.249191737 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.221304403 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.211437349 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.184787934 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.30056884 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.205807063 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.263118874 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.213226559 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.183719205 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.208622801 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.18511501 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.220480817 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.210765838 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.271822791 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.216992846 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.294521692 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.29400275 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.290161452 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.291700024 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.196891155 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.295297995 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.281896262 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.183192173 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.290326835 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.214999129 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.29500674 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.184329218 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.210036939 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.2827558 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.187624902 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.299243368 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.298335235 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.181927928 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.212517618 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.200008991 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.184821389 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.195196279 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.26885592 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.215892416 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.18143001 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.218879541 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.209705653 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.186135033 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.288444844 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.219277437 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.184585269 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.208809716 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.190165826 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.212357986 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.186946021 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.295823655 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.21125657 seconds)
  done (took 23.741062704 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.174431484 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.172048275 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.205690595 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.19750307 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.174055603 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.198355612 seconds)
  done (took 2.21061762 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.209045609 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.212618592 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.195007839 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.214482983 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.236527332 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.299009196 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.306973643 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.211773702 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.202565541 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.223977342 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.304059683 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.305895524 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.303904492 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.190592406 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.306091754 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.216081511 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.307236768 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.184804462 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.221611856 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.185726454 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.213827782 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.189841552 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.211158343 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.29428099 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.186968138 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.217135471 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.178234657 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.224996144 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.192875923 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.209330966 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.188966087 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.214721862 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.204107199 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.183320676 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.309383689 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.206396033 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.183760672 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.215880694 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.190328264 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.213747481 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.30565235 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.184472211 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.219729767 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.189072447 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.209508074 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.179029203 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.216032681 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.177929426 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.306383513 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.219859403 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.189025409 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.217964854 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.186275347 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.219375303 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.178860868 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.21016573 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.215355363 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.309022833 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.192132175 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.206882918 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.188256831 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.215746425 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.181259102 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.218953076 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.18788675 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.218761183 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.179263304 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.217728406 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.184039546 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.216600447 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.189028377 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.214724613 seconds)
  done (took 16.897580536 seconds)
done (took 60.752928914 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.609065427 seconds)
  done (took 2.698272053 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.041015746 seconds)
  done (took 2.133184694 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.234741283 seconds)
  done (took 19.363236739 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.488391988 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.416034256 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.106560973 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.244517561 seconds)
  done (took 3.34818406 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.15288013 seconds)
  done (took 2.257432978 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.482389391 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.34951378 seconds)
  done (took 1.930570531 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.822921926 seconds)
  done (took 1.936632124 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.808409731 seconds)
  done (took 2.910663594 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.362440872 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.287651131 seconds)
  done (took 1.763531299 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.685654684 seconds)
  done (took 1.802492184 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.346483813 seconds)
  done (took 14.464160667 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.322318503 seconds)
  done (took 1.439481988 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.358965949 seconds)
  done (took 1.480928398 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.669001337 seconds)
  done (took 4.793539326 seconds)
done (took 63.424784192 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.186733997 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.217239001 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.190086819 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.213877065 seconds)
  done (took 1.913278197 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.191793548 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.212853605 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.191520087 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.211641706 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.192444595 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.212768514 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.187361293 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.21599463 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.186410996 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.216429451 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.188047162 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.213196796 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.189057292 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.212296116 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.184923235 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.216767694 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.190767802 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.214748915 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.188547864 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.215087946 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.187147179 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.217124588 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.190141683 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.218966912 seconds)
  done (took 5.963858024 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.185052449 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.202899716 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.180974031 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.202369346 seconds)
  done (took 1.894727618 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.197407519 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.227950212 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.201496176 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.223503853 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.202118438 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.228285027 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.18580131 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.213304265 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.186852347 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.226937828 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.201556093 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.231810584 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.22758278 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.193990582 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.22568243 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.183535293 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.217410366 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.201426322 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.223585041 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.198889036 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.218726069 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.196260097 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.215376853 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.197364601 seconds)
  done (took 6.148624776 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.263823049 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.228465943 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.213309018 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.247030942 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.184325246 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.243542257 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.261790269 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.19310217 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.221539535 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.1930789 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.216690743 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.186618059 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.263331926 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.219877677 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.191198913 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.215599712 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.197414292 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.22042572 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.235798225 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.220895998 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.19170958 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.227953116 seconds)
  done (took 5.970056313 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.277333813 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.208896139 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.175363901 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.206149089 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.217866791 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.181863377 seconds)
  done (took 2.402197302 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.178626383 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.172239576 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.202498071 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.172400029 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.205640754 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.172411939 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.20155195 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.172860728 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.202128289 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.17295374 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.202460431 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.172266361 seconds)
  done (took 3.366711415 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308269114 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22133668 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.353623256 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.46451868 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262678188 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.260026318 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.379023183 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230497343 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.278673331 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235514212 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281293043 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230580383 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.25472997 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.306462184 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21307589 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.245499873 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269055282 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.329808888 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212630252 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.335128553 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257816795 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.27541244 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.261546998 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.248458459 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.238271127 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233440468 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.217595519 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197533357 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268503125 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263898851 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273035884 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247343761 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212424353 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286160408 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309179321 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272859225 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.355690585 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.23109694 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.231210592 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.290402031 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.331815294 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241647963 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290690301 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251038646 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199708025 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.314984611 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247624437 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.255176504 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.237277036 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245453728 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283165343 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248353387 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.270823188 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23622175 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.400110754 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20284013 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.243004743 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280151473 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290947441 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300905325 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250705189 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.224679316 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.269622925 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292187357 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314024648 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.212006566 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.263234862 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222556342 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236380833 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.309238146 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282218563 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261692487 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.288195413 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200228988 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272383196 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.266818615 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223722832 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305117509 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271565304 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.218258273 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219017387 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233049565 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194545568 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.285924381 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218693293 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.316254046 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202987098 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.271543097 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27631586 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222711163 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.262169034 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258280133 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233387439 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247648581 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.156898434 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245841152 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.256125727 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226392386 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227961474 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249013756 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210278591 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.225040773 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220753418 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.222550426 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267853953 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.194423241 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259231645 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26896113 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.204264353 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280833628 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.247443749 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.234573532 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268570578 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298123348 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199223462 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233380261 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.320205196 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269220502 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.20556895 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272469152 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.299816703 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.237275539 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206145951 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264994045 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297759858 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213126036 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301282118 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23891818 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204022775 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.225159303 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274314502 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257747382 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.230807226 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227926089 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.234807171 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285916918 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.229831132 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206558993 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284025381 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234366465 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193681967 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235115793 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233623928 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.213345113 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.252782558 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.207811201 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254300557 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268189485 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.263932207 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226173685 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23461709 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269381643 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201705002 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.271755474 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.247147974 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.191188304 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.276702914 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.3005689 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198715051 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283358204 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.262547648 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280961112 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274108257 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199894804 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.285558493 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197133681 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.223027569 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260852644 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.270240309 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.232334122 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.290523853 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279879535 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.264714155 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.264599949 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21776969 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266911834 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.289209876 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256458768 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.211473678 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274628445 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270905255 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.191589251 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.22386023 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.196932101 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239404204 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198597379 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238172169 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279969674 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263119142 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273497185 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24028953 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23940811 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.297890181 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.195308224 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260021852 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.279673089 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208500991 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.292198252 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292480938 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283879105 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239204779 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232074685 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.22322628 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197435388 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.234351969 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.261420775 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208373526 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.23689049 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210461458 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.294234954 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269863262 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249200218 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288036161 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264707327 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273936808 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.224215227 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.258441621 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236698853 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271642368 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.289012931 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204978652 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.26276315 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.293821873 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21103261 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294843695 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27221844 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281404882 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29300951 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.238288013 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23318595 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214570456 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263426166 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241618488 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230968361 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.245372931 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23174625 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218211166 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.23990975 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.211713495 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284732347 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24590493 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277199358 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.253925335 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239930893 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22907617 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211649019 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277608937 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247860247 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.163214297 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268496943 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292243234 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220688138 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25286887 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270786845 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200196129 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.448273001 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282908572 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273853351 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205048574 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240415866 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.276995075 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.256527242 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231048294 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.289300221 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244136187 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309269888 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.24263544 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.242786147 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201539609 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.25065373 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251581433 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.196602813 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.254427372 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.26592053 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.215738733 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286856838 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240552608 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2723231 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251502695 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.24555163 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.219061337 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242610698 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.329914489 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272695686 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273283606 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.238262798 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.264951454 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286997808 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195784433 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229119437 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.202170974 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.290321267 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232612869 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248884151 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.268247044 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282682531 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27665553 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266896862 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211080557 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.231689799 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.271017488 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218966945 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285041481 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236784554 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.208685151 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2904809 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.217958413 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20325523 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.265891625 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395554729 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248795116 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242512433 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.195742108 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.381585886 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201854873 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233839493 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.230546002 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272601232 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.235006937 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.25934935 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279735378 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242849591 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233571212 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237426536 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.278120276 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284300388 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237843654 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275425581 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.250299457 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263959762 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228590527 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274718674 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248119534 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.219316316 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263857655 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29744419 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.246207619 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.235874902 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272685395 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240862404 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277091873 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274185633 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240643152 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256660381 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233113661 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267627589 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210654294 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228019165 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230030146 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.269131373 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234295123 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275767921 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243391895 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236643637 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19850411 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251657317 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271327429 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209979745 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.236077053 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288856764 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.201645664 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286276997 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314702785 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233876665 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240248769 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.248379992 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232137262 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211965072 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248835671 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203635913 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.280364075 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278692253 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.203879985 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277987948 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267367123 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234749844 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258426226 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.247243273 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.341157733 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.234729585 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.296649826 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224424841 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.323855441 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255563601 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281121018 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243601046 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254885985 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266468044 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217189822 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.322397003 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268624887 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.270471066 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206277506 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246166293 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210580787 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.240323565 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.254725457 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242829508 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247103965 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.207852074 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.27232007 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248328914 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.218273684 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.247999889 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.306095336 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224328261 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29049201 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.293542761 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242004644 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24752955 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278270835 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233233895 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.268039827 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244163021 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.249212071 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253757239 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.207656903 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.242040934 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319572897 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.199412305 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.264786811 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278318607 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244590123 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279228913 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.238380713 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251534472 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246640143 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281939451 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201092906 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.256522172 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.275732207 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20906677 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.231104405 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.245748351 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263290903 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.272488064 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.245254355 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.254279098 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304489021 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.197785432 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239268328 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.390849168 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233045468 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.301668494 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.226084397 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2110381 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252218395 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262385912 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.239547138 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277731109 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.234309392 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203665612 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.250452124 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.221600326 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.230125129 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.276102235 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257397781 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262861749 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292941696 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.204793639 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.35984802 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246536443 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.24718545 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.209328278 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.202374002 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247169154 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207348873 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247139011 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.282877173 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321713923 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.269308453 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.221511012 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.241343679 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.200608353 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237575733 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.265018164 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22422509 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276798276 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252272054 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.16542457 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213754449 seconds)
  done (took 122.845212887 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253119217 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.246599728 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.262099411 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.451580135 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.299649971 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.411468061 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.363756577 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.344298207 seconds)
  done (took 3.895012425 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.195889392 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.26346424 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.247391441 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.222807293 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.186317508 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.552813293 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.243430177 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.194243285 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.269203669 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.23433143 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.217535436 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.647382651 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.191461772 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.226426573 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.227803553 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.215038889 seconds)
  done (took 5.587710951 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.217502274 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.634877748 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.216098982 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.374090216 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.343356687 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.292447385 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.893531653 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.277067265 seconds)
  done (took 13.505794262 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.24987781 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.282858138 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.45961563 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.387010376 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.298109571 seconds)
  done (took 2.941390122 seconds)
done (took 177.542532357 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.199936541 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.229994251 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.200361222 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.232791399 seconds)
  done (took 2.110995623 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.245749509 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.162072591 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.194844439 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.152185457 seconds)
  done (took 2.012183353 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.476226422 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.153713877 seconds)
  done (took 1.91817082 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.222130303 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.243279097 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.210696218 seconds)
  done (took 1.958309611 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.212979906 seconds)
  done (took 1.489096113 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.195674002 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.224425488 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.290738451 seconds)
  done (took 1.987871489 seconds)
done (took 12.743985309 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.221634289 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.053256082 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.659292018 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.210467778 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.829326801 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.505678243 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.511618178 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.256076077 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.312699664 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.187612894 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.253187869 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.767559145 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.526788175 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.955978111 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.512028232 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.955168479 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.80283484 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.188271676 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.226337703 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188367392 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.529320227 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.186668359 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.221964742 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.187394263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.798909666 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.493740232 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.218662874 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.999025929 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.188769401 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.22775044 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.477465016 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.219277532 seconds)
  done (took 24.13264297 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.191401606 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.277041692 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.241538062 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.223202745 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.196453821 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.222200652 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197994295 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.233845827 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.323956195 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.187633541 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.242827972 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.186023986 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.228215458 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.189474248 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.245956495 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.187132831 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.222267154 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.187739028 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.227692604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.190792064 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.243379469 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.21796038 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.192680485 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.219838661 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.189949055 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.237750271 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.189578507 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.231527112 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.702311041 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.229106402 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.192742306 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.220721561 seconds)
  done (took 8.748155636 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.232848752 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.288284399 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.242639645 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.260845494 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.276172928 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.19234988 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.310412543 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.257831855 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.298362832 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.222734659 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.209740064 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.222042532 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.260244144 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.190378261 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.24499005 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.188470796 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.222564483 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.190385628 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.228120268 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.190347076 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.24441905 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.187802517 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.222422371 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.188392365 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.221633806 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.209746435 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.220550311 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.232573814 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.189698595 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.229438994 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.194316326 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.220241622 seconds)
  done (took 8.573121209 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.203733397 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.235127794 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.213604294 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.245518621 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.199991832 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.233470084 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.203928028 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.230122141 seconds)
  done (took 3.049682364 seconds)
done (took 45.782363697 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.210666071 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.231417463 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.208307825 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.19977654 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.314064394 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.225977179 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.203254306 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.22434185 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.199135575 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.243116934 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.188463388 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.226021917 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.205035496 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.229214243 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.317832225 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.202079963 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.322823773 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.319345989 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.192951814 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.234527492 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.209438163 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.320801382 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.234213448 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.193046367 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.295288801 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.194253559 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.308073851 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.229153939 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.197364112 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.2228971 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.320344924 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.19805389 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.192838125 seconds)
  done (took 9.089110675 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.298852971 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.233859281 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.197414888 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.231642998 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.199998851 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.231017281 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.336945032 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.197470524 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.230767094 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.197816302 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.230248756 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.286948781 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.238630845 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.192812499 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.234369585 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.174226507 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.338961859 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.230911166 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.190984807 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.157435251 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.227841144 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.197179478 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.350401277 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.227041854 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.198949434 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.231432259 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.199186905 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.234451445 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.199756905 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.23064544 seconds)
  done (took 8.232553203 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.203470895 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.244514561 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.21813059 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.299824586 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.228106166 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.244946247 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.212724653 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.243474489 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.219443002 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.225859992 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.207538633 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.260444854 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.241250602 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.205062979 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.22370374 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.208322573 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.239282956 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.193972899 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.23248207 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.209573961 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.24192015 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.206464729 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.24865359 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.201452658 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.222819573 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.200590108 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.235261843 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.202483071 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.233355652 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.208478082 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.226601351 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.195070119 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.226971702 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.228543107 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.227100913 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.205594507 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.246307291 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.204937977 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.240091795 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.225621689 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.228049332 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.193144176 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.252412298 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.281531023 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.195879758 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.234843716 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.195007733 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.240276382 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.19179981 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.242442455 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.235045667 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.224918145 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.211856958 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.224391981 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.190266805 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.233461003 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.192565673 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.229433116 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.208377807 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.226420477 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.211357331 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.233767043 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.204257612 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.227791187 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.20514997 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.224176999 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.192875233 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.2292828 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.220241276 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.234019287 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.230821035 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.226044304 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.204557278 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.240672133 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.20472878 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.23888131 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.191561602 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.238281498 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.204199647 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.232244696 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.206034909 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.229552633 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.194831668 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.242951918 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.212594236 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.240653708 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.203106157 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.237126867 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.193389097 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.229063453 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.210777457 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.227731138 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.196107689 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.241344653 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.193350451 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.232031209 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.202285381 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.235390554 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.190695227 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.25447281 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.196703194 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.226132635 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.219847946 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.230761094 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.197058309 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.236415639 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.265708443 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.193780721 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.234181291 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.20490872 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.225864455 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.202799079 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.227325939 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.194469897 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.24094826 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.210049913 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.233516652 seconds)
  done (took 27.23537251 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.416267063 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.408468077 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.295643362 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.455246098 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.242007647 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.32928052 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.405639506 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.410832352 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.193018712 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.261836739 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.284075775 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.372290127 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.195162866 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.25728116 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.412841496 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.489394134 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.225364953 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.266820708 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.262227016 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.207039456 seconds)
  done (took 7.713946592 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.20549577 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.257852564 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.215511262 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.244173824 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.204767783 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.238747089 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.195142593 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.247789731 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.20572866 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.234376484 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.197733067 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.233891675 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.207850858 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.241449826 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.207785774 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.251123991 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.200466398 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.229997533 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.215788115 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.231245925 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.211463196 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.252881458 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.235011013 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.21480299 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.244941935 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.205872286 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.225031707 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.196485651 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.23318963 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.204289903 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.226018858 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.204132337 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.201288502 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.200383096 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.205537421 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.24522481 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.200422379 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.231136328 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.200075355 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.229537401 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.205786896 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.240682208 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.203251639 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.200917252 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.24838471 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.175556509 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.239066103 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.206743901 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.204405998 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.214244528 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.238328769 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.20661841 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.234375534 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.214521007 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.233036531 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.21238678 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.236011276 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.206739088 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.228917536 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.193939369 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.22461718 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.198609729 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.234600479 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.207389814 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.238075209 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.204825225 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.203259799 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.229083166 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.195947272 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.230706356 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.197751441 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.241490217 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.249595603 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.205811146 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.20135424 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.238729621 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.202268099 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.195451074 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.202849127 seconds)
  done (took 18.630048269 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.221996442 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.234487267 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.213286711 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.260899873 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.20369661 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.235259658 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.202184982 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.24825339 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.203639253 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.243113623 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.203937586 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.243396513 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.218699832 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.240850576 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.201912886 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.243759265 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.203049174 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.266533599 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.208368424 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.253706849 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.202693572 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.235222628 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.208595091 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.241800164 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.220779006 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.24197974 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.218572018 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.238164224 seconds)
  done (took 7.711076037 seconds)
done (took 79.89859758 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.534610331 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.680585383 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.449150883 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.450844798 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.461787619 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.466563512 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.445653018 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.448376934 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.960299488 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.422383514 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.45243547 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.447731453 seconds)
done (took 31.62142524 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.825881509 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.471392015 seconds)
    (2/2) benchmarking "String"...
    done (took 2.479464179 seconds)
  done (took 6.301541367 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.469577614 seconds)
    (2/2) benchmarking "String"...
    done (took 2.474375133 seconds)
  done (took 6.280567846 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.438310083 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.438034304 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.83018707 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.440246928 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.439338794 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.440149028 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.447011484 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.453853318 seconds)
  done (took 17.822629608 seconds)
done (took 37.010156326 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.468955281 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.748539186 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.685758956 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.425964631 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.443200056 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.442674634 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.445485679 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.505426907 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.456328026 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.427741776 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.874823894 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.713761228 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.453718778 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.841330631 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.426889231 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.4531939 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.457839957 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.82337059 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.442070121 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.481882388 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.427420492 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.421039081 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.461000828 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.450927331 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.452721346 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.459368693 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.482411584 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.440021055 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.725730141 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.460046293 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.483362329 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.445792061 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.482564281 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.461334783 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.454327351 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.452251371 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.757895864 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.45560639 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.43889916 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.446417968 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.758908949 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.461949278 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.445028901 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.448275898 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.435572249 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.493684555 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.427915207 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.563069826 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.475087154 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.445375275 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.527676429 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.862288803 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.447016569 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.471615718 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.456715268 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.800153695 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.475372828 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.552721012 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.473250384 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.472899064 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.44501789 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.445879697 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.518354128 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.45556968 seconds)
  done (took 160.372955344 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.444701123 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.447672844 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.445895441 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.451741023 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.446632615 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.448058274 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.445134376 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.445415477 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.449061638 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.472818957 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.445327342 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.448500593 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.446313748 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.380346389 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.452540354 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.464036946 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.448068092 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.449076593 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.453629796 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.448003185 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.472293978 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.448111484 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.447176657 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.446570251 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.460646637 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.535204648 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.45750242 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.469141828 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.454519363 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.450772724 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.463056953 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.457696982 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.125965746 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.312580979 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.457861788 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.493279952 seconds)
  done (took 89.223036531 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.44853574 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.446801411 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.44928979 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.481935251 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.448889338 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.080243896 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.085897055 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.509967951 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.848049948 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.73160276 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.030730093 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.720736829 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.446860412 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.544789235 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.462407554 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.448346023 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.453987097 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.545673429 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.476321432 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.453288638 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.449120485 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.082388265 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.46420367 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.025050657 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.641057855 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.452336191 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.487050698 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.846330559 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.451634839 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.487018735 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.792939076 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.487427783 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.451828862 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.854403227 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.769315958 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.560810762 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.452384093 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.487938033 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.453180913 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.737543066 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.451074332 seconds)
    (42/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.153944378 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.456148345 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.453562563 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.147619316 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.454376084 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.086417996 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.454077887 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.446976846 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.451108921 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.449631473 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.100925111 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.225343526 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.451458166 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.449364806 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.452600887 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.457458218 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.453633802 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.45364431 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.487788232 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.119348918 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.356856483 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.454394149 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.458596317 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.486296398 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.455567522 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.451421476 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.123838106 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.512315637 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.086643698 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.455900644 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.575866756 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.554882942 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.575125751 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.454514656 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.45343769 seconds)
    (77/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.454310677 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.452809583 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.568585459 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.454804687 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.453459798 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.90090268 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.6404757 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.45558053 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.078721281 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.456587735 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.552272279 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.454856592 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.892777008 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.452385963 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.455171373 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.215252129 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.550715692 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.455259079 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.455324533 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.453367394 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.906434445 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.093438461 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.8536695 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.456270748 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.419133064 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.46220076 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.919308254 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.091398203 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.177777584 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.458875504 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.5709303 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.640357558 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.457176817 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.459848282 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.088021936 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.458528814 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.518507235 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.459672593 seconds)
  done (took 402.352824056 seconds)
done (took 653.29199903 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.436546849 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.439905576 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.435957506 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.452518175 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.43877188 seconds)
  done (took 13.54351326 seconds)
done (took 14.891081382 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.718008375 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 1.724032668 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 1.722681367 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 1.516947892 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.72070144 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.720928083 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.608641447 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.679431754 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.72552203 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 1.726408385 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 1.489224667 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 1.742456247 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 1.681410049 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 1.53578899 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 1.480086777 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 1.60844964 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 1.50213704 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.641336288 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 1.60714733 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.756881698 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.816143005 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.508854363 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.727314737 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.491036233 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.769295018 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.786230295 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.667982481 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.622513331 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.476199783 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.473648107 seconds)
  done (took 19.445787526 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 1.496529824 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.770935498 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.795783716 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.509616771 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.739066644 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.494891058 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.756720681 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.802879457 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.668462829 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.64490445 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.477963895 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.476198843 seconds)
  done (took 19.489195102 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 1.472965902 seconds)
done (took 74.407607246 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.493837228 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.563505382 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.491180531 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.474423618 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.472698572 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.474853193 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.475798904 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.47117229 seconds)
  done (took 13.263590973 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.474421087 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.47269933 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.472469147 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.474575719 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.473643792 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.474767882 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.473698874 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.473544894 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.470770827 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.471153317 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.474909107 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.471718892 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.475260856 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.474471616 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.473386893 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.470754361 seconds)
  done (took 24.922969326 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.471768346 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.475043277 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.471996279 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.475184507 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.474596155 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.471472987 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.474987175 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.470833069 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.473180227 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.473776636 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.474801639 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.471979211 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.469094602 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.469522378 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.473787928 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.470290732 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.472285148 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.475677991 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.472647877 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.471225597 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.473426741 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.473103348 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.471615551 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.472835223 seconds)
  done (took 36.694485205 seconds)
done (took 76.230498822 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.466078419 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.46678532 seconds)
  done (took 6.284851851 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.535717423 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.534739865 seconds)
  done (took 4.424171489 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.475968069 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.472172702 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.479123133 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.47403308 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.473925761 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.475434453 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.475801437 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.477379897 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.477695492 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.474040653 seconds)
  done (took 16.109837827 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.475995119 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.474583199 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.47627838 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.475631366 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.471097001 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.472144741 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.473119774 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.472817691 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.477442698 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.475455292 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.477675944 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.477158477 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.477177586 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.476623369 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.478637593 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.473456572 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.474054303 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.476899744 seconds)
  done (took 27.911447624 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.486507614 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.493851503 seconds)
  done (took 4.333897725 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.602696268 seconds)
    (2/7) benchmarking "second"...
    done (took 1.522062097 seconds)
    (3/7) benchmarking "month"...
    done (took 1.579536185 seconds)
    (4/7) benchmarking "year"...
    done (took 1.570340592 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.516597753 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.49489906 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.514536981 seconds)
  done (took 12.150727153 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.472829453 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.765496033 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.961176236 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.639733931 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.459814605 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.483368797 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.443836709 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.485046276 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.485718962 seconds)
  done (took 16.552335182 seconds)
done (took 89.122533206 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.462694849 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.490827017 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.498458085 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.484215108 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.816750862 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.518824439 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.465176095 seconds)
done (took 18.100535099 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.457279075 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.44634147 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.465896342 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.474154848 seconds)
  done (took 11.199469711 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.478181056 seconds)
    (2/2) benchmarking "read"...
    done (took 1.790535921 seconds)
  done (took 5.627149347 seconds)
done (took 18.187610691 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.479044703 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.482214335 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.481187967 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.477085507 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.483146417 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.483853148 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.479687848 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.479169972 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.480196806 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.48146431 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.47724119 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.477749616 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.479162445 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.476474669 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.479445804 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.480543352 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.477384779 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.483011058 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.480866027 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.47716486 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.479653331 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.480445887 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.479427185 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.480240242 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.476690825 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.480529808 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.482230507 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.481187517 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.481912814 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.483248227 seconds)
  done (took 45.759178457 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.482192546 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.483562754 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.482454014 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.480959734 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.484020989 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.480924443 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.480527071 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.481078103 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.485365753 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.480929453 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.484149771 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.483198158 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.48058702 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.479460288 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.481617148 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.481358709 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.482935638 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.484638035 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.483429439 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.482422808 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.480981035 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.483339801 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.480215468 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.480426169 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.481442862 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.482609122 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.485364306 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.484081995 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.484901576 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.482350371 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.483872741 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.487462196 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.483325318 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.481192358 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.480741286 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.486154192 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.490755676 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.486857546 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.483935182 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.484677535 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.486048048 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.482998766 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.484763504 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.482131539 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.479096921 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.48344398 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.485903629 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.484112607 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.486465776 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.478575345 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.480277949 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.488342846 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.479911825 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.48270161 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.484450102 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.480729392 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.483374994 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.487235595 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.48446307 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.486420892 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.486039798 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.483583169 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.486197637 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.484791589 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.488693507 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.486355969 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.488045159 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.488631147 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.485411699 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.488148059 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.487971167 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.485181691 seconds)
  done (took 108.189306655 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.481684868 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.484800428 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.485456011 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.487656039 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.486708714 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.488975117 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.487577764 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.487350087 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.484833595 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.491772569 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.489653366 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.487884881 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.487919409 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.490405914 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.486579617 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.488463898 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.48827202 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.486965302 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.488145132 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.48878572 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.488649143 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.489109411 seconds)
  done (took 34.090235322 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.488258009 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.488267369 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.488446361 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.489592104 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.489202725 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.490238696 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.490014217 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.489926052 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.488985021 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.487703004 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.489587253 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.489088029 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.491293025 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.488636901 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.490750201 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.488880721 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.487818977 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.493632806 seconds)
  done (took 28.173497542 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.488231304 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.487986775 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.488083913 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.491526793 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.489469947 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.492058026 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.4903305 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.491294004 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.490171642 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.490121244 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.49171395 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.489811536 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.488992324 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.490388896 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.489699944 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.48969147 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.492188978 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.490932993 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.489749808 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.489823258 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.489404752 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.490202585 seconds)
  done (took 34.152560844 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.489812291 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.488995134 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.492387659 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.490262483 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.490941325 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.488999479 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.49286946 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.48952191 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.492474693 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.489397294 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.491275794 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.490505286 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.49178945 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.493683943 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.490523843 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.489189912 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.490629074 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.489951267 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.493222039 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.489852616 seconds)
  done (took 31.189078567 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.49405552 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.49363494 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.494653206 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.491975561 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.492769514 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.492609448 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.49264407 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.492509783 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.492578471 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.491578494 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.495147466 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.493817056 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.492436258 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.493067802 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.494139391 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.494273897 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.493253826 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.494095336 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.494880018 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.493401122 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.494758882 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.493751404 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.492844101 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.494370813 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.493550377 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.492634067 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.493968528 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.494823554 seconds)
  done (took 43.191050973 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.510953387 seconds)
    (2/2) benchmarking "in"...
    done (took 1.513242043 seconds)
  done (took 4.396521444 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.492834621 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.494619241 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.494107333 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.49373952 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.494079449 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.494972834 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.492754447 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.493878813 seconds)
  done (took 13.325490208 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.493058932 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.495125742 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.494622484 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.49396388 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.495532697 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.491958187 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.499259499 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.49985789 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.491634831 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.491449589 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.49802781 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.497765555 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.496529905 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.494954357 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.492851611 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.49923895 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.498487183 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.497693814 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.498603307 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.496907564 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.496526747 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.496262227 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.496543499 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.497706987 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.495531171 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.506522876 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.502004887 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.49869279 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.494685185 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.50368898 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.497137101 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.499230545 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.498102809 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.498225784 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.496413107 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.496717896 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.505608235 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.501725532 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.503090485 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.503602342 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.49734221 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.497414392 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.496323977 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.498975512 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.498594451 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.501539801 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.499563115 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.498708619 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.494750854 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.498286405 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.503208487 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.496554729 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.501319229 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.501966608 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.499581301 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.506449728 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.508035449 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.500033296 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.501103069 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.506389045 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.515892034 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.510389038 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.509436384 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.504172442 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.502957051 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.508926724 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.508290969 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.506507518 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.500397888 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.50411741 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.507326064 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.520537699 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.51498465 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.50682013 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.503406597 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.503002754 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.501139374 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.503945744 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.50813674 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.510491483 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.508487378 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.503503019 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.504223294 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.508471594 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.502544338 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.508502565 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.50168462 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.503250584 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.501979952 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.5127835 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.511268234 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.504836277 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.501669946 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.504977282 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.504166821 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.504417396 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.503941567 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.503992623 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.509037628 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.504436108 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.506227301 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.501646776 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.511590282 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.509185323 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.504504952 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.513508545 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.512103594 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.503157406 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.515241294 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.512601708 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.505946069 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.50152531 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.51009989 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.508773833 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.507338086 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.508968866 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.510519583 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.505951767 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.510529404 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.503232891 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.507975301 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.51766073 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.510040334 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.508515964 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.509386379 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.51122725 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.503980099 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.508507616 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.510225733 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.504651006 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.504014552 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.50811671 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.511098279 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.505618466 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.510211235 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.505222093 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.51082222 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.507279542 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.506789311 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.508278054 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.51110713 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.508945982 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.512031835 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.51499369 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.512056907 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.508802653 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.519742669 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.512269525 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.510370318 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.512184097 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.5111274 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.507623332 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.509809624 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.511495602 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.504143646 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.510357277 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.509459927 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.512412178 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.508316836 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.511325091 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.509286031 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.505421692 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.51002291 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.512952005 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.512424693 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.511570628 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.513178681 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.508585318 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.508810614 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.505572031 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.510063816 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.505782045 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.510218058 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.512633942 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.510149764 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.511535686 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.51113324 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.514886028 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.511175919 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.511743604 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.509642409 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.515664174 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.514247427 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.517064521 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.517042356 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.50809873 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.509124675 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.508523423 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.509736426 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.511970707 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.510205042 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.516758744 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.526535206 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.524880425 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.511126109 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.51338905 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.507601714 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.512790439 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.514202714 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.516749164 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.51048194 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.510882706 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.510678406 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.51698625 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.509021682 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.515339919 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.507567964 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.515150317 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.511708091 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.512084036 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.510684849 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.512014144 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.512337223 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.514138001 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.513081828 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.511505579 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.510288025 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.514716674 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.509883134 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.511441937 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.513507801 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.512733923 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.51883306 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.518762254 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.51335612 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.521580481 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.517386015 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.512523294 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.51337743 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.515925276 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.515832607 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.522465467 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.521059796 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.513918435 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.523651679 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.517962789 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.512688011 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.519625858 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.521309353 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.514831188 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.51196546 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.518538051 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.514161189 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.512656616 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.51163517 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.512354934 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.516621967 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.520297164 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.519873125 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.511220987 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.517682165 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.51206743 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.516021139 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.514507346 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.518540607 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.519796741 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.521710797 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.522886634 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.514281206 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.514814707 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.51788489 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.514558897 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.514726088 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.514698732 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.519534069 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.520106227 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.518822276 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.518505155 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.516150449 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.519071744 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.512646605 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.517944217 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.515067029 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.535140395 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.534129265 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.527250364 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.52508441 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.521472826 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.520746959 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.520879937 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.519037212 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.516071628 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.519405233 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.518870685 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.515723561 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.522310748 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.517410684 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.523261148 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.517480811 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.521184413 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.520903783 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.518858422 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.514987459 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.521824676 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.517369185 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.516574926 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.515731793 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.52231709 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.518826647 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.523668783 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.523057105 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.518943129 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.529228627 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.525829431 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.52161414 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.522651335 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.519991931 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.516509001 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.521321129 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.524411483 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.517383786 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.523472309 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.518847265 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.522574523 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.520448263 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.527631845 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.527512449 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.517100293 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.5237516 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.519871167 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.515471926 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.518398391 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.519589647 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.527584452 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.529870307 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.516428927 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.524313462 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.523061863 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.520782365 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.520877137 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.519467786 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.520396101 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.520146914 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.530697132 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.527811229 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.523267823 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.527551872 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.527336733 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.520994116 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.521372814 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.516023282 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.528205622 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.526998123 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.521205914 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.527263439 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.521912475 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.524465073 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.521222391 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.521459014 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.522706434 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.520522607 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.530387992 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.530852432 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.524634971 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.524695311 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.531489193 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.530683979 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.530507257 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.532798661 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.523164391 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.529202602 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.522802765 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.521714448 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.523850786 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.525193093 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.527305018 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.521364005 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.529662756 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.525218773 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.524014291 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.530564439 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.53496458 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.521058518 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.527896419 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.535966235 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.520506985 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.528395085 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.523965496 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.519325174 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.527030542 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.521931475 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.520724173 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.524470177 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.527425609 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.530726536 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.525013461 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.530123595 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.524610082 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.529361811 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.525593647 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.525035865 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.527024013 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.525323319 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.522806279 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.528336374 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.532261911 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.533735837 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.52436167 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.532403392 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.525161923 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.537581183 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.535642258 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.526494808 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.530515209 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.52653932 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.525206693 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.530856474 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.531778387 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.524957633 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.531204582 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.523882156 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.529461402 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.529528639 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.530698864 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.53448767 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.530864165 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.522636305 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.526596026 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.53007444 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.528945595 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.526381563 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.528985882 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.53493259 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.524789604 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.523435065 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.52889798 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.525850993 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.533058574 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.525009833 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.531953449 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.532352214 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.531687287 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.528011781 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.527857231 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.524962747 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.527086795 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.539148584 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.534776564 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.530869767 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.530573004 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.532018599 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.526104694 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.530322626 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.532856313 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.530629036 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.531423534 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.532927369 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.528179389 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.529534829 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.529490485 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.531443221 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.535905766 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.534806547 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.528407557 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.539407414 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.541890249 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.539160872 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.527699107 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.530243759 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.52990238 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.531468799 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.529249543 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.528693976 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.542925768 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.538024666 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.534219159 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.534067321 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.534041327 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.525568594 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.534529084 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.532047746 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.531064088 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.535734029 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.530819724 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.538493813 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.531567017 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.530391153 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.527055399 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.530494134 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.532239637 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.532856468 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.531763467 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.533721366 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.536799828 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.535898413 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.537333132 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.530890188 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.530154682 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.530332258 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.527832163 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.535020239 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.531095577 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.538781729 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.535613312 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.529699827 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.535019169 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.53370288 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.532657105 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.53509039 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.537308736 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.532155164 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.529943475 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.537971362 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.543769687 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.542919568 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.532021202 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.533296658 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.536678579 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.536282296 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.534680544 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.534084644 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.533253045 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.549239244 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.543177445 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.532642059 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.535155034 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.543375077 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.541607956 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.533404431 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.534498944 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.533575932 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.539014034 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.541086527 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.532966082 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.542603816 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.541554035 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.53691845 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.537855191 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.533298249 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.537704369 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.540804922 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.542388162 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.534850883 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.534094785 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.549658504 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.542157341 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.53635622 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.552913265 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.545343358 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.540678356 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.541286095 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.531173246 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.536396375 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.537026639 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.541131315 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.534749699 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.535173413 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.535600229 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.533364353 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.5420592 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.544520695 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.545320431 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.535461463 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.53411234 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.537492038 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.537780005 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.535166464 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.539903439 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.53583884 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.536432175 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.537470583 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.53549886 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.557592206 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.556801561 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.544532169 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.536263297 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.537038863 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.541066311 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.546161743 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.541550723 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.543375861 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.537606189 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.538960173 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.542595963 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.547287227 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.537525954 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.536660833 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.540108119 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.538937056 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.541690948 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.553959941 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.55674531 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.544145801 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.544487491 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.541485494 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.539153794 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.537857025 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.542321003 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.53825231 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.539620527 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.540598278 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.541557592 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.539083683 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.53925 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.538032166 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.544734619 seconds)
  done (took 907.708775446 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.53890406 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.539674383 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.539934402 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.537788138 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.538229034 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.539769783 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.53906621 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.538930734 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.539294922 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.538941479 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.539261716 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.541357193 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.53988527 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.540781797 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.54128127 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.540426118 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.538786066 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.538696959 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.540214301 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.539943928 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.540001521 seconds)
  done (took 33.740851179 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.541355493 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.541854674 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.540803954 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.540704451 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.542000209 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.541758468 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.541387329 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.541584402 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.541851371 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.542289612 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.541936967 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.54285349 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.542185053 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.541729798 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.543167803 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.541934913 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.542486996 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.541108635 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.540856153 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.542654827 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.543735713 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.543143567 seconds)
  done (took 35.334754494 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.542577358 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.54283493 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.541653819 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.545669127 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.543624346 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.542143382 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.543554376 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.542906572 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.542544972 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.541768502 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.541312675 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.541753619 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.54455879 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.548225181 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.545031009 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.549252011 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.544670812 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.544606123 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.544312762 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.543889195 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.551117617 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.553384598 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.543221523 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.5410456 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.546436917 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.545125251 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.545426153 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.546011694 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.540489868 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.547163291 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.544710242 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.543160933 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.550440656 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.548793443 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.543048338 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.547857532 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.546241921 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.544336431 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.544561749 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.547569103 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.556081314 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.545422759 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.556214889 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.555289736 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.545295974 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.544375767 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.552585679 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.547182554 seconds)
  done (took 75.613766765 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.544557504 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.545386995 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.547121934 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.547159166 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.546603911 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.546141086 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.547231667 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.54778049 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.546344659 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.546931328 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.549157538 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.544670501 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.546408132 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.547450032 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.547830688 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.546418148 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.547169212 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.546938678 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.547889254 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.547572542 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.546068556 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.548976589 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.547499406 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.549103923 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.547893067 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.5487619 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.546575731 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.546417286 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.549542121 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.550233276 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.547652962 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.548425886 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.548394515 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.549708362 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.548748118 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.548496377 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.548868464 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.547988549 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.548399908 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.548003251 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.548985055 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.548912119 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.547582275 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.548592924 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.548701014 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.549967442 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.547718574 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.549596793 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.549205988 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.550293578 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.550413297 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.549385605 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.551494826 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.550328645 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.551322868 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.550633806 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.549366925 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.550301497 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.550038345 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.55058596 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.550424805 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.551138 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.550752009 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.550843686 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.550527179 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.551590936 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.550716138 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.551438889 seconds)
  done (took 106.722333878 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.551698311 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.550712405 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.552234313 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.551824126 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.551925945 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.552604222 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.552369473 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.552229434 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.551601981 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.553452607 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.552655843 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.552981217 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.553201165 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.552788522 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.552309934 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.551905388 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.553038216 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.552387927 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.552107798 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.552718367 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.553338961 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.552758793 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.551499064 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.553520992 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.554981246 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.554861883 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.554277136 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.554382904 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.553711379 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.553770498 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.555458742 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.554706954 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.555356616 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.553969519 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.555575729 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.553779709 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.553295017 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.553359202 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.553995154 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.55451926 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.554577755 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.554905297 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.55417191 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.556683309 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.553639565 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.555738132 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.553782577 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.554461303 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.553584507 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.554206845 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.554811216 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.555440476 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.556133064 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.555639863 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.555577709 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.556843503 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.555245266 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.55654541 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.556803257 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.55581184 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.557961448 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.556797653 seconds)
  done (took 97.76882515 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.555898857 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.558569905 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.55539767 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.557158489 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.556095969 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.557439012 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.557960967 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.556774567 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.556521186 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.557231425 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.557828418 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.556682516 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.55527404 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.557795043 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.558499319 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.560408596 seconds)
  done (took 26.340755476 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.556942554 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.557877891 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.558696299 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.558103024 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.557753781 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.556148926 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.557609577 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.556567307 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.558074255 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.558431427 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.557985796 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.556486221 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.557928247 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.55685191 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.556680729 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.557639619 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.558654773 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.555959221 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.55861637 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.558224116 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.556948432 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.559273418 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.557751419 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.558462022 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.559507561 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.561138099 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.5594851 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.559654435 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.558718065 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.559906844 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.558761345 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.559945613 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.559928161 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.558980714 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.560230377 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.560348881 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.557766702 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.559782285 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.559115485 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.560888103 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.5603438 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.561204895 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.560321569 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.559386882 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.559704725 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.560501473 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.559250984 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.562463592 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.561653553 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.56150421 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.559710938 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.563529927 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.562190792 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.560329556 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.562401304 seconds)
  done (took 87.178693976 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.562150232 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.562000638 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.561604397 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.561808624 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.561384448 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.561873037 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.561289593 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.562777043 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.562388281 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.560491838 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.561029151 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.563072514 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.562307961 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.561585411 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.561357263 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.562339505 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.561757082 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.563404779 seconds)
  done (took 29.543231021 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.562772475 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.563262629 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.563172014 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.561962662 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.562876307 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.564574154 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.561191307 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.564703815 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.563723547 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.564641953 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.56221636 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.56485022 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.562478998 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.564057622 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.563424122 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.563129115 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.565875762 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.563573572 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.564279833 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.563523252 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.564278621 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.564343541 seconds)
  done (took 35.827821613 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.558309828 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.559062714 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.560428969 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.574099465 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.570669737 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.558250159 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.55879942 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.560035219 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.576663788 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.584976055 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.581450282 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.568578998 seconds)
  done (took 20.242788582 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.566256914 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.565347211 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.566763856 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.566592949 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.563710002 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.564525056 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.565288873 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.566272999 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.565742385 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.56635783 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.564988907 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.566038966 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.566580245 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.56630132 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.566325972 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.565027242 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.567057975 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.565680721 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.56798679 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.567009177 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.566654103 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.566212665 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.566399084 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.566035614 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.56667173 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.566773808 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.566849989 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.569024824 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.567312071 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.567463326 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.567500651 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.566510573 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.568131862 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.567064996 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.566934746 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.568603657 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.568855766 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.566725372 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.567452811 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.568721581 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.569393021 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.568019363 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.56817166 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.566957687 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.5679252 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.568491608 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.567798315 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.568199563 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.568463715 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.569558897 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.570130689 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.569288346 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.567621832 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.568421852 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.569476803 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.568794198 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.569352259 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.568590511 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.571124711 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.569892693 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.569159396 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.570546593 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.569097182 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.569525408 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.570218214 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.571010083 seconds)
  done (took 104.89488637 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.569588442 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.56910355 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.57082702 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.570561317 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.569448208 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.570802767 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.570546623 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570938083 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.571757752 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.570095182 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.570546699 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.571730631 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.570863615 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.571490676 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.570931422 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.57222278 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.572014102 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.571241509 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.570209278 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.573084192 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.572090215 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.570670928 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.569883504 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.571062078 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.570488151 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.573943782 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.571590875 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.573326937 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.570987771 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.572265037 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.572913684 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.572575857 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.570667724 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.573787255 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.572667274 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.572249082 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.572452183 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.574766908 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.572810189 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.576670723 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.574533745 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.572988554 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.572285753 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.571734844 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.574617895 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.572642948 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.573667313 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.572411067 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.573879961 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.575838124 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.574374214 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.573968393 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.575655237 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.574637282 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.573569409 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.574222189 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.575290481 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.575288131 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.57567722 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.574684944 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.574168601 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.57519363 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.576764128 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.575467827 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.575507209 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.57460457 seconds)
  done (took 105.238275625 seconds)
done (took 2009.984208719 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.568329647 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.567437932 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.5700733 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.793953582 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.574909966 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.209128394 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.092180378 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.572498235 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.569950164 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.571177306 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.572116607 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.566334819 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.86698478 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.570421159 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.569914561 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.569435073 seconds)
  done (took 58.246905886 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.602457974 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.579955437 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.709028896 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.574356902 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.601474883 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.794127897 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.641759838 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.576009 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.775170171 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.580372714 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.567220461 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.601387782 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.57599531 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.58456393 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.598577294 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.794713105 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.868880002 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.571125855 seconds)
  done (took 34.039181615 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.105740231 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.58322136 seconds)
  done (took 6.132228745 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.599184789 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.57636393 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.581056991 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.576710634 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.568895043 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.569307453 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.576622971 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.575934231 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.572839626 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.725057053 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.581201529 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.59257343 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.577326141 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.579318262 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.579037356 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.62521825 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.707804062 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.582985009 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.581608506 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.583203205 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.577705357 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.676972489 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.627043416 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.582807404 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.759590358 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.573749687 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.584179048 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.583037194 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.710987307 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.580757886 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.577470278 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.577284749 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.579110554 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.571800206 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.137738932 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.585111649 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.605861041 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.585399168 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.581563726 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.734566656 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.580539524 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.583934892 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.571178518 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.134555967 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.694932611 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.711821866 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.570467919 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.579028411 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.580594642 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.65177202 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.57860048 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.581489912 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.646537682 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.439901468 seconds)
  done (took 99.06294217 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.617073121 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.573756782 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.57273438 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.578448371 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.584520505 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.57230546 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.57290545 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.912656936 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.589738532 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.590680715 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.908469952 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.592455664 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.576653138 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.576165983 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.576464985 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.632178142 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.573780547 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.584941231 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.576720664 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.57460995 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.573659205 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.577588957 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.593211214 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.620682509 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.618296743 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.574221923 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.592949765 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.580445844 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.576879311 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.574498593 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.576860892 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.590272145 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.578531212 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.578654834 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.886783274 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.594839923 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.57789979 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.577293102 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.608706854 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.579118076 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.609692976 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.178508317 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.578580021 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.579862124 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.596421483 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.182349001 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.57843209 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.579098627 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.585916287 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.57868746 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.591393544 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.578686306 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.580604536 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.578331817 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.577032717 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.686259908 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.677536711 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.580981944 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.57874287 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.579448746 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.589784992 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.575926447 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.585856386 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.576288885 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.578003321 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.577193926 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.766977268 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.580377875 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.575831397 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.58004227 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.580269164 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.581639065 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.290029943 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.584039271 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.599991845 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.588771668 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.586457433 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.592268515 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.582947154 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.615726013 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.596384573 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.583510639 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.905111109 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.599765971 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.595043582 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.592179262 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.585995435 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.580924515 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.581689322 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.579689627 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.579420332 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.580919302 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.904018629 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.619204659 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.578182579 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.578461377 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.598057572 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.579764075 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.58235066 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.579114441 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.592694567 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.589676888 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.293655698 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.582768787 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.592026732 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.584663443 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.580064429 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.584155639 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.581292631 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.581584398 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.586664624 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.585507533 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.586213427 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.591764484 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.587604807 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.582984282 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.983869957 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.585908383 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.582393264 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.584636569 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.582815393 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.610392487 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.585547993 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.581222951 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.582362201 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.901052959 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.602674987 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.584309565 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.584630011 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.583174508 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.586858914 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.585822046 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.605980602 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.582633355 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.582488091 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.592111676 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.591307305 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.582794924 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.595825439 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.587695959 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.591924747 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.584528806 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.296029713 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.898174598 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.792665928 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.596999575 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.582533635 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.590912499 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.587927457 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.584040502 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.588607957 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.582412076 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.890839149 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.792591312 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.586686199 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.585122998 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.591660032 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.586716979 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.587364957 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.292421287 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.586244215 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.586205615 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.591953997 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.583852539 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.291804148 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.618764804 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.593082313 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.91246966 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.630252874 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.584852526 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 3.369273904 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.584994853 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.586269794 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.59281752 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.586479471 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.586937468 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.590630582 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.770621496 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.591301893 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.589812737 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.591651886 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.589458209 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.590185396 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.598335759 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.592894942 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.59035334 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.587065503 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.670858294 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.589002316 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.593333331 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.589851808 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.590979171 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.213118431 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.304023564 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.595102036 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.589993629 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.609684245 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.594030936 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.594678784 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.591611497 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.595566413 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.594677681 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.63737291 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.97230319 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.606318954 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.635467806 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.602370064 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.593487716 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.590961409 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.61615077 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.608520829 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.608713049 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.594026656 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.800550838 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.596683308 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.589466718 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.612043052 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.595202114 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.595551257 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.591973154 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.594439704 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.593714264 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.594375886 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.590554913 seconds)
  done (took 571.05914729 seconds)
done (took 769.985143928 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.592713398 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.590729603 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.597342772 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.594735889 seconds)
  done (took 11.840874647 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.603333867 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.59551307 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.604760233 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.599609388 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.601452467 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.598466149 seconds)
  done (took 11.071063423 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.591232471 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.590238916 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.593523841 seconds)
  done (took 9.239492267 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.83444249 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.6039379 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.008577105 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.600179832 seconds)
  done (took 10.515933124 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.604167542 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.602605541 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.604209371 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.603919863 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.605919081 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.608417026 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.606207984 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.606809281 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.605822719 seconds)
  done (took 15.912286051 seconds)
done (took 60.049288269 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.675537142 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.671028027 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.597654138 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.630770473 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.727268957 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.678261446 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.679537471 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.680567403 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.680410737 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.630268366 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.674038081 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.619421664 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.671372346 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.806341924 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.63169596 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.673426836 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.623732248 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.769833553 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.677459759 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.629843797 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.699361346 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.626192579 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.628905326 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.598356032 seconds)
  done (took 43.451981243 seconds)
done (took 44.921831718 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.627079792 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.693383118 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.601241384 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.602421113 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.605953266 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.603689375 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.622078612 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.603220536 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.6147986 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.616221077 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.60075784 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.612467413 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.617642063 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.614494796 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.637592637 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.600685316 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.602461355 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.610607951 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.621201926 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.620694337 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.60377391 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.609638667 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.630028494 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.604398091 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.61277775 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.612633397 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.611350853 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.595249622 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.611314761 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.620503925 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.597132544 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.610483657 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.620665532 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.613234858 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.604294435 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.617298629 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.606619748 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.694241538 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.622091114 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.612367426 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.611313994 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.622167384 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.609708067 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.608674031 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.613958166 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.632672781 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.612313571 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.61932926 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.598927788 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.605518902 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.626359565 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.619303062 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.612617061 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.602434586 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.595994488 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.623100229 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.617647746 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.625448228 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.614628908 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.608614316 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.639011636 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.628216638 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.619128868 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.613075075 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.615076086 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.625113413 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.619740022 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.625513514 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.613767747 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.611155628 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.611307157 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.61626922 seconds)
done (took 125.839627432 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.735277737 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.608695849 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.766315126 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.614663818 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.783456363 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.737681232 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.617047504 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.613100993 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.613226386 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.414398853 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.61421152 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.61395619 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.611409607 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.613140894 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.732013905 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.614685072 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.615578027 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.312027683 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.614403814 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.749071558 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.613458034 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.616473053 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.616992107 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.417831231 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.608088161 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.607424246 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.754043026 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.614817097 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.320263883 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.607178354 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.608693438 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.317958797 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.756642645 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.638322922 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.627687633 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.621045401 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.782162463 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.622251174 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.742772597 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.738298224 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.762984528 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.656826865 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.603412951 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.613287188 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.620306336 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.61966007 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.619483161 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.645881539 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.613296079 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.615907099 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.312217844 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.628064727 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.620565791 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.620004438 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.619551876 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.651668501 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.620913081 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.619253313 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.752719893 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.616514935 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.740403458 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.426847659 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.419104979 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.618568495 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.612654434 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.620291524 seconds)
  done (took 127.177433502 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.68584764 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.69355671 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.733611697 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.616839019 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.666408954 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.739556273 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.616007716 seconds)
  done (took 13.226629674 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.623678094 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.619087759 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.662454368 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.665209111 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.623833711 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.79299513 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.617388424 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.629993976 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.621692346 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.669470486 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.623202643 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.623694445 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.632706871 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.611791984 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.663717452 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.627317663 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.735580448 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.621236033 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.620445881 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.772669077 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.622307622 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.631432057 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.669812874 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.628390301 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.620690688 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.625537464 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.373528983 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.620081239 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.618410356 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.621472179 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.623110428 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.683121679 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.619828191 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.618180998 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.620270476 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.730894417 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.620608882 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.621316488 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.624426338 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.616335446 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.620594003 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.621471195 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.62566945 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.626130295 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.618978191 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.646195639 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.625648034 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.625736982 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.621545856 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.618822071 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.671012025 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.622226915 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.62458564 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.624712862 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.674030268 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.629627816 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.624397548 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.625460356 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.623200751 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.625858439 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.772416289 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.664694456 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.625056954 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.668528714 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.62742306 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.624858495 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.628076825 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.62404239 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.709730404 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.627269482 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.671217329 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.627057373 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.802136609 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.647426696 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.630445455 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.623213883 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.625158421 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.62721106 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.615504922 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.629961483 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.625735775 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.626767255 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.628996438 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.624821138 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.626534707 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.78083203 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.727172798 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.624739108 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.640842713 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.631266054 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.62749142 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.674304043 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.629721464 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.631774079 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.676239336 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.742142119 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.676161602 seconds)
  done (took 165.813960229 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.633237634 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.633625385 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.624799633 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.647386631 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.624216054 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.624679702 seconds)
  done (took 11.275036862 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.626273733 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.630674949 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.629346774 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.629079428 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.6299481 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.628539796 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.625319498 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.625458322 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.634882415 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.627499823 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.623768336 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.630875062 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.630135011 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.630435783 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.627921979 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.632130871 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.627278501 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.627054486 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.628379007 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.628027005 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.623311782 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.628017594 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.628330755 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.627325876 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.630223655 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.629642521 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.650862797 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.631129706 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.630160337 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.636838703 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.634339981 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.630463033 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.625744581 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.628839123 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.630541916 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.625184417 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.634962503 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.630221925 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.627528156 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.629198926 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.630380952 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.62767085 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.62681512 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.630842201 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.625944585 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.626722317 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.639333638 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.651780568 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.632582441 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.630975783 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.630087109 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.631280254 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.62771367 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.631804589 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.628871363 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.633227218 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.635896095 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.629766512 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.63359663 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.629608301 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.635333692 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.632787118 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.628569574 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.63417696 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.630826266 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.6352394 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.631728524 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.637002056 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.633944741 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.629301858 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.635118602 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.63274939 seconds)
  done (took 119.905577339 seconds)
done (took 438.880755554 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.090515483 seconds)
  done (took 4.584224772 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.761733983 seconds)
  done (took 4.256530005 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.349473401 seconds)
  done (took 27.15820859 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.694775769 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.630345936 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.624063327 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.629850768 seconds)
  done (took 12.07332088 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.237955892 seconds)
  done (took 4.729651732 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.624007468 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.634072294 seconds)
  done (took 6.752325737 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.014975679 seconds)
  done (took 4.506233645 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.358280295 seconds)
  done (took 4.854621991 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.641986398 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.630704557 seconds)
  done (took 6.768954421 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.601708723 seconds)
  done (took 4.097728526 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.020762279 seconds)
  done (took 16.513535718 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.645830438 seconds)
  done (took 4.134454109 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.657154754 seconds)
  done (took 4.150698258 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.80558809 seconds)
  done (took 7.294815492 seconds)
done (took 113.372310506 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.622030529 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.626417692 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.628101254 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.62539678 seconds)
  done (took 11.992190817 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.694462257 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.694700418 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.704128782 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.690549081 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.691117746 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.697288022 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.658236955 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.658235535 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.69119549 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.684176873 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.700407548 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.685321321 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.700391875 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.658340463 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.684821799 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.702588208 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.692372693 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.705788796 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.660059808 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.691504839 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.633812729 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.689884037 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.685057183 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.633347575 seconds)
  done (took 41.880201119 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.125568776 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.699695103 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.784782022 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.682258788 seconds)
  done (took 8.783200383 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.738547582 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.739459734 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.758961618 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.792434533 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.841845668 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.752126119 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.664815621 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.655098582 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.642489428 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.739157766 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.816408642 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.738095351 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.959835052 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.636560552 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.955344771 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.639197542 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.636273628 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.73967891 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.790247314 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.823197909 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.639742036 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.739405935 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.746132576 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.739269753 seconds)
  done (took 43.418486802 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.646285701 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.650371408 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.636315115 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.637930888 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.639081192 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.637289582 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.652233781 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.638772171 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.642559383 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.639441054 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.638281673 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.639982689 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.650081987 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.637846875 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.637275782 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.649293003 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.642300783 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.648282162 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.646495407 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.637964792 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.637295898 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.647726773 seconds)
  done (took 37.626694288 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.628220992 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.632469586 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.980895764 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.8867697 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.635010582 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.629803098 seconds)
  done (took 15.889812504 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.72155772 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.86964833 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.636245501 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.073723619 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.149443648 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.637538346 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.64078411 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.915067722 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.276760806 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.30675285 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.712048765 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.719327139 seconds)
  done (took 24.156695396 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.717576021 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.638915549 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.64323896 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.687229254 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638995208 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.640601199 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.672477899 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.157639811 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.642721005 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915359323 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644688492 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.72149894 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.886146447 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652108546 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.643612747 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.61749718 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.865488949 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.22621484 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639399186 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.636216458 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.670394689 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.647237399 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.661294782 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.8758524 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.640032307 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.639412383 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.901816323 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.63820938 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976386294 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949100756 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953070991 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646431416 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.918299044 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122628669 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.746332238 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873031497 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.641565528 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.664646631 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.614458284 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.653108367 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.640990073 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.639437693 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947642549 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644222043 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.637575667 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.643507395 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167319188 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.650420007 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.640746514 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.642582872 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948241659 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.724892937 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.645214939 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.637929314 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.735845865 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644256064 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.644025437 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765913831 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282250607 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640856996 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649344497 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.645519906 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.661086284 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.641308819 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.351408585 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.646643847 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.647554069 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644450461 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640319358 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.638649985 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660920889 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642658156 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.661085854 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640984689 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511951812 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.655443545 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640400508 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287508331 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642349168 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.648431672 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8707785 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643432152 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642812554 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.639133898 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.64296961 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.54067247 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.655371806 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.616606592 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679696776 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.164849657 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.881206474 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.663753944 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.669547933 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.863148699 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.615869809 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.641746339 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.649292628 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642198366 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.663858284 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.170039722 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640731593 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.648586234 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889846081 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.849979136 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650693454 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.621612604 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167355265 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644566291 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.66877556 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.65011513 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.883211136 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.350647917 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962434715 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656206055 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.678637944 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.642356895 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.601099454 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647841279 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.652954465 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.652776038 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.961118615 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.595791103 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645342105 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718414877 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.656176636 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.644162976 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.6442588 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642658261 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.644166631 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.865802164 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649007587 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.955605992 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.64944549 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645424153 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.646857784 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658396749 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.646216365 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.868198227 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64365819 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.9253186 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645540445 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646586779 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644481206 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.864776883 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.661509329 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.657874734 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985206127 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647979168 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.651477101 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958268098 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.686059409 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.757975851 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.679908901 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.64836136 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.895960178 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.653152669 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.651376512 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.647562487 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.647180287 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64645972 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.651440245 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654587927 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351974779 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620638466 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.652931407 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.648362697 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.662691595 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.722315254 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65470236 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.884413356 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.646996235 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646940962 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.654452599 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.650131838 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866725935 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953335325 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.668690819 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.82743133 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.173739008 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.346444413 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664533521 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.645811713 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.647514622 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.647849343 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648774008 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645065956 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.649366926 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886674609 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961953447 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.655018646 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363535211 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658629826 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.649651952 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.658148785 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957288371 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.659981791 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64812865 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.655747904 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659731436 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653401866 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.962394495 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877255553 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.664523544 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.651354295 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.169832975 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657458292 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.653034294 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.650137372 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.676917004 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.648708444 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255370656 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993967875 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.647324444 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958981478 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.655443912 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.668167085 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.649908433 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658541402 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667212091 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.659024541 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658046933 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.891842318 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.655717876 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652672198 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.291555658 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522205286 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.296196129 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.656688516 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.658957769 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.656596852 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.1842913 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654111547 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.655069063 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.930432988 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.18169296 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653329102 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181714422 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.66120506 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.552802803 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966653816 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883641664 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.654781069 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.655512295 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966564078 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.868922979 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.676950833 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.655230062 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656730564 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.629368847 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257376934 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.654010435 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.83644961 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186020843 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654907483 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.655704343 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.695755763 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.660262846 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118757909 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.656418527 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.6546244 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.660394335 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.662652814 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260051688 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.66230402 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65280667 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37992962 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.659232942 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.192464983 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653166983 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.897293576 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.968082357 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.949940301 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.660683297 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.667599292 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.902845691 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966523686 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662262604 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.657441655 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.330133671 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.51183148 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.659722222 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655442941 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.604540177 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.655955738 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997043747 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.676967746 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.658040829 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669992136 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.65749344 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657072596 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.656985426 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.665479435 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.624552122 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.247485921 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.665251198 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667006782 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.672729924 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661875449 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.904746184 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.673378045 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373178382 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891166229 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663971693 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689647738 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.66348969 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66630136 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.634868685 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.655243752 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.658891162 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.736511218 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.880525841 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.673265508 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.633866731 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.70283736 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.871955112 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.65759736 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.663413261 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91001188 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.659031041 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.676018133 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533232612 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689856321 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.667896098 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662582273 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.659047762 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694720986 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736352983 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899724216 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.972761985 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.978356235 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129805122 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666623135 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664269438 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.674686497 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.741251272 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661867074 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.661042167 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.663445816 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376822729 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.568878441 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38076272 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978657714 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.665626262 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669024384 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658684802 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901000927 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661788897 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939986842 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660801355 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.662281979 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.682613527 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673762629 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665535757 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875784988 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.937746274 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661957813 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659383866 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667554474 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.661428945 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981763526 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.874945605 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.256060798 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303113389 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663875391 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.66687396 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.201981748 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.938241905 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661057695 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.661741779 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663836266 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.682893825 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.664963111 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.669981558 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.675567259 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889302455 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975845064 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159408278 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.97445509 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.688850227 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.534149389 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670630629 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.911142753 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505244326 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.905939921 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382636416 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.504737909 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920243594 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.737639452 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90665465 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.663383865 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898819504 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.679436399 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.66362835 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.66150363 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664128584 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.661656945 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.978025541 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385990012 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920261624 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.670704272 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.66429294 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.699151613 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.905629713 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.88537774 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.583115541 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.890703392 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984252197 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.676231795 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.668064011 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392462512 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984207866 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.672109207 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.66930171 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917158134 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.667633263 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702548071 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.544807994 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.66748207 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297722168 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.87682596 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689043988 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674119445 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.511800472 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397278086 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.670781881 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.266480656 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.672171751 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669145482 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.943710306 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.676325259 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.680556289 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.958529011 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.673153039 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.677196708 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914690859 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.381140171 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.579808838 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.694094672 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666695005 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.667427823 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668534123 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.733159136 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.670496555 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.676049042 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.127233533 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.666389299 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.668107477 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681011415 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.676270341 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.681957435 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.670407482 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671114801 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.674661949 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.651649751 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.657449441 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.678172196 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795307546 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280308399 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672375771 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.283966846 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.003175756 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.918514889 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.676373001 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.648597468 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.676705614 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669483149 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667317225 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671507794 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.671435557 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317319307 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.684282981 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.987382301 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679366038 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.880634241 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879111346 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.683539242 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918352683 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.686061257 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.692908544 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.648553731 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671390756 seconds)
  done (took 1120.776386006 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.663925976 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.714020262 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.681656396 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.692764478 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.679679824 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.718336862 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.715480449 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.710237597 seconds)
  done (took 23.105421762 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.678751134 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.67491562 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.676171375 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.676373379 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.684823513 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.20800911 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.67979107 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.676505044 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.693307579 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.68237614 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.674572354 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.380257696 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.679758623 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.677216918 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.680689043 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.680930941 seconds)
  done (took 37.641304298 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.897624779 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.854067016 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.259825539 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.74632417 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.693225598 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.676549044 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.044016882 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.706617666 seconds)
  done (took 30.409353102 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.683835602 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.683972382 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.68470819 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.686513089 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.685125048 seconds)
  done (took 9.956048787 seconds)
done (took 1407.129596178 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.679795263 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.68123967 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.680897952 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.682265751 seconds)
  done (took 8.257423123 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.650369296 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.648911394 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.648453222 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.662581743 seconds)
  done (took 11.140601353 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.10094695 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.3065534 seconds)
  done (took 5.936596836 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.677208808 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.44022263 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.422546263 seconds)
  done (took 9.071185056 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.995533276 seconds)
  done (took 3.528061605 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.08528948 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.173257536 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.671586441 seconds)
  done (took 8.462192063 seconds)
done (took 47.934294559 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.679023201 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.441048669 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.830301631 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.676670833 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.834639666 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.829103781 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.958443435 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.672013126 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.671969921 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.680220832 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.674669186 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.836328029 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.944650896 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.440192363 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.944351059 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.443144708 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.835295681 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.675707474 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.67487231 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.67125121 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.958120991 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.670760985 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.681132199 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.679199992 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.837183304 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.81798254 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.681861024 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.442365588 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.682804695 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.673369888 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.815311047 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.674213824 seconds)
  done (took 92.563905788 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.669213863 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.699706405 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.674306712 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.675982619 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.693279183 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.673165629 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.673297623 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.675332576 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.673416027 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.678833778 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.691125361 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.673136413 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.677749882 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.688985524 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.676578574 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.689865986 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.674464537 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.673383484 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.682726004 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.673643253 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.67653326 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.673653622 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.703175614 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.672612641 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.675615307 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.694713963 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.67447132 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.673821178 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.693288264 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.67807879 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.672834586 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.67383011 seconds)
  done (took 87.284743168 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.689809947 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.674728158 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.677785664 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.694394516 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.684457505 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.678628218 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.696133891 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.675811389 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.678828932 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.69048898 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.675672153 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.677544596 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.680453287 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.675947405 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.678133237 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.67624263 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.675089891 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.675740215 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.690151238 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.676967405 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.680801742 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.683801514 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.678202591 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.687891393 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.678183129 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.675728429 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.691329509 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.683634273 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.678585807 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.696393959 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.678471921 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.67817939 seconds)
  done (took 87.351990069 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.912934495 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.687740895 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.689215073 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.681377716 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.690929819 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.690559532 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.682762319 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.919742567 seconds)
  done (took 17.491904829 seconds)
done (took 286.231429888 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.6828591 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.703762509 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.70694289 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.684414994 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.707257081 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.708845471 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.917571045 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.709303609 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.905756115 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.683756927 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.704883393 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.684378815 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.62417063 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.837715292 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.685825285 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.695864836 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.68859855 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.682466347 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.685209087 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.933393003 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.718099096 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.683256381 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.690075518 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.695198489 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.661961508 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.764016735 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.764213259 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.848513769 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.811684407 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.760281544 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.681132013 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.68821638 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.707286925 seconds)
  done (took 76.648225622 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.687502646 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.691438371 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.69371241 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.693659755 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.693567541 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.694974995 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.690611593 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.691353329 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.692787223 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.69279656 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.692220033 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.692361837 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.693622565 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.692837204 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.690967259 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.674357464 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.687182658 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.692058015 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.691115642 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.672421778 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.694650135 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.693609538 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.695427388 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.692520741 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.691999398 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.694450888 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.689903187 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.695477374 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.694309414 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.695308681 seconds)
  done (took 52.279826832 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.693771664 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.696633757 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.686043177 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.702898458 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.689816338 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.700022694 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.03995248 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.696648331 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.69374218 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.697156396 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.698389576 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.696527967 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.750234644 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.685825534 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.697479019 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.696894378 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.695861458 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.692329042 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.705340744 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.706894802 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.046012831 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.69762462 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.040630845 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.708370732 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.698272908 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.694889521 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.701983742 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.687081432 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.697117678 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.695747461 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.655635579 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.04001671 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.689818471 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.685803405 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.663027018 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.702664976 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.697257305 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.706649502 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.696061862 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.697103997 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.037778386 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.695124654 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.68848211 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.688967628 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.698252507 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.700238922 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.708011715 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.706210101 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.989100411 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.702621626 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.689782093 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.699734305 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.701764998 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.699311744 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.994629531 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.702737287 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.698804112 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.690363982 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.702636589 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.043019259 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.699641903 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.697889757 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.707972789 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.698819915 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.700598213 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.69706309 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.7116129 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.700104283 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.688930149 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.700560286 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.691500086 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.703445473 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.698675941 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.699491036 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.701129244 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.706946343 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.697958856 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.692481356 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.715349292 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.039489505 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.700866361 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.703152327 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.053590358 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.702203325 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.705435197 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.70284378 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.702193316 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.768090141 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.038683958 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.65606489 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.713372665 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.698088047 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.050237876 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.709207521 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.699206117 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.691940516 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.704237277 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.701871305 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.693499439 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.692195053 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.702340485 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.714687171 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.695528443 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.700636675 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.057555905 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.707217648 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.695444228 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.702747536 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.768385508 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.702304853 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.71377744 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.705753093 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.056921671 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.702594856 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.705699005 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.690548042 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.695539687 seconds)
  done (took 243.162862552 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.694627152 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.714762884 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.695687086 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.695577623 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.694034607 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.703370944 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.6952682 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.69709026 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.700543749 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.696550124 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.700051899 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.70524722 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.70172908 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.694902931 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.704681551 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.696271639 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.696877129 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.709505502 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.695409155 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.696975646 seconds)
  done (took 51.541638328 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.7076043 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.396272879 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.362770575 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.709536558 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.707420404 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.703929122 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.767166678 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.709998913 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.708423265 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.05862249 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.915356805 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.715554385 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.706446552 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.708780503 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.364604708 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.712186247 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.07068951 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.401045524 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.711135664 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.370764416 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.706917627 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.70606363 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.70385527 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.370013204 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.068818635 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.047959052 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.774927622 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.372670043 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.707446345 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.708119261 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.371941107 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.710262656 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.707005017 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.361770252 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.7095101 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.724183957 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.712357449 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.777979615 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.780267695 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.067060318 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.382691291 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.060129006 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.725851863 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.885474236 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.712322884 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.691391224 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.384834527 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.712625443 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.687586809 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.713944979 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.71969315 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.359061063 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.712306166 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.361753317 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.709941215 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.711939032 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.382208572 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.358493068 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.354283669 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.919681241 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.705412206 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.062326756 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.715856487 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.381224827 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.71122984 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.710152281 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.712326085 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.917484384 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.403413159 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.067606145 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.087194049 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.086840819 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.716271156 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.780761782 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.715296382 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.067781707 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.78290666 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.129703082 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.083716619 seconds)
  done (took 154.540277626 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.013984441 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.810122448 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.145904896 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.328711319 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.268662745 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.864068346 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.835766902 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.984892731 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.708384584 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.805460389 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.469841116 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.81285303 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.528513047 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.790645595 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.819386104 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.844057238 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.163908646 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.708489153 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.406417234 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.447438784 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.733046687 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.82693434 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.522516945 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.11973593 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.725510134 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.532420069 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.707521495 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.304382963 seconds)
  done (took 63.792530026 seconds)
done (took 643.509389748 seconds)
SAVING RESULT...
DONE!
