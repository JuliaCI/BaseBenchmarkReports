cset: moving following pidspec: 23271
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.153912869 seconds)
loading group "string"... done (took 0.535428283 seconds)
loading group "linalg"... done (took 9.611181841 seconds)
loading group "parallel"... done (took 0.164803919 seconds)
loading group "find"... done (took 2.446442387 seconds)
loading group "tuple"... done (took 2.207081361 seconds)
loading group "dates"... done (took 1.394547449 seconds)
loading group "micro"... done (took 0.190957943 seconds)
loading group "io"... done (took 0.509773485 seconds)
loading group "scalar"... done (took 53.224079614 seconds)
loading group "sparse"... done (took 13.919453445 seconds)
loading group "broadcast"... done (took 1.305374867 seconds)
loading group "union"... done (took 10.296291658 seconds)
loading group "simd"... done (took 3.571966519 seconds)
loading group "random"... done (took 13.334300821 seconds)
loading group "problem"... done (took 2.199019791 seconds)
loading group "array"... done (took 23.668903288 seconds)
loading group "misc"... done (took 1.108271171 seconds)
loading group "sort"... done (took 3.780498973 seconds)
loading group "collection"... done (took 20.639228006 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.904724267 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.175822848 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.237540542 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.256622368 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.307413952 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.203971958 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.200967455 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.181984664 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.701273326 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.232198312 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.190671593 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.402961857 seconds)
done (took 6.806763905 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.319752742 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089509077 seconds)
    (2/2) benchmarking "String"...
    done (took 0.231200979 seconds)
  done (took 0.987087115 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.114399394 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.198687347 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.148469159 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.131550457 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.147846106 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.14741735 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.132282883 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.147483071 seconds)
  done (took 1.721758123 seconds)
done (took 3.812345691 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.527986275 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.935535866 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.545368654 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.215225553 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.34036074 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.344506029 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.326115073 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.268074872 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.137526846 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.098669041 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.312157363 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.469862194 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.460997659 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.982762263 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.097549486 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.149154442 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.200078935 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.801211942 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.120531459 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.153497453 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.530133475 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.243445623 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.157153434 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.134507537 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.241665578 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.166406915 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.169122274 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.142878086 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.723347082 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.17361293 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.237767386 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.124419383 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.169363646 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.201258904 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.27774754 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.149167922 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.726429876 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.242842962 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.124647694 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.139145557 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.727256308 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.157540914 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.248200557 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.144747737 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.112206098 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.180259375 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.14189891 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.115704099 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.149516639 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.14065832 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.198982915 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.490824287 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.144148568 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.238446174 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.150003014 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.73685264 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.13712463 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.317072094 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.165436052 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.146432239 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.131270394 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.127715752 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.197426502 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.134276083 seconds)
  done (took 22.688186396 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.245094087 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.248339052 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.11773669 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.200664414 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.181874036 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.120731904 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.143441076 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.118266645 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.167183271 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.220104875 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.182231763 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.255894203 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.132554845 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.130377892 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.222854317 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.292147695 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.148530829 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.162483441 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.130126115 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.150085426 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.169838497 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.152429439 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.150171192 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.134651969 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.209596975 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.247824182 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.158873066 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.162708749 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.129819022 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.152791706 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.182171071 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.186643846 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.132103461 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.125681834 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.229982528 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.162241301 seconds)
  done (took 6.954683344 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.273971501 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.141596778 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.300391551 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.227825969 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.167078579 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.219694558 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.232436122 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.328291957 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.325309524 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.202493697 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.166788807 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.153159351 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.119214392 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.135357786 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.14575408 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.138696408 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.884494739 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.190773212 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.197716762 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.224697358 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152844087 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.136917341 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.395312421 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.140764478 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.123966323 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.150949712 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.093216253 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.274182981 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133618109 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.514244374 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.139732993 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.135994528 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.169137011 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.234435608 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.250789574 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.12401137 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.176684689 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.160928495 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.149966836 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.12372579 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.24727509 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.156270291 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.116864302 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.135603557 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.169490687 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.156460469 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.147184708 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160691593 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.17308486 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.126809701 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163751968 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.150139902 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.233170992 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.219963377 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.125347154 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.314200011 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.162581289 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.138067976 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.148031674 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.904562025 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.159660177 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.138732097 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.117013693 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.151242766 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.117873859 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.510614653 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.160841542 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.512190063 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.120635453 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.197937881 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.150958373 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.155670843 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126318298 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.139447202 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.147100341 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.138485767 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.126277441 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134270286 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.125809714 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.134938808 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.129555162 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.157569199 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125311256 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.136534542 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.186656977 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.151611179 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.144109457 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.165772197 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.144872612 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.124203504 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.168689328 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.138436808 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.127720152 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.242169273 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154130074 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.142155647 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153355814 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.185002157 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.141284657 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.370129191 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.124828793 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.176538441 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.13954079 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152858824 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.151223699 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.12032836 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.142137558 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.117672575 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.138464955 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.188378984 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.139266174 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.12017017 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.143801527 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.131910629 seconds)
  done (took 32.333898187 seconds)
done (took 62.645494097 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.788745482 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.126717581 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.110087183 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107762027 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.131565963 seconds)
  done (took 2.016352429 seconds)
done (took 2.750483214 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.223403548 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.323309619 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.236855888 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.14815222 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.206568238 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.208061165 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.189284965 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.207926301 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.204287989 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.188590462 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.225705518 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.145673692 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.229811696 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.223880704 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.143284143 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.24470528 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.142701666 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.185632545 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.14385286 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.229884331 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.125423142 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.144111343 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.128267428 seconds)
  done (took 5.199842453 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.143767514 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.138421024 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.162953613 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.142114999 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.146872587 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.144697381 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160839797 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.146738911 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160415161 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.137879475 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.145446987 seconds)
  done (took 2.376539433 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.140955145 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.13711164 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.1532873 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.140281805 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.145566556 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.13928545 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157873009 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.147105718 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159358952 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.137527056 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.144880574 seconds)
  done (took 2.351920869 seconds)
done (took 10.661017578 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.225352958 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.913199158 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.196350458 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.30320811 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.371377812 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.313467655 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.667138607 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.249034532 seconds)
  done (took 16.094993365 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.160383943 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.14929168 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.244328696 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.13693536 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.152298068 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.131507854 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.155075586 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.137441919 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.151568506 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.134536312 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.13135553 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.147919788 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.131726947 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.152113896 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.135840039 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.149932613 seconds)
  done (took 3.209270048 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.177975216 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.177926187 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.13921484 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.158038113 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.138447494 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.157443695 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.143043469 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.158339478 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.13484543 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.153416506 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.144395807 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.15657005 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.13891578 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.151863027 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.139920516 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.1763058 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.134860865 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.156172863 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.157988387 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.15891092 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.139234605 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.155519986 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.138059177 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.157773694 seconds)
  done (took 4.456348814 seconds)
done (took 24.510365948 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.192652572 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.143645501 seconds)
  done (took 1.091311193 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.207410174 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.22597266 seconds)
  done (took 1.195541486 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.154743701 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.147271172 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.163249391 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.161104565 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.133361163 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.150174195 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.157543707 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.150243128 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.13202901 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.150706246 seconds)
  done (took 2.266950008 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.1370323 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.1530717 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.148608912 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.219908272 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.157963034 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.135692116 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.153317332 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.137008344 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.153535935 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.133066503 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.1537669 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.150662664 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.154351472 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.151916315 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.155344824 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.139255558 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.158452482 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.136150415 seconds)
  done (took 3.494933818 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.13272847 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.134452572 seconds)
  done (took 1.038408934 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.136996192 seconds)
    (2/7) benchmarking "second"...
    done (took 0.131930604 seconds)
    (3/7) benchmarking "month"...
    done (took 0.152700633 seconds)
    (4/7) benchmarking "year"...
    done (took 0.134088629 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.149957268 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.131313626 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.149203959 seconds)
  done (took 1.757129101 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.552071531 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.270303926 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.400212415 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104091309 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.155557212 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.3726418 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.156446291 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10633091 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104189786 seconds)
  done (took 3.017631152 seconds)
done (took 14.62426905 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.134126833 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.248490118 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.658321704 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.157223834 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.150418779 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.193981022 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.387681911 seconds)
done (took 2.709604832 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.373567546 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.209536842 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.1187709 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.13438769 seconds)
  done (took 1.606889256 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.126436259 seconds)
    (2/2) benchmarking "read"...
    done (took 0.139934764 seconds)
  done (took 1.045606917 seconds)
done (took 3.43366206 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.155141307 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.149991839 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.137814243 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.151368341 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.140348224 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.152342277 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.136324738 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.149665052 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.136957709 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.150291039 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.136514986 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.152853376 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.134260928 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.152503192 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134660979 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.15345918 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.137082097 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.267906345 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.135685341 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.152347027 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.136865659 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.149731471 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.137968662 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.15192309 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.137132173 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.152093224 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.135253372 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.14897935 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.137117996 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.152334595 seconds)
  done (took 5.230382089 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.1389287 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.127202768 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.150464106 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.139246478 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.147304626 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.13140421 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.14756688 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.132924376 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.151268818 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.132503442 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.150743471 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.133122236 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.149039833 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.134434554 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.150990989 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.136708586 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.139147583 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.150294042 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.131264946 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.151302899 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.135338299 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.150887973 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.131946946 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.149499807 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.132184407 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.147064232 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.132757524 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.148520982 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.134311703 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.130643638 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.152397243 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.135775296 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.149774842 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.143412511 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.153851059 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.132422216 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.156291872 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.129201276 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.154901053 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.130932921 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.146990689 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.132638375 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.148803489 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.139199964 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.149023908 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.133298655 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.149734613 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.135275233 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.131523289 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.154718906 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.129295003 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.152137014 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.135337043 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.151975891 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.137912859 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.147072334 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.133199969 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.147531889 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.134121176 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.150473115 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.130849531 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.130324394 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.155978704 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.132145086 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.166215899 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.138429405 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.152435446 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.13382875 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.153042925 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.138483392 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.155095631 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.142247559 seconds)
  done (took 11.010360466 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.135220338 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.13225788 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.151904862 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.132399379 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.15119709 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.133567125 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.151530722 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.133904248 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.150982188 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134098337 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.151132347 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.133876452 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.132850623 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.151957173 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.132186293 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.151952145 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.133396991 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.152398849 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.132718344 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.151762176 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.135271043 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.15076156 seconds)
  done (took 3.912402409 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.279581433 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.140100707 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.202343119 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.146499914 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.170640205 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.166662814 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.139655469 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.158002285 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.139103932 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.161750806 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.143542346 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158567162 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.152404856 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.16316181 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.143190415 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.163686737 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.156734736 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.146550829 seconds)
  done (took 3.728099223 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.135847094 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.133098629 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.153441859 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.133941124 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.153549554 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.133729156 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.153500176 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.133917518 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.154130074 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.133712115 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.153790996 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136481532 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.133482337 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153758589 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136318801 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.15377996 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.134199538 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153365313 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134043442 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.152173331 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.13450635 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.152656773 seconds)
  done (took 3.944220839 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150172658 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.155024323 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.154379199 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.158650971 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136981316 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.155032424 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.144839787 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.154926405 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.14326298 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.154855726 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.137793151 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.155270723 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.151611738 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.154849929 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.142367475 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.155992602 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.138001697 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.136336541 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.157065084 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.136174788 seconds)
  done (took 3.768695796 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.230765658 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.172677335 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.171775824 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.162579753 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.173066351 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.154515878 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.180484683 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.151011173 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.172754859 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.162900673 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.173114821 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.17147418 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.161833219 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.175781571 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.151985668 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.179884188 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.159336323 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.178971153 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.170629589 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.152848627 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.182539065 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.152203643 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.179562988 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.151732075 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.173155119 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.151937896 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.173554682 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.157582888 seconds)
  done (took 5.534153889 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.148037401 seconds)
    (2/2) benchmarking "in"...
    done (took 0.164056965 seconds)
  done (took 1.116795788 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.137413145 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.137659195 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.157580583 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.136744274 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.157567383 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.136858465 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.157294583 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.137442617 seconds)
  done (took 1.962061935 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.248427541 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.255856907 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.140835996 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.170091671 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.252979866 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.231840306 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172133132 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.163282286 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.135102445 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.150943218 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.24691415 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.127987784 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.157223066 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.133940496 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.157822863 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.14241804 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.158847295 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.144939171 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.1629328 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.138419557 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.16129614 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.140692542 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.157988038 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.147008638 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.15231497 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.138575374 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.160092634 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.14757121 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.154582716 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.146361978 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.155947764 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.136800148 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.160887987 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.141396542 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.157798418 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.253583434 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.143249571 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.155156602 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.136655925 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.16316153 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.166706604 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.159215289 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.1376263 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.15588323 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.140300104 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.161421994 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.141467152 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.158579314 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.130039022 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.15208135 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.138482554 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.152978392 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.137570985 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.15725191 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.136760688 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.162773283 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.139314713 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.153211732 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.133221201 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.15222264 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.13654823 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.152550405 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.139543094 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.159908603 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.138962714 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.158671714 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.136937945 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.157694565 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.138007424 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.158312799 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.137979278 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.171502675 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.139478422 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.160629505 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.144771133 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.157171454 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134540922 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.161994832 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.137312224 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.157201974 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.143071336 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.184041421 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.140723551 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.153110951 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.133911652 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.16358875 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.139948034 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.161208908 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.131218083 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.164627778 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.140863024 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.158348558 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.133082496 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.135305404 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.154839942 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.139598758 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.151308207 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.137966637 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.157535885 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.142791132 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.163811543 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.135345144 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.159599764 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.143899374 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.164137912 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.13700108 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.2085034 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.155035008 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.134434763 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.158897022 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.144025857 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.152473718 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.138335119 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.136647544 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.155966272 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.133192007 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.162618374 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.137996109 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.159931791 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.142182955 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.160037739 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.138840002 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.160650806 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.136963018 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.155296005 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.142284574 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.167590166 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.139632491 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.160370254 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.138808015 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.158749447 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.147635185 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.162489587 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.136484674 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.163301143 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.135797925 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.158225987 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.140390898 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.163884388 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.140497266 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.153766271 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.136987601 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.160101994 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.137339113 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.161149892 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.140232987 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.154833167 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.131329969 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.158497459 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.135767055 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.160085651 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.147931241 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.154078113 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.14175399 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.154298253 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.149107718 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.154373471 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.145122505 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.162217556 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.145234739 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.162949562 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.132416489 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.135335786 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.162709238 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.139495043 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.156860031 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.139105189 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.160694247 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.146516397 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.152981255 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.143507634 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.151908772 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.135539582 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.165379969 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.140235082 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.162265536 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.1356331 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.19479579 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.151109788 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.165949385 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.137925709 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.158487124 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.143198866 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.158272222 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.143248523 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.16501875 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.143808999 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.156721815 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.138866542 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.165228553 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.136255525 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.161025435 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.138919551 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.159672749 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.132914458 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.160255505 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.132898465 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.162746464 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.14430166 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.162107277 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.145477508 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.139911088 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.158767466 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.146702175 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.156002938 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.141624504 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.153525738 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.142596415 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.170278497 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.144883508 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.166073493 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.14028404 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.158806368 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.140795488 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.168775723 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.141332846 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.159889187 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.141069335 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.155003719 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.133684947 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.165103956 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.142154181 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.155237059 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.140670682 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.160254596 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141926358 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.157850311 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.133506502 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.164507092 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.142863977 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.155006513 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.141961768 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.155890844 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.139487221 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.165119112 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.134376375 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.156509986 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.142742454 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.163606978 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.140094281 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.158143016 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.143252854 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.164670242 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.143074409 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.14002004 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.158668222 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.147408899 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.15856346 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.138830643 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.157200787 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.141914485 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.154481237 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.140575977 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.159686577 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.136450941 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.156953618 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.142249025 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.166337424 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.145268334 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.15941692 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.144573063 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.165830096 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.145474085 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.156825599 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.145915134 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.156064469 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.134293055 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.155668609 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.133707855 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.162666146 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.137527405 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.165206832 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.13937338 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.159030209 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.146411146 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.161403974 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.138635158 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.164224096 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.151243674 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.154296227 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.134010756 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157573739 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.141103139 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.157206793 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.137498211 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.160904889 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.142397577 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.167111683 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.143308727 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.156201357 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.141409463 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.16529176 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.138449379 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.145358569 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.167597151 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.144990645 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.157217269 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.144534441 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.159150755 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.143573285 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.155523688 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.13982232 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.160596889 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.139573266 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.15948732 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.137536554 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.157524292 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.134292217 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.157227327 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.1460442 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.159469162 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.143849996 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.160708356 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.137723589 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.159177435 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.137057303 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.165955112 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.139026827 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.165865506 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.142094816 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.154406996 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.134561804 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.165998693 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.141560739 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.167341602 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.137134617 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.163538814 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.147385432 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.163620807 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.143204593 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.147817749 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.171109539 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.145324974 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.167029341 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.133288458 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.160039975 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.143651856 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.161615315 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.142940453 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.163890953 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.135095252 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.164037271 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.147410575 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.162905841 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.138903698 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.155120285 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.142660111 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.169405969 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.144921572 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.165042077 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.143600593 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.162787531 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.138087322 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.165840712 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.147988023 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.162618515 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.149977033 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.162626546 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.147216766 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.158342831 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.148360556 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.163151613 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.13797865 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.135028414 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.16013419 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.14734674 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.158171581 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.146982029 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.168225652 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.138869824 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.162240534 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.14688488 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.160605828 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.143937298 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.170124706 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.140401304 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.17370037 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.14359326 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.161352292 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.147273336 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.168835297 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.138377513 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.162367365 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.141980974 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.170030909 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.141540904 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.167116364 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.143741254 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.168788154 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.145667825 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.167171468 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.147824175 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.167267989 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.137697678 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.147803152 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.168100148 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.144775603 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.160458184 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.140182072 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.15858099 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.141774104 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.170600256 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.139769659 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.172247253 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.146754695 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.161884553 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.139963329 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.169585811 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.14202232 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.170666884 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.139046802 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.166353207 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.137486548 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.166046255 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.141695672 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.171002402 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.139256047 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.159574901 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.149116728 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.17011423 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.147539362 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.167805137 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.150183554 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.157254215 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.137118834 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.166989811 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.141696022 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.173937761 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.146295839 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.162908147 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.142432638 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.165776877 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.146342562 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.170297773 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.139211278 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.139453558 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.166695849 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.165391563 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.142283038 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.13801797 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.170441018 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.141858263 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.166949233 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.142675476 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.160641028 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.142358605 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.172573831 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.14096618 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.162700717 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.141471761 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.171559876 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.142157952 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.162208896 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.138264579 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.170005697 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.1447418 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.172587729 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.14042491 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.164991931 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.141110053 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.168399418 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.150182925 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.163640712 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.143639425 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.163858966 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.149513845 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.169467431 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.137222548 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.161762889 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.154048919 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.17188785 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.146644207 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.168356814 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.142703831 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.171709056 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.151666912 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.1680023 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.138691101 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.1590124 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.144318562 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.158274735 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.148579299 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.168511443 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.143991146 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.161764286 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.149260811 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.148087058 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.169942421 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.146721661 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.161400622 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.152445363 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.162929937 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.147364899 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.160109536 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.13809745 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.169355265 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.150528639 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.165402458 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.144687463 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.167395729 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.147311052 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.160103599 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.142362727 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.169675138 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.149920461 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.171147252 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.144770854 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.162829505 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.148430118 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.174461152 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.146885229 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.16306494 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.152236188 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.171243005 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.146934467 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.163831588 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.149251522 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.171949589 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.147788905 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.149888823 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.164368179 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.143191812 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.174800161 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.15204196 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.174724104 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.164646495 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.139722796 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.148177083 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.164360985 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.139463475 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.171436954 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.152136595 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.173098828 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.144214568 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.165215423 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.153911192 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.170705436 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.145139686 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.164397791 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.142754117 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.171663869 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.14203971 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.169884732 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.142915101 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.17425086 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.152031135 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.172502174 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.153266627 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.160798311 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.150269109 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.168614808 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.155061268 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.167517182 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.139987075 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.161746266 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.149077058 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.172624256 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.152442849 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.16984597 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.150609515 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.148506594 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.168870078 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.145441051 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.166176509 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.152814056 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.172836783 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.147679394 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.169585601 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.144524524 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.168331322 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.147917343 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.177271426 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.153002138 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.169096364 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.15646899 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.172132783 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.144131178 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.165012045 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.146946968 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.171176656 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.146764124 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.172782517 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.144282873 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.162175162 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152356316 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.175363571 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.14539747 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.175506257 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.154049408 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.166359773 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.14898368 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.176283171 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.150760303 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.169756783 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.148395407 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.149382683 seconds)
  done (took 92.390097863 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.19556195 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.179054124 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.148437941 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.170788269 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.166812972 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.172590384 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.148606048 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.170649075 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.149998544 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.179732841 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.148981166 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.17102119 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.163421899 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.190334329 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.18648824 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.158498857 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.171834142 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.151987345 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.147881445 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.172067831 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.184597357 seconds)
  done (took 4.433290016 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.150597014 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.148099489 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.170899805 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.149161217 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.171221005 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.147620797 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.170463297 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.148160461 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.169948287 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149179096 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.168797652 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.150542049 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.147370207 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.171589907 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.149061414 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.171171278 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.149615884 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.172245786 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.149300201 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.170849799 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.149653388 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.170089227 seconds)
  done (took 4.396022706 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.177043394 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.151716779 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.170295049 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.14929587 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.175134072 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.149292239 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.175423634 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.149410131 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.181707674 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.145180892 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.163099651 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.144997279 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.170325151 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.149748792 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.164809017 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.150896493 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.178894187 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.154233859 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.175908892 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.150557065 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.140205189 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.17310651 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.150328405 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.164397931 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.153952888 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.176915654 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.152826627 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.174935863 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.141547259 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.175184358 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.150136271 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.164612762 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.142266834 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.14039404 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.162979873 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.151970932 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.175905469 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.149642702 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.173518295 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.141103698 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.172879735 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.153100475 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.162995029 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.150794734 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.173241304 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.144429051 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.175643216 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.151736544 seconds)
  done (took 8.575352704 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.179636251 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.210725051 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.154849649 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.204665482 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.187872494 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.160852926 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.177180631 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.179609362 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.175203564 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.153939409 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.190285232 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.163450953 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.178856962 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.158482444 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.17677639 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.154902729 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.177922066 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.153315097 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.180818595 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.15414998 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.181280734 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.154762417 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.186521415 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.186118221 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.15632379 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.17438272 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.154519928 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.17850119 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.164140147 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.181375369 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.157092882 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.181488373 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.16486475 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.178181877 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.154245802 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.177863889 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.164979429 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.178585978 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.155369828 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.176057095 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.1552629 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.179866937 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.155268767 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.190048469 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.17988314 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.156560132 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.175867406 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.153658157 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.185345287 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.156139967 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.182733503 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.164875366 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.18010796 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.155413409 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.180955344 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.163560115 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.178106797 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.153501084 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.180899401 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.163583791 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.177382822 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.156047078 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.186718996 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.177522155 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.162744508 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.187023154 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.157017453 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.179125642 seconds)
  done (took 12.6524051 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.185943547 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.181131902 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.166019506 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.189396431 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.158282697 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.182463636 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.157318818 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.182051851 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.158262514 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.186660538 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.158223962 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.556994573 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.162217066 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.185826284 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.159959028 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.183497078 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159516654 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.180973782 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.159288691 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.181044251 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.158833676 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.190292424 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.158023726 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.18891704 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.191444178 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.157159859 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.180225502 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.159278565 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.18853012 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.158339409 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.19272367 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.15854125 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.181301617 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.166702763 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.192728559 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.181642442 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.153535376 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.179828175 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.159864323 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.180633515 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.155879669 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.188325275 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.159350082 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.177751584 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.158025403 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.180964772 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.16673964 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.192201537 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.162218324 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.18597295 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.180258746 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.165862432 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.182095432 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.158613955 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.188675739 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.171731684 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.190885727 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.18919473 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.158775428 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.188686634 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.166660789 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.196206795 seconds)
  done (took 12.106805901 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.154442336 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.153579726 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.175774517 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.152951852 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.177239229 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.152998995 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.176752365 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.153750836 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.176324447 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154898399 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.175941577 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.154665339 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.176743914 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.155077891 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.154483612 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.178174054 seconds)
  done (took 3.560363437 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.171968726 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.193765352 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.257703162 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.158450107 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.177501133 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.161328197 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.17830815 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.156980507 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.154054227 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.185281802 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.158018488 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.18002869 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.194713308 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.157201485 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.154252507 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.180916022 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.153695173 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.182606322 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.154675326 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.258757974 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.183256683 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.156623408 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.182828347 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.157205396 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.182749775 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.158246939 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.185168938 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.155208774 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.182184131 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.156634373 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.180113826 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.160644591 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.177522435 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.15967226 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.178634448 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.156446012 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.179356747 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.155930025 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.18061389 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.155710304 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.180904499 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.157265599 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.179568575 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.158504933 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.177086137 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.157621022 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.175579032 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.161323936 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.179292004 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.158706075 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.156370164 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.184950684 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.160525441 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.187040615 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.184554684 seconds)
  done (took 10.453661391 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.166650522 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.180418125 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.168763989 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.177538777 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.158612698 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.156820081 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.182217096 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.157394666 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.181134556 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.153535096 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.182695858 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.157283059 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.183394062 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.156831186 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.182001566 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.15698798 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.178548124 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.15785024 seconds)
  done (took 3.983002797 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.155299917 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.153165427 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.180065077 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.154405109 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.179059013 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.153795675 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.178647369 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.155243764 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.17781954 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.15501664 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.177386803 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.155107154 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153871662 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.179545387 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.155512862 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.179186893 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.154051573 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.178600365 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.155405936 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.178297463 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.155065599 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.177450219 seconds)
  done (took 4.594537965 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.167418007 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.28175231 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.186828716 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.293494795 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.153226958 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.177385895 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.160824222 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.179498663 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.169503818 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.176904898 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.151037782 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.175067304 seconds)
  done (took 3.22243499 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.184399357 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.215184207 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.157607612 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.181628055 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166631316 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184467941 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.160654299 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.18484676 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168375462 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19692155 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.16011226 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193789168 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194007143 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169571982 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19153553 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165384439 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1855597 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.160993028 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.182158988 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17484039 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.185673122 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192719829 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162401937 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.183678804 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163109918 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193029854 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169153423 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19667948 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162077175 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193055276 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.188937015 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164011918 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192114235 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172669584 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.182292944 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168416179 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187366983 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.176584257 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190309047 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192821168 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159744266 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188990374 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.17004823 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190961784 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1692035 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186072126 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.167237887 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.186192043 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.16168725 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.204841691 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190688844 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.171222612 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191853308 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170054936 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192397091 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.206261634 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.173308841 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193438286 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.165482566 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196857924 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195407601 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167116084 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19596675 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171881773 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.190928539 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191739676 seconds)
  done (took 12.906609074 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196212382 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.182688175 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164152648 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198211938 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170040548 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.18753544 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162009639 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186459675 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.162195277 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.183981846 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.228756744 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163070388 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194091092 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17042258 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187303986 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163068083 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187767243 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169874745 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.183608544 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.205918364 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163708528 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195573124 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171846434 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194511117 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195986166 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16724941 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187162348 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163258261 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.186148951 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163859175 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192825149 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163464921 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195672229 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159313136 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194906559 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.161733206 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188334913 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168078217 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188055129 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.190455993 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.172926878 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.20137498 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163120603 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187072463 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173812885 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188211714 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163164673 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.185531066 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162903886 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.184400754 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197516737 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175470568 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199304046 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171277716 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189148844 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163635683 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188561479 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163800997 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.187983192 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191408768 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.17361265 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.187659269 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.183185446 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.188715688 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.163454096 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195806184 seconds)
  done (took 12.908715417 seconds)
done (took 227.170323691 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.232442617 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.272080898 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.255786088 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.23900651 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.149319756 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.209186238 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.182508474 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.25620751 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.174526733 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.150606861 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.173989513 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.154038233 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.240644987 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.152252741 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.149147807 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.176461127 seconds)
  done (took 4.133535626 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.25248937 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.421607594 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.168833551 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.176126168 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.158381104 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.178245292 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.153922157 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.154660659 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.179456061 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.181755166 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.157331739 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.150782932 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.18472817 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.173527304 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.156905009 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.154486335 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.18486003 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.175622123 seconds)
  done (took 4.34715909 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.177274498 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.22954183 seconds)
  done (took 1.387660121 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.184582271 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.271737209 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.377447369 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.229287747 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.175994377 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.197542649 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.203463653 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.192392343 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.268987069 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.166940712 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.192748604 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.153088043 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.205728117 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.184799129 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.171626364 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.176787705 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.183535979 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.195154566 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.168787735 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.180764677 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.179181514 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.18420904 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.16028393 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.196496007 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.259255454 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.170777094 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.183409845 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.158652228 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.182167509 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.16904489 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.187321935 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.169753151 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.192218717 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.237507157 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.158354914 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.233569227 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.186768304 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.155609034 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.194385473 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.154955599 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.183873801 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.159464133 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.193082793 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.177544715 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.160174559 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.185475053 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.160590324 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.181790645 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.1647551 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.187207745 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.163709016 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.187452888 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.231704256 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.161838247 seconds)
  done (took 11.278748995 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.968055435 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.204214098 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.180779414 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.12218111 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.202594617 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.169787304 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.96312911 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.181572741 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.311860398 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.009815144 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.174035889 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.18845532 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.301284262 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.340392588 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.340161413 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.441294664 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.822737793 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.167946707 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.212095477 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.223316386 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.163354014 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.198657175 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.171771914 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.504370563 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.180613749 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.156858983 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.184892855 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.165024547 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.236629602 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.180462264 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.161478495 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.260209347 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.355030762 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.273982327 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.18207015 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.154866412 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.180206994 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.248896386 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.329804579 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.277503795 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.249658703 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.154494786 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.181123312 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.183431427 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.172982821 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.177329882 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.241016403 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.227634184 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.252943479 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.186398005 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.189381346 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.165136013 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.1841869 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.238820313 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.156366323 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.420613683 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.450363835 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.155358653 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.187835478 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.191052508 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.329108471 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.157569967 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.321000037 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.179191641 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.274867565 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.181437179 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.858197401 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.248478245 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.179904791 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.161860248 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.186492431 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.16335101 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.186368392 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.21783203 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.481789339 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.188082856 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.161018939 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.18217575 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.289484089 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.157100075 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.181834994 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.24068773 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.157560609 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.18909758 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.165601715 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188586481 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.252343263 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.334948948 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.164114794 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.187965593 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.161844463 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.193021682 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.181905674 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.267921361 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.314694837 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.238283374 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.29064953 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162905911 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.243562118 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.247265661 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.187527129 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.249548004 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.162712451 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.194192921 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161166235 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.311029775 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.193429975 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.185276424 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.162677461 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.190737313 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.220680926 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.161754089 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.189493511 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.249600036 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.543651605 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.245889998 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.155555396 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.187571478 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.183555744 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.239618251 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.189183205 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.323078724 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164128833 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.246800937 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.188887148 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.154526144 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.189457612 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.243838061 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.164562687 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190528838 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.161382673 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.191355898 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.34164994 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.281851065 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.192645308 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.307620334 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.258409047 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.164431804 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.253737783 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190526533 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.246765877 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.167672439 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.187440875 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.158146717 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.886908384 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.17092397 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.187902386 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.165142928 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.265888491 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.158282069 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.186918322 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.156959275 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.182116246 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.855602517 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.185103357 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.158628761 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.159892679 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.190223073 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.18793144 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166182027 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.187981866 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.241833826 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310936119 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.192642793 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.163304146 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.18181509 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.214139242 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.186753357 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.158501929 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.184369186 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.159316977 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.194047232 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.162251709 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.187733789 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.253131212 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.239358371 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.29325049 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.628065901 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.184324068 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.158615002 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.329032414 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.158077155 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.41058217 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165953226 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.322287213 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.243841832 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.15767913 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.422838407 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.24543568 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.26708103 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.186562062 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.229147506 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.183106036 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.163395499 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.243749642 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.185617389 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.164192737 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.238994219 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.194265136 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.18966064 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.326293169 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.159878361 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.307999292 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.182071757 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.251376869 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.160096336 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.189803466 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.390345238 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.182518252 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.17234112 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.241414638 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.187849726 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.160269892 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.949865902 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.184744164 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.168322452 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.189341256 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.298430966 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.24510156 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.189681942 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166829455 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.194107296 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.246406474 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.290063143 seconds)
  done (took 60.95714993 seconds)
done (took 83.080023377 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317824843 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.225940603 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.418271835 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.233698713 seconds)
  done (took 2.27007827 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.34353782 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.198341912 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.300246421 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.184145972 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.307678791 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.157657898 seconds)
  done (took 2.524292719 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.230801906 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.225827949 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.225164736 seconds)
  done (took 1.718419919 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.267111761 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.268441329 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.406432411 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.320232622 seconds)
  done (took 2.352031218 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.336330758 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.176249857 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.214654671 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.287591878 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.303288567 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.268289983 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.182245522 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.234392027 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.214843312 seconds)
  done (took 3.283778475 seconds)
done (took 13.176721914 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.470105312 seconds)
    (2/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.44237483 seconds)
    (3/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.264829975 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.321848959 seconds)
    (5/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.19958816 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.196627658 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.199864592 seconds)
    (8/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.170367615 seconds)
    (9/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.410579096 seconds)
    (10/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.409069897 seconds)
    (11/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.360480967 seconds)
    (12/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.355556597 seconds)
    (13/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.192380679 seconds)
    (14/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.161231606 seconds)
    (15/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.261038153 seconds)
    (16/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.307835655 seconds)
    (17/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.394100325 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.21011834 seconds)
    (19/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.455249512 seconds)
    (20/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.484431924 seconds)
    (21/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.212300531 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.192031612 seconds)
    (23/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.371484879 seconds)
    (24/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.299125119 seconds)
    (25/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.391176141 seconds)
    (26/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.269103634 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.185464018 seconds)
    (28/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.250163725 seconds)
    (29/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.140712237 seconds)
    (30/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.301579831 seconds)
    (31/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.165785677 seconds)
    (32/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.228799975 seconds)
    (33/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.298436973 seconds)
    (34/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.196891728 seconds)
    (35/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.20992446 seconds)
    (36/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.197209925 seconds)
    (37/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.146565705 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.213426162 seconds)
    (39/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.188626292 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.186562481 seconds)
    (41/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.136148249 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.170007722 seconds)
    (43/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.269762656 seconds)
    (44/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.132714223 seconds)
    (45/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.227805086 seconds)
    (46/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.239569152 seconds)
    (47/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.410411059 seconds)
    (48/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.208282841 seconds)
    (49/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.191974831 seconds)
    (50/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.13025588 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.201422961 seconds)
    (52/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.181844004 seconds)
    (53/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.196762452 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.181767807 seconds)
    (55/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.22008937 seconds)
    (56/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.129827473 seconds)
    (57/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.134869036 seconds)
    (58/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.126865993 seconds)
    (59/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.215211027 seconds)
    (60/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.165632934 seconds)
    (61/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.198651658 seconds)
    (62/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.134640376 seconds)
    (63/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.286901568 seconds)
    (64/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.216507281 seconds)
    (65/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.195788655 seconds)
    (66/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.136020439 seconds)
    (67/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.24801897 seconds)
    (68/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.240129628 seconds)
    (69/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.201139894 seconds)
    (70/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.169611652 seconds)
    (71/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.160172603 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.179688981 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.189526545 seconds)
    (74/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.181092722 seconds)
    (75/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.18301182 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.208492993 seconds)
    (77/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.128159943 seconds)
    (78/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.130060045 seconds)
    (79/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.197721931 seconds)
    (80/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.130425035 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.207028142 seconds)
    (82/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.171763462 seconds)
    (83/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.131438991 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.209496193 seconds)
    (85/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.168273075 seconds)
    (86/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.198412452 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.165420128 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.21051846 seconds)
    (89/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.131037124 seconds)
    (90/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.223637867 seconds)
    (91/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.189150381 seconds)
    (92/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.191210977 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.18990299 seconds)
    (94/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.1356023 seconds)
    (95/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.18858264 seconds)
    (96/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.136278782 seconds)
    (97/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.1855905 seconds)
    (98/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.218061319 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.160955454 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.197155378 seconds)
    (101/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.132451689 seconds)
    (102/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.12833252 seconds)
    (103/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.129167263 seconds)
    (104/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.163784096 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.163520305 seconds)
    (106/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.128516343 seconds)
    (107/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.154636774 seconds)
    (108/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.186306792 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.19937703 seconds)
    (110/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.130393747 seconds)
    (111/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.134753728 seconds)
    (112/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.13485856 seconds)
    (113/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.227210038 seconds)
    (114/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.189600088 seconds)
    (115/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.199234624 seconds)
    (116/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.171818428 seconds)
    (117/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.13125887 seconds)
    (118/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.222750113 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.164683651 seconds)
    (120/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.156342437 seconds)
    (121/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.178866321 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.19594028 seconds)
    (123/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.130202032 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.163381531 seconds)
    (125/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.193114572 seconds)
    (126/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.13325696 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.188892596 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.165440311 seconds)
    (129/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.135925316 seconds)
    (130/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.164337658 seconds)
    (131/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.135255329 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.163849187 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.21076507 seconds)
    (134/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.183365078 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.212228874 seconds)
    (136/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.137239659 seconds)
    (137/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.129477778 seconds)
    (138/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.138955309 seconds)
    (139/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.199753824 seconds)
    (140/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.167448459 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.198667722 seconds)
    (142/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.230110966 seconds)
    (143/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.285300107 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.194704368 seconds)
    (145/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.132935899 seconds)
    (146/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.131996325 seconds)
    (147/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.160533403 seconds)
    (148/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.13402703 seconds)
    (149/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.131092019 seconds)
    (150/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.136148807 seconds)
    (151/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.253309936 seconds)
    (152/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.212487915 seconds)
    (153/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.158801549 seconds)
    (154/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.16610562 seconds)
    (155/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.135291506 seconds)
    (156/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.16383047 seconds)
    (157/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.162177327 seconds)
    (158/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.132184127 seconds)
    (159/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.192208381 seconds)
    (160/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.192759638 seconds)
    (161/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.163323353 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.163661524 seconds)
    (163/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.132373746 seconds)
    (164/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.156934551 seconds)
    (165/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.17183072 seconds)
    (166/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.187362443 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.172359558 seconds)
    (168/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.132522369 seconds)
    (169/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.189719657 seconds)
    (170/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.131265854 seconds)
    (171/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.20356583 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.186555567 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.193513016 seconds)
    (174/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.16400214 seconds)
    (175/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.132595842 seconds)
    (176/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.155228468 seconds)
    (177/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.132681188 seconds)
    (178/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.16885611 seconds)
    (179/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.161018102 seconds)
    (180/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.164910846 seconds)
    (181/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.136859653 seconds)
    (182/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.156585136 seconds)
    (183/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.132610928 seconds)
    (184/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.172997209 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.210727915 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.164209638 seconds)
    (187/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.191851841 seconds)
    (188/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.130921677 seconds)
    (189/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.164145385 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.19283374 seconds)
    (191/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.187069459 seconds)
    (192/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.160186641 seconds)
  done (took 38.649245411 seconds)
done (took 39.687768956 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.31542831 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.156186412 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.171123087 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.200509366 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.297635823 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.179532607 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.217935396 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.172616085 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.211272397 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.17168971 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.189356342 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.183943433 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.198582375 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.309413997 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.173749958 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.194011054 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.161062031 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.211001693 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.186739878 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.215330385 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.298769138 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.16581536 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.211023622 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.162658115 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.297410446 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.194907746 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.171415443 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.200888884 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.184935388 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.201076826 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.172061266 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.191331524 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.186305675 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.216179585 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.162905352 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.19913936 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.162049936 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.161846489 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.174425533 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.171432065 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.212298435 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.172016567 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.201228872 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.189343491 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.175418187 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.170880738 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.190397117 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.17488879 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.19100739 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.172572713 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.193058838 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.187433961 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.199926681 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.162023816 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.190586387 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.164360287 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.211779864 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.162830553 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.216290703 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.163278026 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.191962609 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.163350382 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.200956769 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.163961423 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.199436394 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.164094191 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.200039195 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.175253152 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.198119189 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166006794 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.18974906 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.173576333 seconds)
done (took 14.986963077 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.17130244 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.233725951 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.315911542 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.32021153 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.190908355 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.210719812 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.205512587 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.18881591 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.202106986 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.183070906 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.229072286 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.196065156 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.318345929 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.212106232 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.179754842 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.206572288 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.176422853 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.200606167 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.316976552 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.216224913 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.192395625 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.209153553 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.190802126 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.210007921 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.169398218 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.228228185 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.170879412 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.203852948 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.168256313 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.20445945 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.188763808 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.197036578 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.170301964 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.214013179 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.185070462 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.20680479 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.180014442 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.206109869 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.168421836 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.19719414 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.201626478 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.185260011 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.195565372 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.182749356 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.203367481 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.184925611 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.202649722 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.182922563 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.1965868 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.178031368 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.194979264 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.194984223 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.208892486 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.18442848 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.208389768 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.181840791 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.208496485 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.182759064 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.199726026 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.182670924 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.196362051 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.169997595 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.19608534 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.189454679 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.200821697 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.181958544 seconds)
  done (took 14.421599004 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.197961487 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.226374946 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.180506334 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.207668308 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.175763692 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.191540349 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.163969524 seconds)
  done (took 2.461645786 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.169184084 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.333550795 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.32124588 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.323447556 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.312291878 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.36169809 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.189357948 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.194542686 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.20233397 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.206726987 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.334304034 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.388917403 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.20805914 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.180905547 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.355274857 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.166804591 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.328870312 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.195435048 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.182217934 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.325340324 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.213481756 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.198849658 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.208543489 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.165607512 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.357425271 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.16859169 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.375717122 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.215766055 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.17579065 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.211264156 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.179686118 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.271844904 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.3275471 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.211744105 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.174335158 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.326667309 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.315263065 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.212390277 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.370894721 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.201006148 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.315099986 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.211041502 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.183662182 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.209585172 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.182425084 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.31334243 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.215176525 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.182713249 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.209684346 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.341791229 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.177833159 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.327887296 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.209619464 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.180174588 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.208994943 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.182433115 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.218932938 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.207930073 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.337789254 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.186227382 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.324851784 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.325721099 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.319641066 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.358249258 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.19164972 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.330514585 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.30767446 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.210121832 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.175930961 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.213036797 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.329210998 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.179252683 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.210355032 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.318172304 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.212655603 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.331286751 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.33112884 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.179156651 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.2106022 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.170456942 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.210947077 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.167657354 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.31783979 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211877153 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.178435051 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.217031649 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.179866727 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.211469629 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.171851602 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.219291574 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.208199381 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.180899121 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.215849655 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.182753966 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.212288867 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.333721139 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.17838246 seconds)
  done (took 24.719604219 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.17269731 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.167106725 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.201694224 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.167988541 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.198419994 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.167989588 seconds)
  done (took 2.232244058 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.20819526 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.212113077 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.192596629 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.210975642 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.230345702 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.318305282 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.326218857 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.208975108 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.199589417 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.224506552 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.321828146 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.324496712 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.323118394 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.215908671 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.325774249 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.18535269 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.330115862 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.210754035 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.191398501 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.211760727 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.181508487 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.218020531 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.179721179 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.31116408 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.214830811 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.184783484 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.208787445 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.194181048 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.221118552 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.176441781 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.21589582 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.181897363 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.204018612 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.203465189 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.328767925 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.175820193 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.207771743 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.18781278 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.214273966 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.18541869 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.325307568 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.210684962 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.191039098 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.217774551 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.177650733 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.206460612 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.185900945 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.206460053 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.330431754 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.185509065 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.217300818 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.183400557 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.215263617 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.186192322 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.205139495 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.206065311 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.189664761 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.33156025 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.220071491 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.176615266 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.216846361 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.184774893 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.208962816 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.188019161 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.21483577 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.187251256 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.206916396 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.184623547 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.213099096 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.184069287 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.216824988 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.184795078 seconds)
  done (took 17.082416138 seconds)
done (took 62.020644945 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.687170205 seconds)
  done (took 2.840339403 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.170784986 seconds)
  done (took 2.326844426 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.845740091 seconds)
  done (took 20.036129804 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.504655864 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.420119136 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.09242132 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.243600321 seconds)
  done (took 3.416855105 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.185023599 seconds)
  done (took 2.355987518 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.481605028 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.346781249 seconds)
  done (took 1.992395961 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.869219473 seconds)
  done (took 2.048842035 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.97991232 seconds)
  done (took 3.144473889 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.364157481 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.287070863 seconds)
  done (took 1.831814018 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.732996563 seconds)
  done (took 1.914734479 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.637056151 seconds)
  done (took 18.820822328 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.321931511 seconds)
  done (took 1.504117458 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.359920559 seconds)
  done (took 1.544545224 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.876840833 seconds)
  done (took 5.067275665 seconds)
done (took 70.015929611 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.188274291 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.214115357 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.188608831 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.212251362 seconds)
  done (took 1.972223144 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.192752724 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.182136081 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.217588633 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.18170942 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.219161948 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.182147814 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.21281994 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.185031979 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.214673249 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.184035134 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.213884391 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.181433547 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.218094494 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.182051013 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.21287742 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.186392697 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.217077325 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.183304525 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.215810264 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.184356894 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.21594408 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.185376577 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.217057211 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.188123434 seconds)
  done (took 5.954809965 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.184973452 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.173375259 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.207729559 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.172504269 seconds)
  done (took 1.929127649 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.195814985 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.224115511 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.195256115 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.219473091 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.198091741 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.224798489 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.18283589 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.211851521 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.184519763 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.220091047 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.199325627 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.228018521 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.194772044 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.217759535 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.192543968 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.210244683 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.185324405 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.225690083 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.190181936 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.224005651 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.183740753 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.222241949 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.187578812 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.223628857 seconds)
  done (took 6.140338377 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.263061804 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.226692654 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.210648085 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.261009937 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.242113191 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.184896277 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.240371489 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.190168037 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.220508348 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.193068965 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.21355935 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.232378433 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.219877821 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.18741224 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.215641388 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.19029019 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.223919047 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.194524109 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.257223492 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.217063776 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.191794501 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.224207212 seconds)
  done (took 5.993007351 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.191208184 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.203303786 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.1754874 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.200663087 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.18937925 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.2068974 seconds)
  done (took 2.357901658 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.17857194 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.16877244 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.201328675 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.169228712 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.204319977 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.170176668 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.199029918 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.169831513 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.198923341 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.170452192 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.198702782 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.17042677 seconds)
  done (took 3.39415543 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274063413 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218958291 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.350329117 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.468022784 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262529474 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.254917263 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.355659264 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.256228323 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.276136023 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23120489 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248977122 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259660254 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249432488 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252826634 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.240443076 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.246136188 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239221273 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.306770785 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241284942 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310207254 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250743059 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.242741203 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.286101466 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246031566 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207315958 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259771023 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.214876557 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195500978 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264913227 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2606564 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272518384 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219106424 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240726492 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282780094 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32796461 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276037686 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.362993227 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201019348 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.263601328 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.28877953 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.327194611 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237275844 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288111847 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219264615 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225828718 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287750419 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217638988 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.284573548 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.230915188 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211871146 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280021783 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27874662 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.265576789 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20406771 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.404624499 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237107107 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.238398332 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244688518 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286154755 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299180224 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278417947 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.189830425 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.2695363 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287568133 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312689554 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.238665057 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.230207836 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222306552 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262719023 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.304155717 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248591807 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257569765 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.289367593 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230436636 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238039907 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.26330988 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254322076 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306010282 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266433043 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.188670501 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248108506 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201593653 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223428691 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.256795853 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22055591 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.314265522 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197961835 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.270598517 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275165578 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219074786 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260560578 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260052622 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260548915 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214565623 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.189186628 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210254321 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.256588775 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253755453 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19671468 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249371446 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207582961 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.224310089 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249416842 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.191014164 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26819018 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.192486419 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258159574 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26930785 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.200070065 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279194721 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245026969 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.229909334 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267319818 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293928579 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19740122 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.231227309 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317442812 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269595456 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.202623462 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.269550549 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.294741881 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.240579755 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203617932 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265468256 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293234845 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211406213 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298677716 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237997933 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201450548 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.228248159 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271806003 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.226416432 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.260271714 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224240666 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.233297614 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285605383 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.22657092 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206273508 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282147401 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232281702 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192310209 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236642313 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202342281 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.24264126 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.249468315 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.206354034 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252768875 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264749938 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235163773 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25681094 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233037874 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240716994 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231843798 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.267110433 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216044792 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.218315681 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.272557215 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263933283 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.229703791 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28222297 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.228372896 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280480849 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271354339 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230029601 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250222252 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.228189842 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.187926901 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260714089 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.268952218 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263846191 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.288181898 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273370727 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.23234917 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.264164528 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250657294 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269057399 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.252431541 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25563607 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.238731196 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.239659387 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269425812 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.219485243 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.190586387 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.226795461 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204651094 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229837816 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204578389 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280725712 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265235684 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272689635 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.267519983 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20581933 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.291023111 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.224277333 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227754102 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.275849394 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237896034 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.25665673 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28945287 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282652704 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240175234 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231620306 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.221299999 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192625054 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.234154637 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.260013721 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20494345 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.237162072 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208479025 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.289539403 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268416605 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246821751 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28653078 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266260605 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.26852898 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.222240831 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.229290052 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265546548 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270249729 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.258454096 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231850992 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.259469378 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.288824647 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211524594 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292974197 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267564192 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248032938 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290676419 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.267365913 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230208814 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212490499 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261505322 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236975247 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228757372 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.243039845 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198574484 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248354557 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.237406517 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209967762 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287794348 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246052728 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274041343 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.223289009 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268451037 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.227246914 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212030385 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278559446 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245596594 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.165060166 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264124579 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258887181 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250071046 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25360697 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267296282 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199545138 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.421312166 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284958443 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239900689 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239271558 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207019901 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272421444 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.259674432 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258556064 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.252344729 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243529013 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309440747 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.270021349 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.207423514 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231748744 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214990188 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251518436 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.227811302 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.22104019 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.26497762 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.242659279 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288702146 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207579958 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273294251 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276253426 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.214446404 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.25136786 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207479387 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325530572 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270793932 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273242289 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.267032211 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.234000078 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284438755 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192933892 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228271486 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.232364325 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.253977199 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232103398 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277124696 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.235335443 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278630613 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276463089 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263155252 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208338714 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.229412832 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.2673891 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216720157 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283304252 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235519685 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.204426275 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287853644 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.219725218 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199747537 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261983594 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.393358262 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218283205 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269989781 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.197670249 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.355347981 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229778871 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.232656331 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228101353 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271544587 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.232868929 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.255986533 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277859147 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209193501 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.262551055 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235502504 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.275729756 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250871358 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269925317 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278081731 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.246020671 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.229895645 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26064739 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271951203 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21561415 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.248284715 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2598952 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263339074 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.275611654 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.233970814 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238362853 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27534081 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273676911 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274194575 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209287718 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285848362 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196290255 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267858433 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240633464 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193134546 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262780204 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.26372369 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231811601 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241953044 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274323642 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233045069 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197733106 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249825624 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235673685 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243437312 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.230538395 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256554692 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.234385811 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28348598 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311568601 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199182312 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.269742402 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210710035 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231685678 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238974244 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213300518 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233643957 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.24893375 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27866288 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.230420712 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24364013 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267634383 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266142573 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221490806 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24676015 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.367931564 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.197965607 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294645709 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.253358894 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297833614 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218836557 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279665312 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272136422 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220183237 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26970378 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248564639 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.292280325 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26976992 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.273098486 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200834059 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246585128 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238983044 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.205877997 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.256846419 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239078517 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24543149 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.23702183 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.238946098 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249075598 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.247027852 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212109375 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.303426085 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.252545313 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258131708 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.29145927 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243761375 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277802506 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243563375 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233934497 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.266458326 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240937413 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.246876227 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256113714 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.204885901 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.242142734 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317706602 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.196616065 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.263328109 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277147673 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.240558035 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276668144 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.238244612 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250748507 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244877508 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279124182 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197957366 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.254907345 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.272301876 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206490993 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.229530376 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.242512753 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264206084 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.270091539 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212470664 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.283769605 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301055672 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.195510617 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238550098 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.391126623 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232977252 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29865816 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.226125193 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208341717 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250955935 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229362895 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.268921139 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276128271 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.200601138 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235221532 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.247054391 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.224293466 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.230181505 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239855501 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285880977 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261379537 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255467962 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.239161977 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.359373004 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214314404 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275679679 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.17754688 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.234953691 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210314175 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239058263 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245641293 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.279432741 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322670712 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.234912554 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.251334685 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205284834 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.232054998 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201467379 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.265821443 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256213238 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24059093 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25219918 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.164056966 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245771966 seconds)
  done (took 121.790967765 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.323543309 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.245927153 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.256611263 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.303584974 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.274869311 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.37259766 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.308582118 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.325866578 seconds)
  done (took 3.733783674 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.194185308 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.238459024 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.246010055 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.18967391 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.215519236 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.595337228 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.239761704 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.225309028 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.233484021 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.227665823 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.215788475 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.649775994 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.221799364 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.190678019 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.225519041 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.211558956 seconds)
  done (took 5.634481592 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.249840011 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.653704985 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.378149065 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.374417864 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.344536062 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.289987714 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.923059071 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.271099349 seconds)
  done (took 13.811673678 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.242877673 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.278422766 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.544910844 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.419326927 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.2896068 seconds)
  done (took 3.108696574 seconds)
done (took 176.992887368 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.196369594 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.195509918 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.230714465 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.199182102 seconds)
  done (took 2.140208821 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.259969442 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.154579573 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.191320768 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.154677631 seconds)
  done (took 2.095953054 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.459943265 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.154686221 seconds)
  done (took 1.968790934 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.217608329 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.242638328 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.207789412 seconds)
  done (took 2.014910695 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.209487673 seconds)
  done (took 1.551100528 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.189864996 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.188529351 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.389390299 seconds)
  done (took 2.107656847 seconds)
done (took 13.210348049 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.741307676 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.039874484 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.657402314 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.204980884 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.825663515 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.470586797 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.541688297 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.253168856 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.275409394 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.218442304 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.215667998 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.798052881 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.520838579 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.953299578 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.50417396 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.948505743 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.76608038 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.218144012 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.221514342 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186900094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.51081398 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183608125 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.183543033 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.218738779 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.76332996 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.522975303 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.182267801 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.993696894 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.213269439 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193311664 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.472686366 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.216737757 seconds)
  done (took 24.538153281 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.188705352 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.273544632 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.238700116 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.218688843 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191627371 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.21937217 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.193635169 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.230994878 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.315118704 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.184664195 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.237958542 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.183015103 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.22192906 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.185101611 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.240613558 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.18403695 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.218510468 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.185321331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.224115091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.187084196 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.238460351 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.184295642 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.217736766 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185345007 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.216546951 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.202684923 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.215837154 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.196150152 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217100583 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194830571 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.220309021 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185752601 seconds)
  done (took 8.145720276 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.22718706 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.284420037 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.239578581 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.257123619 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.272078873 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.188169459 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.306506296 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.220360703 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.323920311 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.217654145 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.205416834 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.218354373 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.224142609 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.220621072 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.208955134 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.217138297 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.188321085 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.218688005 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.191223688 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.219615846 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.206537089 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.216392602 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.18525582 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.218739827 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.183814017 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.237397576 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.184702817 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.231049563 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217395452 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.19493219 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.222086202 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.186138405 seconds)
  done (took 8.486864496 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.199920814 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.199133702 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.241300447 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.240452923 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.195487219 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.198256566 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.234321837 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.193607023 seconds)
  done (took 3.056957103 seconds)
done (took 45.563597159 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.208653978 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.200341329 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.241812034 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.199293709 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.387354775 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.194638229 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.200567405 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.227483467 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.197786534 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.242763273 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.18346537 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.226918102 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.203821031 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.230840528 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.355802647 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.199387367 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.356968927 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.391316731 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.193622527 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.233653735 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.194214082 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.359124928 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.232010998 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.194122172 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.340265127 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.188246634 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.37964297 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.19733515 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.195295366 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.220981313 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.35934835 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.194132368 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.231625963 seconds)
  done (took 9.502732366 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.304219273 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.23034696 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.193727009 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.22864395 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.194539613 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.228544915 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.34091528 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.194446095 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.227345531 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.194973048 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.228308572 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.288117714 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.234634726 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.189244456 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.231320128 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.174306803 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.343390874 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.19351148 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.221179104 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.158110609 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.225335359 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.194840559 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.354070933 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.223929314 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.194845448 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.192814044 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.230385582 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.198968319 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.230353455 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.194695988 seconds)
  done (took 8.210415864 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.200053443 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.205369692 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.247539718 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.294307119 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.225123111 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.241307362 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.211065178 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.239799418 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.216449102 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.222702761 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.20433192 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.257661327 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.204610167 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.233526624 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.188119383 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.237885418 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.204485012 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.221516298 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.197622058 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.240310936 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.20794006 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.238761856 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.211040175 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.232756694 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.187686158 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.231633366 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.200575087 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.233053868 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.198198388 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.23830251 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.190684653 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.224602304 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.191741352 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.257913664 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.192319987 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.236542161 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.20961674 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.236022612 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.204530059 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.257790254 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.190839702 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.22465706 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.216117915 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.281027986 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.190861142 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.233699061 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.19071231 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.239554974 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.191463593 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.241135832 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.230973297 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.223764279 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.209251191 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.222704857 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.187278704 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.232315297 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.189958164 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.226787429 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.205872828 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.224082756 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.211591222 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.232023919 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.201754986 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.224638691 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.201646173 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.188469707 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.224228025 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.193033416 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.25108563 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.197222566 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.261084108 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.189586888 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.23605432 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.202660059 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.236662009 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.202236751 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.223288031 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.200588497 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.236624225 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.19404807 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.237305665 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.191801555 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.226073441 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.206437565 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.245160506 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.203372091 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.236841361 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.200409354 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.225735968 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.192272425 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.242691686 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.190733193 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.229613486 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.203190015 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.224752742 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.194490026 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.235123195 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.199620217 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.221892323 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.217140392 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.227380102 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.191480285 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.249074061 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.195684102 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.19310172 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.235671589 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.266173653 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.191254628 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.19890637 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.237242948 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.190332304 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.23270983 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.192129879 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.224657829 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.205589831 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.241483851 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.198130502 seconds)
  done (took 26.911217272 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.453991251 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.444300773 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.295992528 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.531764758 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.203118148 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.403339908 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.445048634 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.449201326 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.227258438 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.225258044 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.285169643 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.410147617 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.230744357 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.217388398 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.490265906 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.53430321 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.22003671 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.265636154 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.262223639 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.205177908 seconds)
  done (took 8.189326939 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.19937242 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.261319264 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.214735686 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.243728969 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.201784529 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.242487958 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.19259153 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.248776817 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.203038529 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.232496465 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.196150572 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.199013925 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.239282034 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.206057558 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.243435566 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.213050347 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.23601465 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.194869124 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.248659624 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.195481004 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.204570568 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.216580894 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.236184644 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.213794645 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.244941134 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.200888255 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.226258381 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.195524794 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.23354136 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.200011817 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.228985404 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.199145575 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.233460554 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.173236554 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.202805539 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.242929775 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.198542776 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.229933918 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.196367639 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.230211328 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.206468854 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.238950009 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.200027322 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.165892674 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.247106284 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.177226378 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.24083754 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.203600611 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.209396739 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.212777198 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.236316154 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.205392111 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.199150045 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.247428252 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.197344788 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.243740563 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.235291723 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.207432524 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.230328033 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.190700367 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.189183066 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.230852331 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.200420039 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.240914784 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.204656053 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.235254707 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.200856896 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.227348604 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.197447734 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.229310306 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.195572845 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.239130619 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.213492861 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.237040339 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.199595144 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.23777891 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.200651284 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.162455226 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.235392504 seconds)
  done (took 18.499134073 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.218243465 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.236918047 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.210227013 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.260627486 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.204465247 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.198837436 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.238428784 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.211798791 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.242300854 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.210224847 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.242723114 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.207680949 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.249612747 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.237788269 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.203425799 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.241054537 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.206454954 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.266131818 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.205840841 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.254283104 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.207695615 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.233062249 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.205998612 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.238255367 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.220695942 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.238559736 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.220985225 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.241442714 seconds)
  done (took 7.765471643 seconds)
done (took 80.434207662 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.606392195 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.826588354 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.510923072 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.502980372 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.503799051 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.532515483 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.50989843 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.523840008 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.236259024 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.483190425 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.506390513 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.511736583 seconds)
done (took 32.705655098 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.836008755 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.728656696 seconds)
    (2/2) benchmarking "String"...
    done (took 1.917633172 seconds)
  done (took 5.058057802 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.498425114 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.496456218 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.868067161 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.496268206 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.496197247 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.497773704 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.512428431 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.521560667 seconds)
  done (took 18.285485745 seconds)
done (took 30.077180905 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.500299585 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.858011763 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.772718304 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.480352495 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.508624386 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.508807091 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.494944853 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.507018037 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.509360862 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.480066774 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.033197448 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.843787258 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.512086698 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.98283839 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.482854349 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.501737128 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.496630891 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 3.010727971 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.49753338 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.547965632 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.49152696 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.481101612 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.520707976 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.512272476 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.513297885 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.511340723 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.499577216 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.510781154 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.877080598 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.539128754 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.484086279 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.516968883 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.500132314 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.500928575 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.502687947 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.502249972 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.937206191 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.516106203 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.493301209 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.50026627 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.853050168 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.528637895 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.499291775 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.515535879 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.48508948 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.498782632 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.488764808 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.688794225 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.52053435 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.499235133 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.52551557 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.909718128 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.516924952 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.515024292 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.507388195 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.909428287 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.508661542 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.640166114 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.534463007 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.50948951 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.498183324 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.51391619 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.555544249 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.501763946 seconds)
  done (took 164.561210476 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.501006238 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.503111744 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.501275756 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.509658317 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.505693985 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.503433782 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.499825921 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.500917819 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.502260029 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.530835799 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.504752665 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.503713915 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.504988797 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.510094545 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.508550773 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.527094193 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.506287426 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.520499988 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.510211389 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.501945883 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.51141699 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.505649846 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.502256956 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.500907552 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.534630625 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.540724627 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.533886607 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.537473306 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.512423053 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.502773711 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.525556986 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.514684584 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.306652263 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.458567951 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.51448819 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.516883817 seconds)
  done (took 91.574857741 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.502511737 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.502570613 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.50451716 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.542772933 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.503371204 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.151299267 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.17885794 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.584015887 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.908098929 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.264553405 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.892746975 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.507639204 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.601880798 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.518295238 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.509879294 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.505599002 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.603923725 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.532487057 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.504718862 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.505193712 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.183058963 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.521301347 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.630468651 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.697911725 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.505607103 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.541868417 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.906300096 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.505297147 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.543621923 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.853626358 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.543699377 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.506179382 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.959251802 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.510542646 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.357888528 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.510938786 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.621720821 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.509532462 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.544288837 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.506052341 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.80024925 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.507360957 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.50617121 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.509573599 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.24894737 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.511534742 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.155578513 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.506619103 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.607454761 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.51313306 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.506411534 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.248134767 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.483096768 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.50934424 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.50610123 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.509987478 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.507770996 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.507846634 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.54489939 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.187451771 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.532001101 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.514438044 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.511475447 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.545640336 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.507256475 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.670845434 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.514065232 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.05757953 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.563901038 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.658154574 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.187597948 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.510441167 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.609174602 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.629814028 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.509414291 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.507382957 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.509145961 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.50756678 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.508013903 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.62435279 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.508003497 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.362198573 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.70126222 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.510091751 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.250992532 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.61680169 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.509853523 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.985654461 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.511196989 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.510188691 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.407606442 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.613443162 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.509397808 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.510012341 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.510296177 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.368063006 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.189517466 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.916727051 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.513012234 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.74359037 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.512884355 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.512092704 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.192723669 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.298326624 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.513888533 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.627033298 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.703635218 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.512527535 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.509706995 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.25322431 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.514551047 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.568477737 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.512509796 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.915952092 seconds)
  done (took 418.642955375 seconds)
done (took 676.179191798 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.493151539 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.494483831 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.516389899 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.49490197 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.495999527 seconds)
  done (took 13.90248334 seconds)
done (took 15.31186382 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.817981812 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.806423848 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.805010749 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.613009308 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.820969901 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.828391865 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.720759812 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.618431925 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.800031136 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.823990188 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.808737829 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.577684355 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.82686255 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.790897362 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.56192851 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.704240253 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.745141334 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.742996788 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.635829808 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.705335294 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.84972719 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.579429829 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.578896031 seconds)
  done (took 41.172844118 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.894072913 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.522552833 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.643122704 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.870990648 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.586724122 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.922805896 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.937741594 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.523283234 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.762892474 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.56317427 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.563225673 seconds)
  done (took 22.201584853 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.90816842 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.521611232 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.64432146 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.878135132 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.586845576 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.919027413 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.939476452 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.524713653 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.773241765 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.56591561 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.564014042 seconds)
  done (took 22.235527298 seconds)
done (took 87.021242927 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.576538818 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.666475395 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.553344109 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.55313682 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.554396268 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.55296494 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.553790744 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.553771258 seconds)
  done (took 13.974743437 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.551782318 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.551395538 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.552122445 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.552401531 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.552158135 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.553502718 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.556546401 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.551766465 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.551845525 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.55204555 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.553577867 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.551053525 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.551811163 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.552566496 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.553044071 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.55389397 seconds)
  done (took 26.253436977 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.554534205 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.552239918 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.552566846 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.552007696 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.553238299 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.553515151 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.554175081 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.553962413 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.552919125 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.553468776 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.554405975 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.556372846 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.556186649 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.555142661 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.552765055 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.555047259 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.552682432 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.554127449 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.557086764 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.553704001 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.555847989 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.552905157 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.553097919 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.553483861 seconds)
  done (took 38.70990068 seconds)
done (took 80.349350363 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.517734413 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.535677547 seconds)
  done (took 6.466838415 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.651680567 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.652766807 seconds)
  done (took 4.719971932 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.555923277 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.556773595 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.556442687 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.556167233 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.555443398 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.557160796 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.555013386 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.555119684 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.554682059 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.55572409 seconds)
  done (took 16.972289633 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.555485932 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.554705106 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.554920078 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.554730948 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.55439955 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.555170459 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.55578164 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.555101106 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.555541315 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.557138586 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.555817119 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.556652281 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.556380319 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.555375303 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.556006947 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.556161087 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.557078382 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.555388922 seconds)
  done (took 29.416331644 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.5772424 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.582352965 seconds)
  done (took 4.575285098 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.736781263 seconds)
    (2/7) benchmarking "second"...
    done (took 1.636386024 seconds)
    (3/7) benchmarking "month"...
    done (took 1.722869787 seconds)
    (4/7) benchmarking "year"...
    done (took 1.708319542 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.638398081 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.584930179 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.639170317 seconds)
  done (took 13.082782315 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.558287824 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.913975723 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.105061265 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.775348946 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.551642216 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.577948425 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.504307217 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.582162787 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.582484127 seconds)
  done (took 17.567906366 seconds)
done (took 94.216990305 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.523173862 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.531957032 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.552139766 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.542144431 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.919140695 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.539877801 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.526889768 seconds)
done (took 18.553823709 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.506415795 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.50941024 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.508558455 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.532199101 seconds)
  done (took 11.474016703 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.523006872 seconds)
    (2/2) benchmarking "read"...
    done (took 1.935154603 seconds)
  done (took 5.876399716 seconds)
done (took 18.770958723 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.561043132 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.559104828 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.560056485 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.559407939 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.560242123 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.56169999 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.559356885 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.55897171 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.559593088 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.560092104 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.559308065 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.55864639 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.560346676 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.558932041 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.560646294 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.56022557 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.55968032 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.559165868 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.560654186 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.560847018 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.560253996 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.560508009 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.559186541 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.559417507 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.559795069 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.559518777 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.559662301 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.561526155 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.560844225 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.561614225 seconds)
  done (took 48.221274369 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.565790524 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.568313819 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.56058204 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.561024764 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.560231297 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.560722421 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.560915882 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.560242542 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.561532301 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.56059552 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.562059673 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.561395132 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.559694567 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.56142286 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.562182174 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.56053818 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.562063165 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.560657679 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.560436142 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.561344218 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.56104886 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.562451761 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.561232054 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.561110529 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.562074758 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.562396517 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.562263958 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.562900702 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.563632848 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.561749577 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.561393177 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.562817241 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.562751171 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.565796461 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.562200612 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.562943933 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.575223846 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.570776563 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.563362911 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.563633895 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.564159381 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.565465622 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.564237115 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.564537851 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.564022213 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.563047717 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.563861647 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.564728867 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.563735235 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.564229642 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.56393114 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.565317489 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.564469546 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.563725877 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.564336079 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.56419081 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.56387415 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.563510067 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.564012365 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.564222447 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.564494829 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.566124156 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.565778442 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.564611534 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.565720403 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.56536519 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.568409572 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.565375527 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.564739553 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.565595597 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.566129464 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.566710125 seconds)
  done (took 113.999360606 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.56399218 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.564352841 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.565696169 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.566114587 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.564836911 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.566525604 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.565125146 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.565986359 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.566951146 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.566260207 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.567284289 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.566611927 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.565527851 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.566784575 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.566266562 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.566452201 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.567255376 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.56612653 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.56759215 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.567797832 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.567557019 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.56657994 seconds)
  done (took 35.883437902 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.568116449 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.569640315 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.567157178 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.570825802 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.569132499 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.56984048 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.56778568 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.569344817 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.568638651 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.566985229 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.565301216 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.574598068 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.570314633 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.567662271 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.569383648 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.570351439 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.567739306 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.570154487 seconds)
  done (took 29.669075307 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.570160214 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.565888372 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.567624696 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.568043255 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.568473826 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.569548962 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.56697636 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.569916886 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.570210359 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.569421223 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.568436391 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.56829608 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.56944909 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.571184367 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.569943357 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.568437438 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.567174709 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.568198093 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.569683477 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.568613579 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.568228963 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.56725768 seconds)
  done (took 35.938466548 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.570182284 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.569965426 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.569760512 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.569964519 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.570866658 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.569507826 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.569714347 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.572475872 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.57146422 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.570114678 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.571818735 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.571213002 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.572676945 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.570115236 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.570520106 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.569838316 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.573958602 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.571870557 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.571968474 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.571158037 seconds)
  done (took 32.847425291 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.571648392 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.574575091 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.575592958 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.573164995 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.57498485 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.573970894 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.576488183 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.573067707 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.573162272 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.577639587 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.573089358 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.573947148 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.574487719 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.575054202 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.573648926 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.574195574 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.575237465 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.57505078 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.575511314 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.576877758 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.576861904 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.578393942 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.577246241 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.574763313 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.576848215 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.578160672 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.573921376 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.575510336 seconds)
  done (took 45.533759287 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.603264633 seconds)
    (2/2) benchmarking "in"...
    done (took 1.600966785 seconds)
  done (took 4.638582253 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.57799445 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.575360246 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.577647269 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.577638051 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.575101065 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.577755733 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.578156622 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.581271752 seconds)
  done (took 14.055939167 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.572761872 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.580381696 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.580216661 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.58007635 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.576792901 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.572968323 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.588814751 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.582070039 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.574320309 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.572359097 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.581939855 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.580941753 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.58114967 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.573208018 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.573439821 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.581015366 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.585564966 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.581331536 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.581931822 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.579121828 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.576939079 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.57956532 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.583831506 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.584845741 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.578202228 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.594903724 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.590689989 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.583960013 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.579545067 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.591295234 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.579826807 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.584479493 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.58342447 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.583122756 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.584202712 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.584266616 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.594044955 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.584003804 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.596543178 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.586359201 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.583206565 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.583626731 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.580431423 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.584355525 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.584664362 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.588689386 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.5871387 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.584755506 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.576629821 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.58449828 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.590885265 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.578081263 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.585620699 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.592502999 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.58392188 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.59843867 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.589710815 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.582461639 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.585393017 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.596214645 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.603691364 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.596843426 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.591804866 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.590686357 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.593872866 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.596095635 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.601815635 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.593207628 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.585723227 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.588391443 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.595250136 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.610382297 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.602634525 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.59280178 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.586763513 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.585748719 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.582301423 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.590094243 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.597059654 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.597689064 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.592069075 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.588180662 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.597091153 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.593427349 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.583678693 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.591999653 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.58515856 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.586877493 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.58187134 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.605089516 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.597793127 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.590609602 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.582888578 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.585315283 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.587615087 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.588911551 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.581449778 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.585268351 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.592835863 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.589709488 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.583484603 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.58790409 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.599159013 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.59423178 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.587539519 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.60159396 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.596840283 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.58626736 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.600445559 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.595930949 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.589678688 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.585848312 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.596803547 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.593740586 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.585966065 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.597154429 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.591263107 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.592325393 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.598331394 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.586675652 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.595736232 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.600063807 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.596094937 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.591610009 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.592076967 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.594433552 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.59027618 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.59312291 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.593263431 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.590740624 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.589815228 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.595624695 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.597107705 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.58836616 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.592381894 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.590231481 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.595280867 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.588569608 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.592456345 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.595313902 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.591901456 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.590765558 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.600551509 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.602297052 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.59971055 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.595277863 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.609479809 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.592794308 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.598515635 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.596856975 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.600050188 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.591418294 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.587507671 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.592820568 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.584360693 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.591509297 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.584864458 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.594444377 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.591585215 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.596575654 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.594250847 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.586547912 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.590715621 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.597441826 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.601809141 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.594203006 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.595842181 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.592838167 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.591732511 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.5873455 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.596756333 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.588649925 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.593643368 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.601599198 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.594097615 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.591640669 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.600199299 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.600028956 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.592777895 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.593576879 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.590492967 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.600680855 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.601106468 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.604270906 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.605188272 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.594238276 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.592592815 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.588438376 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.592007266 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.593421971 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.589661157 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.602180486 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.608001898 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.60676012 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.591615456 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.596086834 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.587119982 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.595290505 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.604823909 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.599669414 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.590889736 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.594914898 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.589724573 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.598245559 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.594120663 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.600847286 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.589091462 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.598123826 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.593098327 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.595681755 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.594401704 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.593771247 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.597063006 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.600689864 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.596215273 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.592589043 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.591483386 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.600153623 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.588544535 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.590687614 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.602475077 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.594302949 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.606967199 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.604526526 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.596194809 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.603933363 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.597006225 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.592072148 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.597203806 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.599038397 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.595460289 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.615812248 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.599077578 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.596419489 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.614256464 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.603081789 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.592005171 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.606246786 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.603009503 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.59794182 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.594737221 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.603621173 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.595290784 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.598726905 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.596941133 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.59270058 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.602015243 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.611047676 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.605255599 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.594109488 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.602046042 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.596108765 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.603281185 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.604195826 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.60335843 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.601361598 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.609531771 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.606835129 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.600881858 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.596036968 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.60437902 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.600429635 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.599699446 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.59514684 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.606145446 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.614469829 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.601727845 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.608034862 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.600438924 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.604451725 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.596057361 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.602988551 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.596187477 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.623491786 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.616716833 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.612074761 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.606513021 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.603627738 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.611947511 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.607573002 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.59902834 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.599212722 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.599488454 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.601773871 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.603178519 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.603164131 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.601196842 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.606132037 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.606033142 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.604465694 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.606915167 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.604965967 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.597793756 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.607951123 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.604448862 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.599937674 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.593641273 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.60499083 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.603866596 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.60916664 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.60653984 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.599111311 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.618789372 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.608690811 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.607661561 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.602325896 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.602682716 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.597371845 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.610367072 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.611551301 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.605847014 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.608693465 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.598631362 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.608884272 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.602607356 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.618763462 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.610710063 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.605193858 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.610520933 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.605558779 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.597784886 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.600919782 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.609032475 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.616926426 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.614099809 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.601015954 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.608237402 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.606795739 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.605472526 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.605949192 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.60183135 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.603308214 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.609739618 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.616649715 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.607714431 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.605674367 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.616755664 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.611122545 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.60236808 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.603698138 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.601163668 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.616441798 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.612979276 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.61088299 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.605104742 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.604985173 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.604158601 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.605718087 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.607257809 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.607000373 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.604391871 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.616233531 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.609860094 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.610766006 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.607030615 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.61969731 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.615504109 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.620050357 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.61891788 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.60589325 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.608909206 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.604325662 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.604181859 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.604596367 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.608374431 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.606891212 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.598617883 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.610404019 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.60609991 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.615089041 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.618454414 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.618023214 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.603438119 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.618511125 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.621853659 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.605570723 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.611178838 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.607773446 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.605993611 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.613875759 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.607779383 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.602063224 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.606630773 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.610263568 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.618164712 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.606088526 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.618452319 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.604963522 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.615249956 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.612355244 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.611219556 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.610639523 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.612684197 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.605565066 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.614133194 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.618325207 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.619703944 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.612130286 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.614261143 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.609359053 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.626932937 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.623500237 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.617284712 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.617790991 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.615100146 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.60989746 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.617577347 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.614958369 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.608114132 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.618032921 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.603619078 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.612610933 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.611196228 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.61960903 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.615178439 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.618945398 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.606990037 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.613197111 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.614568794 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.612936114 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.616604527 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.621955418 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.619900617 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.60775871 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.608807866 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.615113556 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.61419228 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.617989411 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.610838571 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.611590482 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.614310032 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.616919372 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.612390375 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.613781124 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.605134563 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.610585885 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.63037248 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.620783411 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.615224394 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.613930375 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.619562306 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.611942902 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.618403918 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.616778363 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.610708177 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.612918933 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.617627144 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.611103898 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.611250984 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.611960781 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.619059309 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.62668067 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.614162807 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.611878927 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.629960486 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.62927192 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.618397633 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.609638209 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.613710724 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.612895467 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.616256997 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.61602268 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.606704945 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.632434683 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.62541291 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.619300821 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.621398992 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.611841212 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.6091672 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.618522649 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.612939258 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.619813316 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.622376421 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.619196198 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.619697729 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.612122952 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.61309654 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.609753098 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.609883911 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.618001213 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.611297498 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.616970007 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.620440491 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.617969157 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.618145157 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.618115824 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.612994362 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.613045835 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.614564883 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.606863066 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.618469429 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.607263954 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.622891151 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.61466273 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.612123441 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.618704585 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.614008527 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.611830737 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.614210578 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.621195335 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.613410755 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.609389015 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.617469163 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.62562453 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.622273266 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.614930293 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.609721809 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.618049195 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.619744033 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.614435258 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.615005162 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.613619582 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.635153674 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.625818898 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.61284581 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.615935169 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.626176276 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.622808598 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.615760565 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.61511628 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.621796878 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.61824489 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.621850237 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.615655943 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.627607952 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.62107863 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.61602275 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.618974103 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.616325023 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.616481747 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.624791532 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.624763037 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.617172058 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.619557697 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.634000036 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.62477058 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.625420733 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.640177358 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.623768497 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.624130415 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.621978326 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.610644133 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.618976478 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.621787938 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.624397069 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.618116731 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.617522871 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.618095918 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.611583498 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.626863235 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.632095953 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.626925603 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.620565996 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.612120927 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.61609769 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.620055455 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.618755569 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.620170833 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.619241455 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.617708578 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.618315919 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.616763836 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.638149376 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.639771929 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.625053857 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.619993227 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.618568535 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.629168765 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.625845648 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.624324015 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.625224897 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.618782318 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.619609379 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.627224244 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.629345324 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.619835246 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.65400698 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.617227652 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.617798535 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.622821659 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.6378045 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.639502551 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.633074709 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.624064974 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.623260332 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.620382732 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.617254122 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.624313539 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.619106801 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.618308935 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.618216465 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.624450847 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.620854509 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.62189717 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.619534789 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.628596695 seconds)
  done (took 957.858048803 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.622186173 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.622809926 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.622135119 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.624346434 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.621763843 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.622827246 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.622277595 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.622536427 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.622647126 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.621384255 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.621728993 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.622320129 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.621139183 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.622884307 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.621459335 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.621991735 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.621826561 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.622498014 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.622981247 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.622507582 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.621414776 seconds)
  done (took 35.540520971 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.623002268 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.623668973 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.624921926 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.622851901 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.624209964 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.623984168 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.622241976 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.62441858 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.623716047 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.623374383 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.624545202 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.622509818 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.623194192 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.626291793 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.62417651 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.62532931 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.623853285 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.624813323 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.624341126 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.625332593 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.624948396 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.625613914 seconds)
  done (took 37.205605965 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.625816662 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.624921856 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.620674179 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.629374588 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.624730282 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.624839793 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.624173647 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.627208321 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.625261076 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.6212459 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.621739817 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.621469043 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.626255895 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.633002772 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.630461807 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.632187376 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.626840117 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.627563813 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.625939863 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.626450682 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.638113897 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.636006157 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.625685222 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.620468078 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.630515584 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.62580877 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.627695673 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.627062491 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.620756942 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.632337673 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.626948721 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.623731831 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.6392609 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.628794276 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.62625785 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.631497972 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.631273502 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.627848556 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.627518485 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.636003293 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.638414075 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.628382352 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.641667002 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.638474487 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.629606111 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.627671019 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.634357693 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.629061699 seconds)
  done (took 79.647542262 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.627664104 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.628037965 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.628916987 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.628353089 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.628091114 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.627820061 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.629488499 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.628553394 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.628844213 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.627973013 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.628978867 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.627924613 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.629564625 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.629768492 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.629112054 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.630193057 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.629904054 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.630480594 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.630805565 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.631328956 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.629695578 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.630138232 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.629794124 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.630324498 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.630527667 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.630079426 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.630476752 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.630727762 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.631055877 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.629671413 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.630169102 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.630719521 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.631473039 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.630417737 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.636255141 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.630763032 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.631451527 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.630940918 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.631480093 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.632567102 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.631866454 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.632052092 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.632606144 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.630554556 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.6310322 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.63128293 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.631980226 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.631645267 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.631505585 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.631499788 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.631923306 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.631329585 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.631541203 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.63116881 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.632837737 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.631898861 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.631656442 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.631209528 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.633004169 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.632275236 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.630704366 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.633055992 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.632259871 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.632500194 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.635244608 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.632545312 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.632382442 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.634709414 seconds)
  done (took 112.379228675 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.63553431 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.632340677 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.634616315 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.635421307 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.633821103 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.633120873 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.634308385 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.633943185 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.634292112 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.634433052 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.634176735 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.632987477 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.633120245 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.635827852 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.634704385 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.634311947 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.635127972 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.634210608 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.633834652 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.635475992 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.635505814 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.6351029 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.637979802 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.63642318 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.637582405 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.63542822 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.636068804 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.636918563 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.636496862 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.63554723 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.635991979 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.635183916 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.635133351 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.635227846 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.636172379 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.636265129 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.635342106 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.636624601 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.635984786 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.636230767 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.636811497 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.636109592 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.636085497 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.636940633 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.636630607 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.637745694 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.638312525 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.638320278 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.636685433 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.63622071 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.636609376 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.635956569 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.638286545 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.635999033 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.637766367 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.638304563 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.638450253 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.638892907 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.637609154 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.635831903 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.638877542 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.638637497 seconds)
  done (took 102.910813731 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.637859395 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.638742329 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.638285358 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.639176253 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.63898405 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.638906735 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.639154043 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.63922584 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.638141414 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.638250227 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.638369866 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.639999332 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.637743878 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.638235071 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.642886641 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.640481657 seconds)
  done (took 27.709649322 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.640872698 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.640642151 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.64060786 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.64091593 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.640878075 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.63967478 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.63830198 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.640079161 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.638644272 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.641501968 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.639911192 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.640194538 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.642312476 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.64084497 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.640607022 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.640558482 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.641052818 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.640903847 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.642306888 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.640844342 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.643119282 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.641085713 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.639983408 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.640247479 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.642982184 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.641565593 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.6422316 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.641503085 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.640573917 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.63934038 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.643284806 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.641755492 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.640426831 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.64205937 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.640412793 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.642007409 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.642519066 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.641910679 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.643028768 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.641436177 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.641275752 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.643380838 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.641143892 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.642211485 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.644817962 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.642014044 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.641284761 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.642185225 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.641205212 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.642612165 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.64345899 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.642779085 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.642485612 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.642238933 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.643137162 seconds)
  done (took 91.768521684 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.642288171 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.645814108 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.64187499 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.644644127 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.644154958 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.643369035 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.644240304 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.644843663 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.644688406 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.644003891 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.643838438 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.644092032 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.644793238 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.64410565 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.644293104 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.64503454 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.64465174 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.643628006 seconds)
  done (took 31.085000754 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.64375386 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.64973416 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.645063035 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.645613035 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.645371593 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.64541748 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.644912178 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.645127987 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.643928812 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.645151174 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.644329701 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.645749575 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.645456381 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.645431727 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.64830835 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.644477904 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.645846444 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.645436406 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.645448698 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.644970076 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.64531593 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.64717762 seconds)
  done (took 37.695114791 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.638293738 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.640738952 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.639236177 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.661134702 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.647990083 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.638248412 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.639344081 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.638626741 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.662471394 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.670175516 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.669314094 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.648174953 seconds)
  done (took 21.286041752 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.646382966 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.64694002 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.64704555 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.650309792 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.648232711 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.646906286 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.646631252 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.648144572 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.648037017 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.647502032 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.648740109 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.648236273 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.64745468 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.647058121 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.648753379 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.648794446 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.648026261 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.648930566 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.64863374 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.650241347 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.648254712 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.649273696 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.648873995 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.650215226 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.647284546 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.649684013 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.648986578 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.648267144 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.646859143 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.647790407 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.649756719 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.648619144 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.648888382 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.650189246 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.648104902 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.649607677 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.649625347 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.648953614 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.650365106 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.64961529 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.649670883 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.64989235 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.649683525 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.649009137 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.650550605 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.649401017 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.65053489 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.649912744 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.650030706 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.651046757 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.650483068 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.650195531 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.651325144 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.651833728 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.651762281 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.65110284 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.649914979 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.649836197 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.65159955 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.652007772 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.650409804 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.651822065 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.650608922 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.6522423 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.651084331 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.65061402 seconds)
  done (took 110.35493571 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.65044682 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.650589645 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.651413424 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.653471995 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.652951119 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.65261637 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.652917036 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.651850281 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.651954414 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.651689157 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.654169081 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.653845995 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.653145977 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.653099532 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.652152554 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.652632363 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.653681868 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.653792287 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.652200465 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.653150726 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.652931354 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.653134033 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.653085703 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.654123335 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.652878973 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.654168802 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.653657494 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.653341811 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.65427098 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.65519519 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.653642198 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.654158745 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.653601341 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.654487697 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.65365037 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.654127525 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.653464103 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.654387405 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.655876351 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.655075482 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.654101126 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.655191138 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.655123741 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.654415062 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.654665863 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.655366371 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.656260897 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.655155869 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.655358688 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.654449703 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.655765514 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.654840466 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.654408008 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.656316352 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.655119551 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.655003964 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.655024218 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.655417564 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.655541463 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.655529868 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.656314536 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.656590548 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.656641113 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.656002624 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.656631825 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.657969983 seconds)
  done (took 110.673735399 seconds)
done (took 2118.322806607 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.870526901 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.826292715 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.649199944 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.647907181 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.648181029 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.62975222 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.640848603 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.647057074 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.648606851 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.649884458 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.647931836 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.904675518 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.667383332 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.646277994 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.649198128 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.804308006 seconds)
  done (took 32.678639023 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.688323005 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.667402189 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.808589207 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.653759462 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.689045653 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.927825738 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.727929089 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.656670307 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.873963093 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.661164594 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.625588282 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.687426453 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.655167742 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.638635612 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.681873582 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.9275213 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.014714162 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.627615844 seconds)
  done (took 35.715198351 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.270157958 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.661321946 seconds)
  done (took 6.434061203 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.68455856 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.657378288 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.659937413 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.657934225 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.634809915 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.626552441 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.656401627 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.628217876 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.624714847 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.825059248 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.662181482 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.6771616 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.660341514 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.658941965 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.660697496 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.715054407 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.850326777 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.662350429 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.661981806 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.670173491 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.656914681 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.81808399 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.796285407 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.665706093 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.823604594 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.631200448 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.666069338 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.672327815 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.846727996 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.665753096 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.658105546 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.657712409 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.66083201 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.629365089 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.302575838 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.628429216 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.694346467 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.672892621 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.662682664 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.871665873 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.658360396 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.671703364 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.6292282 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.300779241 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.820685996 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.823719413 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.640046335 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.660719775 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.660208327 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.738773415 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.658964873 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.662295045 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.768849306 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.586088706 seconds)
  done (took 104.009918932 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.688726129 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.629878772 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.897729104 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.652066649 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.629252645 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.630181185 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.629352028 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.04457145 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.680586896 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.631492385 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.049035565 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.423463277 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.641262971 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.71149341 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.702320455 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.69687088 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.629103324 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.630417527 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.65006423 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.633624709 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.328379118 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.632820626 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.631442798 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.789785139 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.706488235 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.340019775 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.632905623 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.631713013 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.635646265 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.631282093 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.393915176 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.635213668 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.697391267 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.633514639 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.040972459 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.18326709 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.142420415 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.634277585 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.67284925 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.632439712 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.635609807 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.339142918 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.163174172 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.632139534 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.649724801 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.341716849 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.633705096 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.64098605 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.636252208 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.99598273 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.632691769 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.633326137 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.63333396 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.634899871 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.632984125 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.697960754 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.714916052 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.343878855 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.633154608 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.635112817 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.668113522 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.636282938 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.635716106 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.637829783 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.632879293 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.165663804 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.804462845 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.638543979 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.164263487 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.388393245 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.633678976 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.471737083 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.635250963 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.639929491 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.713224566 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.634705433 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.634577344 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.336925038 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.653678516 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.633868595 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.146930136 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.636402995 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.068726826 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.655394167 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.635532563 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.35387433 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.649193378 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.704356678 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.635536754 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.636797389 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.635701509 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.644288286 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.045172713 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.709375822 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.635780919 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.637919948 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.663682163 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.637134094 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.639246094 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.642229015 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.476657751 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.636804932 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.637699319 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.638563326 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.637111465 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.637401028 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.63731156 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.640025733 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.009236929 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.637926374 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.644599568 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.639529649 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.638884666 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.64932482 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.812646287 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.64775374 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.100331264 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.636989033 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.638920145 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.643579327 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.638793382 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.664687178 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.648434344 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.641564406 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.639148456 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.109952949 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.661052778 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.639415459 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.640714158 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.653728383 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.639615974 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.661249102 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.67839828 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.641271352 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.599309521 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.664103515 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.67049064 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.640182457 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.644471619 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.645033213 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.64161092 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.643511651 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.060032564 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.049017826 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.832809954 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.641142984 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.639796094 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.602749903 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.650722554 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.911997958 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.663378772 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.641088367 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.033283213 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.82880295 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.640952107 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.639933053 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.643775511 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.02102935 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.641106666 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.065611346 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.419137797 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.641623282 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.643610825 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.59503712 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.500307825 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.643845352 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.644780666 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.065048845 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.661399679 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.640210533 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.64286066 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.643623955 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.642266939 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.645514349 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.650974401 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.642167765 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.641646958 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.718631747 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.927023471 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.662283451 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.643831593 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.344571191 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.651936046 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.644056831 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.647544496 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.645832267 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.641921924 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.688432865 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.648469893 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.692311432 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.643295073 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.64597139 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.431698682 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.653639055 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.642610348 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.928160557 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.556251532 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.645295187 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.6443172 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.643734933 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.712539423 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.376090633 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.693658461 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.109746777 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.650669265 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.719777145 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.643183955 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.670481282 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.376925376 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.65830152 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.644641403 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.546176299 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.646262838 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.335440771 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.644340178 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.644690501 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.483833105 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.646983182 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.650690077 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.645573994 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.666452627 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.043806688 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.646954337 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.691106739 seconds)
  done (took 574.323544301 seconds)
done (took 754.666163922 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.64459901 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.65092195 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.649156573 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.649792896 seconds)
  done (took 12.117263446 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.682940827 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.673673098 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.68246856 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.674440165 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.682900179 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.673212075 seconds)
  done (took 11.59367766 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.646250616 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.651065823 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.649031906 seconds)
  done (took 9.470727109 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.979211253 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.661538524 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.165295391 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.65178917 seconds)
  done (took 10.982814365 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.683156636 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.682035963 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.682471772 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.681827626 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.681696185 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.683617938 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.683982719 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.683856585 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.684484459 seconds)
  done (took 16.66852384 seconds)
done (took 62.358254567 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.967065993 seconds)
    (2/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.633455972 seconds)
    (3/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.063757828 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.793973451 seconds)
    (5/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.712136578 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.837617829 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.713220515 seconds)
    (8/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.719346155 seconds)
    (9/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.63271342 seconds)
    (10/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.633775217 seconds)
    (11/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.662629375 seconds)
    (12/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.056881465 seconds)
    (13/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.847425011 seconds)
    (14/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.057300234 seconds)
    (15/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.635578309 seconds)
    (16/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.786386872 seconds)
    (17/192) benchmarking ("map", identity, BigInt, true)...
    done (took 2.06816635 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.676614393 seconds)
    (19/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.251834329 seconds)
    (20/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.265136509 seconds)
    (21/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.793787953 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.859764779 seconds)
    (23/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.860178169 seconds)
    (24/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.392094763 seconds)
    (25/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.636798017 seconds)
    (26/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.635276176 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.811054185 seconds)
    (28/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.841568121 seconds)
    (29/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.638769777 seconds)
    (30/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.915573482 seconds)
    (31/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.81247294 seconds)
    (32/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.022255413 seconds)
    (33/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.88462611 seconds)
    (34/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.719833437 seconds)
    (35/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.633156353 seconds)
    (36/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.71969117 seconds)
    (37/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.881149621 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.806406597 seconds)
    (39/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.813363836 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.84096609 seconds)
    (41/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.262520185 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.80603106 seconds)
    (43/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.635143478 seconds)
    (44/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.971699404 seconds)
    (45/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.893248995 seconds)
    (46/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.133459499 seconds)
    (47/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.638551802 seconds)
    (48/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.024564856 seconds)
    (49/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.891714652 seconds)
    (50/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.859695915 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.83843127 seconds)
    (52/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.917499564 seconds)
    (53/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.72094538 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.667525877 seconds)
    (55/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.905741016 seconds)
    (56/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.64087186 seconds)
    (57/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.637632412 seconds)
    (58/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.756413647 seconds)
    (59/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.786729374 seconds)
    (60/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.769678672 seconds)
    (61/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.805363518 seconds)
    (62/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.634911674 seconds)
    (63/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.388525315 seconds)
    (64/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.816715171 seconds)
    (65/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.636145281 seconds)
    (66/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.656731838 seconds)
    (67/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.155371574 seconds)
    (68/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.116481991 seconds)
    (69/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.884799177 seconds)
    (70/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.712422927 seconds)
    (71/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.308600696 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.908694604 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.911891659 seconds)
    (74/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.841268502 seconds)
    (75/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.926062944 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.007983417 seconds)
    (77/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.636987567 seconds)
    (78/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.144905857 seconds)
    (79/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.716280541 seconds)
    (80/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.659443355 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.912502282 seconds)
    (82/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.819694949 seconds)
    (83/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.026878138 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.816371901 seconds)
    (85/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.86489085 seconds)
    (86/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.721494542 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.854295508 seconds)
    (88/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.810289912 seconds)
    (89/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.639353719 seconds)
    (90/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.90243047 seconds)
    (91/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.799471287 seconds)
    (92/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.971783144 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.910899563 seconds)
    (94/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.58313428 seconds)
    (95/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.655492015 seconds)
    (96/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.153935427 seconds)
    (97/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.652708561 seconds)
    (98/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.819330098 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.86830539 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.717176535 seconds)
    (101/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.177737267 seconds)
    (102/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.646395816 seconds)
    (103/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.640225897 seconds)
    (104/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.403707063 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.828836544 seconds)
    (106/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.641190685 seconds)
    (107/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.856584276 seconds)
    (108/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.813520979 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.863545707 seconds)
    (110/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.653337481 seconds)
    (111/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.968587066 seconds)
    (112/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.024557592 seconds)
    (113/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.030119472 seconds)
    (114/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.817889202 seconds)
    (115/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.818455546 seconds)
    (116/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.725558396 seconds)
    (117/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.156251923 seconds)
    (118/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.66675462 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.019263623 seconds)
    (120/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.641175599 seconds)
    (121/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.661262372 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.740238127 seconds)
    (123/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.727066898 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.841470693 seconds)
    (125/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.658410263 seconds)
    (126/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.931808717 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.903494501 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.843354801 seconds)
    (129/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.644026172 seconds)
    (130/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.644598241 seconds)
    (131/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.02951786 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.868348342 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.879511493 seconds)
    (134/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.077848238 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.818949184 seconds)
    (136/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.073685208 seconds)
    (137/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.812941645 seconds)
    (138/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.642152958 seconds)
    (139/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.749095748 seconds)
    (140/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.956583725 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.792265833 seconds)
    (142/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.97173181 seconds)
    (143/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.037104229 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.00855409 seconds)
    (145/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.147563597 seconds)
    (146/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.085475185 seconds)
    (147/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.891348404 seconds)
    (148/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.836254597 seconds)
    (149/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.666448227 seconds)
    (150/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.593886625 seconds)
    (151/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.046654187 seconds)
    (152/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.205874854 seconds)
    (153/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.835546476 seconds)
    (154/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.665121103 seconds)
    (155/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.406588505 seconds)
    (156/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.086341426 seconds)
    (157/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.823164943 seconds)
    (158/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.338048435 seconds)
    (159/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.660665019 seconds)
    (160/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.89880892 seconds)
    (161/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.315503249 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.800464291 seconds)
    (163/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.643460038 seconds)
    (164/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.766574856 seconds)
    (165/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.722350446 seconds)
    (166/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.862197281 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.726832092 seconds)
    (168/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.991158722 seconds)
    (169/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.802990799 seconds)
    (170/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.650326134 seconds)
    (171/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.670551821 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.847406503 seconds)
    (173/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.859717636 seconds)
    (174/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.850802675 seconds)
    (175/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.195210998 seconds)
    (176/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.644876209 seconds)
    (177/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.644326838 seconds)
    (178/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.965331695 seconds)
    (179/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.214876348 seconds)
    (180/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.874459595 seconds)
    (181/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.643851149 seconds)
    (182/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.647532413 seconds)
    (183/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.828269852 seconds)
    (184/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.725246206 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.960381135 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.870101638 seconds)
    (187/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.664429115 seconds)
    (188/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.764950348 seconds)
    (189/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.663530398 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.930066736 seconds)
    (191/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.671525757 seconds)
    (192/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.649336902 seconds)
  done (took 407.165135745 seconds)
done (took 408.691539975 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.727866512 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.842364451 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.695681413 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.695623375 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.70440417 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.668066449 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.725670702 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.698344042 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.71620176 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.716631074 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.669358094 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.702400005 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.719121125 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.705621015 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.73897798 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.694995083 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.694547819 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.704028425 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.718163043 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.721264136 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.69782142 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.705309872 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.730707445 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.69686194 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.712462877 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.712309226 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.71157687 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.664630118 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.704442304 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.717671779 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.670315198 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.710970299 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.719625659 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.703954393 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.703311015 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.70670544 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.707041447 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.849335101 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.72655147 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.707042983 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.70560593 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.719141799 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.712038451 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.710146591 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.704809669 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.732064811 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.71414249 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.723799235 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.673656127 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.667560938 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.730394696 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.718849304 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.706647333 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.669076843 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.668967961 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.722289895 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.708912845 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.728672969 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.706390666 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.708342939 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.741787765 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.72938074 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.718289945 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.716927411 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.704720063 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.721879367 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.708130413 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.722882917 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.70394245 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.708555467 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.709099111 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.705926361 seconds)
done (took 132.797261792 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.878277259 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.669113928 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.908938141 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.703775459 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.930204951 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.877796053 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.703249414 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.705254209 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.702360754 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.563648073 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.704333561 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.705178571 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.669352926 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.707134686 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.872260013 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.705815872 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.705542025 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.461616872 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.705813567 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.888615514 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.667160677 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.705738418 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.712085106 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.566710753 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.669069649 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.677953251 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.889891376 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.70650779 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.465806511 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.667956799 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.670128862 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.471999198 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.891098093 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.725165191 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.71804557 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.7183843 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.93095784 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.711960299 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.874556325 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.881381285 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.912694206 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.744612496 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.669745992 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.675905016 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.710945366 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.709155264 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.709127606 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.734953935 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.681234324 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.708093117 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.465486498 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.715900185 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.708076215 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.707955669 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.70862838 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.736351808 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.707828838 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.710431962 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.891552061 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.709172585 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.885070929 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.570741434 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.569215401 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.709012997 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.67319692 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.708537378 seconds)
  done (took 134.067216652 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.826753318 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.832098412 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.880526148 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.70289958 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.794594481 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.883274612 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.703070201 seconds)
  done (took 14.169142739 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.716251277 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.709219936 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.794527153 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.794471769 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.715423868 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.936372496 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.708956355 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.723781844 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.711850997 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.7929794 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.710498939 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.712748109 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.718413355 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.678871733 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.793894182 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.722871602 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.876017335 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.706944577 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.709788026 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.915760167 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.709602248 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.718193843 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.79571236 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.722435024 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.708909492 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.71812037 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.527070795 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.709942305 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.709502793 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.712467556 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.71012501 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.823955337 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.710317352 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.682088554 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.711206292 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.87663983 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.711251409 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.712057308 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.71135715 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.68168061 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.711811397 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.712334718 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.712043689 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.712105639 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.711668363 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.738287809 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.711627994 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.710743524 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.714323449 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.712050394 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.798354386 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.712574902 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.712575321 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.711922236 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.799769091 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.721506066 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.712704527 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.712605912 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.713692083 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.713498902 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.914909501 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.799943484 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.713318852 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.798650374 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.713461886 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.718487735 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.713611627 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.714091576 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.851921113 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.715197024 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.801056126 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.715204287 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.949441196 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.741372978 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.716270972 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.714272185 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.713744814 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.714172102 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.680081036 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.722094758 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.714764148 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.711593004 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.723328225 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.71455176 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.715975824 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.931540526 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.87891889 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.716195824 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.732293192 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.72599253 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.714804795 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.802515809 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.715151277 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.714831125 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.802672952 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.881718967 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.802899237 seconds)
  done (took 175.640228975 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.727973578 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.729022384 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.721376091 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.746999671 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.710539029 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.709836216 seconds)
  done (took 11.896631898 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.712896801 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.720705335 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.717473151 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.717369366 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.717892757 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.717136376 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.718703545 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.712275702 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.722750707 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.716815526 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.716497398 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.718449812 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.719402447 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.720895722 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.717136237 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.717838211 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.718549614 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.718574129 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.718235609 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.719081944 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.684275284 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.72038672 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.718843227 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.714377785 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.721476034 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.730597096 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.747583684 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.718860408 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.718009812 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.727679546 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.722725564 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.71904444 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.71508849 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.719052891 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.72217305 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.715049239 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.722788212 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.719099685 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.719157094 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.717884097 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.720942935 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.719973678 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.718621621 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.71847244 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.716738001 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.720273577 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.725158486 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.744710134 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.719410409 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.720484428 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.721173063 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.720953901 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.720225037 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.720542046 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.716813221 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.723382701 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.725823794 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.720421431 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.721698339 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.717010802 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.723550181 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.720735298 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.717554167 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.725534511 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.720136688 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.719157722 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.716503335 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.725111482 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.72249418 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.722457654 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.72135891 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.722882986 seconds)
  done (took 126.397621377 seconds)
done (took 463.713655847 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.163585956 seconds)
  done (took 4.719582148 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.845724935 seconds)
  done (took 4.404065698 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.584035861 seconds)
  done (took 27.148658081 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.77850696 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.693461927 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.716825722 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.694447946 seconds)
  done (took 12.44080843 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.325145327 seconds)
  done (took 4.883492517 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.704358633 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.695530276 seconds)
  done (took 6.958968106 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.141631278 seconds)
  done (took 4.699146239 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.568064766 seconds)
  done (took 5.130381943 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.719301107 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.706411758 seconds)
  done (took 6.990946614 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.672109421 seconds)
  done (took 4.230882363 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.060073422 seconds)
  done (took 22.620658466 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.711305677 seconds)
  done (took 4.273759812 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.736796139 seconds)
  done (took 4.295785867 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.072932319 seconds)
  done (took 7.631141433 seconds)
done (took 121.987571537 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.688588891 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.693700505 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.688192123 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.688318745 seconds)
  done (took 12.316986678 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.8406664 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.842855925 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.844404027 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.833283897 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.833153784 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.843064401 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.756916435 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.756318593 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.82038079 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.818371527 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.848360536 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.833879574 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.844975817 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.757381228 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.817966726 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.846336116 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.820045971 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.843798991 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.759940283 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.834055992 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.724689013 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.834315733 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.818150758 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.723982079 seconds)
  done (took 45.056594977 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.273921705 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.846694331 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.929735338 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.81100823 seconds)
  done (took 9.422287569 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.889416175 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.89422824 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.905956617 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.940818871 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.9970344 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.899136545 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.761279908 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.756284161 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.741315778 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.895296323 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.980072745 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.887100657 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.110882187 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.726752473 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.110522854 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.726609228 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.728029451 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.888363737 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.939985315 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.96881475 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.728484118 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.890431947 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.901725352 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.889253375 seconds)
  done (took 46.720000569 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.742371847 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.751034332 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.730511541 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.750545093 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.7292317 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.728666684 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.731222595 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.7423972 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.728340385 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.727234239 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.729605979 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.749862326 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.728938715 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.729862854 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.744749455 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.731404671 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.731423737 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.743318616 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.745573722 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.730588435 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.730732309 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.744554458 seconds)
  done (took 39.765345161 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.694047406 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.690927806 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.132444216 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.036195106 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.694568352 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.698262817 seconds)
  done (took 16.509535117 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.825793349 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.021887909 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.724614632 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.190011244 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.314957789 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.725996162 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.726056854 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.074675208 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.459656986 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.451464324 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.790190569 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.822630866 seconds)
  done (took 25.692851166 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858621896 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.705145745 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.703347332 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.709439238 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.708733492 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.705037352 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.69908408 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367059806 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.735194049 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.05694963 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.702783364 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865230837 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.042512948 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.705754412 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.706713263 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.700192672 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020715204 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.406776518 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.708111276 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.72510387 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77161537 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.703878126 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.70628786 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.002765156 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.705813846 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.704269656 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.052845896 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.704891942 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132548559 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085687922 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09014205 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.706721435 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06307066 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.309645032 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888853744 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995576533 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.724937019 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.707811867 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.71331976 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.710399136 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.725354111 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.714182928 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083966054 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.709257511 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.706285206 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.717355049 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368825393 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.741330584 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.706937593 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.708518241 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09442807 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86948033 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.73463951 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.709054273 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.743684654 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711863778 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.73444563 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910452719 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.438443603 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.707717092 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.723706905 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.711488102 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.699997465 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.728820404 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.552728598 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.738393479 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.735410907 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.736960685 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.70770899 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.707662615 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.762182747 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708181816 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.758272683 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.710257569 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.693955915 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.710195829 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.71474117 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.45655268 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711468197 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.710316096 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020217306 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.708467815 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708956007 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.709048057 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.709545536 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.730003096 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.742711416 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.683582808 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.777990623 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371921317 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.006187589 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761863921 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.770713929 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.016938607 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.685112681 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.709008457 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.71085939 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.715386084 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762100474 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374025845 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.713867665 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.738513536 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046253926 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.009397005 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.712204744 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.712832756 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380473382 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.714765544 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.767124018 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.724446733 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.008562262 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.532024569 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10666964 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.72186093 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780924585 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.713393931 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.723161933 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.72067258 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.740856781 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.713795728 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.118862182 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.697912982 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.718197126 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865855218 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.714479264 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.716031626 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.71261995 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.717872573 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.712203067 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 2.005713156 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.727488251 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098912578 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.714805563 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.714158274 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.731345376 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.714546871 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.718977952 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.019055426 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.716877334 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.068537417 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.715100153 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.714117068 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.714938541 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.019144404 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.715647849 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.741551352 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142071907 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.714488553 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.754201216 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102157824 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778355335 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912082605 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778193581 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.714836084 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.052949611 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.743324203 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.744478191 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.715474992 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.720528568 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.719622376 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.747167988 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.720661754 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541402995 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.716891093 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.725491629 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.716998649 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.760628429 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866936082 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74623875 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.009674973 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.725300054 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.707257047 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.744624229 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.723191685 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020340296 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097406521 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.717853157 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972030032 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.382498361 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.545353708 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.76200109 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.715372535 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.717278992 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.718305589 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.717265443 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.716431468 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.718539697 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011393628 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112096657 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.716349056 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.546092768 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.721185006 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.726667267 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.750064097 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102319785 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.748965353 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.719448053 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.72263959 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.728424474 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.734608779 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.106492173 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022759039 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.765341808 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.717549907 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.367323108 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.748040726 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.719359355 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.718809843 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774584114 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.728778848 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4744801 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152936487 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.713377239 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105974789 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.72505533 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.769951821 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.718224154 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.730453782 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.738649936 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.736167777 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.749947532 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.014958955 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.724426339 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.723908886 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.442618506 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.731981979 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.483377111 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.743565785 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.725835876 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.725463204 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390015168 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.722666898 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.722307704 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.095855555 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387508775 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.723828777 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388294909 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.724264587 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.726136403 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112930352 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038267995 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.738896266 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.739737854 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115678537 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.022513338 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819183152 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.722171164 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.727557255 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.700088957 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438218156 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.724590467 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979316015 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390993646 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.738354717 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.728978036 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.787842644 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.751949253 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.307463609 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.724341761 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.723159279 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.7416624 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.739139314 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443002494 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.733615497 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.723348269 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.58392628 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.726910663 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.397958079 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.727302264 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.022496786 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.111694371 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.098337715 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.731555039 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.7334117 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.058640906 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117171534 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.727308899 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.739451993 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.48846421 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.675015098 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.754390136 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.723278987 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.735644246 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.739209644 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158159428 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.735109262 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.727184721 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.727926365 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.72677126 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.724249432 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.726930219 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.735707034 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.726192556 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.418070203 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.739390743 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.724625108 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.760344594 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.728820683 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.062324476 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.772191632 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.556338693 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042611424 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.736489396 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790328225 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.755054326 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.744524356 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.707400711 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.72841302 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.725769737 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.748854445 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.037110166 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.729691185 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.707135802 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.720956973 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031963492 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.726796194 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.7435544 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066297118 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.727681572 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.746931087 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.741812559 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792717426 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.744226483 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.732300734 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.723586498 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790507717 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881973609 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026068049 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.11648255 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.11884151 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.312784747 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.745905887 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.733090989 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.774231625 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884943819 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.73599017 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.73768857 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.72848761 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55594423 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.72726888 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.562428714 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12671758 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.733116342 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.731114969 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.729018334 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058404075 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.728821312 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.086487953 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.730273591 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.750348142 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781305221 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.750661589 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.737839638 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028967231 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.086355954 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.731016703 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.739477695 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.732838513 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.731997554 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135243944 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.033128305 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.443970983 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.486890407 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.734939897 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.748042261 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411059745 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.093400844 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.731787401 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.733646506 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.731592334 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.731318138 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.757325006 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.764823795 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.754545743 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047771298 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117945096 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35178377 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.124346539 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.757124771 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.689364688 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.732334328 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.07242625 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663797261 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.031475372 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.567919915 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.712145797 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076961602 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884180104 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033315409 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.734709282 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0576845 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.749963875 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.73325777 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.734002418 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.735274367 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.734616183 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.117751077 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.568122315 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074327748 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.762500943 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.75203858 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793366181 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.032982616 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.042584186 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.736818418 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044287546 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134917226 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.738515701 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.735438424 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.572202094 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136267817 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.739966444 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.763611351 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071664142 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.737052666 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.800150005 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.696922772 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.734673033 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.490489398 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.034018921 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786651431 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.751619113 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.715124458 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.577178634 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.743759245 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.432528117 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.738551669 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.740102076 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.096258958 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.765874627 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.735300208 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11117999 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.763141319 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.737245288 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067548185 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.565689813 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.74465475 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.739693574 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.738874266 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.742782026 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.737269802 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.807425511 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.740877244 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.749224465 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.317082291 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.742853893 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.737782438 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.780831068 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.736380444 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.737947612 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.742628793 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.740666323 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.769748374 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.75884587 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.719058967 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.744865671 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939750369 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504030016 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.747644026 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.438539008 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.164475175 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.0772534 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.758211432 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.718710738 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.768319491 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.74179035 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.739191346 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.740002831 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.732388664 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.49609011 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.760626404 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.132524115 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770605466 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.039117684 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04075658 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.742051626 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048033832 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.741567765 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.794391871 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.717496827 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.741400425 seconds)
  done (took 1171.503959437 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.773865378 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.777461854 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.751000459 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.787982745 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.784957571 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.829972582 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.811615639 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.807497518 seconds)
  done (took 23.921264849 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.732754563 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.765902284 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.750631697 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.767556056 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.750981532 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.387156775 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.747901741 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.76831097 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.7914086 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.750246871 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.751059754 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.559427145 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.769970399 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.743673479 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.756282834 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.768955116 seconds)
  done (took 39.167826371 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.016751362 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.984637572 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.47281697 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.779218573 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.759587864 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.751863278 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.195444127 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.764983592 seconds)
  done (took 31.323185302 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.779388916 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.779061779 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.781714002 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.780738388 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.780826948 seconds)
  done (took 10.500799928 seconds)
done (took 1473.461427919 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.771459206 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.772145955 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.772974063 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.770857454 seconds)
  done (took 8.687961298 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.720996574 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.724793565 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.725743685 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.761634842 seconds)
  done (took 11.533484949 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.283914875 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.513257936 seconds)
  done (took 6.397629964 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.744172775 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.592341247 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.578852101 seconds)
  done (took 9.518186776 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.125875923 seconds)
  done (took 3.726772518 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.275630162 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.345048417 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.738739821 seconds)
  done (took 8.962793593 seconds)
done (took 50.430568092 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.753814225 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.509817694 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.895829909 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.743999429 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.902743848 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.897331079 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.020460633 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.741263886 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.749485183 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.752095779 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.745262788 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.904606165 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.008717659 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.510186107 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.01006399 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.507577814 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.904261638 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.739352051 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.75693627 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.737057066 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.021330646 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.748088776 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.740625466 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.745064928 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.906667391 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.888066562 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.740786381 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.510751961 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.755301215 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.740809079 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.888434487 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.737383154 seconds)
  done (took 94.816686329 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.757483337 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.740124495 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.741115263 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.73856913 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.751630218 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.738691212 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.742692908 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.745183169 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.741056247 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.740795111 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.763349026 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.756078339 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.743165105 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.741846712 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.742579277 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.740671771 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.740761726 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.740469161 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.760110696 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.741348952 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.741608273 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.741331003 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.740940869 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.743114121 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.740802096 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.74302647 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.741352375 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.745542433 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.742523124 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.740208724 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.744682407 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.741527187 seconds)
  done (took 89.419580942 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.742400273 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.748487989 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.741640121 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.743872737 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.741654858 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.743038343 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.74167113 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.742563283 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.774828838 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.755995438 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.740460152 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.741462305 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.744951017 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.760105877 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.743487911 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.758074962 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.742396292 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.745082528 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.741086908 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.748037163 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.743363803 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.743460533 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.74330807 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.743515779 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.742182228 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.744993899 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.74650275 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.742874286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.745932775 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.750199589 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.745302318 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.743640165 seconds)
  done (took 89.481899691 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.068264896 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.78185124 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.785566866 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.753071742 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.783509551 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.781625513 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.753141374 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.069716756 seconds)
  done (took 18.385038977 seconds)
done (took 293.707209493 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.752286377 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.753145006 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.809508528 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.754753381 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.807934585 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.812029937 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 2.071361449 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.810017321 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 2.06366047 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.756313774 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.802020215 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.754531494 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.755164187 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.981485914 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.748608954 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.759248645 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.758694244 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.748013627 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.758161774 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.098072388 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.814026071 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.768797135 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.75474479 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.770194869 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.732898157 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.863521471 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.867186882 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.000247029 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.964278209 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.865153662 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.750210484 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.757444644 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.780334078 seconds)
  done (took 79.852953021 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.778054668 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.783690021 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.784642936 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.785596618 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.784979012 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.784361615 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.77816341 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.785352243 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.786526346 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.786182447 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.784169132 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.78567484 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.787581438 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.784895622 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.785719679 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.76680156 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.778665779 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.784290936 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.777725296 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.765874697 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.785960282 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.785527684 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.786802009 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.785312434 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.786209056 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.786061063 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.785731831 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.785962167 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.785785608 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.787460124 seconds)
  done (took 55.111575294 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.786488422 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.751566802 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.750163691 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.795101109 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.781290624 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.786273939 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.19166327 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.789730943 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.785046758 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.784430827 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.752925913 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.789704822 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.850380973 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.752508263 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.78466277 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.788353463 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.78841653 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.782452852 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.764609661 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.804588628 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.204331361 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.789512339 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.193257118 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.806347092 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.786787691 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.783385234 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.795323204 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.751807265 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.787027177 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.756323552 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.76356756 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.18391864 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.756840727 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.75352613 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.793343483 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.793360594 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.790013101 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.753920104 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.784532446 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.783688625 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.191987612 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.785982351 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.753332948 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.753394269 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.786683069 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.789587977 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.754299062 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.755439362 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.105993576 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.798515999 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.754719856 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.788444187 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.793104556 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.789171933 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.106714967 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.788453127 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.784765716 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.754160847 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.797523344 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.183368709 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.792569014 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.785123584 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.764749065 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.786134397 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.75903053 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.787377361 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.807430401 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.789124581 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.758618118 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.789480702 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.756259298 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.791957204 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.79489815 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.757859641 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.760453058 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.756958759 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.789174657 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.771205683 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.777628845 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.185026462 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.794108873 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.757456727 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.212102042 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.793532265 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.794399413 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.796379833 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.7946213 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.910693252 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.187342259 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.757506454 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.757704384 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.783295418 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.198284084 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.802919631 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.789218866 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.76026735 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.794624372 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.796313554 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.759773083 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.758834136 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.792884137 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.809993994 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.760440486 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.795479649 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.193363975 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.803319821 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.761036721 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.790864956 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.913663952 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.795577916 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.81118842 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.794788849 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.21297841 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.794316512 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.796826608 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.75971714 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.764465509 seconds)
  done (took 253.815821417 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.762560868 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.761013743 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.763847484 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.761651534 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.760976588 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.791996524 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.762997027 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.765531217 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.789013812 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.76138956 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.763952455 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.793589744 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.791794823 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.761017934 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.78388418 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.762129528 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.763420475 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.782733544 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.765012157 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.765365134 seconds)
  done (took 53.03328524 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.798490437 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.560996828 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.53555742 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.79862104 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.799173414 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.792374714 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.871950895 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.801321593 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.797998475 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.219947034 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 2.031801251 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.80093132 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.797321643 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.79915323 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.534230226 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.777979798 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.221285612 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.564702815 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.799653922 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.566376493 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.778707264 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.800646577 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.791476136 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.567084125 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.229065442 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.194167499 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.873752521 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.567859223 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.80231313 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.799458577 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.566336474 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.801571345 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.793932734 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.556299583 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.800068291 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.822199527 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.79960224 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.873619683 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.876389448 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.22669447 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.571283331 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.206405577 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.819668339 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.059326259 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.802342882 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.778929011 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.574147103 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.802443872 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.779726249 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.802663104 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.813626859 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.545376127 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.795182963 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.546269187 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.802262145 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.802835892 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.569961027 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.548312533 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.542171459 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 2.033285239 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.794299331 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.198312439 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.802757669 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.577661936 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.803217784 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.802992755 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.802165415 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 2.035784998 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.57292083 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.201005869 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.228952649 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.230995645 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.802677632 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.883734097 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.806029804 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.227128813 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.885521964 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.289025161 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.230225086 seconds)
  done (took 164.388159699 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.182278068 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.923548937 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.348446266 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.57299144 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.496992529 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.003162483 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.924201604 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.133210446 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.783293741 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.967537353 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.716959329 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.923809236 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.696289801 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.893431421 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.931457764 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.997533625 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.391890058 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.770989524 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.637338868 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.694031204 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.791326467 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.962607745 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.651994154 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.283249707 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.779603608 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.656675335 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.784470637 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.510613326 seconds)
  done (took 68.037897 seconds)
done (took 675.849579283 seconds)
SAVING RESULT...
DONE!
