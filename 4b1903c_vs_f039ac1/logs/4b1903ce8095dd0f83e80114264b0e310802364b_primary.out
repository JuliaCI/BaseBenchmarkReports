cset: moving following pidspec: 19882
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.168391874 seconds)
loading group "string"... done (took 0.543928456 seconds)
loading group "linalg"... done (took 9.896994234 seconds)
loading group "parallel"... done (took 0.166964389 seconds)
loading group "find"... done (took 2.463150097 seconds)
loading group "tuple"... done (took 2.257538965 seconds)
loading group "dates"... done (took 1.428181545 seconds)
loading group "micro"... done (took 0.201312262 seconds)
loading group "io"... done (took 0.5224839 seconds)
loading group "scalar"... done (took 55.1764209 seconds)
loading group "sparse"... done (took 15.121215345 seconds)
loading group "broadcast"... done (took 1.41876645 seconds)
loading group "union"... done (took 11.119617167 seconds)
loading group "simd"... done (took 3.872292419 seconds)
loading group "random"... done (took 14.347097211 seconds)
loading group "problem"... done (took 2.226810337 seconds)
loading group "array"... done (took 23.705641479 seconds)
loading group "misc"... done (took 1.107991805 seconds)
loading group "sort"... done (took 3.760832785 seconds)
loading group "collection"... done (took 20.637157072 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.914306421 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.177960549 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.238189926 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.256820927 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.306648143 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.203350371 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.199243004 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.181659832 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.673873472 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.233679576 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.190714615 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.401706041 seconds)
done (took 6.801706767 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.344490036 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091603548 seconds)
    (2/2) benchmarking "String"...
    done (took 0.233485976 seconds)
  done (took 1.006180395 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.114724994 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.203575748 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.150577039 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.133709252 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.148202995 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.146859737 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.132034318 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.147169483 seconds)
  done (took 1.740135949 seconds)
done (took 3.882003291 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.54146264 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.975410071 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.563102891 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.22126871 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.341719712 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.344282398 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.330828523 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.268469195 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.133081239 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.099742362 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.313862469 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.506505052 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.474566354 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.035086585 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.098168629 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.150276302 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.198433335 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.864070633 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.120850703 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.153864608 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.527849945 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.245395381 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.156940907 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.134286071 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.242028543 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.166068535 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.176042358 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.148371312 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.764486252 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.179097495 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.239907812 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.123160005 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.175944022 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.208182898 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.283645428 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.150472067 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.784875088 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.245827909 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.125844844 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.140408148 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.774928711 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.165971595 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.248110322 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.14562641 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.113989635 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.183536328 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.142613456 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.115753198 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.149096124 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.140298009 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.213300029 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.519446362 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.148584957 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.237666257 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.149864169 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.795526652 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.140486371 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.327107309 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.169309589 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.152198475 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.132714153 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.130122343 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.209694613 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.135862598 seconds)
  done (took 23.301853609 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.252086107 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.247924823 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.1189293 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.201943068 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.184121668 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.121250544 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.126788749 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.13547449 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.169305818 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.222001624 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.182043401 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.254666323 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.133777067 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.129349759 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.223827346 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.293201181 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.151904722 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.162961086 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.131896731 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.151899205 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.171907405 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.153385706 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.151331605 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.137271716 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.211515235 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.250182583 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.161585213 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.166040597 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.129957867 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.155412081 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.181581122 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.188261999 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.132886032 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.129210704 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.231600401 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.163008159 seconds)
  done (took 7.012505362 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.277581248 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.141784581 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.303365323 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.230345213 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.168713144 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.220636087 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.236840872 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.332976352 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.320395213 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.224430356 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.168893544 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.139399361 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134184382 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.122148215 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.118302544 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.890969306 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.217928062 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202071926 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.227254737 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152445223 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.122743192 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.785019869 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.145673204 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.126843294 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.150422969 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.096134153 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.261050585 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.152694976 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.517023917 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123988323 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.155138374 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171374865 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.233701646 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.163440407 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.17926749 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.151582055 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.128820222 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.256720495 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.165877937 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.13903458 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.138999869 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120334646 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.181147896 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.175454365 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.148371591 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148073649 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182147045 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.143240282 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149171553 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.184834398 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.129011657 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.239877432 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.216461395 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.143687895 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.318500488 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.14649272 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.158088748 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.149151159 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.870420813 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.166874433 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.142618276 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.121014202 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.152055649 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.137374522 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.857109693 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.161351104 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.441881192 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.121826735 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.200000572 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152140716 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.158006825 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127736146 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.141622758 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.148793992 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.234807722 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.145442448 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121110792 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.144718263 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.123783269 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.149571604 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.149434924 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.147036226 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.124833193 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.209437667 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.140991812 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.168079823 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.168515493 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.135438172 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.148146074 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.15862946 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.139575361 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.130570445 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.270559545 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.139823646 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.168035405 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.158465891 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.175204682 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.149333655 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.370654677 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.126447295 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.126492412 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.188871294 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.143326257 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.169954154 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.153370481 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.125269281 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.146263432 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.125037758 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.144061546 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.192984737 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.132089423 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.142255729 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.132868852 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.158693993 seconds)
  done (took 33.408235643 seconds)
done (took 64.399623445 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.808229384 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.129610895 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.11050211 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.110580542 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.134274407 seconds)
  done (took 2.053151033 seconds)
done (took 2.797678112 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.232299303 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.327430185 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.240552517 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.149153673 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.210055483 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.21013168 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.190989581 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.210252994 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.208476721 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.192586082 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.227120013 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.147683515 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.232711646 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.225525047 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.14361114 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.247746169 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.146179483 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.187690348 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.147404219 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.231743785 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.125280247 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.146210981 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.129571924 seconds)
  done (took 5.271361952 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.150113991 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.143916904 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.170022459 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.149368087 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.152997738 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.151530652 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.168222858 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.152953459 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.168466744 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.141228015 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.152230601 seconds)
  done (took 2.450840991 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.146978327 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.143848809 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.158913435 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.142761939 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.146781445 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.141760345 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.16214129 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.149908448 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161533809 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.137878358 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.147512194 seconds)
  done (took 2.391980991 seconds)
done (took 10.854049947 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.238255298 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.015889102 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.198293162 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.308147636 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.374981833 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.318493573 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.671157415 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.248930887 seconds)
  done (took 16.23950399 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.269071437 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.13595835 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.152279351 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.134612229 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.159605631 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.138249843 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.152294436 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.139982117 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.13903004 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.157131783 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.134310166 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.156330634 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.138667843 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.157629961 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.134256877 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.152721515 seconds)
  done (took 3.262094782 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.186354075 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.179079616 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.141189323 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.160353632 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.139415983 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.162649175 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.144038637 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.158838005 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.138473405 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.15586605 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.14551648 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.15857212 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.140986085 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.154848392 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.141756155 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.17944796 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.136884865 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.159789663 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.16063167 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.160337847 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.142590199 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.157740939 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.140466885 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.160373187 seconds)
  done (took 4.526951018 seconds)
done (took 24.777492795 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.200219664 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.14736888 seconds)
  done (took 1.109930809 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.219215516 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.229122014 seconds)
  done (took 1.215415732 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.162583245 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.151314004 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.166410687 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.163573175 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.135091271 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.151844169 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.160329117 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.1531421 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.134351582 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.153998774 seconds)
  done (took 2.302472961 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.144106104 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.143159965 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.172879806 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.227634883 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.165111429 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.14197818 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.162588693 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.143714924 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.162947956 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.140904929 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.160531517 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.158120596 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.162481695 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.159710813 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.162147086 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.14511161 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.167313595 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.140734517 seconds)
  done (took 3.631409064 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.141876352 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.140869241 seconds)
  done (took 1.057527777 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.144142911 seconds)
    (2/7) benchmarking "second"...
    done (took 0.138860605 seconds)
    (3/7) benchmarking "month"...
    done (took 0.157188634 seconds)
    (4/7) benchmarking "year"...
    done (took 0.139176217 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.153973211 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.133842928 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.15198078 seconds)
  done (took 1.79349888 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.573525516 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.271746219 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.40618608 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.105278052 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.156901307 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.378644519 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.158513384 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108280111 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.109931368 seconds)
  done (took 3.069452477 seconds)
done (took 14.945612219 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.141113825 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.260220102 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.677285917 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.157912609 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.154114081 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.196881111 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.39372437 seconds)
done (took 2.763095083 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.385635981 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.212955013 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.120826469 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.137985703 seconds)
  done (took 1.634944709 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.132809836 seconds)
    (2/2) benchmarking "read"...
    done (took 0.148133711 seconds)
  done (took 1.065318711 seconds)
done (took 3.484255575 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.141057253 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.139480726 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.15699706 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.137204459 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.153721923 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.138034592 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.155400348 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.137269341 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.153912868 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.138939875 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.153908049 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.135185137 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.135125423 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.1596416 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137283519 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.158489498 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.140155741 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.15746339 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.265288973 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.156699326 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.139591215 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.156699606 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.139683056 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.137927037 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.157174317 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.137926268 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.156630253 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.13749891 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.156382037 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.138971652 seconds)
  done (took 5.289207028 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.146749387 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.135490693 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.158733104 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.148017007 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.154988843 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.1399539 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.155759053 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.139792917 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.159688184 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.1395843 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.161298724 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.140226771 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.157439993 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.142262434 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.160876323 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.144758422 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.166072935 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.139589539 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.135579671 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.156154844 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.135809728 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.153510094 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.134878674 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.153455129 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.134701347 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.149542271 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.136810554 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.151935592 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.135609493 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.151032544 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.138636136 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.136868173 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.152694627 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.143973406 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.156703027 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.135413938 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.159662622 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.13112701 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.155613783 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.131533557 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.150761001 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.134103157 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.151624589 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.14143691 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.15168158 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.136831297 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.151617115 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.137952109 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.154627973 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.138407195 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.130998921 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.155777281 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.136855811 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.157259523 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.138785666 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.152215096 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.136478319 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.149849293 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.137320116 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.153534677 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.13321694 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.150782233 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.142205094 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.134809602 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.169192954 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.159159136 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.136383125 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.136010872 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.157490558 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.140391386 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.156655047 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.144457616 seconds)
  done (took 11.314894793 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.165638032 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.164166896 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.137168909 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.156554545 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.137746427 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.135123259 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.160586972 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1365967 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.156984069 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.140276986 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.157078704 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.136155373 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.156404526 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.137066941 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.156754641 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.136613671 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.160854254 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.13695345 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.157764406 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.137944008 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.155277917 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.14240079 seconds)
  done (took 4.06059339 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.292767956 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.146685273 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.210239515 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.148898963 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.174978536 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.168128643 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.141304142 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.162113423 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141208949 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.164289677 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.146298073 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.159247625 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.154240494 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.16556016 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.14495272 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.166780566 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.158729542 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.148538023 seconds)
  done (took 3.799652875 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.156555803 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.142614783 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.170932212 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.137331011 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.158228291 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.137834078 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.160004076 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.139106795 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.158986977 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.138283925 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.159913212 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138101081 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.158323345 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.13861169 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158126323 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.138127691 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.157912958 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.138288116 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.164025887 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.147418118 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.165667994 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.145350746 seconds)
  done (took 4.114638391 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159842882 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.16468421 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.165288757 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.168549856 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.145571304 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.163765309 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.154103046 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.163640013 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.152100348 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.164725556 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.144953629 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.161165048 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.154819129 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.158533428 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.146741425 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.158306793 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.142523082 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.13911797 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.159339396 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.137678542 seconds)
  done (took 3.914435488 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.24092498 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.18076328 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.174832358 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.163871048 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.175666682 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.154465313 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.181834226 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.154140202 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.175705235 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.165776947 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.17663147 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.173969889 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.164056267 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.179323571 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.154380805 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.18381262 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.162670965 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.183700246 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.174339 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.156279231 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.184230342 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.158517644 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.190806317 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.160561619 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.184083116 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.159971041 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.182374519 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.18640918 seconds)
  done (took 5.698823363 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.159252095 seconds)
    (2/2) benchmarking "in"...
    done (took 0.174181507 seconds)
  done (took 1.146799394 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.155903205 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.155648773 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.167153728 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.14395406 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.170490815 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.143922422 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.168450472 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.146208816 seconds)
  done (took 2.064325499 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.264222916 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.27079526 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.150625788 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.175004726 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.256360813 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.236159221 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.173635069 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.166240134 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.137716256 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.153084342 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.251033878 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.129396203 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.160506095 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.134694014 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.160914247 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.143451692 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.160958946 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.146958981 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.167483658 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.139994479 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.164810343 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.143431717 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.161786356 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.148377947 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.158839752 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.142490397 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.164743715 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.1510565 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.160712755 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.155032354 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.164079176 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.14053519 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.162624521 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.14634801 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.167200871 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.265127709 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.146232352 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.157222019 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.138767158 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.167379246 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.169298065 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.161856825 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.139560135 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.158178215 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.142742733 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.16497901 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.143488219 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.161907461 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.131490953 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.155321079 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.141338644 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.153917617 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.139571031 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.159423834 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.139296206 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1662819 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.14142406 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.156844596 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.136639303 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.155232101 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.138904325 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.154758367 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.141200847 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.163777671 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.139447551 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.160210666 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.138246491 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.161495047 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.140407241 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.160755359 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.140406891 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.174276002 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.141319088 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.165092642 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.145321273 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.161410051 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1370103 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.164485372 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.13845804 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.160674972 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.144610079 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.187168494 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.14039865 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.156125301 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.136502624 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.166846916 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.142840301 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.163169842 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.132360477 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.168031354 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.142865164 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.160658838 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.13427776 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.138937221 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.157866165 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.143758365 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.153940805 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.138923532 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.161685016 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.144390917 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.167589887 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.139027386 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.162987347 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.145824339 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.166996236 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.139145069 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.211149896 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.158978875 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.136700205 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.163801975 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.146982448 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.155225675 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.141598663 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.139073691 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.158772425 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.13521056 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.167215119 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.140277126 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.163384464 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.144585076 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.16261614 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.141410789 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.164234432 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.14046465 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.158788279 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.14512467 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.169829138 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.142567431 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.164659557 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.142546479 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.173892924 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.141688269 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.165353639 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.138490306 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.167704357 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.13722611 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.16129579 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.142867469 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.166989671 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.142065482 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.157688558 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.139648554 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.163375385 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.141502491 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.163463804 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.142008282 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.156255415 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.133392521 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.16175339 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.136255735 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.163177105 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.150064893 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.157812177 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.143448479 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.157343822 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.150096322 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.157324336 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.146668232 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.164569112 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.147765368 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.166640534 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.134784877 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.136933335 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.166004351 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.140683253 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.159464832 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.142606193 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.161985474 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.147475458 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.156197028 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.145994822 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.154574265 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.137917748 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.168830408 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.143603457 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.165028598 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.138326808 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.199831208 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.153522944 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.16893482 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.140507812 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.163024991 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.145991121 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.162157562 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.144954257 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.167892719 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.146862461 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.160393161 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.140887469 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.168594972 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.137692579 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.164479854 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.14097519 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.163644273 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.135225576 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.164115143 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.134808065 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.167045684 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.145443984 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.165362998 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.148311458 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.142181069 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.162006565 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.170411056 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.138729304 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.144812899 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.156071034 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.145751915 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.174466809 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.148203762 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.169118852 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.14147658 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.160362222 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.143578244 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.171429411 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.143596193 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.164326413 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.143240701 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.155947275 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.135352547 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.169995361 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.145290124 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.158559618 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.142807755 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.163138064 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144922759 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.159495142 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.135440059 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.166508883 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.145377285 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.158238489 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.144073349 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.159790362 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.142001368 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.170236523 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.135708668 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.159482572 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.145381546 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.166791043 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.142480409 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.162907099 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.146306943 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.167995037 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.145365412 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.143076993 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.162398514 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.149147109 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.161889301 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.140951514 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.159655917 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.143575171 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.156749612 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.143568257 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.163638965 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.138879741 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.159520006 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.144248162 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.169653836 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.147476785 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.161684528 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.147253642 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.169993754 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.148488226 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.160958876 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.148235191 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.160691454 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.135985309 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.159191053 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.135263081 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.164662001 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.139301444 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.167281538 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.141197355 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.161206882 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.147403102 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.166380445 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.142517564 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.167713645 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.153827592 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.15688245 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.137277652 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160294895 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.142930676 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.159362654 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.138887494 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.164844077 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.144535628 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.169710059 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.146830473 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.158701815 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.143366416 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.167671462 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.140099379 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.168755608 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.150022011 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.147700486 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.160921651 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.147427686 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.160628666 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.145246962 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.15855885 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.14136253 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.164393391 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.140089323 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.161838876 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.139550567 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.161109873 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.134912477 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.161306756 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.150022011 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.1629328 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.147569533 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.163702731 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.141066263 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.160984857 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.139622224 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.170711163 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.14142853 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.170044808 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.143888269 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.158560876 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.138907748 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.168601747 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.144248022 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.17135496 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.138092351 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.167425969 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.149660232 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.16759736 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.144925692 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.171518948 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.152250995 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.168440275 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.149844544 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.156832862 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.142296936 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.167360039 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.144938333 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.146108874 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.16944131 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.135994389 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.166675106 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.148502404 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.167028642 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.140989368 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.159462457 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.143781272 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.171071824 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.146992505 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.168213151 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.146332645 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.165924591 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.140287811 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.16977557 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.150168049 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.164967626 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.150329941 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.165132522 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.147624429 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.161655543 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.150413261 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.165106192 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.138267792 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.135523449 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.163917352 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.149261998 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.161113086 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.146836271 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.172480104 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.14092225 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.163952971 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.147796029 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.162820496 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.145090238 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.171491221 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.141874675 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.175676948 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.145588206 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.163999625 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.149069166 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.170431449 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.137898332 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.163765448 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.143341971 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.171000306 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.144292581 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.170725062 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.143592841 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.17027731 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.14776928 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.169343043 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.150467459 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.170350085 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.139471716 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.17084023 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.148206068 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.166988833 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.143618053 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.141407368 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.162865474 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.142178345 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.173246612 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.140387265 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.175924327 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.147169692 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.165739373 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.141669133 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.172188377 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.14224665 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.174436218 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.139718885 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.169671716 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.137176871 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.168523176 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.141838568 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.173089539 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.140555443 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.160902235 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.149588226 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.172188098 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.148456658 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.168989576 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.150153102 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.160321575 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.138061621 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.16842903 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.142985711 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.175282415 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.148051369 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.163662223 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.143025241 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.16908875 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.147941648 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.171776732 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.141210555 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.161269111 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.146705108 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.166750674 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.143130771 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.160430387 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.149544995 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.143203336 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.169691132 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.163496839 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.142430403 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.141649856 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.175691336 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.141160479 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.162188013 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.14196938 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.174515628 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.144086479 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.163779486 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.139083259 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.172911933 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.146067317 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.174407653 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.141140783 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.167131589 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.141696511 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.170066389 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.151380773 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.16537075 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.144313882 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.165742026 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.149516918 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1722571 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.13829049 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.165456585 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.15491984 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.172494421 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.145833908 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.169534058 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.144652054 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.173848923 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.152473091 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.1688471 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.140517381 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.162485676 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.145214276 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.161887555 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.149749001 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.172234961 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.145660772 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.165088381 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.151489166 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.170077005 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.150173636 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.146512975 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.162946908 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.152030506 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.165771639 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.147577496 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.163177873 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.13946599 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.171080833 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.15040949 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.168577164 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.147337451 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.169943119 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.149518594 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.163634077 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.14620246 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.171053805 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.150129845 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.172990154 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.145824898 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.16557734 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.150124817 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.176274092 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.149761782 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.166428217 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.153068488 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.174360092 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.147541178 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.167806395 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.149675737 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.174322237 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.149638232 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.173979526 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.146421902 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.165763048 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.153485369 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.17373564 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.156156171 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.166690611 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.141777317 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.17128044 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.144581793 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.160742857 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.151513611 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.173577031 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.153971046 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.144893007 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.165975995 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.154088589 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.17385451 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.166727557 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.145114124 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.143629159 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.174317488 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.143535362 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.172319958 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.142526435 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.176606327 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.152601319 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.174937469 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.153839535 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.163316509 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.151965903 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.170836739 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.155083478 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.170641812 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.141742885 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.16410802 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.150404531 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.175189876 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.153586151 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.172523195 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.150979744 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.171671411 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.149202004 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.167923659 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.145858911 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.173649457 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.154139364 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.146830683 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.172017265 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.145631299 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.17093291 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.147913432 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.178891952 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.153771579 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.170795881 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.157039802 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.173574307 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.145028987 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.168245487 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.146929718 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.173149603 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.147308956 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.174935095 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.145137171 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.163912813 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.15245144 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.177924581 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.147355191 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.177363965 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.154200405 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.168922738 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.149613439 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.175884797 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.152407021 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.170233728 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.149875274 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.171012738 seconds)
  done (took 93.847271363 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.199825341 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.178661826 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.149407477 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.17130258 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.16778244 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.174746663 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.150240194 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.172907323 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.151479598 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.180338575 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.151224049 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.172211285 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.16520781 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.192650127 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.186954081 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.16148562 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.171263329 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.152344093 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.148823045 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.173818752 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.186391509 seconds)
  done (took 4.466984454 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.166399582 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.18340831 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.158411555 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.182187134 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.15302756 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.177819261 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.158746583 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.177541362 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.159127987 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.177439673 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.15820706 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.179098334 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.155420044 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.177857114 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.155102964 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.176090409 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.158723257 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.176628187 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.15686038 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.18079834 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.153680786 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.181412385 seconds)
  done (took 4.613634178 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.18297222 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.175760619 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.149981013 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.170413431 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.154565465 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.150296836 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.176687553 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.151992303 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.182323674 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.146396829 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.164416439 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.146356391 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.1709327 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.149739084 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.166526344 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.151136747 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.1822861 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.154615682 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.178512226 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.150913953 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.163850166 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.151642119 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.1508805 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.165910204 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.156223637 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.178811076 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.154380036 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.177352371 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.143428435 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.1785938 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.151375046 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.165904547 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.143117501 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.164866845 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.142682739 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.176715559 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.154760113 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.149582988 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.174336345 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.141357431 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.174671095 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.155098843 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.165202991 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.15178229 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.174102726 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.145884054 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.178280423 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.150999439 seconds)
  done (took 8.655394936 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.184713992 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.207503272 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.151646379 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.206730478 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.159189936 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.186234437 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.151937897 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.182583553 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.177444841 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.154529148 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.185600277 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.16166134 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.180677725 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.158534895 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.174999279 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.15707577 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.179865121 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.15602871 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.182594588 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.155485135 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.184380081 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.152919167 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.182816963 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.160114146 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.179687026 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.155532488 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.178161832 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.159631682 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.182879121 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.160196349 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.181256709 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.159028533 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.185713211 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.151489097 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.177802498 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.156045332 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.185765872 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.15665365 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.179883 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.153921598 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.180253718 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.158855885 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.175254478 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.162246889 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.179869171 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.153057802 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.179441883 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.153326201 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.184224474 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.156338735 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.184977434 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.162083182 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.182041236 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.156356475 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.183148849 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.160908311 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.180802391 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.154794614 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.182231204 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.18122961 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.15586172 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.157485459 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.185784309 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.179284042 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.162456692 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.182774569 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.153804126 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.180603763 seconds)
  done (took 12.637560126 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.190699669 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.183635992 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.168836135 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.190231244 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.159179948 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.184676347 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.158944514 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.184017814 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.16000666 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.188251593 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.160907403 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.5728021 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.163359042 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.188360126 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.159745873 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.184007408 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159774228 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.182715833 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.160402242 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.18369375 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.16062259 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.19100739 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.159441016 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.192702507 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.193700749 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.158725212 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.183371154 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.161336718 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.190178444 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.161003644 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.195162248 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.160752216 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.183449934 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.168001811 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.194448121 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.182187065 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.156460819 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.18225935 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.160969213 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.182806138 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.158069332 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.190696317 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.161252 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.179761337 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.161468228 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.183856341 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.16922969 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.194223791 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.1645212 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.189496094 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.182274715 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.1691639 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.184031573 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.16198261 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.192603193 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.175307838 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.191087917 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.190384825 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.162588832 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.192537543 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.168894801 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.197964908 seconds)
  done (took 12.257116914 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.171407621 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.187446322 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.157242272 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.155515866 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.181016804 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.155352227 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.180981883 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.15686052 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.180724657 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1560725 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.180713204 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.156742139 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.180977623 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.155897548 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.180839756 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.156749891 seconds)
  done (took 3.639128132 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.176291482 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.195144998 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.259348204 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.15932899 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.180310778 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.163244991 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.180260004 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.159803701 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.154180361 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.185852126 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.158540901 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.182033623 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.15599344 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.18214062 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.15508271 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.1840505 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.154359783 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.182759065 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.15765664 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.260799575 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.185318049 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.158179682 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.18522509 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.16087374 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.183252773 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.160010502 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.186665427 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.156198704 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.180948988 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.156837332 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.182833795 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.162412553 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.179650289 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.159822628 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.180097762 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.15812786 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.178690321 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.157939149 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.182103255 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.157402069 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.181058918 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.159333669 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.179974702 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.159504012 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.15480558 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.182895604 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.155369479 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.186393326 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.157801561 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.184074176 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.157042107 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.187215358 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.161211143 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.190074799 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.163276908 seconds)
  done (took 10.508520532 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.171095291 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.181297915 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.170993672 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.178186416 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.159084755 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.157858831 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.183744316 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.15984407 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.183691655 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.154869135 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.184800735 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.159736304 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.184082557 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.158349117 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.184532405 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.15858518 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.181085947 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.157999422 seconds)
  done (took 4.028480298 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.166470401 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.156649739 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.188137193 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.15631492 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.181126036 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.158097479 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.181829547 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.157813714 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.181411547 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.157297167 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.180515762 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.15724304 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.181693985 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.15692212 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.181934658 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15854565 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.181993325 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.156783415 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.18089556 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.156708964 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.182054157 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.158025892 seconds)
  done (took 4.680610852 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.171270174 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.284664062 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.187423135 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.294416559 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.155061898 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.179142613 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.162114749 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.180304563 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.170082313 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.177982549 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.152523656 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.179484905 seconds)
  done (took 3.25806466 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186792399 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.217362906 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.158523371 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182661287 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167072642 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187440875 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.16185459 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.185518215 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168597767 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198612897 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162283625 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195845995 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194412712 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169791075 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.190124456 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167362833 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18791426 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161528292 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.183396646 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.177670289 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187605002 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194396578 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164892547 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186689034 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163064451 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193447993 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171070148 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197503328 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162054825 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195005804 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19100278 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163675702 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194282667 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173690035 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.18431436 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171098574 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187862647 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.176136993 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192346946 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194708698 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.161076209 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190892362 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170069182 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192134558 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170348897 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189222386 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.167692623 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.18760116 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163151124 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.206961863 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192196787 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.170027208 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191674793 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170546967 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.194270235 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.208281933 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175032593 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195503353 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.165448484 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.198573715 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196357023 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168736402 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195939652 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173701349 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191564793 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194758007 seconds)
  done (took 13.000601962 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.199524744 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.18399777 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164651245 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200439525 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173116567 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.189050856 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162766857 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188211993 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16258073 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.184035065 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.230198686 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165089289 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196129899 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171590954 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188570837 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163718096 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188760596 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.171086072 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.186596145 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.208215094 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163079956 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196900388 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171049615 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196861137 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196901366 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1688647 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188356564 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164960502 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188780361 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164970908 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193525378 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164353023 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196347873 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.16011645 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197772706 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163529105 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188792583 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168375601 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188629015 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193138457 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.171661494 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.202935513 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.16358379 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188818634 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.174938168 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188995263 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163502705 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18637824 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164862166 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.186328094 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19967169 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175156421 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19988275 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171924516 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188958596 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165003455 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189597365 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.163334877 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190150996 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194155207 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.174092879 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189834546 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.184642754 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.190165593 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165184483 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19686854 seconds)
  done (took 12.998359079 seconds)
done (took 230.780791404 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.235949558 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.27525735 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.258555365 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.271249996 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.150144023 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.225615422 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.191495301 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.258589308 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.177029286 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.150434703 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.175496828 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.154516088 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.283854952 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.152143579 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.14898829 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.178320022 seconds)
  done (took 4.262475487 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.25575906 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.425751487 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.169292897 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.177983457 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.158955199 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.180525819 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.156406132 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.156106584 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.181883604 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.184419053 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.157745688 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.150611681 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.187033491 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.175268028 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.158486355 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.155735377 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.189082564 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.177966276 seconds)
  done (took 4.388570222 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.17755952 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.232676236 seconds)
  done (took 1.394780998 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.188281415 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.273701076 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.377644183 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.229510261 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.177152905 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.199342808 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.204972992 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.194529486 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.270605292 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.168056706 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.193728756 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.178418987 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.182384296 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.185354366 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.172670421 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.179394321 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.184088354 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.197228083 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.169408065 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.182630278 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.17967627 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.185007604 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.160748724 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.196248908 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.26164689 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.172203323 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.184715109 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.158077923 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.185400672 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.170429145 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.189853752 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.171114078 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.192358191 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.23928427 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.158186876 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.233507836 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.189517885 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.15616518 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.195782089 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.157294723 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.185808545 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.160318711 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.194313397 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.177515661 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.161300051 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.186622684 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.16023951 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.185459548 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.164309791 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.189215192 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.165467689 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.188540386 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.234965214 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.162376933 seconds)
  done (took 11.350298945 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.979785419 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.204161646 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.182990868 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.132921652 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.203312167 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.170810757 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.995796044 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.18219356 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.312375897 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.018038257 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.174087571 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.191081212 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.304447514 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.344854328 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.347995859 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.444439548 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.826745216 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.171401126 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.214922163 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.225562134 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162971143 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.199322903 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.171569164 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.517952388 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.183006932 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.158348558 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.186679256 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.165636007 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.236240656 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.182939674 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.163821741 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.260833937 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.357995873 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.274687724 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.184643871 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.156439377 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.182640754 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.247378804 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.332040897 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.279747167 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.255176234 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.178043311 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.158492641 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.185897732 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.173076967 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.178787959 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.244382474 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.230151962 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.25489624 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.18742118 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.189908577 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.166084248 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.186034132 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.241021571 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.155651079 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.423841677 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.454751753 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.157072628 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.189500494 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.195410603 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.332171849 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.158296946 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.324350184 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.179570181 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.277541998 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.183731744 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.869105143 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.248039433 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.181820258 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.163837804 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.187157668 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.16365894 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.187305593 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.219453745 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.494864047 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.189721402 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.162052801 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.182992613 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.29005113 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.157401789 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.182929198 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.242991724 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.159110387 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.190926583 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.165036559 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.189402367 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.252577021 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.33790505 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.165438217 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.189952298 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.162584712 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.193939257 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.182780786 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.268277202 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.319286203 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.238875768 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.291478407 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163977137 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.245353267 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.24876683 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.188763878 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.253552285 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.164395835 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197745608 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161966895 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.31359742 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.194956076 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186813421 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.163136248 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.191325098 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.222205631 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.163339696 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.190152254 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.252129478 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.557033684 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.268481906 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.156022284 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.187619738 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164989766 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.242875648 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.189340628 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.326646705 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166288674 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.249800341 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.19145633 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.156002171 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.19024165 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.245130334 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.166474452 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.192448775 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.162406337 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.19348948 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.343552067 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.283528303 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.193798876 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.311920112 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.259180444 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.163701543 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.256426463 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.191830609 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.249175401 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.169291709 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188582431 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160117289 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.900659365 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.17085357 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.189833986 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.164549905 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.269859735 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.158527073 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.188056596 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.158977688 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.183957331 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.873123321 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.187127917 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.15821593 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.160020908 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.190301364 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.189574666 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166406915 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.18931353 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.243884296 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310721147 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.19223946 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.164588248 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.183775883 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.215955464 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.188848177 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.157839904 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.18494796 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.158399054 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.193296438 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.163618712 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.190173555 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.252122494 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.242807762 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.294258718 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.645374736 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.18705996 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.158614513 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.332244834 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.15969894 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.414868399 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165789658 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.324103784 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.24707255 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.15827299 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.422315925 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.246136119 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.268354656 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.187591802 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.254899384 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.159304545 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.189314996 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.217815338 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.18736831 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.191317695 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.214521553 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.195566279 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.191215517 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.333770656 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.159324241 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.310430607 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.184758341 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.254075116 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.160855931 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.191586933 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.393670173 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.184739484 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.172095976 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.244247261 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.190271054 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.16107139 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.03309995 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.188396583 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.168444674 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.191854635 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.29910703 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.246166849 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.191787098 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166741385 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.194743549 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.246274194 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.291930908 seconds)
  done (took 61.535449167 seconds)
done (took 83.915389103 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.321706622 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226937727 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.423350763 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.235749043 seconds)
  done (took 2.290459981 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.346620056 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.199604992 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.303241565 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.183885535 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.310068899 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.157797441 seconds)
  done (took 2.540921021 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.23293842 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.227869829 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.227210597 seconds)
  done (took 1.731246481 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.27024519 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.269503266 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.408749116 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32180021 seconds)
  done (took 2.372055902 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.341054823 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.175883818 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.21557029 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.288326959 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.307062232 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.26998098 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.182565115 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.236065495 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.215404906 seconds)
  done (took 3.308499845 seconds)
done (took 13.282436545 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.408325179 seconds)
    (2/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.44690732 seconds)
    (3/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.330351436 seconds)
    (4/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.327865855 seconds)
    (5/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.354972654 seconds)
    (6/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.388210819 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.219178012 seconds)
    (8/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.361217792 seconds)
    (9/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.417468521 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.199084255 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.338921101 seconds)
    (12/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.224311905 seconds)
    (13/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.225476648 seconds)
    (14/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.43697987 seconds)
    (15/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.420677727 seconds)
    (16/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.19931089 seconds)
    (17/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.363672014 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.180130169 seconds)
    (19/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.296090167 seconds)
    (20/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.198197062 seconds)
    (21/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.27703048 seconds)
    (22/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.227765625 seconds)
    (23/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.376746233 seconds)
    (24/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.208811539 seconds)
    (25/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.440907116 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.185861694 seconds)
    (27/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.220552418 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.166463417 seconds)
    (29/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.198687487 seconds)
    (30/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.192791764 seconds)
    (31/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.278711769 seconds)
    (32/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.271255793 seconds)
    (33/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.241634777 seconds)
    (34/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.31250161 seconds)
    (35/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.208105444 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.180758321 seconds)
    (37/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.227487588 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.183382887 seconds)
    (39/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.257661327 seconds)
    (40/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.224744362 seconds)
    (41/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.19949576 seconds)
    (42/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.3859752 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.170882066 seconds)
    (44/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.225095035 seconds)
    (45/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.170517564 seconds)
    (46/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.134644567 seconds)
    (47/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.200867163 seconds)
    (48/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.219117249 seconds)
    (49/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.197480769 seconds)
    (50/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.179197159 seconds)
    (51/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.243755648 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.163481264 seconds)
    (53/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.241902619 seconds)
    (54/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.138389316 seconds)
    (55/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.127801727 seconds)
    (56/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.271976695 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.179849127 seconds)
    (58/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.155226723 seconds)
    (59/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.131908883 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.180284867 seconds)
    (61/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.269925596 seconds)
    (62/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.180949407 seconds)
    (63/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.223215816 seconds)
    (64/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.171280649 seconds)
    (65/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.204620713 seconds)
    (66/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.1695115 seconds)
    (67/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.216493662 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.162311423 seconds)
    (69/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.158047123 seconds)
    (70/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.167044147 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.190384964 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.183334556 seconds)
    (73/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.222635574 seconds)
    (74/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.184088633 seconds)
    (75/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.168889912 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.207391875 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.162515778 seconds)
    (78/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.216624753 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.197436141 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.169258884 seconds)
    (81/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.209054727 seconds)
    (82/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.130998851 seconds)
    (83/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.223956761 seconds)
    (84/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.20878493 seconds)
    (85/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.163354642 seconds)
    (86/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.242533495 seconds)
    (87/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.129276426 seconds)
    (88/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.163921054 seconds)
    (89/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.157478335 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.162584363 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.198177575 seconds)
    (92/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.137365094 seconds)
    (93/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.12843812 seconds)
    (94/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.194827219 seconds)
    (95/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.138513214 seconds)
    (96/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.136760547 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.21455801 seconds)
    (98/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.241273 seconds)
    (99/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.163444598 seconds)
    (100/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.133257378 seconds)
    (101/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.206745425 seconds)
    (102/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.128554825 seconds)
    (103/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.160846012 seconds)
    (104/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.137704522 seconds)
    (105/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.179844378 seconds)
    (106/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.281802036 seconds)
    (107/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.164519106 seconds)
    (108/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.187855452 seconds)
    (109/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.188372488 seconds)
    (110/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.20037597 seconds)
    (111/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.13699696 seconds)
    (112/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.135327194 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.200138858 seconds)
    (114/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.226882274 seconds)
    (115/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.157385796 seconds)
    (116/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.191048387 seconds)
    (117/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.259436972 seconds)
    (118/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.131192312 seconds)
    (119/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.162170133 seconds)
    (120/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.212471502 seconds)
    (121/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.196136185 seconds)
    (122/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.188586063 seconds)
    (123/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.138101361 seconds)
    (124/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.16218054 seconds)
    (125/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.157803307 seconds)
    (126/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.137537113 seconds)
    (127/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.134223354 seconds)
    (128/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.136528814 seconds)
    (129/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.200996649 seconds)
    (130/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.163887112 seconds)
    (131/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.197985512 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.183690538 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.213161464 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.16516388 seconds)
    (135/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.158067866 seconds)
    (136/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.133830287 seconds)
    (137/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.129916661 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.191545167 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.17365204 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.190609643 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.166525785 seconds)
    (142/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.133322471 seconds)
    (143/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.202628421 seconds)
    (144/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.192419162 seconds)
    (145/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.130494318 seconds)
    (146/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.165294763 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.164813207 seconds)
    (148/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.136514706 seconds)
    (149/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.162064603 seconds)
    (150/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.13374515 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.192061784 seconds)
    (152/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.164988439 seconds)
    (153/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.130436559 seconds)
    (154/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.201351094 seconds)
    (155/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.135085963 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.163972946 seconds)
    (157/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.161509645 seconds)
    (158/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.141448923 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.162060273 seconds)
    (160/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.165587747 seconds)
    (161/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.132482769 seconds)
    (162/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.136718154 seconds)
    (163/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.196485041 seconds)
    (164/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.132968096 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.17046623 seconds)
    (166/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.164064369 seconds)
    (167/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.130999619 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.211507203 seconds)
    (169/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.131446673 seconds)
    (170/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.137764866 seconds)
    (171/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.131911048 seconds)
    (172/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.158872089 seconds)
    (173/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.132390438 seconds)
    (174/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.137182877 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.193295251 seconds)
    (176/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.134268191 seconds)
    (177/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.168930909 seconds)
    (178/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.158043142 seconds)
    (179/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.139433792 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.163372172 seconds)
    (181/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.192185822 seconds)
    (182/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.134354656 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.193403993 seconds)
    (184/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.134810649 seconds)
    (185/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.135502845 seconds)
    (186/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.132845873 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.215167445 seconds)
    (188/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.134307093 seconds)
    (189/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.201068865 seconds)
    (190/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.133623975 seconds)
    (191/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.170879411 seconds)
    (192/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.196121029 seconds)
  done (took 38.891308735 seconds)
done (took 39.938374218 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.319846888 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.156043796 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.172017056 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.201632624 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.300399932 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.180179757 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.218874551 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.175326486 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.213309947 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.17229663 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.191092177 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.186416653 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.201583944 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.31060528 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.175423356 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.195546724 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.16379946 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.213581769 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.186909174 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.217765681 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.300214154 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.166608547 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.21349747 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.163536089 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.300342732 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.196751626 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.172555393 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.20363239 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.186999199 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.204157107 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.173552726 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.192600818 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.189518164 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.217668113 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.163404089 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.200653449 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.163584001 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.137446389 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.202168237 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.173559711 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.215160671 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.173871832 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.201974985 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.164775283 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.204262287 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.171934433 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.192886889 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.176197476 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.1924904 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.174146726 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.194757867 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.18890831 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.202674866 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.164198115 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.192069955 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.165324446 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.21165394 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.164238553 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.215337718 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.164172902 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.193748381 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.164576026 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.204097462 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.164617302 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.200829449 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.165142369 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.200689138 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.175598377 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.200044642 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.168547201 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.190956685 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.175268447 seconds)
done (took 15.111125654 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.174186955 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.234858427 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.317024951 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.319505295 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.221108145 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.182650252 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.205401748 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.187861878 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.204515044 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.1830649 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.230243175 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.197687639 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.318934063 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.211305432 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.209264111 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.179230264 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.174977907 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.203127157 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.317493796 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.21829822 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.188551492 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.211602676 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.190494475 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.211879178 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.167914859 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.220505624 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.171155843 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.206496371 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.169057322 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.215177223 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.189764075 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.198465881 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.1706775 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.214941508 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.185349687 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.208090707 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.209377114 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.179481134 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.196684997 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.171169532 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.204424529 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.185792341 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.197241633 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.181222975 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.205654993 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.185014659 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.203750491 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.182313128 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.198322636 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.177907819 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.198315512 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.194852292 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.21010479 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.184326862 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.210595285 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.181842538 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.211658061 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.182273178 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.202239335 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.182375356 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.198339328 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.169675837 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.198177156 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.19019304 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.201639608 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.189593383 seconds)
  done (took 14.496127825 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.193420127 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.22819515 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.180812099 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.21041321 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.176694816 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.1926576 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.163441524 seconds)
  done (took 2.467464264 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.171302999 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.333039558 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.323487365 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.324048959 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.313720201 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.366372847 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.189985332 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.195383225 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.201688846 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.206987565 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.335605387 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.389062534 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.2074474 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.181909585 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.359117245 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.166832458 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.328526344 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.196815601 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.181426912 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.327908458 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.214154327 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.198556744 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.210933178 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.165910833 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.360183652 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.169148046 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.375267134 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.217143325 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.175547463 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.211532765 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.181079102 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.273970872 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.328841468 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.213045179 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.174801488 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.325945569 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.349602837 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.182480398 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.403205603 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.173317361 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.315989066 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.210358105 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.183119934 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.210979203 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.181965109 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.312231605 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.217429535 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.183646957 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.211058962 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.339952588 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.178092829 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.362412078 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.180855541 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.210535642 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.178492879 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.21247234 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.188698577 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.210993172 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.340421292 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.184786976 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.324857582 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.356691657 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.323278959 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.329945868 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.191258818 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.331134636 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.308666277 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.21375295 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.176305171 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.214803642 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.331083862 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.210175959 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.181612969 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.319230329 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.21596643 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.334060009 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.332874383 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.178939655 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.214083509 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.169629043 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.212573889 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.167163855 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.318089193 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.213473096 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.178459496 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.218362405 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.211052746 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.184071522 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.200978281 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.191942844 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.212093032 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.180298417 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.216220023 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.18269502 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.215427115 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.336317558 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.207575418 seconds)
  done (took 24.851436975 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.174260079 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.167961233 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.203011849 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.168347246 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.198124985 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.168178929 seconds)
  done (took 2.233122243 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.210828835 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.21215114 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.191628907 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.212141921 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.231720668 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.318718044 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.3268204 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.210269477 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.23298249 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.197325511 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.323594781 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.325378039 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.323901245 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.218141636 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.32734009 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.186235484 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.33024025 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.211862836 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.192703765 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.211712397 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.182029852 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.219076183 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.181257687 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.311299643 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.216998614 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.185205186 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.209648866 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.194216108 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.221977459 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.176417964 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.217437986 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.183573274 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.205722948 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.205346644 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.330469049 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.177015807 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.2089082 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.185838297 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.216458811 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.184763719 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.327783233 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.21194427 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.190106018 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.218402634 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.176948619 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.20771119 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.186552284 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.206910809 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.332222903 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.185505643 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.218317707 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.18271674 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.216902722 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.186328443 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.206559368 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.206902777 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.188853065 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.330521151 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.220471263 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.175766415 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.217763795 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.185293046 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.210726448 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.187845116 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.215376969 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.18534424 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.207245628 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.184755198 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.213708671 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.184437141 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.218705744 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.183930164 seconds)
  done (took 17.143586556 seconds)
done (took 62.304699992 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.730726652 seconds)
  done (took 2.890536499 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.179274613 seconds)
  done (took 2.339303133 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.184580595 seconds)
  done (took 21.381620805 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.510758177 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.422667855 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.098923613 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.244587598 seconds)
  done (took 3.442587218 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.187759491 seconds)
  done (took 2.364368542 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.484309701 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.34833445 seconds)
  done (took 1.997721568 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.850867069 seconds)
  done (took 2.029796317 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.983207152 seconds)
  done (took 3.156266799 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.368694511 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.284957326 seconds)
  done (took 1.836097942 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.737391117 seconds)
  done (took 1.924342753 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.890050404 seconds)
  done (took 19.07629839 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.324121245 seconds)
  done (took 1.510881168 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.361482769 seconds)
  done (took 1.552201785 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.061811422 seconds)
  done (took 5.254033352 seconds)
done (took 71.929288985 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.189815199 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.216066792 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.189387841 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.214927401 seconds)
  done (took 1.989690169 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.192941575 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.182188042 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.218633459 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.180935928 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.220910285 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.181999052 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.214391509 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.184671109 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.214517433 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.184003497 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.215209909 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.183358443 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.217445179 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.182408321 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.214995916 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.18638257 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.217888112 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.182990449 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.216064627 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.183509858 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.215969643 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.185222507 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.218888589 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.186692386 seconds)
  done (took 5.970680839 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.185320494 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.174520657 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.208116758 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.173651831 seconds)
  done (took 1.93699974 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.19590508 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.226143422 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.195026476 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.221482006 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.196970159 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.224519194 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.183701363 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.212670689 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.183861579 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.222151643 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.199802363 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.228028368 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.195858286 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.218290259 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.193610794 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.210425292 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.185538957 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.227066375 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.189930437 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.224763079 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.183252074 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.221102837 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.189608539 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.224031701 seconds)
  done (took 6.151907726 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.26273327 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.227153048 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.211426746 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.260673931 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.244259134 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.184627668 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.241714327 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.191560812 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.220054799 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.192985086 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.213388658 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.231897786 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.219927129 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.187212075 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.216845313 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.18912838 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.224306806 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.188753612 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.258979721 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.217743052 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.191004527 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.225646711 seconds)
  done (took 6.003456236 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.193530057 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.204674212 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.175523577 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.203106415 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.18932631 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.208066822 seconds)
  done (took 2.373667489 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.179168315 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.16847296 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.202524288 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.169671367 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.204923685 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.170179951 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.199945538 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.170037335 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.200826586 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.17175138 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.199336592 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.170443532 seconds)
  done (took 3.405159553 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27632648 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221900844 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.35056937 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.469587927 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261975004 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.256578088 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.354957917 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.256355155 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.27745707 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233368014 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248305389 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261122521 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251371351 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253528678 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239969273 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.245693604 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240259394 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.308639318 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242269426 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312433306 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252406888 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.242613045 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.287005142 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24654462 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204905526 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261552255 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.215225344 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19531513 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265821932 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261636064 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273128517 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217552805 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240356472 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283603802 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.330149037 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27592594 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.365291145 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200354598 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.266427595 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.288087542 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.327515322 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240197165 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28967301 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219842551 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228260452 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288999181 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216623497 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.285866589 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.232642643 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211932607 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280586868 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278856341 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.267869329 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204959862 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.40476914 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234471926 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.207847521 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277045146 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286200501 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30021604 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279198423 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.189452024 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.269541679 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289241949 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314392843 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.239850263 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.230910998 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224378114 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262824833 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.30283872 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248680017 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258950527 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.290917721 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232544516 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239014822 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.26471781 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254743358 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307333426 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237663253 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.220088952 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249905173 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202064382 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225550958 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.259337238 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221112545 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.316211998 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198288763 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.272241603 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277873255 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217455376 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260687201 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260466712 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260839385 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215545705 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.19040913 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211212962 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.258043778 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258565492 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196234242 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250911097 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206758694 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.226731486 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218409478 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.225829346 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26868326 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.191975879 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260799506 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269064942 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.199765767 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279347325 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245946569 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.229844032 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26915399 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294265213 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198033563 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.232079582 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319000062 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270058713 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.203098662 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268972123 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.296257506 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.243171076 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203845196 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266894694 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294259835 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210423616 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299198453 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24205634 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203110605 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.230473373 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272902022 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225636723 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.260472788 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225409321 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.23255143 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287715149 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.228631448 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208132054 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283376888 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233379468 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191370005 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236839405 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203704814 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.244082645 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.249700608 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.206818968 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256419899 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264692389 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233284623 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25693798 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234352358 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240455438 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233135722 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.269835501 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216302645 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.219582462 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.273132009 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265485227 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.229833556 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283522577 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.226427048 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281170462 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273333362 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231572395 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249848183 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.23086616 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.187925294 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26270268 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.269925387 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264041957 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.286058024 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27518688 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.230659569 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.263691703 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250279802 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267910605 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.250485414 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257399003 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.24048519 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.239647583 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269554809 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.222196691 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.192689307 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.230492718 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205787062 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230838852 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205181329 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282132106 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266316548 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.276710538 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.26737143 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206758206 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.291888724 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.224735632 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227906425 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.276334232 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239183069 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.257143803 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291483016 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283383313 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239927647 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230532249 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.222237618 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192436203 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.233600446 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.262152261 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204760256 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.2366523 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239640809 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.259246864 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269641971 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251746887 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285252615 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267066992 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.267190611 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.223297879 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.26225821 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233453919 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270863075 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.26074007 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231963715 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.261432407 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.293591525 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210644663 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292353448 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271728758 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279676975 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259799797 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.265590547 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231146922 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21160596 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261450706 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238563228 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229308489 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.244766251 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197507519 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249692017 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.237716821 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209688397 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287801333 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2468265 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273776923 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.223458094 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270946326 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.226528667 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21151335 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274918829 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24449394 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.164878648 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265618833 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290179009 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218178932 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253870132 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268764903 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199039767 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.423007143 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282503173 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239271488 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239546174 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239281965 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241578835 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.259511702 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259072261 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.251667758 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243247343 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311016226 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.270503393 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.209023438 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233540453 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213927483 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252405421 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.229650363 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.221001427 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.265308528 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.244346715 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289464044 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205587247 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273053857 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277749775 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.214515477 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.250213103 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207525413 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.326305741 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273633679 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275527915 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.269240942 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.232188185 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285172087 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224915752 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197709779 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.234449436 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.254144539 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234350891 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279740392 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.264430624 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279198213 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244422772 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264714808 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242763343 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.197004521 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.269329222 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21715017 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284666856 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237452263 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.239037869 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252760983 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.219781929 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199095709 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.262765747 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395045557 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249665478 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237450447 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.199252084 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.385103371 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200809544 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.23431576 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.231030077 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282305592 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.239476402 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.265968039 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282798252 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217571942 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.268889361 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255835886 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.295534718 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265081125 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281856303 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303856168 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.268842008 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.256484501 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282804888 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297314554 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23812246 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.27644493 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291131924 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290326165 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.303388022 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.260196915 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266920466 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291098191 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.304592783 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.303958485 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235923298 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.319706647 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258638476 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266067494 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273471019 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219849815 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294058972 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.297391309 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262421639 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271278701 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307889921 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247095877 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224918336 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278528087 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293258522 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217790125 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.245081934 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309766975 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.209255032 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286216354 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318052736 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199697043 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.270752168 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246102455 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201839424 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241609915 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215830239 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236123462 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.251218468 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281512964 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.234459424 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246573324 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273038981 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270488726 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258614102 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215413496 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.372994918 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.20168277 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.300195995 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258831308 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.304943178 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222620768 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285159028 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.279203871 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224534628 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274898575 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256918426 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.301302911 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274675292 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.279216722 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203760479 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250965294 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244694734 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.208900587 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.258991454 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242161381 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250322754 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.243026156 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.239200181 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253890456 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.252616342 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214374328 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.307483933 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.258118089 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293814178 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.258356807 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244527953 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282991154 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278733979 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202504173 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.271295044 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276778772 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218652805 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261568947 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.207511095 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.244611553 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323617549 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.202442922 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267484783 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280991947 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.240548606 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278925693 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.239172523 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250773719 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247599992 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285080875 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198934794 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.257098336 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.274766714 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206341183 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.231487747 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.243375572 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266353424 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.272306206 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.245559858 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.255165619 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302094631 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.195226223 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23954373 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.39430957 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233162611 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300733774 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.229670826 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21035552 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252108665 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231076871 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.272239089 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277896722 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.203682256 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235356186 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.250936449 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.225956458 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.232136992 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242280251 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288574615 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265477754 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293282058 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.209456175 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.371979076 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215419921 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281415814 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.177752632 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.238423545 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248523852 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210725261 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250674405 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.28214824 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.329471436 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.237221577 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.254582793 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.241611311 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.200354179 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234768402 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234810796 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257157911 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275432023 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222720152 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.19858042 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216549255 seconds)
  done (took 123.4026892 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.259520293 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.257517454 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.269574993 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.325327614 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.295327569 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.393879348 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.334230212 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.345459153 seconds)
  done (took 3.805375949 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.19697428 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.239020339 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.246953331 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.189523752 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.215797763 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.600924461 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.240448314 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.227735874 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.233439322 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.229353328 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.214795122 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.654604332 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.226406096 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.192018762 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.257925885 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.18277869 seconds)
  done (took 5.66478761 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.371390035 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.671787173 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.580554343 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.380595116 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.348668291 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.291422673 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.96127664 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.275125 seconds)
  done (took 14.213558791 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.248825776 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.278861579 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.549342064 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.42322428 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.292502629 seconds)
  done (took 3.134467728 seconds)
done (took 179.235369111 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.202256027 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.196947391 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.23153056 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.199238325 seconds)
  done (took 2.149265979 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.265025392 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.154616659 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.192866426 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.154106678 seconds)
  done (took 2.107379926 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.467393165 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.154267034 seconds)
  done (took 1.983144365 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.222072304 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.245511877 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.209283597 seconds)
  done (took 2.026741808 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.213077724 seconds)
  done (took 1.556895049 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.194329879 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.188657371 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.391851505 seconds)
  done (took 2.121566716 seconds)
done (took 13.281412322 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.75125524 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.037942883 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.664587515 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.206007343 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.832516272 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.476609142 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.47539083 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.254644812 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.276297775 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.222491701 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.216511472 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.804952641 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.459921125 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.954707439 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.470846537 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.95489147 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.775123709 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.218633948 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223175447 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.187824863 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.4849 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.186314056 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.185143795 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.220847498 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.771619771 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.52864844 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.184739274 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.003483404 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.215444995 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.197099435 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.477642513 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.219223129 seconds)
  done (took 24.469761693 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.19149565 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.275951223 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.240506911 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.222785663 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.192908051 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.220779052 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19652974 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.234006643 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.318754081 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.186995078 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.24063919 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.184672645 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.223739276 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.186555008 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.243344912 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.185982239 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.221627276 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.187446602 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.225558502 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188309072 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.241142467 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.184861706 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.222178253 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.186709776 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.218262672 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.202964427 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.218616068 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.198282127 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.219308405 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.195683962 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.225071708 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.187318094 seconds)
  done (took 8.224389708 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.231735195 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.287395974 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.241763356 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.260210184 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.274961292 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.188836444 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.310693071 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.222875898 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.326879766 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.220378793 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.208178149 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.220092863 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.226644604 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.221774919 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.21092808 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.220206144 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.190037923 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.220989625 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.193420895 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.222273517 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.207934123 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.2189585 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.187000037 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.223634375 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.186010106 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.239986593 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.186009268 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.233217157 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.21933676 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.197620102 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.225809161 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.187727503 seconds)
  done (took 8.575395167 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.205663933 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.200634592 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.24488575 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.209523502 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.233234687 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.199131049 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.236399126 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.195660566 seconds)
  done (took 3.091684704 seconds)
done (took 45.699708463 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.214399122 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.201660071 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.24429161 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.20049924 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.389272407 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.194608057 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.203784364 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.232315087 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.201171183 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.245462779 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.186556335 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.229334611 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.205270866 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.232649068 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.359782414 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.201883074 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.360592782 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.396372262 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.195475137 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.236985932 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.197310007 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.362627539 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.235386078 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.195634096 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.342742188 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.189940146 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.384488279 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.200211703 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.19623061 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.222867167 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.361389881 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.196981195 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.233743341 seconds)
  done (took 9.596730143 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.307338245 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.233779379 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.196830198 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.231764738 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.19781915 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.231092376 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.343462741 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.195666642 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.230310712 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.195808489 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.231255246 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.289935752 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.239929044 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.191986495 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.235663697 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.176228626 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.347079052 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.194873384 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.225066121 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.158453181 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.228189911 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.196802471 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.357250318 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.227556242 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.197527842 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.195902845 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.234289221 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.200634871 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.234014675 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.199194325 seconds)
  done (took 8.303739184 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.205918784 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.208247851 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.251062862 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.298465189 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.227683981 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.243452398 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.214165503 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.243480193 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.218084855 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.225741486 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.205171621 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.26237722 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.205656459 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.236312802 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.189390354 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.240957806 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.205037107 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.224538959 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.197567443 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.242916784 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.209860556 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.241251 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.212289076 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.232842458 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.188834977 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.232205785 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.200139347 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.2343599 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.197753708 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.238919907 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.19252581 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.226597321 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.192867822 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.260365791 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.19092812 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.238232809 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.210502746 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.238838124 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.203707958 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.258656006 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.191618013 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.227906146 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.216206614 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.283167015 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.191805047 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.2352003 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.191769009 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.239586473 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.190840679 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.242552213 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.231871734 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.22587614 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.210319693 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.224313022 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.188558196 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.233117214 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.190634996 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.228343562 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.205834345 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.224411987 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.210523769 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.231569461 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.202581627 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.226460502 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.201524649 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.223406692 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.19232341 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.193095715 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.252200856 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.196642744 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.264720255 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.189987846 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.238046752 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.202469672 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.237460225 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.201614186 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.225336057 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.201221189 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.237107037 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.195431417 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.237985571 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.193185111 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.227164851 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.207655317 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.246551395 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.204665831 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.238401196 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.201197164 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.2273148 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.192677854 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.24386034 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.191743796 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.230067874 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.204119812 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.226222971 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.196026464 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.236357291 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.199244959 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.22251398 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.217140811 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.228871633 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.192107879 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.251652462 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.194624261 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.227914039 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.202186814 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.266700046 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.19204607 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.234354382 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.202231722 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.190961574 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.235973373 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.192821028 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.226414267 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.206245151 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.242169412 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.198397994 seconds)
  done (took 27.063733035 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.46225131 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.445679999 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.297532388 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.534639076 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.203651037 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.405483128 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.447380634 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.450915231 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.228612521 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.22639094 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.285723485 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.411485008 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.231203144 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.219225643 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.493518624 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.534737274 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.220653549 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.268718808 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.262967379 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.20564326 seconds)
  done (took 8.237397019 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.203959875 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.261161004 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.214745814 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.245345306 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.203518548 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.242877045 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.193536902 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.248463998 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.203808669 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.233271215 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.195983093 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.198362935 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.242774447 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.207082199 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.242915318 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.214064861 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.237105012 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.197951011 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.250455243 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.196309042 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.20612272 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.217492532 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.23634004 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.213264201 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.245434563 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.201532262 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.226491721 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.196426934 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.233869964 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.201052313 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.230159715 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.201597703 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.235518707 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.173204847 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.204303215 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.244150391 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.198200064 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.231225353 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.197843385 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.231538871 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.207030936 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.240071311 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.199704167 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.16664228 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.246173832 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.177721133 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.241711394 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.204352034 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.209580911 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.213763496 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.239823583 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.206817501 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.198578883 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.250217154 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.198852242 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.244909286 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.238240911 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.207166917 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.231998566 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.192674361 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.190458158 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.23165348 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.201629272 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.242732333 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.204211444 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.237268999 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.202010395 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.228551061 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.197935435 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.231761385 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.196707416 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.241217965 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.212618169 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.239104847 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.199778407 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.239319888 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.200827075 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.162891314 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.237704459 seconds)
  done (took 18.590669526 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.223074387 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.238457279 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.210966701 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.262532198 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.206000358 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.234190535 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.204974948 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.212864429 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.245504334 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.210675045 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.244334563 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.206242008 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.252471282 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.239347755 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.204415729 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.243091038 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.206688295 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.267655964 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.206850606 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.255832183 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.208498929 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.234746053 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.206564606 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.241330619 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.221620711 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.240856187 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.219889624 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.242521412 seconds)
  done (took 7.813880802 seconds)
done (took 80.973911699 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.596816327 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.86581031 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.519069988 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.518116934 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.535076074 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.553832859 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.517000521 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.519382877 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.296695481 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.493526447 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.519541696 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.520228935 seconds)
done (took 32.922119357 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.670461796 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.745360427 seconds)
    (2/2) benchmarking "String"...
    done (took 1.91333416 seconds)
  done (took 5.084149458 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.510008221 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.509435732 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.83400403 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.507830709 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.508886291 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.510126392 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.526524218 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.529673083 seconds)
  done (took 18.333643825 seconds)
done (took 30.00709357 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.526235843 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.924839255 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 3.099071677 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.489495976 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.523993309 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.514870571 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.511140349 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.541797948 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.505349807 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.511674983 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.081526848 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 3.148986404 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.523734407 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 3.344389116 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.490948954 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.531320428 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.520946553 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.911280966 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.523776662 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.51422447 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.490757379 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.493804345 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.550847702 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.505654455 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.550151664 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.529855856 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.555283811 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.513259822 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 3.087023077 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.539003458 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.521966097 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.527263069 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.549455486 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.515202247 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.507034239 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.533042784 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 3.169442218 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.531493495 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.496555882 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.546271701 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 3.35129998 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.533834854 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.511010304 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.521898491 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.491900401 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.517607931 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.498182416 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.704035269 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.536944887 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.513941403 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.560825088 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 3.210583553 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.522509322 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.509879224 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.51957948 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 3.076145437 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.514798774 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.682114534 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.51923635 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.534569445 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.513996368 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.515967289 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.574790412 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.529886796 seconds)
  done (took 167.825849018 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.51399127 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.508628786 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.509722011 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.521597893 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.511694958 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.50808563 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.513727339 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.51427706 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.508704284 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.539579858 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.509877618 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.508941885 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.511902177 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.517538439 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.5237379 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.545945612 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.512316685 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.511613523 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.520379931 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.513155059 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.518148293 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.50951605 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.510605224 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.510014227 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.55685524 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.618502534 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.538738131 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.513720216 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.523122389 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.51576419 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.55148654 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.519758692 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.348788837 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.472229325 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.53285533 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.512620145 seconds)
  done (took 91.985787929 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.518412572 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.516903371 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.519471366 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.558343627 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.514212248 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.232892186 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.23380138 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.706655784 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.926788246 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.325868604 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.964258653 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.516446539 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.61774343 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.527129533 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.514095612 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.621672281 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.541207719 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.514635136 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.518018668 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.233490166 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.530565933 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.668249643 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.713708636 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.512432273 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.559488187 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.929231853 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.513707085 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.560350656 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.877692617 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.558110567 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.516951911 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.027054138 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.04146016 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.637625567 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.517890927 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.560662987 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.518487232 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.821352492 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.514702323 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.51761673 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.523286446 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.524781678 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.321834572 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.518746273 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.23733493 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.518111067 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.671810361 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.514421771 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.519616985 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.294783297 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.52192077 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.501889871 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.517334572 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.521072756 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.525768675 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.520502013 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.520931887 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.561816345 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.157902133 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.572333884 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.517103537 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.525375748 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.55847905 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.517438356 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.613803614 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.518921855 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.275153915 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.581332444 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.668689015 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.237083292 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.520621373 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.627241075 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.64546532 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.516792604 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.522191614 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.521506331 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.524325684 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.525256249 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.642895022 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.518147524 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.484296712 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.719346085 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.52240449 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.288357829 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.625675374 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.518104571 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.094710857 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.521196725 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.520645049 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.525573539 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.627288848 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.518881556 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.524473399 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.521744769 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.49010562 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.235833691 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 7.041681418 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.520456617 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.860906126 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.51956635 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.52381675 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.576520171 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.240754149 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.384689981 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.521067308 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.645178832 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.723373482 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.522673938 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.52337689 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.259525042 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.521306096 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.582691696 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.525771538 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.936770311 seconds)
  done (took 421.451523001 seconds)
done (took 682.669437311 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.508382805 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.505032798 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.528344282 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.503910309 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.509709859 seconds)
  done (took 13.972439023 seconds)
done (took 15.39027016 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.843132287 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.828501166 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.823160264 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.623708504 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.848063081 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.85573333 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.738830616 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.634115344 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.821504326 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.843671881 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.827501528 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.586220007 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.849931057 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.811191074 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.568736849 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.747744738 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.759943705 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.760629058 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.650455899 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.722113965 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.875272896 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.589905532 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.588188694 seconds)
  done (took 41.61735197 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.924924182 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.536298086 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.65643578 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.892442049 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.599256162 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.939432173 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.002918039 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.535938684 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.77807974 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.575401662 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.571913928 seconds)
  done (took 22.432360289 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.964400851 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.538705097 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.659429666 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.928838786 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.599503191 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.933360869 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.970018045 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.539492278 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.788446213 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.58000567 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.575896558 seconds)
  done (took 22.499055083 seconds)
done (took 87.971295514 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.590576357 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.675135294 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.565979584 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.566935991 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.569192563 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.565199528 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.569166862 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.566471268 seconds)
  done (took 14.0892617 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.563908232 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.560839965 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.5624614 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.563192428 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.560885501 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.566283394 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.564191298 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.562752568 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.565773134 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.564540435 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.564275038 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.566437813 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.566972378 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.564287819 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.562068752 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.566965325 seconds)
  done (took 26.447008241 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.563770784 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.563159323 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.563252213 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.561211101 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.566021 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.564121457 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.564172581 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.567073368 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.563806613 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.564107 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.565720752 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.562838333 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.564178099 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.566739807 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.563750809 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.569970805 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.56972601 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.565333343 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.565427699 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.569479052 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.56604286 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.570741922 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.564438117 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.566658232 seconds)
  done (took 38.995028489 seconds)
done (took 80.952955053 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.530153311 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.528562326 seconds)
  done (took 6.480134381 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.686466904 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.666916024 seconds)
  done (took 4.779446534 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.569932252 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.563203044 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.56632034 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.570438741 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.569985401 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.56524227 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.567648302 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.566692385 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.568325204 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.565617388 seconds)
  done (took 17.098223525 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.566305045 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.569586328 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.569297674 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.565859667 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.564972822 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.568028449 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.572202024 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.56566502 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.56852069 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.569295299 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.570581078 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.56979697 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.567112689 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.571540696 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.564754009 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.567330524 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.570802544 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.566062486 seconds)
  done (took 29.653628231 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.588888364 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.596544156 seconds)
  done (took 4.610573942 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.750074433 seconds)
    (2/7) benchmarking "second"...
    done (took 1.652203049 seconds)
    (3/7) benchmarking "month"...
    done (took 1.737285866 seconds)
    (4/7) benchmarking "year"...
    done (took 1.720847881 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.648331747 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.601381992 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.652509164 seconds)
  done (took 13.189298653 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.573075808 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.925371236 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.119907846 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.7844427 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.560603621 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.589881297 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.515813848 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.590441005 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.592110491 seconds)
  done (took 17.676088349 seconds)
done (took 94.911975052 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.537019687 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.543390608 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.56785203 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.556389049 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.975514764 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.575168602 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.536172861 seconds)
done (took 18.723294423 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.526554808 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.51714181 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.526027297 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.54567358 seconds)
  done (took 11.542401028 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.550228349 seconds)
    (2/2) benchmarking "read"...
    done (took 1.94476651 seconds)
  done (took 5.924080988 seconds)
done (took 18.899524654 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.56926422 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.568218068 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.571995294 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.566213064 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.568405591 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.571331941 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.573042773 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.569257166 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.570622493 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.567584048 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.566984391 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.571199173 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.574341821 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.567337019 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.574294957 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.575760088 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.569024735 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.569483732 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.568841401 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.570005934 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.573087821 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.571491319 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.567819972 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.572051027 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.571418544 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.5689565 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.571516461 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.569166791 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.576052164 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.572314678 seconds)
  done (took 48.545427042 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.582290807 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.577150348 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.571572196 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.572717592 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.569649115 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.570156023 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.571494183 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.571705941 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.575833631 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.57340937 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.569570754 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.577704679 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.573022869 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.570076963 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.573041726 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.570850315 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.572069255 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.579778546 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.573201313 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.572310418 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.575175516 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.572470983 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.577222844 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.573903986 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.571445223 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.570869243 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.572565058 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.572879904 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.571214259 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.578055631 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.571138202 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.570893477 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.569393147 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.573077973 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.575952082 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.571202595 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.582451022 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.578421181 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.571439567 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.575759808 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.57248083 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.5732025 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.570299897 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.573671833 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.572802519 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.576852266 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.572524621 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.571428811 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.578950927 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.574855574 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.572351903 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.574605123 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.573648646 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.571984608 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.574835529 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.572495636 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.574284062 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.576498659 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.575245637 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.576189053 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.575402082 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.573997782 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.572530558 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.578297561 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.575546024 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.576614387 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.580887835 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.575490222 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.574313256 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.580305079 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.577729472 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.581267632 seconds)
  done (took 114.777405706 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.578621555 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.576143587 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.573559739 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.577593631 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.574736914 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.575654628 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.576118094 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.577975733 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.575128863 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.57889212 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.576479663 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.576255193 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.577460165 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.575324627 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.580038705 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.576184932 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.5779244 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.582971061 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.579106323 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.576369523 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.57972812 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.578121701 seconds)
  done (took 36.136335983 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.581088769 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.581076616 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.574901948 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.582799182 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.581878394 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.579608133 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.578479917 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.581812743 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.581030032 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.577337243 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.574406355 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.580636127 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.584976833 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.575872882 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.578130711 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.581769162 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.583360216 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.581332375 seconds)
  done (took 29.877013621 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.578009536 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.576899408 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.576426723 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.579061276 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.582336763 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.583420839 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.579598565 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.579806762 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.588373424 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.57568452 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.580079911 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.578416781 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.581865473 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.57961386 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.577777244 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.57770412 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.580932743 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.580373454 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.581596515 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.581326089 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.58129515 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.582449696 seconds)
  done (took 36.200900619 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.580257727 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.582533784 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.58126826 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.580729296 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.582712718 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.582632261 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.585063715 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.582023036 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.585768483 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.582564166 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.580586819 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.582887321 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.587542452 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.582269645 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.583069747 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.581895505 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.585607011 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.581358915 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.582518908 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.58149727 seconds)
  done (took 33.092960775 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.586957392 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.585547366 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.583658718 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.583937873 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.585480877 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.585054497 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.583300921 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.584676376 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.585502109 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.584178687 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.583511842 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.585666515 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.584347773 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.583951283 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.581628711 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.584345048 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.584259842 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.583116121 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.584800274 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.582497397 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.584164788 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.583911265 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.58386901 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.583535588 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.583594813 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.585965017 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.583894991 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.587388452 seconds)
  done (took 45.801507162 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.615694496 seconds)
    (2/2) benchmarking "in"...
    done (took 1.615352762 seconds)
  done (took 4.672429364 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.585677341 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.587858065 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.587540776 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.588616402 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.587483855 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.589125265 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.587745411 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.586587512 seconds)
  done (took 14.142061781 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.57976346 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.588174166 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.594807761 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.588503468 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.589761729 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.577603548 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.594114517 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.589579722 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.585631036 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.583214807 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.594469101 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.585729373 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.585696058 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.579561899 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.580469905 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.585525995 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.589434802 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.588747074 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.588957926 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.590142434 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.58841917 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.584760674 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.588810001 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.592772865 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.585997074 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.596849013 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.59314044 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.589846376 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.582309525 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.592406827 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.58568209 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.594376072 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.594087907 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.587901018 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.590164643 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.596228264 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.606997649 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.589264319 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.601091033 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.598209241 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.59008705 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.592571723 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.587681506 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.593110199 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.59115171 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.596017413 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.593745476 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.591066644 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.584792801 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.594871806 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.59967535 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.585189499 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.594237508 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.595806213 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.592882936 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.599810912 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.601060931 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.591954884 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.593711533 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.607670082 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.611465327 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.600121147 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.596063577 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.598625845 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.60111869 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.603445313 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.603644011 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.604936284 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.59892728 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.594585457 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.603981554 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.617331506 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.618414186 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.602150734 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.600359864 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.595797972 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.591549177 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.599796245 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.606945967 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.602042481 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.599786607 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.59807766 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.602555883 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.597506848 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.592931056 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.597735089 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.593368262 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.600612619 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.589756071 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.610303866 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.607803967 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.595502822 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.592297177 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.591429679 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.592522555 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.603995312 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.589051023 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.594868454 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.603829161 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.599674441 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.598780473 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.596906073 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.604350735 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.602084735 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.597626136 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.604584633 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.599042937 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.591581094 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.610706641 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.60494264 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.595909997 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.593359882 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.603684868 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.606255167 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.59816601 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.606286805 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.602052607 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.602215826 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.601657027 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.599889065 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.601487871 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.607399796 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.60670718 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.595820669 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.600454359 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.607420679 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.600875014 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.598785502 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.604293325 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.601403362 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.601002544 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.600051096 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.604693586 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.596612181 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.603625642 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.596905514 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.603782436 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.598456061 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.600180093 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.602989599 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.602036613 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.600735401 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.604780468 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.610120882 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.605471618 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.604030723 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.615723619 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.598899343 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.606432424 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.607627827 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.608604977 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.60279935 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.599108379 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.607992329 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.590393932 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.602661064 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.595904549 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.60749478 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.600646772 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.602842931 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.601204874 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.595689158 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.601022029 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.605984532 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.608416684 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.601638029 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.602159744 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.600905185 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.602172245 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.593573108 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.604399903 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.595810264 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.605705167 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.606376831 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.601622385 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.600463439 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.609530514 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.609505999 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.605343109 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.600864607 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.600914753 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.609348716 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.607850062 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.616954083 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.608950901 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.608082634 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.60824292 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.599784651 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.600488582 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.60765772 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.605806018 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.613807804 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.622968047 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.616214394 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.601640404 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.60862146 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.596655273 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.604886348 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.611853854 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.612182666 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.603558456 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.607986881 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.600981312 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.607536335 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.605915459 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.612325353 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.59842973 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.607744253 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.610093505 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.612041378 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.608101352 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.60477118 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.604422532 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.608388608 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.603077528 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.604976443 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.598012638 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.609763714 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.597994131 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.602792646 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.610923777 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.60329236 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.613213384 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.608240265 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.607385198 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.613251658 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.609203098 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.603710919 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.606682596 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.610228019 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.60624078 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.618881284 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.606574062 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.607329396 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.620326509 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.607816888 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.601661636 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.614999505 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.613027397 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.605059554 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.60525469 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.616371747 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.614026826 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.605692317 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.605938855 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.599176823 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.611887796 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.615715378 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.61442548 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.604333903 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.610062634 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.608356272 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.60910092 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.614434419 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.619884414 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.612404412 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.618127696 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.615244508 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.606395269 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.60463471 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.613966273 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.607768767 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.607486608 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.608941333 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.617740776 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.614335035 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.610238494 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.619716655 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.607697041 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.610621505 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.604768386 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.614504679 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.603752404 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.634906297 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.626899902 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.623497304 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.614064121 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.6151116 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.619548198 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.613506159 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.607384291 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.606124564 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.611575117 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.608611123 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.608570824 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.612136921 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.605419236 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.611029587 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.612771848 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.612266965 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.612857613 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.609052311 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.604500265 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.613529835 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.610991803 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.615416527 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.601661426 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.614109448 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.613213524 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.621082123 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.611735124 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.609713079 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.628462111 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.618259696 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.611006958 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.612628603 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.608314717 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.607596679 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.617020014 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.612244266 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.614255905 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.623278561 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.613942317 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.617147404 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.611167803 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.626400047 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.624351323 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.614076204 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.618114496 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.613095981 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.605720881 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.609046095 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.614678584 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.622742669 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.623684339 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.607132024 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.618032293 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.61588642 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.615858623 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.613916197 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.616405271 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.610073809 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.6144252 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.626382726 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.616584344 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.612121137 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.621572757 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.62237237 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.616191137 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.619735792 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.607205847 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.625110079 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.62389505 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.616440191 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.615451168 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.610420571 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.616507518 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.614297321 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.613507556 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.619573481 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.614664058 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.623464408 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.619892167 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.618031386 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.615339702 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.627282701 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.624261228 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.624683907 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.623570706 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.614842851 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.619664624 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.611479365 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.617168776 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.611557447 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.613123638 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.618608693 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.607858024 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.61982016 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.611325435 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.622099361 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.62753853 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.619423322 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.606998627 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.626547761 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.62236406 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.60796565 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.617494655 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.620270078 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.611687072 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.621870351 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.615155042 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.608426253 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.615328108 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.621605653 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.618613862 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.611736451 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.625785724 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.60989313 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.623165628 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.614828045 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.612984794 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.616476998 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.617542217 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.610741003 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.620667474 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.625027386 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.623880523 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.619003785 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.622868173 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.618095639 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.633668429 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.630212334 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.620998452 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.624398396 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.618577055 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.615245067 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.625573336 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.623843158 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.616176121 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.621321748 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.615147499 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.617895614 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.617625048 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.628098727 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.621212236 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.623933322 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.609542387 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.615814483 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.620417862 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.616137779 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.61919522 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.626283342 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.62961987 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.614241937 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.612730223 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.621661875 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.625481773 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.625767704 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.618409087 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.620408014 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.620297176 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.624060923 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.62622307 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.6209423 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.615786197 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.616827251 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.635587947 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.630970182 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.623719469 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.620063976 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.621204694 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.616606134 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.624861304 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.624031031 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.620801919 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.621189259 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.625165463 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.622268866 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.619496097 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.620155398 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.625370936 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.632441528 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.621102166 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.617680712 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.637473243 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.636327077 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.628883883 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.615552858 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.622621913 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.620221678 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.626488117 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.624586129 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.619454331 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.640632304 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.631095197 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.629678747 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.628177089 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.620848364 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.617352179 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.625600364 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.623473209 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.630845864 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.631192067 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.630316607 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.638982303 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.623925641 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.623625812 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.619127894 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.622016529 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.62434832 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.626220136 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.626103711 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.630664625 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.624509165 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.630554905 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.63367269 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.62248691 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.624494009 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.625998041 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.617274515 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.632871331 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.618054572 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.634441573 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.623318301 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.623978929 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.633317827 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.622846243 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.625778809 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.630983941 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.630947763 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.626498174 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.625445456 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.627107959 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.639509465 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.632534207 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.62585731 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.620611532 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.624475012 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.632237801 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.624914733 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.62543512 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.62621385 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.64351605 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.636144722 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.626976448 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.627119133 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.641146266 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.634482499 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.628445838 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.623522097 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.635952729 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.633261046 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.63448669 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.627120948 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.637697294 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.635435694 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.62349458 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.629797127 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.625484987 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.625912276 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.636366538 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.634574899 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.63121735 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.628946251 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.646993239 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.637230126 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.635398887 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.649745823 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.63859636 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.637317846 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.636979884 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.621386421 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.634203413 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.632901782 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.639809853 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.626200161 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.627522257 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.630949229 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.625340974 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.641840488 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.648699321 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.642414862 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.626463673 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.626221742 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.628389057 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.62967302 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.634936188 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.633607947 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.633375166 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.630847261 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.633657045 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.630858785 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.658123705 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.654576745 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.635618119 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.632068854 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.627907292 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.640799084 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.63683643 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.639098938 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.632697496 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.629633699 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.628501641 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.676846197 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.640990031 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.633829623 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.626818816 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.626900949 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.627262098 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.63681457 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.64919687 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.649045873 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.641468862 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.633697413 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.634786868 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.628032587 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.627734435 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.636192144 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.629633768 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.628588174 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.634740982 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.634863553 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.634993179 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.630945737 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.631023261 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.636372893 seconds)
  done (took 963.225964723 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.63440309 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.628022181 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.635853694 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.628894219 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.632605654 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.633780106 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.633390322 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.631077807 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.631928543 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.639544316 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.633619121 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.629749844 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.633371814 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.636141719 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.634421598 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.640600735 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.636627395 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.633023236 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.636399992 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.638412259 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.636475141 seconds)
  done (took 35.798926317 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.636088081 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.633011293 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.633182613 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.639520221 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.632875102 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.634567008 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.630347756 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.635393858 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.633999896 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.635964532 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.636219802 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.634495001 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.635446309 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.635410969 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.634642715 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.636513204 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.637016411 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.637163287 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.639158443 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.636944824 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.644288635 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.638006481 seconds)
  done (took 37.473765974 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.639372088 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.639853155 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.634915864 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.647582071 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.635652411 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.639957987 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.6385877 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.641811085 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.638209091 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.63330777 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.636058957 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.636608957 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.641894895 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.641688583 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.643636178 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.644248127 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.63971012 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.642480863 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.638084983 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.635919275 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.650451849 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.650193785 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.637819726 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.629318435 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.640536482 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.63755342 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.642432743 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.640299859 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.633697832 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.647686972 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.637036107 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.634411052 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.653228808 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.644315454 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.636796202 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.647835943 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.642559574 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.638659497 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.641119447 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.647659664 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.64739266 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.641811155 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.657860891 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.648344318 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.642228597 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.642879307 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.647248298 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.63658556 seconds)
  done (took 80.27157504 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.639412806 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.638995713 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.635129509 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.638824392 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.636841459 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.640796011 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.644099784 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.638406182 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.639235618 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.64203779 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.642634793 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.642716089 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.641954469 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.638078977 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.644346673 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.637010823 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.638656494 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.640285053 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.641110297 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.641060291 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.639504716 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.640522723 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.64301033 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.645494514 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.638087567 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.642313453 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.646924026 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.648165105 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.640414957 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.639710189 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.647362838 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.641022787 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.639098799 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.641977377 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.642941885 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.642391047 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.643625003 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.642540228 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.642607765 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.647756115 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.644589302 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.644165784 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.638428044 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.641780146 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.639974678 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.641675244 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.642526748 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.642812819 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.640582856 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.642772101 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.640970755 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.646611207 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.643333206 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.641638438 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.647582768 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.642835586 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.642290266 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.641023904 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.642360247 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.644836819 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.642672089 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.643868679 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.651132522 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.649564655 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.644672762 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.641528158 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.641125732 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.642828393 seconds)
  done (took 113.157438669 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.648659512 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.641530812 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.642514666 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.645670305 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.652179443 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.648508446 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.643955702 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.643921828 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.647669162 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.646650877 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.649151753 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.64527193 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.642979739 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.646170299 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.642364019 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.642778177 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.644170394 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.645647607 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.642556501 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.647187258 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.643056565 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.645372152 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.643337676 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.643779143 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.643703155 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.643563333 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.643979936 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.643612571 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.644186946 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.644200705 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.644470153 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.644181288 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.646289937 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.646463423 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.644983975 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.644408342 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.644244635 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.646942254 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.651342185 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.646887988 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.646365854 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.645198387 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.644228222 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.646396166 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.645382978 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.652162751 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.644966863 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.645675543 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.645445067 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.648192344 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.64510012 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.648430712 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.647701499 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.651420547 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.645889466 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.646014762 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.649888998 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.649156642 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.646523066 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.649876775 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.649552712 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.645759352 seconds)
  done (took 103.542934548 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.652124198 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.649552503 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.647218407 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.645923829 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.651386814 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.646082578 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.652066859 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.649540071 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.653477723 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.655072688 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.653036954 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.649874122 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.652970744 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.650430966 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.658685717 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.653298788 seconds)
  done (took 27.91740095 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.658857317 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.646742299 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.650866147 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.65079023 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.648546299 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.651833449 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.649953182 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.652960198 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.653379525 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.65238757 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.653305494 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.653997551 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.651266757 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.650621982 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.650588179 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.65189477 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.652076426 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.654162935 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.649948851 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.651056395 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.650363639 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.653874141 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.653326656 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.653947615 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.652856833 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.651877519 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.654454662 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.656947577 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.649265246 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.654088973 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.656016453 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.649503055 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.653555735 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.656284713 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.65374249 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.653378687 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.653384554 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.655038885 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.659143317 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.65590331 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.653705266 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.66008799 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.656989202 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.658881552 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.654755259 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.654967018 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.652979265 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.65399804 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.655233602 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.653266592 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.657175749 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.65499719 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.651328566 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.654651195 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.653724053 seconds)
  done (took 92.437402132 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.654256872 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.654487209 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.656998072 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.660043082 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.655348141 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.65743884 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.653325259 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.658900549 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.656052351 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.652047931 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.65376945 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.662423274 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.657668339 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.655533291 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.655867203 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.65596491 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.657520555 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.655253786 seconds)
  done (took 31.312336716 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.66033467 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.654449773 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.658655546 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.655033647 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.655267754 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.655791285 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.656311812 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.65893519 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.661642866 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.655354846 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.65268188 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.667749649 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.660272092 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.661745114 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.663159191 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.654827964 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.658091438 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.659374422 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.657377799 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.654902764 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.662831775 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.656874104 seconds)
  done (took 37.9832045 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.646096127 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.647830217 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.64873487 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.673640482 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.657631812 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.65012576 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.646868782 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.646859493 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.676368623 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.6805679 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.680922693 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.655556478 seconds)
  done (took 21.414125568 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.658032002 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.66237662 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.659311355 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.655506821 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.659153305 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.656840371 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.655063608 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.656705088 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.656272281 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.665199255 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.661714035 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.657096269 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.656819628 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.661725419 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.660957934 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.660750784 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.661673946 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.664306613 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.65784839 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.659675927 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.657921793 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.661310003 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.659431202 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.664817083 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.662145654 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.664477725 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.658712815 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.658707997 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.659770702 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.657578663 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.659713501 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.662867952 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.660917146 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.666012906 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.661075127 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.660164816 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.658055399 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.66139919 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.659058949 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.662637547 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.660002993 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.659079622 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.659665381 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.659151 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.662995204 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.659123901 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.659976244 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.665453617 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.658735165 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.662532784 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.662762283 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.663707306 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.66643782 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.66455902 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.657283862 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.659046866 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.66131594 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.660619552 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.666419033 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.661864054 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.66495921 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.661669266 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.659937971 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.660373781 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.661970422 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.662143908 seconds)
  done (took 111.110438627 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.660071229 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.662048016 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.663512169 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.662858315 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.667645097 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.661846524 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.66642015 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.663378842 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.661627502 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.662492625 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.662484524 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.66804424 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.662843927 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.660581558 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.661831578 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.661649641 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.661077572 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.661759921 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.663419978 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.663090676 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.662665692 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.664765959 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.659957527 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.66071272 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.665047769 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.662983401 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.666584487 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.660664391 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.662770314 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.664677191 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.662697959 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.661420283 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.66899443 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.66419829 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.66264935 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.664883782 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.665743179 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.667697617 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.665846194 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.673697962 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.671284595 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.669007211 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.665854576 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.663772467 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.673846583 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.666138481 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.662633216 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.664380087 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.666469528 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.665295287 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.666808188 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.671682971 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.666263427 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.667240297 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.665129693 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.666714811 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.669455382 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.665113071 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.662724359 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.667966995 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.666663827 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.66451062 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.66837382 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.668186227 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.666227598 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.669934354 seconds)
  done (took 111.397867148 seconds)
done (took 2131.718894476 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.889800442 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.854382321 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.660524638 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.643676895 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.653422827 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.637138773 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.644405759 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.653075925 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.660731718 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.656791272 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.661197 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.954587731 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.704564317 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.656445697 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.657785044 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.815933576 seconds)
  done (took 32.915547292 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.705339206 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.67476779 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.831673078 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.659061044 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.750918954 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.955517877 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.744075277 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.667163192 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.908722122 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.671822164 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.639808317 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.69632088 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.665626963 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.64894635 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.691928003 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.95811758 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.056241021 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.645024832 seconds)
  done (took 36.082559592 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.331214256 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.677734927 seconds)
  done (took 6.522969506 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.700062208 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.665297592 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.670810443 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.666837941 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.637935243 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.636263731 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.665976309 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.653503354 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.639541173 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.84330256 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.669354532 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.692990428 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.665466258 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.669493167 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.672982158 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.733458773 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.869827441 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.675266736 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.674683841 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.680338959 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.66284728 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.841316204 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.825485699 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.671462551 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.847022096 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.652074541 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.672623383 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.682143937 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.867412399 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.675262475 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.666272715 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.667660043 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.671650354 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.643216501 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.345756538 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.644235765 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.701709833 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.681513061 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.672279624 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.889195617 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.666669972 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.681093315 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.645296165 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.335376587 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.855509699 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.851333609 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.647801582 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.666744632 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.669976817 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.756432504 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.668975853 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.671723478 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.782294802 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.643428399 seconds)
  done (took 104.835146498 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.663946372 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.644986349 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.914581875 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.662943591 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.642000285 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.641773021 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.645806146 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.092354621 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.644512965 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.643200298 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.088589687 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.482401847 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.646197188 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.697573693 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.698820709 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.680907118 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.657976549 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.64513155 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.665542454 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.64713327 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.374742277 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.647501753 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.64350746 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.838751841 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.718583418 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.399144123 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.646354819 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.644118222 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.648033664 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.640958812 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.441755548 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.651451766 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.718755925 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.643848285 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.073595322 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.240688428 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.200686763 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.646362991 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.697395319 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.648672642 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.644711174 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.399863837 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.217964939 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.645168355 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.644621778 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.395587735 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.643983219 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.650910846 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.654432313 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.015225609 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.645128825 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.647342933 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.644272571 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.644514711 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.64495087 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.72350199 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.703121815 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.402674669 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.646597169 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.665111674 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.651373055 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.650251264 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.645071626 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.652643119 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.648722928 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.220059618 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.837100654 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.648856116 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.21938111 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.440083198 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.649316998 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.511480894 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.668527052 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.673634615 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.766000062 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.671833199 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.645484248 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.393349811 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.65002896 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.644073943 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.204854402 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.649768243 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.09535186 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.669368361 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.645787429 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.39683545 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.652516147 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.733806583 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.661684842 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.657642986 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.650307556 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.661811115 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.071248935 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.695678271 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.647259404 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.649128776 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.688718237 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.648495455 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.646639772 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.657093545 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.516921391 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.660936911 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.650879976 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.652188941 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.652152973 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.649014026 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.653473671 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.651077347 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.033183899 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.651473976 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.65435437 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.651321722 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.656589291 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.660601114 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.853765692 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.658118327 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.157273562 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.651396661 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.651758719 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.658465228 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.650690566 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.700591604 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.655032529 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.65046456 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.651417824 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.058512329 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.67163904 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.648724534 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.654216224 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.653262262 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.653312408 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.65535345 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.697457058 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.653466758 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.650915595 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.663740969 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.666811401 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.652037176 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.662101374 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.652574745 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.657648714 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.653662802 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.084049934 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080962461 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.872750857 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.659149114 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.653230415 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.653631653 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.692856194 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.92200747 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.67842482 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.65031496 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.052707401 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.90485955 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.650581893 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.650190223 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.656128688 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.037851322 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.655470084 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.08313634 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.474366887 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.655462612 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.663083832 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.658875336 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.536665662 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.654581773 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.658675381 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.093629015 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.676021161 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.657578174 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.656863907 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.659577241 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.654723831 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.6599298 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.655623177 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.655618637 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.660447463 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.770212958 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.943018592 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.67491341 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.660077305 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.410285903 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.67579334 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.651702078 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.665159935 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.655774104 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.659877279 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.68792491 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.657667431 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.682449982 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.654004116 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.668820385 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.438608709 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.656212637 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.678214737 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.947885971 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.621170332 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.659569558 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.660771527 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.657334707 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.700717878 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.432172136 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.725453565 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.165505054 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.663941832 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.730224214 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.655620802 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.709219657 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.431229069 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.661260067 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.65697286 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.597004131 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.658880574 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.435383019 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.655183456 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.68271021 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.528436892 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.660667883 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.661933197 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.652741386 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.65950279 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.069111024 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.658953698 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.693880067 seconds)
  done (took 578.847159071 seconds)
done (took 760.716818268 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.659753241 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.656406307 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.658063152 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.656692935 seconds)
  done (took 12.162284255 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.69755267 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.681608534 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.691906422 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.688340605 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.69295914 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.684821861 seconds)
  done (took 11.670755548 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.66526316 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.654682973 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.662008835 seconds)
  done (took 9.51486666 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.013956733 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.661292334 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.207478758 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.677767613 seconds)
  done (took 11.095741435 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.694874816 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.692863946 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.691980802 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.692864435 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.698823154 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.693095191 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.695679876 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.694854982 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.694894791 seconds)
  done (took 16.780521183 seconds)
done (took 62.7575045 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.895243243 seconds)
    (2/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.646850622 seconds)
    (3/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.937059175 seconds)
    (4/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.155559726 seconds)
    (5/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.110101711 seconds)
    (6/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.395633481 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.804040095 seconds)
    (8/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.032590178 seconds)
    (9/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.663892944 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.718315227 seconds)
    (11/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.677149936 seconds)
    (12/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.646822756 seconds)
    (13/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.906426299 seconds)
    (14/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.838841448 seconds)
    (15/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.655875653 seconds)
    (16/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.722690923 seconds)
    (17/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.64694428 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.83490198 seconds)
    (19/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.873926775 seconds)
    (20/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.729456448 seconds)
    (21/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.816118795 seconds)
    (22/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.042373195 seconds)
    (23/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.075430053 seconds)
    (24/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.666765515 seconds)
    (25/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.070609258 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.820743266 seconds)
    (27/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.040297722 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.881917806 seconds)
    (29/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.727657407 seconds)
    (30/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.908615683 seconds)
    (31/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.650206147 seconds)
    (32/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.045353323 seconds)
    (33/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.678513727 seconds)
    (34/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.650597817 seconds)
    (35/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.935847708 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.878291297 seconds)
    (37/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.240873229 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.822024575 seconds)
    (39/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.668516227 seconds)
    (40/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.168417087 seconds)
    (41/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.735266266 seconds)
    (42/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.86463111 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.800924336 seconds)
    (44/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.051437128 seconds)
    (45/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.738198901 seconds)
    (46/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.319035472 seconds)
    (47/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.723844981 seconds)
    (48/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.653023963 seconds)
    (49/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.980979774 seconds)
    (50/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.840113048 seconds)
    (51/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.64891527 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.883699806 seconds)
    (53/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.220220183 seconds)
    (54/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.417655555 seconds)
    (55/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.004204864 seconds)
    (56/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.047351832 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.853355934 seconds)
    (58/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.669911725 seconds)
    (59/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.995976164 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.034950674 seconds)
    (61/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.615541893 seconds)
    (62/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.945791291 seconds)
    (63/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.922787807 seconds)
    (64/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.823413997 seconds)
    (65/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.707103955 seconds)
    (66/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.729055001 seconds)
    (67/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.800779834 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.671508158 seconds)
    (69/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.175874111 seconds)
    (70/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.883991602 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.888339642 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.836138311 seconds)
    (73/192) benchmarking ("map", identity, BigInt, true)...
    done (took 2.109080841 seconds)
    (74/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.081316975 seconds)
    (75/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.734744062 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.932239987 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.918165361 seconds)
    (78/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.830009738 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.920848106 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.874111715 seconds)
    (81/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.82264267 seconds)
    (82/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.836304882 seconds)
    (83/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.814780077 seconds)
    (84/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.67846428 seconds)
    (85/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.671420507 seconds)
    (86/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.653286217 seconds)
    (87/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.652354395 seconds)
    (88/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.6822707 seconds)
    (89/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.654553487 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.892160379 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.728127928 seconds)
    (92/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.283557846 seconds)
    (93/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.831917802 seconds)
    (94/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.833874545 seconds)
    (95/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.654353043 seconds)
    (96/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.660062988 seconds)
    (97/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.82728062 seconds)
    (98/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.273195635 seconds)
    (99/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.687315406 seconds)
    (100/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.358400045 seconds)
    (101/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.104204034 seconds)
    (102/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.907985016 seconds)
    (103/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.66190533 seconds)
    (104/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.072381272 seconds)
    (105/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.891729598 seconds)
    (106/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.65739051 seconds)
    (107/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.401475775 seconds)
    (108/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.99144996 seconds)
    (109/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.765018513 seconds)
    (110/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.738344799 seconds)
    (111/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.414610615 seconds)
    (112/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.685282396 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.731994341 seconds)
    (114/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.657440027 seconds)
    (115/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.741404685 seconds)
    (116/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.8044472 seconds)
    (117/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.65255484 seconds)
    (118/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.668610512 seconds)
    (119/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.833434894 seconds)
    (120/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.9955949 seconds)
    (121/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.991147408 seconds)
    (122/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.987231616 seconds)
    (123/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.679389257 seconds)
    (124/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.87970237 seconds)
    (125/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.66659622 seconds)
    (126/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.906776623 seconds)
    (127/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.908144744 seconds)
    (128/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.32784162 seconds)
    (129/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.836706749 seconds)
    (130/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.675961587 seconds)
    (131/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.737426876 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.888854092 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.837241943 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.682946344 seconds)
    (135/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.655396053 seconds)
    (136/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.884307634 seconds)
    (137/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.659244867 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.939873779 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.809050579 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.0425515 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.862468545 seconds)
    (142/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.660234796 seconds)
    (143/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.900630241 seconds)
    (144/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.66349401 seconds)
    (145/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.840981175 seconds)
    (146/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.663077686 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.941052421 seconds)
    (148/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.160170229 seconds)
    (149/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.905414718 seconds)
    (150/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.872091626 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.937268629 seconds)
    (152/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.881670987 seconds)
    (153/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.820998606 seconds)
    (154/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.839086451 seconds)
    (155/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.23343597 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.859196131 seconds)
    (157/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.217960608 seconds)
    (158/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.66085813 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.821552308 seconds)
    (160/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.112074447 seconds)
    (161/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.762628753 seconds)
    (162/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.283534449 seconds)
    (163/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.816058872 seconds)
    (164/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.659575215 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.760065928 seconds)
    (166/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.108607107 seconds)
    (167/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.672786673 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.860599522 seconds)
    (169/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.659038974 seconds)
    (170/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.689133234 seconds)
    (171/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.771117543 seconds)
    (172/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.851665285 seconds)
    (173/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.658578162 seconds)
    (174/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.078943837 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.872839556 seconds)
    (176/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.16773362 seconds)
    (177/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.805923085 seconds)
    (178/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.87630997 seconds)
    (179/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.618856769 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.860333287 seconds)
    (181/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.871485543 seconds)
    (182/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.168181513 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.056413459 seconds)
    (184/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.951479026 seconds)
    (185/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.997394221 seconds)
    (186/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.672115009 seconds)
    (187/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.96948334 seconds)
    (188/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.047574485 seconds)
    (189/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.738778793 seconds)
    (190/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.87311962 seconds)
    (191/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.742640318 seconds)
    (192/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.678731004 seconds)
  done (took 410.440988282 seconds)
done (took 411.976906921 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.740112342 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.867327752 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.710890819 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.705013815 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.721210288 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.690928435 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.732184589 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.707251251 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.73145363 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.731559719 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.693138771 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.714853963 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.733350729 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.723104034 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.753054631 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.712483899 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.710409333 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.722187367 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.735256697 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.735249084 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.714136763 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.724057368 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.748025849 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.706930121 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.728562201 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.729593616 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.728997102 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.68455011 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.714972064 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.733290595 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.699774391 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.72211159 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.737522907 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.72431173 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.713382687 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.723641812 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.720680961 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.873146229 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.739684635 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.723031958 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.721060827 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.73772398 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.727121235 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.724524327 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.721902345 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.745295893 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.732790601 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.735411745 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.703357878 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.677759581 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.739092939 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.733222849 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.720470879 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.684128687 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.680282947 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.733674233 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.722572193 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.742607912 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.719929748 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.722326072 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.756804061 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.744740375 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.736986735 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.729739725 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.721403748 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.737441472 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.723240155 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.73966885 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.724015533 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.723411616 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.721349133 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.723396809 seconds)
done (took 133.935702232 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.894642258 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.683883474 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.931655974 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.717741132 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.94439677 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.893214702 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.720211069 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.720510268 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.723666815 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.57627845 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.719661907 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.722579247 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.685149627 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.725121888 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.895725986 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.721784663 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.723213057 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.486133048 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.722341019 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.8993416 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.688862878 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.725622301 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.720599247 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.583762852 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.687100503 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.696766258 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.906517511 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.723115698 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.481029397 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.692670625 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.685128116 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.484926959 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.90390447 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.743409759 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.733289408 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.731329242 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.95186874 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.725556651 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.895542163 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.896805942 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.934008228 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.763289662 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.693465558 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.692331406 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.728131629 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.723488162 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.724197329 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.754273291 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.68858903 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.727440759 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.482542089 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.726583807 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.733232557 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.722447107 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.722998644 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.756026028 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.725071464 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.728631064 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.902541308 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.731637102 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.897159199 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.578441085 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.591761006 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.724921584 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.691472987 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.727273209 seconds)
  done (took 135.192625756 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.842235176 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.85146952 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.908184483 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.711483632 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.811939493 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.904950832 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.711188273 seconds)
  done (took 14.298634624 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.727611591 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.727172499 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.808126229 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.811306871 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.72690801 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.951567305 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.725227978 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.736155555 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.726526886 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.812983271 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.728645521 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.725584098 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.738781936 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.692640594 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.810606223 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.735205084 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.89464596 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.720162459 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.729670791 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.930557789 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.723943387 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.736803612 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.814048002 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.734749021 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.731825954 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.730940576 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.562081952 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.729547312 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.727657896 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.724867248 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.721578072 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.839961143 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.72918323 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.695558702 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.727067108 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.891520773 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.727881597 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.725698358 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.731406487 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.694875934 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.727544124 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.727894658 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.726592327 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.731226227 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.731344817 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.750117526 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.73197744 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.726814352 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.724280231 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.731578645 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.816439996 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.723605076 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.728877185 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.729640341 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.815714484 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.739359313 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.729051369 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.723545781 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.729551362 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.729585375 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.934853727 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.813210255 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.733839548 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.813608351 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.728099781 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.728645661 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.726290124 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.726495667 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.870446933 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.727155248 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.812074007 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.724714365 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.975495627 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.756046701 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.729031255 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.726862962 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.722879634 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.734626729 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.694728847 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.736148849 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.729080772 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.724033622 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.731868138 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.732169572 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.729201876 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.942634814 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.898063504 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.735087053 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.745736242 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.741830299 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.728160194 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.819995266 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.72783201 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.72875594 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.816936567 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.89783205 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.817803996 seconds)
  done (took 177.157657763 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.739901492 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.739295619 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.730262906 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.759858429 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.720665246 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.720641221 seconds)
  done (took 11.971055258 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.727169635 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.740371244 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.726919394 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.729208162 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.732218531 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.729148029 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.733911624 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.726870086 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.739212577 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.73673866 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.739047892 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.736636481 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.736678875 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.734457922 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.729182461 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.736129993 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.736444418 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.73318304 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.73361822 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.734957777 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.709802971 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.734079033 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.739620869 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.727077584 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.738161466 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.739695529 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.753694447 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.734751954 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.733516322 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.741699905 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.736609523 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.733537764 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.728529166 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.73492097 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.740859574 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.727552086 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.735274786 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.736308437 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.737083326 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.736265834 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.738733047 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.735406298 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.733793383 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.73717384 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.731430442 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.736708488 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.744831727 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.755343679 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.736862837 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.73371544 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.736232589 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.731696887 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.737809187 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.737892158 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.727055655 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.733791497 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.742850191 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.733628347 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.737469479 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.731319675 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.736970672 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.741678533 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.731936442 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.737022285 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.734509046 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.738796463 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.730662188 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.740454844 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.739201193 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.731699331 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.735980113 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.734040411 seconds)
  done (took 127.503935454 seconds)
done (took 467.676958234 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.354412876 seconds)
  done (took 4.921870442 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.993171478 seconds)
  done (took 4.563334974 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 27.736821212 seconds)
  done (took 29.317665048 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.730742157 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.704658673 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.729113457 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.704821821 seconds)
  done (took 12.436386499 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.431390263 seconds)
  done (took 5.000936432 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.715250871 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.708780355 seconds)
  done (took 6.994385599 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.276658017 seconds)
  done (took 4.844826217 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.559976936 seconds)
  done (took 5.13545263 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.720666015 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.716723894 seconds)
  done (took 7.019354696 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.6890254 seconds)
  done (took 4.256748292 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.992929269 seconds)
  done (took 21.563758143 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.728253292 seconds)
  done (took 4.304052562 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.741317593 seconds)
  done (took 4.312370589 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.169273202 seconds)
  done (took 7.737957181 seconds)
done (took 123.977338532 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.704174463 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.705333408 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.704689472 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.70777087 seconds)
  done (took 12.390788521 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.856457864 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.860436233 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.863259008 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.851040415 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.836784691 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.862675834 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.772543352 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.773698387 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.834181218 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.831051281 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.866442025 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.845957995 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.856341648 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.772853098 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.833603002 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.86373791 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.835025041 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.861803236 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.787002732 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.848014751 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.739898489 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.850171101 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.834558571 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.738666907 seconds)
  done (took 45.449687214 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.296011874 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.857546619 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.947747406 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.828291852 seconds)
  done (took 9.49874813 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.907602008 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.908954553 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.922696385 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.956631007 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.011380149 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.918732683 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.777853594 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.776939861 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.758180841 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.909115677 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.993329668 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.904075232 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.128490222 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.738403606 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.12479031 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.742839016 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.748058395 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.907868033 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.956042175 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.98765255 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.74573303 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.907891569 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.914554428 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.906533854 seconds)
  done (took 47.126653886 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.762857065 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.769330304 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.744438172 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.768479218 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.748051061 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.746554083 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.744766007 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.758213108 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.749216992 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.772401156 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.749601399 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.767598309 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.748140109 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.743498528 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.760741711 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.747348947 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.752438072 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.762344359 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.761337947 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.746662827 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.748356059 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.75929914 seconds)
  done (took 40.184927708 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.709350609 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.710339562 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.148545147 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.048345533 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.71233402 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.709582412 seconds)
  done (took 16.614499233 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.844360795 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.054875205 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.735882754 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.246119566 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.365957501 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.735267104 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.73673866 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.115477603 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.536389159 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.50635168 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.810744229 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.843246617 seconds)
  done (took 26.107913793 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877985182 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.726003914 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.729791338 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.737279231 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.721922879 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.718543608 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.741762064 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371228562 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.742055118 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.081490391 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.726291591 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87684195 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.056185427 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.726693737 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.727210982 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.714680058 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.034695892 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.472199991 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.727388797 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.721667609 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781753951 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.730941763 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.720720212 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.029813987 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.723714168 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.722959672 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.066127404 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.726592048 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175867825 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115155635 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120908043 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.726809045 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08755038 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.344166252 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895730945 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031993593 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.719751862 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.722408415 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.730628175 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.719053868 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.748276788 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.72713255 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116525781 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.724371444 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.720717418 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.720814497 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37996424 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.753316885 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.72068592 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.727853381 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131803702 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888141711 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.748973315 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.722365812 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.770679987 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.725593736 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.751330179 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930360348 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.454628483 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.728441515 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.727507667 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.724973825 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.726574308 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.736763034 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.622026237 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.757086987 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.755118441 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.746171912 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.725095419 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.719567271 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.775781962 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.724884079 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.769546044 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.726439304 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.741177073 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.72554387 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.726114543 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.522530833 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.740063383 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.724861311 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038603931 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.721824961 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.725127197 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.724549819 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.728339687 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.737663358 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754649317 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.701492208 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818288205 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375786893 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.033718813 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772058165 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785542771 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.029532317 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.700891154 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.726764765 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.724634955 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.728466588 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771930495 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409343325 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.726279648 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.748793475 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060521453 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.023183256 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.748116572 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.705213701 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376684983 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.74564056 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.781716865 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.747471449 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.035552007 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.597718187 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139768123 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.729324588 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791461819 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.731839224 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.727698474 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.725657222 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.752879888 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.730311166 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141428041 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.701431795 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.73262822 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87927082 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.733690716 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.732947255 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.738998235 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.728275991 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.731024595 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 2.040442852 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.730253058 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126423129 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.732103014 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.731614754 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.743621308 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.737817567 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.735875212 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.040092319 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.728951287 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085368189 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.734771091 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.730644239 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.72581653 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.034999074 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.738797999 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.757345679 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162697924 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.73042382 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.776494623 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133522426 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792201089 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924313351 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789724168 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.750652999 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.065567276 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.756517222 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.759524797 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.743225797 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.732880418 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.73854252 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.764024252 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.72944276 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.599548239 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.7337417 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.738143098 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.736296565 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.777481619 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882758276 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765617332 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048283584 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.734523294 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.724942327 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.759398384 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.754685914 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037885824 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133502242 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.732157211 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981369698 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.415859307 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.604858412 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.779226883 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.733391516 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.733425528 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.731407045 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.735016443 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.736325199 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.736708698 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051450258 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14449959 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.75464345 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.612613447 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.738197085 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.737502723 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.763843643 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139562231 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.76288102 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.733470158 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.738822234 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.741446241 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.737339784 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.136351976 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033700096 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.779238896 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.733608443 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.340533598 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.768967129 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.739100902 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.737067123 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79338008 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.736010285 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462738453 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160124552 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.754546441 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141849044 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.73469622 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.77897762 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.735354196 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.738011936 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.738314139 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.761247014 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761915045 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.051157343 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.739835491 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.738758678 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.456383874 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.738121238 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.541662735 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.755093298 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.734212221 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.740405397 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394416078 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.733600621 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.738052164 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132487029 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.400533546 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.734906303 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418107359 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.737035136 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.777485671 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144098492 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051767757 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.753445392 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.753905507 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.145864848 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.034363378 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793745211 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.749615367 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.738327967 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.712778559 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476365605 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.745695036 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99071942 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398317342 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.756182263 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.744526521 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.811467017 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.748552103 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.340797108 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.738722501 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.741996661 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.751003253 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.759000778 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472284569 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.748714484 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.741641517 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.621212377 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.746151797 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.404365108 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.73742492 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.056070607 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.141660472 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.132914388 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.742494769 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.760422537 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.072642198 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155426957 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.742994063 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.748468713 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.547558108 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.685701164 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.769343364 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.743248286 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.747288604 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.746037118 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195743887 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.745444865 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.740020711 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.743613836 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.742517606 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.744209372 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.7412488 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.745146502 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.743253524 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.47679897 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.763938487 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.750851069 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.747648706 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.741137473 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.078976244 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.788255755 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.626323292 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060749276 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.766123192 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802985072 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.773225631 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.741263397 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.720490224 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.747161423 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.741025029 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.779113043 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.049514746 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.743610483 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.71985844 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.835744964 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039419328 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.741630692 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.76575443 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099036547 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.743481347 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.7654597 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.764384772 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80528746 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.766733186 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.746152287 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.743828947 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809571525 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893873376 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064217174 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.159899244 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.158096222 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.348260069 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.746195797 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.771303879 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.789125768 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904119302 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.747109043 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.747353487 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.747250192 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.624773723 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.749713284 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.627056765 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.166136979 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.750306447 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.747300617 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.74619936 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074713411 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.747746204 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106131164 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.746702985 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.742462571 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801264114 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.745810903 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.748726845 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047741896 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100498883 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.74560522 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.754616841 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.74850056 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.749239201 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172548618 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.046345698 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.511266133 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.56008945 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.75111011 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.750395145 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410180373 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10324176 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.749645469 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.750958205 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.748103163 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.779207189 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.765892576 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.780100109 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.748686826 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060644304 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157154482 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.383287638 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.153581331 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.772696305 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.712630286 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.770055187 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.08305267 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.672440259 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.069723322 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.635457763 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.759112105 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086202093 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901637143 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069551792 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.750102789 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073330974 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.756068213 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.749693798 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.750264751 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.751245113 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.751162351 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155828056 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.602389871 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08624295 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.777616483 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.756803222 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807506807 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.057966938 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.051505292 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.748033671 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.053507363 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163718864 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.758623495 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.749615017 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.609650222 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157426165 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.75021677 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.774737067 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100323652 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.751821792 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.820778117 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.708045835 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.750356732 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.551937855 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.050333495 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803390501 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.765274272 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.728402124 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606478869 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.752425641 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.468854943 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.751768364 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.765680748 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107745824 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.781319189 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.768542285 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119467566 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.779585728 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.762622747 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069714313 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.599464709 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.756664727 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.761410861 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.754670828 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.75159404 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.753584307 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.751766199 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.751862789 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.756196301 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.350991701 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.754918066 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.755086943 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.796613033 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.755718237 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.764721059 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.753305221 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.757915165 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.78490931 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.75930354 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.72760782 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.769836235 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953384156 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494170733 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.756864264 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.457580325 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.175898765 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.089383783 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.766297447 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.731143185 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.779286458 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.756573095 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.755899755 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.753735444 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.756037622 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.535181744 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.775211149 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.157266018 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781971856 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.054767719 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0527477 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.759534225 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077395806 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.772516184 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806913645 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.735500653 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.762751116 seconds)
  done (took 1180.802038265 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.789549565 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.80198306 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.815465291 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.849284885 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.775427029 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.901342482 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.797790906 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.806226057 seconds)
  done (took 24.145096944 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.769585154 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.775668819 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.764549598 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.776356546 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.767871529 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.420911416 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.765456696 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.781196268 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.806721162 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.762510722 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.769922139 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.62551439 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.783177944 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.759449857 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.761147419 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.779498077 seconds)
  done (took 39.487973996 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.132651017 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 3.037213252 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.788855971 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.831092278 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.806685403 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.749995513 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.263568852 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.775688026 seconds)
  done (took 31.99984181 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.789374892 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.788420651 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.796878011 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.789769146 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.788969743 seconds)
  done (took 10.565214473 seconds)
done (took 1485.949321597 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.789409464 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.783979653 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.790228283 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.783236122 seconds)
  done (took 8.756060111 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.736229028 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.738137929 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.736558678 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.771405568 seconds)
  done (took 11.595170517 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.324504744 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.526707412 seconds)
  done (took 6.46342639 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.762513586 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.607968234 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.594833184 seconds)
  done (took 9.579014832 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.159869142 seconds)
  done (took 3.772352825 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.295570617 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.331531964 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.766017033 seconds)
  done (took 9.009547164 seconds)
done (took 50.788417369 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.756013247 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.525259671 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.912736179 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.765822526 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.916355075 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.913802865 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.029207974 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.770396082 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.769058342 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.76766417 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.765141014 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.918803222 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.01636968 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.529530746 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.015671197 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.529840352 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.919496466 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.767574285 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.773873829 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.75248724 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.028424634 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.757617991 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.759381273 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.772749733 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.921725242 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.905921487 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.76229575 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.526680314 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.769005053 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.757708365 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.902446673 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.771342082 seconds)
  done (took 95.365185408 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.7577018 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.755885438 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.754606783 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.7531427 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.771709028 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.750732898 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.755628562 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.754478485 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.771377212 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.769033548 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.76199243 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.753895939 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.755584701 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.757875356 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.754482257 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.759527312 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.751796789 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.756673666 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.764738379 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.760253452 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.757551013 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.755092739 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.77483701 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.777163562 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.758193063 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.756153977 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.769765276 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.757372778 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.757363419 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.755407305 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.761132753 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.778280115 seconds)
  done (took 89.947107661 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.760629197 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.759271972 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.759140181 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.757880524 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.766136951 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.760556981 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.761721585 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.76192629 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.769581313 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.760020041 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.756097127 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.757743565 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.761335922 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.75788255 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.759406347 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.762184143 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.758400492 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.767680304 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.760044626 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.760723972 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.758403705 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.759573616 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.757216053 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.779338001 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.764146404 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.759342721 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.763359294 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.770580672 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.760613344 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.758301318 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.761964004 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.768992482 seconds)
  done (took 89.999878549 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.091687847 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.795913992 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.804581016 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.770665879 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.801972653 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.795829065 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.772067454 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.142439901 seconds)
  done (took 18.596587667 seconds)
done (took 295.527502492 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.79436589 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.773299384 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.830054367 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.769324926 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.814402167 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.832766374 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 2.099843702 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.825475642 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 2.091062418 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.785714021 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.811640293 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.787325609 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.767496132 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.000062228 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.778380198 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.776040934 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.780584319 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.77086311 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.773846032 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.143052199 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.830056741 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.777105734 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.785842599 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.791451064 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.752615259 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.886193489 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.888857166 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.021003718 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.988664271 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.883718104 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.776445943 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.772619689 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.781551621 seconds)
  done (took 80.563160582 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.79375394 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.800986983 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.800685338 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.79991883 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.796227859 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.802789308 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.790738333 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.80332513 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.80112066 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.799835789 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.799886633 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.802344488 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.800255536 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.801108576 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.804700164 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.785144535 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.789328029 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.802622247 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.79160653 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.785152427 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.801547459 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.806043492 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.801894222 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.801913707 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.798657776 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.797841332 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.805396972 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.80002478 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.80648873 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.804859333 seconds)
  done (took 55.602580958 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.803495612 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.78581997 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.773986203 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.805388311 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.793297039 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.799063205 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.244465096 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.806999899 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.798716164 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.799128576 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.772039308 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.810542248 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.870860254 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.783370008 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.796106614 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.802695301 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.803649472 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.79469561 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.769922209 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.82247533 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.256407536 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.806588324 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.251139548 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.828550194 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.800285009 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.798790824 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.809928413 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.77052026 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.800509059 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.770043802 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.787394892 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.233452941 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.773970839 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.772317066 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.787656797 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.808419702 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.81146583 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.78015696 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.797596817 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.796300214 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.24617963 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.798314507 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.79215248 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.77484155 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.799251288 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.809315207 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.771858698 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.776082769 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.151092468 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.812214598 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.773291841 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.803524596 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.811509341 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.800691694 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.153342824 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.804563625 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.798745846 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.774824229 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.813810192 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.222846634 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.808755918 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.796929693 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.796161929 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.800859662 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.79711603 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.805174387 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.824198525 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.800404157 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.793761692 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.803343288 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.774660381 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.801226748 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.812919366 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.775449797 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.794369382 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.773891359 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.802467479 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.777426096 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.813519722 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.231303925 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.80230831 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.774187346 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.251966678 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.803705904 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.814229799 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.814199697 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.808990166 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.928157065 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.237503526 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.794641413 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.775925276 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.777371829 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.255835815 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.81503458 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.800206507 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.776088007 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.815500142 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.810704629 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.790168708 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.778830743 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.799651059 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.824658079 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.777381816 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.805467511 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.249502817 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.813738534 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.777297658 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.801557587 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.926075236 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.812952611 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.825135166 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.806549213 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.269304358 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.805767899 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.810987417 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.777430635 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.797325065 seconds)
  done (took 256.28831174 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.796671281 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.778652579 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.798580602 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.775208426 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.78125682 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.808248521 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.779422509 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.780768002 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.80246259 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.781713862 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.781382815 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.805952559 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.805496425 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.780274782 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.78716232 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.77907477 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.784004516 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.785573431 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.782442516 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.780326744 seconds)
  done (took 53.391827552 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.816302268 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.626443837 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.603812189 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.812797423 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.812092934 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.803820793 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.890583014 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.819133705 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.81827326 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.27965281 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 2.062268183 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.819019793 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.815704078 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.812641468 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.608086265 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.797242652 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.282895402 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.667308531 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.813330313 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.614179219 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.792078238 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.814350414 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.805358 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.624566225 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.265376554 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.2416822 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.892487097 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.621280471 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.810507049 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.817363856 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.620538757 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.81062501 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.807279473 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.603188367 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.811354573 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.839662851 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.815386021 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.894419954 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.897087193 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.261731956 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.621747291 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.239755209 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.834070659 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.077176295 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.815156732 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.794522195 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.621111176 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.813628395 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.795450525 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.824145724 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.829530138 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.614574311 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.804156381 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.596012174 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.816498662 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.814270516 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.614454394 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.589509672 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.585377512 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 2.062403746 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.807609823 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.242301204 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.814974377 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.624467329 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.812910567 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.81447543 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.82001999 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 2.070481449 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.617217106 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.233449449 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.260490598 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.256417593 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.816096446 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.905381613 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.81698364 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.26319122 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.907577982 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.365994586 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.261354534 seconds)
  done (took 166.736923883 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.215415661 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.947721215 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.382452894 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.598900671 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.528352383 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.023675357 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.948097241 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.165614705 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.795620798 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.001210839 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.75812455 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.941079099 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.776733619 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.914590186 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.957151116 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.020458048 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.399885279 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.801142659 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.697270372 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.728055502 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.801069396 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.978285856 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.696155356 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.321983263 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.789252739 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.724409926 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.801734703 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.546575441 seconds)
  done (took 68.902749995 seconds)
done (took 683.108267137 seconds)
SAVING RESULT...
DONE!
