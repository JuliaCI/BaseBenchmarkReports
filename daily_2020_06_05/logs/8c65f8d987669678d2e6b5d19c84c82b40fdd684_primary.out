cset: moving following pidspec: 31482
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.318932866 seconds)
loading group "string"... done (took 0.575813922 seconds)
loading group "linalg"... done (took 8.152023715 seconds)
loading group "parallel"... done (took 0.186884945 seconds)
loading group "find"... done (took 1.261624152 seconds)
loading group "tuple"... done (took 2.045682226 seconds)
loading group "dates"... done (took 1.319349913 seconds)
loading group "micro"... done (took 0.201947165 seconds)
loading group "io"... done (took 0.936746505 seconds)
loading group "scalar"... done (took 40.525812629 seconds)
loading group "sparse"... done (took 12.26452396 seconds)
loading group "broadcast"... done (took 0.958118193 seconds)
loading group "union"... done (took 14.476982335 seconds)
loading group "simd"... done (took 4.786906858 seconds)
loading group "random"... done (took 9.304772997 seconds)
loading group "problem"... done (took 1.589348806 seconds)
loading group "array"... done (took 21.436911957 seconds)
loading group "misc"... done (took 1.628422037 seconds)
loading group "sort"... done (took 3.341734575 seconds)
loading group "collection"... done (took 18.116192476 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.537796215 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125901643 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137035399 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120414187 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149682881 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 63.469246457 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122123084 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083090156 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.833445316 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147486676 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113910305 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.435375488 seconds)
done (took 68.641320575 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174831799 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088377245 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080205394 seconds)
  done (took 1.205219989 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066524933 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127566887 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067087722 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067860848 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068113344 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067272046 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066987102 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067403887 seconds)
  done (took 1.568653121 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073341759 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069362027 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067175762 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068497458 seconds)
  done (took 1.315388691 seconds)
done (took 5.384237928 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.801031369 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.209467688 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190827649 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.413359415 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.13672016 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.180070574 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641446138 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319720438 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.204629552 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094822923 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112886527 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.361356468 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124270226 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.657203651 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080834023 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096647555 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140415785 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.451628796 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072082858 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085585767 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093071179 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131482207 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.091822219 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077173577 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150813842 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070854275 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143263598 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086129377 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069153502 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.220937887 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175390867 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660269269 seconds)
  done (took 10.420357226 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102197208 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100229146 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068957653 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125784366 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101284892 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072187047 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076467567 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068866943 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092788108 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129468764 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094877028 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111088562 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068345957 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071224451 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083978884 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198644246 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080619735 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081938236 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069589392 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081159559 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115362037 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081394247 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082964762 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082891031 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131615927 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169617669 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097519161 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101325582 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070296538 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084592699 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119705752 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129321209 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069503271 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068616381 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127821632 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097191216 seconds)
  done (took 4.586249946 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.104146761 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.12412682 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.1523523 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091156241 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140576651 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065611784 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112080777 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065968582 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08316264 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090855606 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.237882179 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094687401 seconds)
    (12/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.444442816 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.628418739 seconds)
    (14/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.123327839 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117359399 seconds)
    (16/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105095109 seconds)
    (17/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071417133 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069521509 seconds)
    (19/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068308893 seconds)
    (20/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.248935507 seconds)
    (21/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.100863836 seconds)
    (22/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111769317 seconds)
    (23/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083337027 seconds)
    (24/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070362952 seconds)
    (25/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068616241 seconds)
    (26/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067132659 seconds)
    (27/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071380024 seconds)
    (28/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063798837 seconds)
    (29/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06835972 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086576276 seconds)
    (31/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075382837 seconds)
    (32/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.332428407 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126944749 seconds)
    (34/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068267522 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.93293521 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.072421631 seconds)
    (37/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.166755547 seconds)
    (38/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06821958 seconds)
    (39/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105921381 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09383897 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140728946 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067837704 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.199101571 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16347923 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068364744 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072365536 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067751115 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085384108 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109923654 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121404398 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066250368 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06700644 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169605714 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065674464 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08227414 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.241190191 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153317889 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06631432 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.29706625 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09469855 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072515085 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065933914 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.188823545 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117243863 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069678039 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067990652 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069884029 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069221567 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.322908644 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068845269 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.969893545 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071294688 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080479241 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073352449 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071842783 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079185078 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079280462 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093761462 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067873144 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.073970701 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067344556 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066291216 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067419951 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093508685 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.390130977 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067393167 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072804962 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065177431 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094145073 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099074775 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067711586 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06642609 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10274976 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070629853 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066359042 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068855573 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117376046 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070308856 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112433932 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067163507 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.173426075 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101260408 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070920664 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104489289 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.077690971 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071737648 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.466603188 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066305685 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07331946 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066773859 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068262165 seconds)
    (112/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065310341 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06714626 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064703015 seconds)
  done (took 21.821424369 seconds)
done (took 38.967882102 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242456831 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083392354 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083692163 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084066791 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083854446 seconds)
  done (took 1.706067275 seconds)
done (took 2.814332996 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126272267 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099528659 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068159452 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098006324 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065309898 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101597772 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10092658 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08329231 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099679876 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065461328 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09806387 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064796541 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065559623 seconds)
  done (took 2.263947193 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082948929 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083122685 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069748798 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081907518 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06305658 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081946307 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083560107 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088423812 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081130652 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075463251 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064679461 seconds)
  done (took 1.956530761 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082336402 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083898755 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069603421 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081918267 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063182016 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081634515 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081429215 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085377627 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082129604 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073821585 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062848074 seconds)
  done (took 1.949133376 seconds)
done (took 7.265458106 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076384949 seconds)
  done (took 1.166621733 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.533304091 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.649895043 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079128485 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.10009514 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192506308 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108705434 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.235207552 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08269686 seconds)
  done (took 8.244437608 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.106117336 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.069934516 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070658206 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069611255 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070272171 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.0695428 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070786376 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071061824 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069501712 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070986582 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070497201 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069626186 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07032489 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069492264 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070465651 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069529139 seconds)
  done (took 2.334181287 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097405865 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096247867 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074047478 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075399756 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073050282 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072642082 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075448212 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074793415 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071747716 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073137904 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076084254 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07423399 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073436205 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064428964 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074857378 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077139371 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071463442 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075598125 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07530489 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076406512 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075560603 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064414107 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073484164 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075062195 seconds)
  done (took 3.012686991 seconds)
done (took 15.857629522 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116613588 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078071639 seconds)
  done (took 1.29212811 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078922385 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080269151 seconds)
  done (took 1.265928543 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07815138 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062932047 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08429038 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.073866548 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063650663 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06399634 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082900794 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063617048 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063579034 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063419643 seconds)
  done (took 1.808103235 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065505025 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073866841 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069440059 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079501398 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07010565 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064618168 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.068924056 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066492662 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073714954 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064190523 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068624921 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083655444 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068589672 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085275148 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068662749 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06841029 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070497202 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067392442 seconds)
  done (took 2.385423518 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063249707 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064122961 seconds)
  done (took 1.238866249 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067064453 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06422694 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066317761 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066086529 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063911953 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063090362 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064274079 seconds)
  done (took 1.561869455 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.402768953 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122667081 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33124036 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070800391 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080297813 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259689481 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064914765 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069637147 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069980124 seconds)
  done (took 2.622589692 seconds)
done (took 13.286683565 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081051477 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086941656 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098752615 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.411533425 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093209165 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068782849 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11421641 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.183011694 seconds)
done (took 2.259698007 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210698743 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.073521833 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.485719547 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208921641 seconds)
  done (took 2.881380193 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.460954339 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081117894 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077119284 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067236228 seconds)
  done (took 1.810021112 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067452874 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071177066 seconds)
  done (took 1.258529897 seconds)
done (took 7.279743377 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065400229 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064643455 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.065657497 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06494098 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065107566 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065209935 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065120733 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090562932 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064848063 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.06508075 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.065398454 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064899203 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065471392 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065906905 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065224571 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065399655 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065578233 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065794401 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064962376 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065470708 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065201883 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06506049 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065546375 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065054515 seconds)
  done (took 2.746012708 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082484703 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067599501 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069232039 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068737446 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06952456 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068732297 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068821719 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067111991 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069036869 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066705103 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069644188 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069392401 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066800094 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069557026 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067094786 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069260873 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069018925 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067346624 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067084631 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069496615 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069364997 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067256927 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069139609 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06937929 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069311471 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06947239 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066938162 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067836831 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068631485 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069002069 seconds)
  done (took 3.19835563 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06560754 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06081643 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062154896 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070674022 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061585888 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062585778 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061126803 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061607315 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062535224 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061543604 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062407015 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061931086 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061567553 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061960698 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062430704 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065908521 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079095224 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061561073 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061552612 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.061843563 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065512566 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061407786 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061880336 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061394135 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064517369 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061196476 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061860151 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061170394 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062393691 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061284257 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065280455 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066115247 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061133486 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070272239 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.0659897 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061643413 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06520536 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061362839 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062476537 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061637659 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062020791 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061749273 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061304564 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070866359 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061553905 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062575716 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062055719 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062436795 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061742941 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063392689 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061128799 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061097795 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063386693 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062401591 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066829289 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061024687 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062107015 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061194295 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062128795 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061601535 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061065108 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061178182 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064552453 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061675669 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078735319 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07017044 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061188143 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062995496 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06192035 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064928956 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062762982 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076916549 seconds)
  done (took 5.707135309 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086489226 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088465432 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066637247 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066594192 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062236338 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062390449 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070303285 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062210787 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06693787 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081417926 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062603163 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066587833 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066763448 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06673204 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06266744 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067050765 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070635557 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062495184 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062173602 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066447389 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063141701 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070748839 seconds)
  done (took 2.645599466 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150832691 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067574087 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106112168 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072811381 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070839831 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073127929 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068439202 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067948936 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068618216 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068426678 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069032987 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068078738 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070363532 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068550967 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068385877 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068219425 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068154951 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068468455 seconds)
  done (took 2.500449731 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078642482 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068008564 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087801067 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067511096 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067887843 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066942321 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071845819 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072263074 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066953527 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067599171 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072451519 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067106827 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067724455 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067796403 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06732112 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06780871 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067467154 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067809554 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072223121 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07182222 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.080710026 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07304576 seconds)
  done (took 2.696366072 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078319583 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066337894 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082831934 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068432386 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06218492 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062221598 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068448013 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066811038 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067720742 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066293361 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066923174 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062121793 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069485708 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067109141 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069572965 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066855673 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066751817 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066812202 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066170007 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062033516 seconds)
  done (took 2.492790385 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083726539 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064905788 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065321897 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07157744 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065259107 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064796483 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071328534 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065341365 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06503314 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086434084 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065320118 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065666948 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071731751 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069665157 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065491877 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07145259 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074714763 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071426766 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065323576 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065446913 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085947813 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065409962 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071603481 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065163954 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065191782 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065135715 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065570323 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069416858 seconds)
  done (took 3.08313586 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065397854 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064877419 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065653183 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065098993 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065068756 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06508386 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065212372 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06508983 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064680353 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065173148 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064561256 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065875192 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066211017 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065008725 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06496884 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066111706 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06510319 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065545476 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065533259 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065310923 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064836894 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064644178 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06504286 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065272407 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065568076 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065230617 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064991796 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065119048 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064272795 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064991504 seconds)
  done (took 3.100574008 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075691168 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073711089 seconds)
  done (took 1.29413752 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063451994 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079344894 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061482781 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072986687 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070704136 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065415714 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071102043 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070759929 seconds)
  done (took 1.69564939 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08530582 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075946609 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065385708 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07573552 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.074864247 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085352527 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126024925 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064113638 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074817736 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065095316 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082731285 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066406301 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074648121 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069229001 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074217846 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077758805 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062162356 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.069268812 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065796499 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06239986 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065006341 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077455303 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073932826 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062363496 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069529957 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091496546 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080396134 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063646721 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070972648 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076755011 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074095337 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061280002 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064163838 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064111957 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062672869 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075029779 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08201777 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071051469 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076269792 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064747233 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071805973 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062043017 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07210329 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074606137 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079768386 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063940541 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064050932 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061591102 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06483583 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070049585 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061725761 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068491868 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061506972 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075907302 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071687522 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079113393 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062511501 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069527047 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07082673 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07083756 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075304359 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069974102 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073224266 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063524538 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079316359 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073390126 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07540243 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061680283 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060903777 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062131471 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077562608 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092605079 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073875226 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064451397 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064674517 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061808755 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070910232 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064179493 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072938656 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075002285 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063783067 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068138102 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075692985 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068382653 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069865596 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070428099 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.061908673 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.066974846 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065152238 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083553766 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062551986 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061693988 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064607049 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079012769 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072694266 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063749235 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06547313 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07538109 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060633958 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063931369 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064322745 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0693943 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07595482 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066445839 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066882119 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076184087 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07169638 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068207241 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069795889 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060151528 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063641554 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064851847 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073740079 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060011633 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069907255 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066965271 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.062852337 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074587486 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061077526 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062343798 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074954731 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074161802 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.061592973 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060468717 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069725735 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062341389 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064442268 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076099952 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061206581 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060759732 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060921212 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070480283 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062346487 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070501462 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065761494 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06924195 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.185302572 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064416335 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069896207 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078324429 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068817693 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07161874 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075386186 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071722878 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064284237 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077160207 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071255342 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066865297 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074110361 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068590948 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062508235 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066725525 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071066727 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063166678 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071769463 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066418617 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070767816 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065193952 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063577567 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070302156 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065033987 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066207491 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06982228 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063420285 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079261001 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070852892 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062331782 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06128789 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071616934 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06545659 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063976942 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066533979 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070936674 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06429249 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062067336 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063562109 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070226186 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072296959 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067131118 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064691241 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072910363 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081844992 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063531081 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070620417 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063783533 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064936037 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064575028 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078440571 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074636873 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068017859 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071435828 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061514154 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073143231 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076315781 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066523818 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062355489 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066823804 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067394813 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075819839 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067484479 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06456777 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06254158 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07026251 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066384398 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070955594 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063671696 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065896107 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069036594 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062804799 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069731878 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064670313 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07845368 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071430488 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062009071 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066171487 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062564308 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074960881 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062214111 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065333882 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066612225 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064486158 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062870731 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070244123 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06104929 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076178993 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076486625 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069224472 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066010097 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063134477 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075722218 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069867188 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071810953 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071008192 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073692062 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078688581 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066204535 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07078538 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078698607 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06314269 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061038599 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072998797 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064814609 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06234581 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062801242 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062046217 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070286897 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069770651 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07252486 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060265694 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068907895 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.061164657 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065015609 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060917973 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070604701 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069288296 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066768427 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074332107 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.062673425 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.062433962 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069641134 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.061713521 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.062550062 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063124392 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069189468 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062504048 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067987093 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065061605 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068103019 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064791049 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060598333 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067828261 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062324748 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067674286 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071080329 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061908781 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068366246 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06919617 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062499227 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.198788638 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068677624 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06804211 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071887743 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071178982 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069932449 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070945924 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06207363 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076425433 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063420476 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07720221 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069363668 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062003891 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069818337 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070862177 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068893467 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064474885 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064445283 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069370691 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063214272 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071049523 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076206031 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065249534 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07886915 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074922404 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070773791 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070579818 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068999001 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069698587 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066404991 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068470167 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064949474 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06913833 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063762 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072552182 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071665432 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069306492 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070395378 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064430218 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069929991 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.0646012 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061377654 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067165233 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066572088 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064062844 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076207909 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064203419 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066811817 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06320602 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064758422 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063472478 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061749187 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070567725 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071482577 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064832215 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074753317 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067090643 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070909921 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07943875 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061738074 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063275763 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062128497 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065490052 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076265148 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064368885 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077809508 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069496575 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066567194 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061438785 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064319855 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062345913 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061858967 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062341984 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071893229 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066232203 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062830956 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063693503 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070981408 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066085517 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078699564 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063512805 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068082682 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064018427 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061497416 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066959438 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066216127 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070797198 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064276066 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065254729 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061805406 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063811634 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068011491 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069958547 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063380081 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069328607 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075650567 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063486385 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070413603 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065997706 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061283992 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070394881 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063408114 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063483317 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066337991 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071215799 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071407685 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064321302 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077910932 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063786599 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07193987 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063985311 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06214555 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06325909 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063014394 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.062997017 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066122782 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064200304 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075840448 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061135402 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068697313 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067663614 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066100877 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072336377 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.062954167 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068545149 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067338997 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064108435 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06850354 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075400831 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065356363 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069529197 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.062727805 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068641924 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071759599 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064723734 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073846818 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067834385 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063100355 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067908701 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064067572 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06196557 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062573521 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062168022 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072472619 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.195148363 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067407565 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067331927 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063481603 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070144529 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067157903 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077748917 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07166893 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071318198 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06213275 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062300793 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064701976 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065391068 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070306226 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072478013 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075592898 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071047903 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068220035 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062964277 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078587535 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073970628 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071894334 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065386878 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.07159974 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065233174 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07129407 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068737488 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068625747 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065108814 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071655779 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06951401 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066694989 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074437527 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072239626 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064440771 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069453863 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070158919 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068604986 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061915069 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065119552 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070184708 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072616983 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070535516 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064219127 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079317301 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065067387 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070177216 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066817718 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063793063 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072710127 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062371079 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070519831 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064703311 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064506802 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062605983 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066556855 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065687287 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070880451 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06642566 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062452426 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079694121 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078669474 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070130033 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063253254 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06274901 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062623104 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062104676 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066343544 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064639457 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069846577 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07881891 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066721736 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066428728 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062333334 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06431515 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071255018 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072114796 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061654598 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062345818 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066699444 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069809059 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075715017 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062641898 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063788549 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071369301 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070516329 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062351158 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066448305 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061849705 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07156059 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080642097 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06425678 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069893607 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073769237 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076763709 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.063990336 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062480737 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.063963524 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070065309 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069479678 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064366068 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064814807 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083100473 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071148862 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066059005 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062835081 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070970473 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066520901 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077393583 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064597445 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064344697 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072883822 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072715374 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070644985 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073726428 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074798765 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069755955 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069660029 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063174499 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068453346 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062181477 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066052291 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064086385 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06521176 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066718741 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068575208 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06565721 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077771576 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076541603 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065730257 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060729985 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065831715 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06547151 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061317199 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06323577 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060935069 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061345354 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061307001 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061698479 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068391288 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071709227 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06711572 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063006396 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062444081 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.192377143 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075043207 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072635382 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0712636 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062395451 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065078186 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065116593 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073060226 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067480324 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066103691 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070607736 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069907986 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070293283 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062851738 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078208156 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065119534 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072004286 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067573856 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064925889 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064440297 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072002548 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068405394 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065732439 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071085402 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070757405 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065801358 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06244089 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061873391 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073689307 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062214759 seconds)
  done (took 42.347691246 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1011467 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064278959 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063444009 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063491349 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073037478 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064123172 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063001675 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064156948 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064343839 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065905914 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063186299 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063416878 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070352664 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077527197 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072785661 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066964483 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062863449 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064150241 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063915265 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064344073 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070699759 seconds)
  done (took 2.670031624 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070776676 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07881742 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074801484 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079979853 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07194552 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067934925 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075792215 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067783011 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076344554 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07290946 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075700315 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068103384 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073278999 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072796728 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073443782 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068225841 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076356303 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072395533 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068354332 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075912378 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068531529 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075445373 seconds)
  done (took 2.829488545 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064992521 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063825465 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071499793 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062307849 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064245582 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062163215 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067089254 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062289106 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065758172 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066548227 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066451354 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066364131 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07075759 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062596669 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067433427 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062401782 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108472225 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066490412 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064599093 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064929242 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062377763 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071577844 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063123951 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062495831 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066396705 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066946456 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064588992 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062339727 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063708206 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066488328 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064196923 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062442761 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070494165 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070029524 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066685926 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066296261 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064022481 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063992001 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062681576 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06304906 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069818963 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063158311 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067044663 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070547946 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062340924 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062251327 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071171241 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063768199 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062300727 seconds)
  done (took 4.47443904 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075572082 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111094952 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068677969 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092225017 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.077364246 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07027883 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068565904 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094084507 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064219033 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064958117 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077955686 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078419784 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066727533 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06799926 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070575306 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065879802 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067248148 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065407699 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069488828 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065551771 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069210203 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070305374 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.077688328 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077516276 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067456162 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065409071 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066020976 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067618164 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077240746 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070798793 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067989698 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068830626 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077594786 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069172561 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065352231 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065740347 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07841104 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066285595 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065881372 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064284321 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065565793 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067568454 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070325875 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078745614 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066383221 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071361899 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066443615 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06378366 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077665163 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065940614 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070708267 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078771826 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067307568 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066596889 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067849079 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077455885 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066479647 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065217353 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066367503 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077094886 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064217079 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067088835 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078243724 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065453351 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069804564 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07865387 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070879881 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066993125 seconds)
  done (took 6.204457281 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073519991 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095989678 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080592237 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080361854 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073956576 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074158269 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074295279 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074517879 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074251031 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078406482 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074551508 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1159596 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069998609 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076770021 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074588774 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074444855 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074680271 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07418588 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074554803 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074223846 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.089535127 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079510025 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073303958 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079536859 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076596249 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069706897 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073615702 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07370778 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0798031 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073380984 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076557063 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073602476 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073599628 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079903148 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076715558 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073585283 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063527482 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073355802 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073620713 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073231814 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069642893 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079796092 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073449005 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069806177 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073414329 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073442565 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079653463 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076322079 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075163058 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077849796 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073454958 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079766379 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073097136 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073612077 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079290357 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082671496 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07985328 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079877446 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073452791 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079695372 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079893643 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082634766 seconds)
  done (took 6.00791152 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07870164 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070670887 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082482457 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062269602 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062062868 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072618296 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062132275 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062837086 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070691076 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07364258 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072697998 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072189998 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075080528 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072689295 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072675062 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074970111 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072415217 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07230735 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070762975 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071893535 seconds)
  done (took 2.696634278 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077023124 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.0814596 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068399032 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072042456 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067735582 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071957893 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067204926 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067832486 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068266076 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067784858 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073776835 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074061862 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068275482 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072841135 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073593466 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072663903 seconds)
  done (took 2.400457032 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084175452 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070899444 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077759035 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063593681 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067574279 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062861535 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06366444 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062179152 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062975083 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076442078 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063665582 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075035356 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06375949 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062457813 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063226431 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069065432 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062644149 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063378371 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063324386 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076852877 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070524511 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064390429 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067996136 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063453419 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068947976 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070919582 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06579536 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067398568 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063556878 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063924427 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069342171 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070365672 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063232043 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064498656 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063189442 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063647277 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063449826 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.082125487 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069707353 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063519879 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061997158 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069142217 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.0639405 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06463174 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062917067 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064153598 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062635517 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069598368 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063968358 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069175713 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063980802 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065952972 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064178478 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071104111 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066740791 seconds)
  done (took 4.936473808 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079297021 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067375327 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062234174 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062135675 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067192192 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068178604 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067691582 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067723239 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068223587 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062106415 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068936575 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067205879 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068809422 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067786036 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068290925 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067781338 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061897213 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067993575 seconds)
  done (took 2.480090222 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072957341 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067598172 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072190086 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067244765 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067155163 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066716092 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062478933 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06218184 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062472755 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06700961 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067114075 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066770069 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062520484 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066569817 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067225683 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067217656 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067289974 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062707494 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067341638 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062236191 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067670924 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062867793 seconds)
  done (took 2.716059718 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095814544 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08394937 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140893827 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079681903 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087186064 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072405588 seconds)
  done (took 1.821811608 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093042318 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098511743 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066959128 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067189331 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073298864 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07054644 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070367597 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070865156 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075429924 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075387601 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070798494 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075773576 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075966851 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077178339 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073063022 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073117704 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073042319 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07109071 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067920322 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079836097 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071344263 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075169765 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071249454 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070668685 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071206044 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077371321 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075277562 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075789886 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070629281 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075697043 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073322695 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070994875 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075552811 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075917856 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067680527 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075280883 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071267996 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080006453 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073388687 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0773537 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067448943 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073373297 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075210642 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074723651 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075673969 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070872564 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074323635 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07056366 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070796673 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085291808 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073016697 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076628326 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07311081 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07552985 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075033543 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081852896 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075778501 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077189752 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07321127 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076044789 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077313084 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07324338 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076977459 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07625513 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07349231 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077215493 seconds)
  done (took 6.193288351 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10477469 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0679321 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070888118 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075506233 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077177324 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07077393 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070954624 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071127541 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07084855 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06811412 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105722776 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071338986 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077864935 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077560657 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071393581 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071145063 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071531989 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077130305 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068622794 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081636022 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071371311 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077797511 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076915779 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077131397 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076088071 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073335919 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070959456 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070941127 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070558869 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070700624 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075074816 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071255607 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076817638 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067815963 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076902478 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071256771 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071130144 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074553406 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071110515 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074033374 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077155171 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080496581 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070890769 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070824045 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07570122 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070919004 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070929122 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067834272 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070847562 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067651043 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075637899 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075684449 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075720486 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077080761 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071204915 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070739553 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070651576 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072352853 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07133875 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07284952 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077054739 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070698386 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081547566 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070450493 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070525985 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076920995 seconds)
  done (took 6.178706423 seconds)
done (took 126.239089938 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208569438 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185138643 seconds)
  done (took 1.649849898 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074022884 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.105404148 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083760552 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133806378 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071320784 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105307787 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104217471 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083583499 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071499925 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071741216 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071408397 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074003685 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137042941 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07143377 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071822283 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074289632 seconds)
  done (took 2.677592884 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105425229 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.167375364 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109224541 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069273337 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104469216 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077446272 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069462275 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082328356 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076311473 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071427781 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077576699 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07549339 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071208649 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.078122132 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076374434 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.078076794 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070979528 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077661672 seconds)
  done (took 2.814066495 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103740177 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094179767 seconds)
  done (took 1.47515178 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.177214342 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.135814482 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.204644318 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.340874889 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.15116867 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.429550776 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14280334 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.140171164 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115827592 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.1354064 seconds)
  done (took 3.247057282 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104754028 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.199865434 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296439104 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120741357 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07648962 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.111511574 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122676793 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082044241 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080083683 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079892298 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079851014 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07841227 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100909413 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076948775 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076117062 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078899297 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103681479 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075189075 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076136684 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076595035 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104677557 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070416628 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076824483 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075308282 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078382053 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078250573 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071581682 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070133165 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076437208 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076407206 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079907314 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108883951 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078038562 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104233225 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074497731 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105266051 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078765884 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074949157 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076286429 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07502398 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077884241 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078149051 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078556759 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078381738 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071378786 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078936151 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071442097 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070108663 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081235903 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071446497 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080481869 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079748472 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103785159 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071518932 seconds)
  done (took 6.126242479 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110033775 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107376125 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072297835 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113602951 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104559598 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070972724 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105874541 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099675295 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108057102 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0712147 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069756355 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071140156 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079497916 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080981855 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115901373 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108574726 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073725017 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07118806 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108667444 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107734646 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070117962 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102435528 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098437917 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107474621 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069113552 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071389007 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069644401 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071475834 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07666244 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078029894 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070411158 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079297901 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083939187 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077343449 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068627939 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069575775 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070127808 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078647367 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079255023 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078445111 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077050089 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068918522 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069894188 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070679474 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070249404 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069245857 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077614138 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078963804 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077862479 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069766404 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070913447 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06928643 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070586121 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078371466 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076544127 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079218237 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078480004 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06967207 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069442253 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072135974 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079663653 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078165831 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078559642 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070326364 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078817137 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069734211 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079999935 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08304283 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072460713 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070616702 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069656279 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069723357 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070366204 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076425001 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076683776 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071047255 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069835572 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069751427 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079204213 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077540118 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069587687 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.0765287 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068936491 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069391153 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070751897 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071207679 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076476785 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07855213 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071060441 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070061613 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070153524 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069447786 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068940911 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076254708 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07798885 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077701636 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076612853 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069593787 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076889454 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076515902 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070384034 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077117237 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068948427 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0702917 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069290225 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075872167 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074940549 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076905916 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069002814 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068422942 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075359733 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077600482 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068255911 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075358303 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077001098 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075305321 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067646008 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078500286 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068675412 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076413379 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069057949 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.21209646 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070990964 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079078334 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071257386 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070692583 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07053719 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078999458 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071274314 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07030497 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071545634 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070465069 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078117097 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081545018 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07218035 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07798541 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077739081 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07121846 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078440915 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069807183 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078691259 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070497602 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070994666 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069180881 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081462532 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069909742 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069820176 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070278945 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079082165 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069728366 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079999142 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077217024 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069407605 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080622511 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08062202 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077042697 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079939154 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071141219 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069932346 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069619126 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070794912 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077433492 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078643612 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071890878 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069573893 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077144534 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079427507 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068988884 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07756529 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078018361 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07795922 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070156472 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070348485 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079922937 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080084712 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077753545 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077838581 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078246714 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070113841 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077319184 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078060885 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070127518 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082942255 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069995438 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081739137 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078142856 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076889683 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078150513 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079155695 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079181432 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079739367 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082302946 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069657426 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069560007 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078333314 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069796899 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070078438 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077220504 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070808955 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071322704 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081978687 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070703348 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079344794 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069048828 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077942425 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069014775 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070952459 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082245081 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069780852 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070786402 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077375397 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069629172 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077232485 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079346983 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077256202 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071926242 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070581922 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078282429 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078173436 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069260912 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068893524 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070784202 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076448747 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.0762758 seconds)
  done (took 18.511828821 seconds)
done (took 37.790592111 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.214045434 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156434474 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.189489789 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115914253 seconds)
  done (took 2.05684058 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.108021116 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099333544 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.088061053 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065984134 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.09373485 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065997035 seconds)
  done (took 1.835877949 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.348619668 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21890493 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.195821217 seconds)
  done (took 2.075552234 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.222434096 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.205661622 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.46501022 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284448787 seconds)
  done (took 2.58710029 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144840484 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08211486 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065304195 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.07811656 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.123434224 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.173203339 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092969775 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126869268 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.072719594 seconds)
  done (took 2.327076663 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148871824 seconds)
done (took 12.362795258 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.198385486 seconds)
    (2/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.100879778 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.147036244 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072685869 seconds)
    (5/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.26408504 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.06960707 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104715059 seconds)
    (8/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.117825819 seconds)
    (9/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071103343 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.127825938 seconds)
    (11/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.212329485 seconds)
    (12/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.169043429 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103137331 seconds)
    (14/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.158858688 seconds)
    (15/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.435138052 seconds)
    (16/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.236085765 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076834329 seconds)
    (18/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081461005 seconds)
    (19/309) benchmarking ("sort", Float64, false)...
    done (took 0.132695512 seconds)
    (20/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.203073334 seconds)
    (21/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.217149598 seconds)
    (22/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.089475022 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.180225576 seconds)
    (24/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.176222264 seconds)
    (25/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.194922304 seconds)
    (26/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075938967 seconds)
    (27/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.229369534 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.097314254 seconds)
    (29/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078776257 seconds)
    (30/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075088069 seconds)
    (31/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.215528974 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068986676 seconds)
    (33/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.178578308 seconds)
    (34/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077415035 seconds)
    (35/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.136571423 seconds)
    (36/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090390977 seconds)
    (37/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067685358 seconds)
    (38/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095074818 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067601122 seconds)
    (40/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084736682 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.199594414 seconds)
    (42/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076043524 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.099886678 seconds)
    (44/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.201066308 seconds)
    (45/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.239826254 seconds)
    (46/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067714028 seconds)
    (47/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06666742 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074160524 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064827054 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11244981 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067895479 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.195285317 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.156631272 seconds)
    (54/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.206433684 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08721791 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 0.067491702 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066076716 seconds)
    (58/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.228901549 seconds)
    (59/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.125105001 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074621029 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13414014 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066333196 seconds)
    (63/309) benchmarking ("sort", Float32, false)...
    done (took 0.132980681 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065977313 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075055201 seconds)
    (66/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07636421 seconds)
    (67/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.125304385 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.101634492 seconds)
    (69/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.216300809 seconds)
    (70/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074664318 seconds)
    (71/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074334194 seconds)
    (72/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07202011 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064759476 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092362651 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169831659 seconds)
    (76/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077053082 seconds)
    (77/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073042158 seconds)
    (78/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065135873 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074763639 seconds)
    (80/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.238462565 seconds)
    (81/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.090588621 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.097604851 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07577831 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073560997 seconds)
    (85/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.126172234 seconds)
    (86/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.168087828 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064667559 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.131709118 seconds)
    (89/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074176723 seconds)
    (90/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.220456037 seconds)
    (91/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.171556363 seconds)
    (92/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07959038 seconds)
    (93/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.17758572 seconds)
    (94/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.180958661 seconds)
    (95/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07579739 seconds)
    (96/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065761067 seconds)
    (97/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.078054415 seconds)
    (98/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067432144 seconds)
    (99/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.139584363 seconds)
    (100/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073617322 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067579547 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073334239 seconds)
    (103/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075123189 seconds)
    (104/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068895185 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088961252 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085203016 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.232590647 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073003989 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.135687098 seconds)
    (110/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073696257 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067808503 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089613284 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.170619194 seconds)
    (114/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.069695249 seconds)
    (115/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.1708441 seconds)
    (116/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.143845053 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068558027 seconds)
    (118/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094557683 seconds)
    (119/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067378622 seconds)
    (120/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067365915 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067014034 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065894524 seconds)
    (123/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067075349 seconds)
    (124/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082686438 seconds)
    (125/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07012017 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138800286 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129657996 seconds)
    (128/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078478409 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122463971 seconds)
    (130/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.084502475 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075502953 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066454724 seconds)
    (133/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092760222 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.079138267 seconds)
    (135/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073137329 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066589734 seconds)
    (137/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.167736488 seconds)
    (138/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067484649 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076000381 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121472298 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075043065 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088663827 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132757574 seconds)
    (144/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068675393 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074706556 seconds)
    (146/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06744752 seconds)
    (147/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066771819 seconds)
    (148/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075622395 seconds)
    (149/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070933211 seconds)
    (150/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074689432 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065831118 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07402372 seconds)
    (153/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06560819 seconds)
    (154/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073974819 seconds)
    (155/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074816053 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179938647 seconds)
    (157/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.124916345 seconds)
    (158/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067036403 seconds)
    (159/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066395275 seconds)
    (160/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070090747 seconds)
    (161/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.194191543 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095642868 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065574483 seconds)
    (164/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.193467653 seconds)
    (165/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074123879 seconds)
    (166/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066428382 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069434924 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091212437 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065700005 seconds)
    (170/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.142421712 seconds)
    (171/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079285328 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092337293 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116798561 seconds)
    (174/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.077842879 seconds)
    (175/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067901131 seconds)
    (176/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066401323 seconds)
    (177/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.078440392 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140604281 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090267042 seconds)
    (180/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066696325 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072740277 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136374912 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11863484 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088297999 seconds)
    (185/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074372084 seconds)
    (186/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.117545135 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065699231 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067179561 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14315569 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068704581 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090801812 seconds)
    (192/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.12522114 seconds)
    (193/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.064761462 seconds)
    (194/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065698502 seconds)
    (195/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.175727764 seconds)
    (196/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068146688 seconds)
    (197/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091026195 seconds)
    (198/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.123274084 seconds)
    (199/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08025064 seconds)
    (200/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.124852542 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129002968 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065580887 seconds)
    (203/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077739448 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066111857 seconds)
    (205/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065412613 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064633926 seconds)
    (207/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.066004863 seconds)
    (208/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065453024 seconds)
    (209/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.065737317 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071774783 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065538113 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088983841 seconds)
    (213/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066451617 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.384906543 seconds)
    (215/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.081836942 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.075659888 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068454603 seconds)
    (218/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069453737 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075370353 seconds)
    (220/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.081166177 seconds)
    (221/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124437257 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092033165 seconds)
    (223/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067741916 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07894121 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076699924 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138949813 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.135131064 seconds)
    (228/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066995447 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124201697 seconds)
    (230/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073358988 seconds)
    (231/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06749034 seconds)
    (232/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.080288286 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074800812 seconds)
    (234/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069690239 seconds)
    (235/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067561267 seconds)
    (236/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173725412 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123109366 seconds)
    (238/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067269919 seconds)
    (239/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.165569349 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087004084 seconds)
    (241/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.081384762 seconds)
    (242/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089190985 seconds)
    (243/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.185579198 seconds)
    (244/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066070182 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181675884 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076992362 seconds)
    (247/309) benchmarking ("sort", BigInt, false)...
    done (took 0.192443912 seconds)
    (248/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.077601206 seconds)
    (249/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075745563 seconds)
    (250/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067588666 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065902982 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068585173 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.171270539 seconds)
    (254/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068025491 seconds)
    (255/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075567943 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067255054 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068181536 seconds)
    (258/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079255862 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066616804 seconds)
    (260/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06605553 seconds)
    (261/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069934637 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088247493 seconds)
    (263/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067112495 seconds)
    (264/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067321952 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089511093 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07432194 seconds)
    (267/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071833334 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110812284 seconds)
    (269/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077571122 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066747459 seconds)
    (271/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066842418 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076799482 seconds)
    (273/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06764093 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073256467 seconds)
    (275/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071366096 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067798921 seconds)
    (277/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067761989 seconds)
    (278/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.07919251 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066888392 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066812982 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175556048 seconds)
    (282/309) benchmarking ("sort", Int8, false)...
    done (took 0.146032314 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123808313 seconds)
    (284/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.078399849 seconds)
    (285/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.07007584 seconds)
    (286/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073316559 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087038203 seconds)
    (288/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066701332 seconds)
    (289/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.078434166 seconds)
    (290/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067625052 seconds)
    (291/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.06645597 seconds)
    (292/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069088012 seconds)
    (293/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066690235 seconds)
    (294/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070096704 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07550197 seconds)
    (296/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066966037 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066717828 seconds)
    (298/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067155528 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066723608 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073354173 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177018708 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066401407 seconds)
    (303/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066649758 seconds)
    (304/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066793537 seconds)
    (305/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066673298 seconds)
    (306/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.0660625 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065655042 seconds)
    (308/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072816718 seconds)
    (309/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.078898545 seconds)
  done (took 32.994421981 seconds)
done (took 34.320757917 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08706952 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099010216 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073874827 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092615108 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081774979 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095281893 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073777112 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079191759 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081850639 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080370687 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079272671 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072857061 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075618499 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076134896 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073817967 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097259704 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080796556 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074386221 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07469474 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065581722 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075107878 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066412902 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065965474 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073245908 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077635611 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.0740455 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07662634 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076116701 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06640179 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066680163 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07125947 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075267221 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066153564 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079060407 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.0753473 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075141385 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076522461 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079412679 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066356442 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067206852 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076576254 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066807509 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074627821 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072775178 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071696244 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072805976 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074679458 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079214915 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096965582 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070691146 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076970014 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076970837 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077753992 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071970628 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071824093 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074589034 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072486986 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097161065 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074949946 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070841004 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07613925 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07576749 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072651469 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.0744483 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074553652 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077125248 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078804916 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07273727 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076805092 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073053118 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066144484 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074160688 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070677384 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066050743 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077583576 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079562041 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065679503 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070765459 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074596161 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07462102 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068764371 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070279582 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065976404 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071006476 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070855876 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072728923 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071503726 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073785655 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066197238 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075143703 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073697494 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074012561 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065648262 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079273048 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066773738 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072379153 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06640175 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066390163 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065391571 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071372888 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066169735 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070436011 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074747255 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065889929 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070732243 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079276263 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065949409 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073050847 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06548223 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065904519 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077343089 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076507045 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066429902 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070143661 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065541056 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071017457 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065694967 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066013727 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065598858 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065671677 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070014264 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065686185 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070212 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071138876 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077839266 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065282713 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070358344 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069934873 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065347949 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072247449 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065698293 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065434528 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065301871 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078789181 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069765135 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06574075 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071296572 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069835758 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072990252 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064381531 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073505316 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071389002 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069050483 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.0710027 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064337017 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075508562 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069132913 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069281316 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064129747 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064619258 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064189838 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064509605 seconds)
done (took 12.504140628 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070672266 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.118244561 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.093267349 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093297794 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083160569 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067387957 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074119206 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.092096452 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06850018 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096321283 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08820405 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088220479 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108926976 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065950756 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066662898 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067721664 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068513967 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078302526 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093890731 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08871964 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.10578307 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.0667546 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.085950555 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087114677 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083689248 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090502824 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068124752 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068298975 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06953258 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.08711681 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091573073 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07024083 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068020156 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.089983185 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085282001 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080195501 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06772043 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075570917 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067985284 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066922622 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068521744 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087354755 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074806749 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.077533474 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06852014 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074919098 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067989164 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082624212 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.085028687 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.076027629 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.082078401 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090356173 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070801627 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083405659 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066412157 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082480855 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075866985 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067615931 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067769536 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072527844 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068251435 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069678394 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078529894 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075819982 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071620626 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081385415 seconds)
  done (took 6.598259857 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085913334 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095256724 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083324818 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084055045 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06677235 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067313752 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067602352 seconds)
  done (took 1.972075497 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069931036 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087520763 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090194186 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09027755 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083099136 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091398801 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07525257 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067267591 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095833451 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066949594 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087515418 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09724227 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070752263 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078590164 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091655528 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067324774 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091361061 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06720116 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067742516 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091301175 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071851009 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094064115 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078668764 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067846298 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079814342 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06768311 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099395502 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075245907 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068691319 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068780118 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06858458 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093872724 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079322999 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081330792 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068541675 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082198296 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081081355 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071024465 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078287388 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077098422 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08068177 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068837853 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06678474 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068919079 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.0704668 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078852165 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066669107 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069175894 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068532162 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086567426 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066743929 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079636492 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071102078 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07374667 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073266141 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072378864 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075502395 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069081509 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086510557 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06845519 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084362136 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083667579 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080787932 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083376579 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06776727 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079855217 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080457503 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068491478 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069408258 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069175693 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083914722 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071009519 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068851994 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079049463 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067133117 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091403796 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091118265 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066992901 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080421071 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068347883 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068987317 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07922413 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091117259 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072651878 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068377049 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071293757 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06948613 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070194971 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066726348 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071180373 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068657726 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073076134 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069258419 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071016764 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070435157 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083646002 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066924785 seconds)
  done (took 8.819309936 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.0702359 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068820382 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069316577 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068567255 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068365894 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068319438 seconds)
  done (took 1.863345551 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100590695 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068264222 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081136644 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068755881 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103453856 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08366665 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084064942 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085630909 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081624667 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079896717 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083900773 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08656711 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088329323 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070497955 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083655747 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069611795 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083884706 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072868991 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079627409 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070559841 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081083825 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070283522 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070953672 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087918448 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072430619 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069312373 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.078132485 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079480215 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079360606 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.092733745 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070817107 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072113731 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075776327 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085660716 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084127328 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076760442 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068749094 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074280767 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071053301 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071783649 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086382235 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07069267 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070808289 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074446686 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.087938175 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075956783 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074474124 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076676018 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083122962 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074240137 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074259589 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068943918 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072144665 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074639569 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076332125 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.085600739 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074423251 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083362665 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070829442 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075974054 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068090206 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071896882 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.087448811 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071498565 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075183352 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074499198 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075940576 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070447315 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070496043 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068225393 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075396488 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068528195 seconds)
  done (took 6.98864692 seconds)
done (took 27.684864788 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.51483749 seconds)
  done (took 1.919838609 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.619829013 seconds)
  done (took 2.053879738 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.600256468 seconds)
  done (took 8.031757463 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.432590115 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.657068516 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.747945187 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133776515 seconds)
  done (took 3.439111276 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.707490479 seconds)
  done (took 2.148297753 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236065153 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225998816 seconds)
  done (took 1.912678795 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.346509079 seconds)
  done (took 1.778019759 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.052503519 seconds)
  done (took 2.487394704 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.253936283 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.170003718 seconds)
  done (took 1.862817341 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.444574297 seconds)
  done (took 1.879624273 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.21027694 seconds)
  done (took 5.647030929 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224081092 seconds)
  done (took 1.694563988 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234036423 seconds)
  done (took 1.669188994 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.71488544 seconds)
  done (took 3.15050453 seconds)
done (took 41.118793316 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084086926 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085686033 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085888081 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.08197959 seconds)
  done (took 1.755820573 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075666623 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071694135 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075182 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071435295 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075253041 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071582285 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072961286 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.074129618 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070906918 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071609934 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071755858 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071442494 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074284116 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07286263 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070741251 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074314964 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074985555 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071889047 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.0745925 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071692558 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.06994531 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074089453 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074599609 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070674927 seconds)
  done (took 3.186772613 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079847412 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074243554 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076266864 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072397524 seconds)
  done (took 1.74810631 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078232567 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090168012 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087783018 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078264122 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089339234 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084749845 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068018547 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068177595 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069110026 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077846444 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066896563 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093537095 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087490721 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078003966 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080029758 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064472978 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066343795 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085657147 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078536599 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078712074 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069113642 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078195894 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066991992 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087853771 seconds)
  done (took 3.315040974 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087352354 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.067085038 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086652085 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092520108 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093956149 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067094384 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.085275697 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094251883 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.141678198 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067550862 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072825746 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067364818 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105809342 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067147364 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08660258 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110597444 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113776744 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071256675 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099919716 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069795084 seconds)
  done (took 3.198941289 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083985047 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070521849 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071349687 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066526069 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076918644 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073946528 seconds)
  done (took 1.894691945 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069767227 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069763427 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06862101 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068351129 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073144387 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068212017 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066998635 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068862752 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069111936 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068717629 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068513794 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067681027 seconds)
  done (took 2.276121756 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.19621915 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070840335 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073230868 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067863629 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073210666 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067849242 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083203093 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070597714 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094895643 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068374554 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068090624 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071236951 seconds)
  done (took 2.454982702 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192892261 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074476538 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221747652 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145357032 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102871626 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109684598 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111642558 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10822124 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133230888 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097228416 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153422529 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160334296 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104159858 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129742475 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088086332 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120779406 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144234279 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156173287 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100241181 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155836576 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135064499 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122988549 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142285642 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09706932 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10142925 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116681143 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072292479 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077584481 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158133191 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122877162 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135350353 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104990519 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094955136 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165220209 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156539409 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131519856 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141941848 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082480799 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.118650778 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129650662 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192770545 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086647501 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148376889 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102093612 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077902344 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124743642 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112795626 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11563145 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.099196418 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086080073 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274406421 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175471662 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.128748131 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08475252 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118326114 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106750478 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110923333 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114223256 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217600407 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150755449 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122871127 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070697186 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107333881 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144352268 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127296494 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104816496 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.118960869 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090403446 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124574278 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152241797 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146091981 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133539428 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.139560622 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085084896 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115563333 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131049523 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122605694 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161968143 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118239593 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071901637 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115828041 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095615201 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078683873 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142946142 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074411633 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165427217 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096177392 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.121928265 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125493225 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105310489 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105352906 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149503079 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13481873 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101837515 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084659088 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098863648 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113669189 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139461785 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08433789 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103290662 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108465544 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076635705 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124025938 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072758284 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11314451 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092232253 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258154574 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125476975 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079362927 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119754098 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100410668 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100340563 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126808284 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151327764 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086204594 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079882522 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158364663 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117769469 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101405148 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136406347 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151063727 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118982453 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094606035 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137372504 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163794678 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088134191 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153397866 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099942978 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081817603 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.103259252 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118084719 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107389538 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118362666 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079840229 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115720004 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158737619 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073472763 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09434195 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127636818 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080163746 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078988069 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101546559 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100469652 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094252716 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.09916004 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101607537 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130286967 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118229353 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102732267 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118457073 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097252806 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156379391 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086173252 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100498819 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10178594 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071598909 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126537413 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147104908 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076643224 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148745497 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115575325 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110199454 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11301911 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080781509 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128779759 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076347708 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070881348 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129054195 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.257454762 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106574004 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.145339426 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111850316 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.119719082 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116059922 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126218658 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122883671 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.123877538 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111194781 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087109086 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110782297 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160442168 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071722537 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090017177 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080901633 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099868622 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09140049 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081724006 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132837449 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119121974 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107248802 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110752523 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094006041 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143128802 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077131531 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118892472 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117440173 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093062571 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.146820885 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144962676 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126556857 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098336812 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129907344 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072327287 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073582673 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086891056 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117758467 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082595363 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081990911 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109212543 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142374146 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123568603 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129128527 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119119717 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114650637 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149494343 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07158825 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116891178 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136509389 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115380785 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100842849 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08832163 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094271889 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134212117 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098361946 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193992937 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107970516 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115955474 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296788186 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100360533 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078653228 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102668782 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127045557 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099779941 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136294819 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096161371 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084925417 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10384595 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077855754 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097329258 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129161797 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113574896 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130013597 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.108438471 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124918915 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076025189 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109101384 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118702946 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11897005 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082270519 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115848617 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158056933 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101501926 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112422155 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142518653 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07736152 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135508284 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162948744 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136290864 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082681691 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101335802 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116870928 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120789988 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117328265 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131572962 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100449039 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130622916 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107395738 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083161194 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08418607 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092733589 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099917042 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109089834 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100792198 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110350682 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093149012 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129898185 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09914939 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106720315 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11219767 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096868526 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092636551 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093288322 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162716573 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111899483 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155643029 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096227214 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.131111137 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298103898 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074853414 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078689269 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080316324 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132568178 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083825842 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124947116 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109317002 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112043812 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118280145 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131802583 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094199017 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070330042 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106882226 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127694352 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119326205 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094331253 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101346677 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154453385 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115037335 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077591125 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10880307 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112343541 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101022898 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164518927 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080635349 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106668899 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075630347 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078679565 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121186633 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143778435 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085316081 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100962637 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115266303 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107265367 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121226136 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094993202 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107877689 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126313902 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138880281 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120887768 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088033527 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106668081 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122128519 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145212114 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100482573 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097958371 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164349051 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143728796 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.153016001 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08590929 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110170776 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109282763 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105494664 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126525283 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081916182 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14877015 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07883477 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123760533 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095148893 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235440035 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126558819 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110045616 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086576672 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141739575 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112979984 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081775673 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079438602 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107775399 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113991946 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100338459 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074336452 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138635625 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072936232 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129081124 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161528686 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079442966 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101459978 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094170073 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081720412 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100191825 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099091485 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083793003 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097668373 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160522843 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085995514 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143778615 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126941603 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1099537 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130355025 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10077194 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643614831 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078304542 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14348751 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111424725 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169647743 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096042746 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113289204 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106751584 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115176464 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134261333 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098403757 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176108415 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12341149 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113529268 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077388566 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0984941 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09994611 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086369811 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103125403 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1093998 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10833736 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091179008 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.111813079 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115077193 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080837748 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092972556 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145712349 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108539942 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135944009 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127108712 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080919297 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11040069 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123267002 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076832544 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.109627085 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137334011 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098888044 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112528363 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.07830044 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.092115758 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153059805 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.070380929 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137397086 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109331318 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102880489 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106262607 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.099639247 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117466618 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094743649 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111064216 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08596031 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.136816586 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104718489 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07836108 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074748139 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098041909 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099893676 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.091882519 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089732535 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.091077816 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134049804 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.069636171 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0903476 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105764453 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128806878 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149015795 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.099217655 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079202893 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108104665 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140459131 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.103912443 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109388317 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076847723 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076255555 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.075892015 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.096321741 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114685477 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103476882 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109003039 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102019397 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139772279 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.079462235 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.215632213 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089059618 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096888209 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.085100423 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075387607 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08884847 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087980311 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093835533 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102623473 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.426311266 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097324899 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092679893 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094209654 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077574398 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085007008 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124788811 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110252054 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117162897 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119807708 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.084041943 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103265476 seconds)
  done (took 56.92681935 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1223618 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.100565637 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.109918556 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.160978669 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12449208 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203191755 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153299767 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19167864 seconds)
  done (took 2.747076724 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071619134 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098132735 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107548145 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.086818057 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069784061 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071635263 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.228885768 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084957307 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068546637 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.092687277 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080611688 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071749459 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.468951918 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070176517 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.07235321 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.079756139 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068923842 seconds)
  done (took 3.461314068 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.388136484 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.57526198 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.360061198 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077043285 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.887081106 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09063817 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.179915575 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.13821803 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083153142 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.519820213 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367482037 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131714505 seconds)
  done (took 18.382013588 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082645879 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077255134 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090578595 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091058204 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078956889 seconds)
  done (took 2.001313686 seconds)
done (took 104.834780758 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082040409 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.44101967 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070329735 seconds)
  done (took 2.116924642 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091279632 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089497679 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090927353 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087560377 seconds)
  done (took 1.952028111 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075428655 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07818637 seconds)
  done (took 1.738260765 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.213035238 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175905384 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097839903 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083694199 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080978005 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082318292 seconds)
  done (took 1.837430427 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073704622 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073550726 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074085895 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077920057 seconds)
  done (took 1.885533478 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068345846 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067432593 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.06944779 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072820548 seconds)
  done (took 1.860488003 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085303065 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085995918 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080374708 seconds)
  done (took 1.83403848 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102142477 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095565747 seconds)
  done (took 1.781441911 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082173794 seconds)
  done (took 1.668141257 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09048353 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101406459 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13145821 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115294575 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136265526 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119206588 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.092562633 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089854957 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079770811 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.095940034 seconds)
  done (took 2.637749227 seconds)
done (took 21.458668672 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079227387 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368977445 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361451314 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092273723 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669031052 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357739681 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.998268535 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093758313 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.143580405 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069982482 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087152676 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649123453 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.989946094 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32470326 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.978911858 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323597507 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653696611 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069639629 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069306076 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070312036 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.985524427 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069554819 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070142419 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070331921 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652028903 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375119741 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070974691 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322055776 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069704538 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073604118 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359194607 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071226338 seconds)
  done (took 16.207607736 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071959979 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12385769 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074313718 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086529277 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072285524 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071413771 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072509445 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06982264 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123457716 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070541621 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08834984 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069209396 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073624641 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071658505 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091036344 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069818442 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07267489 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070565689 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069586546 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070291264 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088435168 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069369897 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070380428 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072425695 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070215068 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082552893 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071120307 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069569608 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069944281 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073583489 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074563817 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071372763 seconds)
  done (took 4.067310281 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117305706 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126626439 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074723933 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10701667 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112872627 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071571237 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147595957 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094216296 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129989568 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070349783 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088218657 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069523953 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104754479 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071770403 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090816054 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06993906 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073184409 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071209509 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070533147 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071451677 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089988282 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070092054 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071424055 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070848132 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071458162 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086107439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072244151 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070924702 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071041448 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074884879 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076724147 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072268799 seconds)
  done (took 4.332056866 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071559723 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073896798 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081962878 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08322736 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068401944 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070939014 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07213625 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068694921 seconds)
  done (took 2.196010682 seconds)
done (took 28.395849711 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079542614 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069343149 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072086556 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087966271 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074893296 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080371445 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065894418 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075064564 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072906751 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072712561 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074225456 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068308369 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072014699 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066809768 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074695085 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067947909 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083055519 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072171444 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08164366 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081634544 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070894601 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073949225 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075811178 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081255524 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081348226 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08133624 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077820887 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073814598 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068714591 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071711806 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07094149 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079697084 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082022295 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081715033 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068656799 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068681368 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072628214 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069553528 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082434838 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07741505 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070034775 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076944295 seconds)
  done (took 4.725527929 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085609474 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.08953825 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08348119 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081617902 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09064407 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083640902 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08711867 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078169392 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078650694 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086310073 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07484736 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082187124 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079389011 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073529323 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077789901 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076285772 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080656922 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075077583 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.079032324 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079601717 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087926072 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073123433 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08801789 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.08039693 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075725899 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081077451 seconds)
  done (took 3.72193347 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075014807 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085945564 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09407071 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144913083 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111445949 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08116538 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082212146 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092240479 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097650371 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069262952 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073664965 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093577762 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093355198 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075251123 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069203573 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085107218 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084688061 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07084277 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075679705 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097743669 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089629256 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086461711 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095008592 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085649314 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06900341 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071335582 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073710611 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087980266 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071622663 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079989606 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071721657 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072833885 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069969526 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079642592 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071331653 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068393094 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093801265 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081335714 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081078224 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069423871 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078319581 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069906258 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093838686 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129316092 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068231489 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073186551 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07217386 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080568865 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067944426 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096194526 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080866379 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068866938 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069463429 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068073126 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068130854 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071006534 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070656958 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070996723 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078968977 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075731837 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090598897 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073644526 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08695977 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068204 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079048502 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068096974 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070433095 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067827656 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096894046 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070320293 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112737184 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06935859 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067492478 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079656126 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078958736 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07454891 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06857636 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086015342 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080179221 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073368238 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076854933 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071946733 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072639924 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099113783 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069394279 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068196455 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067431948 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072642158 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072154432 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069248352 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080597018 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068036013 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072285594 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086730676 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068606402 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069604476 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072254289 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071213365 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068046083 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079570185 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072782946 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07024005 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079272858 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069363681 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072202257 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082201523 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075458398 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06772131 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070803977 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072295954 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070107925 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069886335 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072828301 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070546324 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075865477 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074934285 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074392052 seconds)
  done (took 10.770161428 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165312504 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158152328 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071125742 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149253227 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077294585 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080711725 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15271425 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095979803 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069262868 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070737427 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069770018 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110394825 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105932822 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116415456 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081799596 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069674278 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092083769 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114965206 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15431304 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148523628 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092054685 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077238654 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071935885 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071247961 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07170323 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078850599 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085808113 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07808745 seconds)
  done (took 4.431971915 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078178912 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104025467 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073462759 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092241153 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088585187 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069664261 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071020783 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070834889 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086125481 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078619176 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069737091 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074627708 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073276637 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072453855 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070114581 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076205906 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076851441 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069073722 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073354825 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075328156 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079562015 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094483487 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073271221 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069405482 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072400371 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069442662 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077753995 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081693326 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072599949 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105838048 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066862826 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074660523 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083884281 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069934815 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069477529 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069694886 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069257487 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069396547 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070837225 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068043735 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06800694 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07314151 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068434273 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077435013 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082769809 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071217232 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071446631 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072364653 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072197946 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067205294 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072396178 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072438312 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072150482 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076589648 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073678458 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07269891 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070514137 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096007809 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075724356 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06907049 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069189387 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067948805 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07173674 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078948037 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084959408 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071585775 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068188357 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06965429 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082986323 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.0825946 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068710103 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073897664 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067437108 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07138539 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075118897 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072208337 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070641721 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068406954 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069126512 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069541542 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070204652 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069073002 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068569282 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072810726 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068398378 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068230838 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069721398 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071171265 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077968504 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068818649 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073125155 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070171258 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068586659 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07243094 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074553794 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072604585 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079939491 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080144583 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07084358 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068130422 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082885926 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072609793 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068995981 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07487872 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073932677 seconds)
  done (took 9.430812999 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092391549 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070440493 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086233059 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09275935 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079240269 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075277179 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079646331 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069522827 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085418559 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074655866 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077204557 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068820206 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080809212 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079500382 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070078943 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080091997 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072605233 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086900342 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084110825 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067570035 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077706048 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081728769 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081468217 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083961592 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083119949 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084362635 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081177868 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078945257 seconds)
  done (took 3.886878147 seconds)
done (took 38.563820341 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.705814324 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.930820112 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.679190492 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.885599689 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.74713142 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 81.355336305 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.768393384 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.68285378 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.839581648 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.720131187 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.992255378 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.142243058 seconds)
done (took 139.201942437 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.709872377 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.825510403 seconds)
    (2/2) benchmarking "String"...
    done (took 1.931429248 seconds)
  done (took 5.371632929 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.862846867 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.38204581 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.910169641 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.675492557 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.681024744 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.93015272 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.458455531 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.11973203 seconds)
  done (took 29.772751766 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.861872781 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.899055906 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.375415805 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.417903924 seconds)
  done (took 15.215876887 seconds)
done (took 61.637992749 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.70627338 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.726756981 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.691099819 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.675855538 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.769272529 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.686415 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.876783472 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.699821598 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.677590884 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.681974289 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.680087609 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.092596695 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.687773762 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.826289991 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.680395695 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.677057217 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.707753784 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.160817737 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.830665242 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.696313075 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.68906247 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.726953518 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.678021059 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.675635888 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.706522826 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.677493792 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.074346856 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.677344631 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.50827744 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.677600393 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.723211216 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.997523721 seconds)
  done (took 200.657805387 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.675073619 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.731905657 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.815071554 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.692115773 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.026576838 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.872486211 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.773387709 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.177662382 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.682478369 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.687625916 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.982851172 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.675723893 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.015318588 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.624044751 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.712583498 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.773372614 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.940628456 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.006649191 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.714910601 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.822398467 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.692133491 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.814852279 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.756542203 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.94687059 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.71914661 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.779700078 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.679914585 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.710796154 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.861733275 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.914834408 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.723830221 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.711573106 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.881405002 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.546339758 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.684297861 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.708648304 seconds)
  done (took 167.152740087 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.860195531 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.050078164 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.677502631 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.677773345 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.677292481 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.682609701 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.678089834 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.805655849 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.800553989 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.680947585 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.338607092 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.677083815 seconds)
    (12/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.240297172 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.73511759 seconds)
    (14/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.677933941 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.436719018 seconds)
    (16/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.677516672 seconds)
    (17/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.742943 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.691667234 seconds)
    (19/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.679034792 seconds)
    (20/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.69272401 seconds)
    (21/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.704011324 seconds)
    (22/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.677897781 seconds)
    (23/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.679553157 seconds)
    (24/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.803929563 seconds)
    (25/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.690713822 seconds)
    (26/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.678525779 seconds)
    (27/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.687445316 seconds)
    (28/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.679133733 seconds)
    (29/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.684493371 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.064082452 seconds)
    (31/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.678047922 seconds)
    (32/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.847992872 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.684747921 seconds)
    (34/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.683808361 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.650678845 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.919747344 seconds)
    (37/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.680160454 seconds)
    (38/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.680442981 seconds)
    (39/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.503542964 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.764322748 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.681754702 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.685158664 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.679542986 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.896729549 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.680122426 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.679858008 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.680199553 seconds)
    (48/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.679680446 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.794075736 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.679830363 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.807424428 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.679547274 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.154869715 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.680509639 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.680904752 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.013287734 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.260977249 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.682311071 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.68265979 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.679164542 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.680389703 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.68512342 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.144896416 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.750703236 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.682084091 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.680382064 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.686789793 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.680403867 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.799364549 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.683172133 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.400434592 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.696621929 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.907341556 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.80334257 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.685011518 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.745207619 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.772284519 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.681201101 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.680816493 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.680355488 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.680723228 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.760795867 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.680168917 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.762039876 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.691639767 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.682360969 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.736176295 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.750588533 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.682205157 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.503072842 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.685305352 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.681156639 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.922013743 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.746654601 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.681678012 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.683083984 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.759861355 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.807508966 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.395813607 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.685760979 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.08145168 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.755589171 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.683036702 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.79927005 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.688294485 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.762712268 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.690514853 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.684109526 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.71746858 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.682972648 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.69578334 seconds)
    (112/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.685795454 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.681917834 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.681833694 seconds)
  done (took 390.654117949 seconds)
done (took 761.998994494 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.303200515 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.269497571 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.364204429 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.288991405 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.263415105 seconds)
  done (took 13.111126985 seconds)
done (took 14.731890773 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.762459928 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.967074119 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.702029839 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.762346119 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.699842652 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.763342146 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.74645791 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.706035481 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.731606301 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.705663567 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.734077808 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.705264389 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.692304605 seconds)
  done (took 24.301543299 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.909403687 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.099705819 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.749532473 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.909731702 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.725761801 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.916248246 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.83969472 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.827114721 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.82448377 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.694666482 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.692046315 seconds)
  done (took 21.813620517 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.925408505 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.926516192 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.756441667 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.914675904 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.728746447 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.914433046 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.843544592 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.830818372 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.828692999 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.696316362 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.693756682 seconds)
  done (took 21.684043818 seconds)
done (took 69.421580734 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.687998999 seconds)
  done (took 3.313249802 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.705575254 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.865020217 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.6888122 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.688072712 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.687379782 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.688774735 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.688058765 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.68844938 seconds)
  done (took 15.325811632 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.687833458 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.688136895 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.687665452 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.687947612 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.688828784 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.689007038 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.688587446 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.687897098 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.688224669 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.688678726 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.688880069 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.68777729 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.688480298 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.68879185 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.688685016 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.688179459 seconds)
  done (took 28.639977402 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.690217413 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.689269657 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.688970504 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.688379406 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.688799333 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.689758699 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.69089993 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.689549283 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.689304791 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.689053285 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.689763306 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.689412354 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.689471431 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.68917745 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.689765228 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.689798774 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.689198643 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.689663102 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.6935644 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.690289001 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.689255091 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.690076125 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.68918605 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.690294903 seconds)
  done (took 42.181370947 seconds)
done (took 91.085727041 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.513304836 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.35002557 seconds)
  done (took 9.491907738 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.693282963 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.690192206 seconds)
  done (took 5.088400686 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.690111214 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.690201261 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.691044518 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.690249709 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.690913486 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.690484503 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.690652879 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.690407341 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.6915143 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.691016257 seconds)
  done (took 18.534393778 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.689111905 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.690513956 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.689638376 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.69011615 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.690640833 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.690709619 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.691116327 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.691210026 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.691823851 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.690536051 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.690497285 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.690671312 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.690540581 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.691482692 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.690350425 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.690796091 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.690865503 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.690385231 seconds)
  done (took 32.058716554 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.690907037 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.691362742 seconds)
  done (took 5.010591529 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.690881789 seconds)
    (2/7) benchmarking "second"...
    done (took 1.692099924 seconds)
    (3/7) benchmarking "month"...
    done (took 1.690947229 seconds)
    (4/7) benchmarking "year"...
    done (took 1.690868532 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.691262167 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.692415351 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.691438339 seconds)
  done (took 13.467688054 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.692865007 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.841626566 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.902030815 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.353869754 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.693830286 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.694915186 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.629420769 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.696023031 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.695240533 seconds)
  done (took 18.82964097 seconds)
done (took 104.107406101 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.597357998 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.692239265 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.962204075 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.831093326 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.710630702 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.6903964 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.707075473 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.947854402 seconds)
done (took 41.768060098 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.723082144 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.431851971 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.458692754 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.723265591 seconds)
  done (took 15.243543225 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.691642467 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.003152761 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.720102215 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.563969435 seconds)
  done (took 21.612998597 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.12736664 seconds)
    (2/2) benchmarking "read"...
    done (took 2.04312287 seconds)
  done (took 5.806024167 seconds)
done (took 51.016244242 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.693977997 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.693449385 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.693775528 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.692984516 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.693362043 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.692747219 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.692661377 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.692517898 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.692365775 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.693572539 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.694062248 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.69303381 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.693164889 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693961549 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.693955497 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.693811095 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.694252577 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.693842254 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.694495164 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.693800713 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.694603699 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.693893866 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.694301695 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.693969952 seconds)
  done (took 42.277539972 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.694312665 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.69414384 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.69389631 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.694939616 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.694856912 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.693908754 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.694687972 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.694243476 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.694642416 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.694293268 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.69450914 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.69473077 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.694132328 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.694777757 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.694538659 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.695468971 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.695700689 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.695005445 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.695132541 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.694829393 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.694297187 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.695481802 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.695649359 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.695005052 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.695516319 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.695422402 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.69531515 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.696879897 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.695717919 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.696713269 seconds)
  done (took 52.480635513 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.695767078 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.697542056 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.696258143 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.696246872 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.696554108 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.695629369 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.696320951 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.696169332 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.696852738 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.696719882 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.696915739 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.69667682 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.696541242 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.696576523 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.696399635 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.695722333 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.697047861 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.69690984 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.696823314 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.696725646 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.698823295 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.696357286 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.697052766 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.696166228 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.696935716 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.697689764 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.696544804 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.697081243 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.697444851 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.696572429 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.697303219 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.698025056 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.696805503 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.697061094 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.697847533 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.696899638 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.697554054 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.697733871 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.69690867 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.696671888 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.697422008 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.697436192 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.698247389 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.698512699 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.697905516 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.69728022 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.697616437 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.698223685 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.698359604 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.699009433 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.699746228 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.698432696 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.698786853 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.698587859 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.698989893 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.698919867 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.699640777 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.698491424 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.698635657 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.698756276 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.698642514 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.699112972 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.699047911 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.699960039 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.699068826 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.69862441 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.699661398 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.698710719 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.699390932 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.698955116 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.698848843 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.699572261 seconds)
  done (took 123.868444285 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.699446257 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.698955413 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.698744389 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.699083526 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.698850373 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.698919506 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.700091556 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.700024416 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.699326752 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.69917604 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.699360432 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.700416864 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.699389926 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.699858689 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.699195877 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.699945441 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.699931711 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.699577962 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.699695365 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.700984884 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.700124675 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.699604952 seconds)
  done (took 39.027235542 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.700531105 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.700036017 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.700155241 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.700258296 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.700467191 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.699708484 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.700853571 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.700317645 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.701076551 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.700289061 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.700202299 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.701371703 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.701948326 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.700342288 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.701902286 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.700923864 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.700947088 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.701099115 seconds)
  done (took 32.249644722 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.700793545 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.701070697 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.701139151 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.701411346 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.702143771 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.701092085 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.70181344 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.702231579 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.70143634 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.701120018 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.701133725 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.702089766 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.702023664 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.701690556 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.702228577 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.702152579 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.70089184 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.70182066 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.701806127 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.70181296 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.702389473 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.701946395 seconds)
  done (took 39.074537333 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.701459159 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.702334248 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.702293317 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.702325758 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.70182651 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.703074443 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.701824853 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.701687004 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.703109284 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.70230075 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.701928948 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.702679164 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.702746713 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.703349276 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.701771259 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.702266937 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.702954484 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.703293307 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.70262588 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.702435407 seconds)
  done (took 35.68763437 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.703437487 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.704152622 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.703228107 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.704128607 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.703157596 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.704156928 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.703131856 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.703837772 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.704293221 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.704332134 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.703395721 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.70441915 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.70474306 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.704736272 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.704776138 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.704862287 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.705324529 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.704873397 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.705411042 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.705319477 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.705197098 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.704628619 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.704858672 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.704551463 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.705248479 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.70492986 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.705198576 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.705488081 seconds)
  done (took 49.366419015 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.704301235 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.704275385 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.704889106 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.704685612 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.704752752 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.704319205 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.704309173 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.70532433 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.704581365 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.705095814 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.70462836 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.705164023 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.705309612 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.704466662 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.704421097 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.705760462 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.705080261 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.704799929 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.704566249 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706584067 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.706195515 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.705352679 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.705021972 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.704874165 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.705964252 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.705361704 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.705911089 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.706133934 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.705906252 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.705923105 seconds)
  done (took 52.796226511 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.727447129 seconds)
    (2/2) benchmarking "in"...
    done (took 1.731176729 seconds)
  done (took 5.101115449 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.705104678 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.706674598 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.705393578 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.706600955 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.706396109 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.706768192 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.706954655 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.705580668 seconds)
  done (took 15.292040263 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.707841225 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.706439407 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.705529912 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.706467278 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.70643683 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.706712164 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.713464077 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.706268629 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.707936522 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.708178786 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.714457294 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.715343212 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.710571221 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.70913664 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.708303674 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.709265063 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.707881637 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.707504126 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.707224457 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.706345038 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.708420156 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.709590662 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.710186226 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.706911309 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.709970495 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.718856077 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.713218022 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.707230782 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.709283738 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.712538392 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.708431069 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.707038636 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.707796339 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.707990865 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.706674769 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.707631492 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.716269766 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.71115922 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.71496145 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.70833867 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.707715923 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.707998167 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.710577686 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.710775712 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.711191723 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.708009646 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.708325039 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.708134119 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.708283117 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.712538907 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.716723967 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.70977685 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.708125155 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.714005129 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.712155851 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.717366791 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.709613319 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.71274562 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.719229763 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.721110793 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.721018639 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.719449016 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.712035484 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.709421255 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.720038203 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.736450725 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.71651977 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.708615466 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.709860522 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.70913865 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.716813819 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.721766479 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.721689482 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.709874136 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.710234608 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.709355541 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.711761062 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.709956599 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.717111697 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.714587862 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.710279548 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.711449043 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.721364874 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.73600683 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.713109114 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.71227237 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.711719985 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.712456685 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.711389569 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.722500616 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.710309607 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.70974961 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.710159232 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.711313547 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.712275893 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.710281983 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.709949263 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.713391836 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.710752453 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.710250979 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.710131107 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.714256683 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.722303102 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.710852066 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.711310327 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.718199089 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.710911165 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.712322327 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.718818444 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.711866343 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.711307076 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.712040526 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.720712074 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.711091767 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.716142566 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.721297952 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.711968146 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.714832947 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.710980167 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.71221816 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.721674935 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.739945455 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.711617333 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.712294132 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.71821121 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.724605788 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.712438692 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.716806759 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.712886089 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.712167377 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.711416355 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.715713228 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.71115601 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.714327209 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.712950136 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.715351412 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.711760031 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.712488223 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.713195817 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.715170181 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.715244975 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.714951764 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.715553449 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.717231267 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.713243692 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.716128767 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.720387397 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.712755722 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.715338387 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.717716521 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.712280721 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.712819615 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.715828858 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.714421345 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.714628773 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.713359727 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.715075185 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.713098138 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.713827661 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.7134407 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.713344625 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.715014924 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.719647196 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.71466539 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.71949593 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.714947202 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.713842421 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.713355342 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.713142548 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.714504881 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.713303155 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.713508395 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.719148559 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.722543377 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.714140823 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.714993096 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.719050959 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.714866925 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.715028136 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.713547375 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.719162849 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.725242361 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.71522606 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.722572626 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.715389319 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.71405581 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.715058655 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.716750145 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.71678663 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.715381599 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.719989814 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.722650722 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.727914858 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.725961908 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.716714838 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.718893496 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.715826397 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.719046441 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.720633632 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.71528225 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.714837783 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.715465696 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.716188974 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.715723025 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.718051466 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.715895555 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.715919198 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.715335584 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.714386541 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.716414947 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.715587069 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.718489757 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.718691173 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.714999285 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.715975775 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.716211987 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.716989564 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.715449034 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.715529154 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.716871467 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.716068771 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.71633329 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.723565982 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.715729943 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.718830953 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.719609421 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.718207006 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.716349486 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.716171309 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.720169331 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.718303644 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.725369081 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.717864358 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.719018359 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.724658478 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.71804982 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.717360473 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.721029052 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.717997708 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.716927742 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.721979863 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.724963483 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.71654286 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.718335126 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.718151533 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.719625266 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.718027823 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.725802296 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.717624527 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.719910571 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.717615622 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.720069734 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.71715882 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.721441839 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.720114726 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.718336159 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.720879435 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.718073733 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.718212633 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.720344836 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.717181822 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.717353143 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.718279776 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.721918585 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.726279453 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.724708399 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.719234774 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.720647138 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.720259442 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.722066802 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.720775159 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.718546489 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.720057176 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.731639613 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.727184636 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.726271157 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.721811931 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.718342837 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.725623809 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.719982512 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.724358928 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.721114097 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.721531386 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.720562819 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.720576431 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.718577894 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.721847465 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.71926964 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.722464191 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.722162542 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.723363545 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.719973454 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.720497206 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.720202106 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.720422568 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.719217144 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.719788557 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.719454923 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.723873348 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.723059497 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.719867768 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.721407481 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.727729288 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.723026953 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.723215627 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.721524005 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.720990464 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.719651232 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.72145042 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.720526107 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.724019429 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.729736119 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.724487367 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.731731638 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.723020775 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.731773413 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.72064358 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.725535402 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.728287883 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.72032107 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.719838051 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.721071265 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.720946708 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.728412654 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.721248589 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.722340362 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.725019227 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.720849192 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.721229121 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.721005907 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.721165426 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.722071454 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.721873403 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.731215081 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.723669822 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.727780329 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.724915219 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.721818446 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.721844026 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.721976552 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.72215433 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.727384003 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.722001344 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.724005056 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.72320959 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.723364098 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.722140665 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.722118562 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.721808438 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.722445701 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.721672254 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.731098772 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.725114303 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.727566429 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.723606635 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.731712045 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.723634041 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.73178393 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.724083207 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.724512378 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.723085781 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.723862828 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.726085686 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.724109431 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.725879446 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.722746646 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.725568683 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.728307965 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.72357505 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.726711407 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.726005117 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.723407212 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.725001458 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.734431438 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.747558215 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.72558267 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.727435477 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.722744247 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.726834169 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.728916838 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.723035771 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.722936374 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.727656878 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.736154378 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.732633724 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.725657999 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.723974535 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.72589261 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.724340773 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.724093617 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.724069355 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.724657726 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.723233528 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.725800415 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.724771875 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.729910621 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.724996064 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.72638494 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.728158745 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.726099996 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.737660605 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.725577814 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.726682383 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.725186358 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.724938491 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.728140193 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.729859329 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.727220388 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.729317765 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.728138469 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.730450747 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.736063514 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.735428793 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.730578215 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.727394141 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.725119337 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.727771081 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.726819914 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.72615798 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.725678498 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.725670564 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.728883617 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.725649744 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.726870598 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.724500546 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.726049885 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.727323387 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.726039556 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.730325588 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.735828663 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.728553977 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.726050884 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.726040988 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.72690491 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.726007745 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.728041908 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.735212081 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.732045716 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.73903984 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.735851226 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.731537034 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.728488641 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.730594455 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.737181939 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.726346087 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.729346913 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.727483191 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.7297625 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.728350895 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.733019454 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.72734949 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.73502841 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.730033386 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.728306348 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.736519665 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.731664658 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.728203921 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.729735601 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.733523167 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.728961956 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.728083234 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.728229342 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.729821506 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.735766791 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.732278846 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.728012013 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.732072312 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.727871804 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.729724012 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.733552229 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729134713 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.731859941 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.72859607 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.730810587 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.729381037 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.728753845 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.728828947 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.729056476 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.729345364 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.73344674 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.737573686 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.728647377 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.733055875 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.731756015 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.730681899 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.729857073 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729048719 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.728945455 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.729707921 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.729637955 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.729438496 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.731271934 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.734200967 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.729646179 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.731588581 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.734266713 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.729829376 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.734142123 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.741170013 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.737380657 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.730275585 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.732717833 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.731161414 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.734451556 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.729766656 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.730569073 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.732373479 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.733182402 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.730186092 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.73060543 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.729355287 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.734294004 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.747922632 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.730649471 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.732384494 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.732162203 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.735896869 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.730324665 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.729868949 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.729440197 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.734089662 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.734467675 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.739101905 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.731281211 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.739072374 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.732960932 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.732546829 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.735619652 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.735414483 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.740232775 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.735865405 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.731329297 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.732182231 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.737047681 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.750219402 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.73236967 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.742125503 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.764274559 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.733029282 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.733172754 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.732788296 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.732656849 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.731783836 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.734064524 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.731600344 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.731475337 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.731391184 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.731158035 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.733564885 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.739589361 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.734811024 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.733161942 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.730613925 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.732398938 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.734792292 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.731457346 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.732391443 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.733141684 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.732666712 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.732471346 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.732711175 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.734866426 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.745780987 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.745281531 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.732915453 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.732761251 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.733624992 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.738178076 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.737260328 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.746251974 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.741436164 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.733381524 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.733311245 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.736297545 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.733908952 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.733013003 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.736096727 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.734959594 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.734783207 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.732781386 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.746125727 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.742135435 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.74089959 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.734830315 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.734878367 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.73432845 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.736610906 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.734206382 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.733663128 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.737800067 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.735381433 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.738439595 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.733828677 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.733684863 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.738870643 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.742969741 seconds)
  done (took 1028.480972229 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.735031245 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.734323422 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.734960531 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.735072388 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.73500406 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.735273828 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.734635603 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.734870961 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.734614979 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.734669219 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.734585401 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.734684532 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.734652408 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.735210901 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.735327054 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.735337057 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.735615299 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.735306258 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.735354171 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.735283857 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.732942825 seconds)
  done (took 38.103020842 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.732503227 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.73351352 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.734616335 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.732904047 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.731983427 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.732393425 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.732858773 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.732853971 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.733107488 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732356936 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.73313862 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.733626068 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.732979984 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.733828591 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.733869337 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.732713382 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.733582078 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.73286353 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.733774418 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.735056606 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.734127971 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.734401171 seconds)
  done (took 39.802124152 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.734707549 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.735267137 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.73533122 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.73488238 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.734425317 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.733354782 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.734830668 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.733437881 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.73499613 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.735553714 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.734544709 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.73525543 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.743009974 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.741910629 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.737367523 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.735053181 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.879018237 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.733695821 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.734657796 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.733901997 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.734410436 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.740780589 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.732984612 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.733197898 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.73302539 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.733601525 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.732308097 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.730274881 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.73039022 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.731672393 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.734724174 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.730894278 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.728550586 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.72989938 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.727561549 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.728325326 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.731267563 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.727946216 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.725760549 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.726089106 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.736373065 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.75077922 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.727741279 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.735448052 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.726073594 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.726569462 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.730498851 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.734606763 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.726297622 seconds)
  done (took 86.74476904 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.725301194 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.726241173 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.725617345 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.725219803 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.725607609 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.725371461 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.725718832 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.725871317 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.725969488 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.726649008 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.726772651 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.727033779 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.726121731 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.727053334 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.72685944 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.726453768 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.725909443 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.726346821 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.725906815 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.726366773 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.725811072 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.72656807 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.727158212 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.727421119 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.72561554 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.727143763 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.727199814 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.726383708 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.727770895 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.727241055 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.727313757 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.726882459 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.727411431 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.728458267 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.726516926 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.725832271 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.726231967 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.725974039 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.727037949 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.728484929 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.726504598 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.727188085 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.726681658 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.726718964 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.727052995 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.72819572 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.726010807 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.727547932 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.727316066 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.727508955 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.726975388 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.729594923 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.727734967 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.728354861 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.727688212 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.728744517 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.727604895 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.728370051 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.727606996 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.727316916 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.727462483 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.72864006 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.729179713 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.727662228 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.72830607 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.727898808 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.728747181 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.727507296 seconds)
  done (took 119.101420189 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.727346607 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.728858694 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.728691141 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.728018696 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.727596665 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.72845123 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.728490243 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.729308005 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.728795135 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.728404526 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.729784817 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.727808862 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.729035643 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.728350384 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.728269063 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.728025916 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.727539753 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.727148747 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.725773075 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.725519003 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.724384881 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.725893062 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.727467326 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.722956054 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.722678494 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.722808893 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.723078773 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.723519497 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.723195392 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.722404948 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.723314144 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.722670034 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.722737889 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.722016626 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.723328624 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.723476061 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.722377134 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.723126216 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.722784482 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.722301271 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.723910375 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.722645966 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.723552826 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.723064913 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.723093087 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.722611553 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.722940928 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.722409479 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.722471403 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.723691118 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.72308497 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.72406551 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.723238599 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.723285883 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.723217058 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.723269207 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.723016646 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.723963847 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.72362432 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.723651155 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.723641011 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.723214554 seconds)
  done (took 108.605953245 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.723805823 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.72293977 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.723463398 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.722714059 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.723465371 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.724412519 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.723473963 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.723371394 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.723446879 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.722993331 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.723601575 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.723348682 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725078059 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723215239 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.723514944 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.724132631 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.724102809 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.724689553 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.723718022 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.723242571 seconds)
  done (took 36.132079344 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.724149791 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.723803933 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.724293891 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.723895782 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.723876614 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.724353894 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.724038874 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.723937848 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725431871 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723465858 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.724061098 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.724101561 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.723251165 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.724101211 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.72661507 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.721790165 seconds)
  done (took 29.245232675 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.723390658 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.721898531 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.722518965 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.722515905 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.721674602 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.72204072 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.721339718 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.721022167 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.721833831 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.722108414 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.720790687 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.72152206 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.720001575 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.721281114 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.721646042 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.720216095 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.719803896 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.72029256 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.720368335 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.720073799 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.721343288 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.719184461 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.719228778 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.718999872 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.719418082 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.720532322 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.7198872 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.718927796 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.71935617 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.719170047 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.718987667 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.719365232 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.719362103 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.718357294 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.718434312 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.718744055 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.717897464 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.717997127 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.718668629 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.717867814 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.717395917 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.717342739 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.716317905 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.717580484 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.717283762 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.717617053 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.717363947 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.718191137 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.717615791 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.718735182 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.717442808 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.717911922 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.717321649 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.717533776 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.717451331 seconds)
  done (took 96.231028804 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.717417712 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.717473074 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.716455499 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.716225089 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.71704102 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.717308465 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.717355926 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.717145102 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.716907525 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.717051147 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.717432767 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.718021577 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.71731718 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.716377585 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.716958296 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.717353063 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.71710478 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.718146868 seconds)
  done (took 32.562812129 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.717164504 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.71656906 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.717096718 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.720813461 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.716121902 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.717331756 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.716632142 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.716126759 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.716786395 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.718559201 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.716907967 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.717347862 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.716996293 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.716971694 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.716970092 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.718282544 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.716654323 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.716421018 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.715455752 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.715991574 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.716094097 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.717224044 seconds)
  done (took 39.426633069 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.71654252 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.715949698 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.730700565 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.736986276 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.736491518 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.74835473 seconds)
  done (took 12.036471933 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717032391 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717021007 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.716999963 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.716652383 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.715712856 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715374234 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715093405 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716305394 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716611898 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715567119 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715341409 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715374391 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71558994 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711413362 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713118387 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712610408 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712367825 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711368302 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711842053 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711984242 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713072849 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71113641 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711292907 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711009932 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710999609 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712511203 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712416455 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710553285 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710572699 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711250147 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710633026 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710671481 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711654981 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711343485 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710106188 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710003782 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710502794 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710526986 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711692615 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709521702 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.711048002 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71041682 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711198135 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711633216 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.709818998 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709845679 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71062473 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710531958 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71051885 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711195712 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710104235 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710500177 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710409762 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710630818 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710568066 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710700182 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710815421 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710573779 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710611251 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711461948 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710646587 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710934375 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710882841 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711671647 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710703333 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710490193 seconds)
  done (took 114.647789913 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712425913 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.710404346 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710975955 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710355817 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711308088 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.71026542 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.71152074 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711425654 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710528688 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.71033616 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711453024 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711518703 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711835848 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710929778 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71086496 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710405173 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711338139 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712034546 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710742735 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711016613 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711208268 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710474906 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710827608 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712650796 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710904712 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710294251 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71072536 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710594417 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711003841 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712396845 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711356688 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712003405 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710717451 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.711185293 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711038079 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712227299 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711683577 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711286251 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710128788 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709747269 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710646197 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710698315 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709036038 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708217531 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709404187 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709169968 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70908123 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710302388 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709162238 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708155635 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708269509 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708949403 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708649422 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708973175 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707184667 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707443899 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.706743972 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7072238 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708542758 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.70685844 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706516234 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.70732266 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707724453 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707347886 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708466536 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707705579 seconds)
  done (took 114.510515118 seconds)
done (took 2384.484343179 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.73120843 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.730544779 seconds)
  done (took 15.104332143 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.870858926 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.821366678 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.712389173 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.760135441 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.712139808 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.741156339 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.734024739 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.711395542 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.713784937 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.712139828 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.711765741 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.89858301 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.766746285 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.712213914 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.712603815 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.805223317 seconds)
  done (took 49.744084599 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.71574667 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.71598317 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.72568318 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.718924132 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.715540885 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.727116562 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.74545539 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.718665437 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.747935431 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.725784936 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.782163279 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.726087496 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.714516156 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.763200454 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.727590159 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.730191503 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.807677348 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.79113292 seconds)
  done (took 32.948140141 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.79052872 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.718662004 seconds)
  done (took 10.163045695 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.718411646 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.738047403 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.729259457 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.714719388 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.716682521 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.731896052 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.721674063 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.712660334 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.745299095 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.725571905 seconds)
  done (took 68.904178902 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.722093735 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.720145928 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.716197062 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.716979332 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.715224046 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.719715392 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.716516287 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.715045933 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.375082963 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.750824041 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.724364453 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.723067558 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.719998061 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.719626395 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.715200728 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.738735334 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.827207024 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.714180074 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.715944448 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.723961198 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.718307816 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.767406002 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.730290145 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.718358612 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.748890035 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.374388461 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.724742003 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.723106907 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.836404918 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.716093286 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.718232251 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.902831001 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.718760712 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.178878409 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.980554502 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.721674998 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.730541079 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.726983821 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.715968644 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.830965389 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.719105695 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.723562913 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.643211441 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.955645436 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.809619915 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.760286407 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.018508993 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.735332061 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.718526695 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.746651906 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.720658555 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.719718731 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.730844497 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.231723185 seconds)
  done (took 124.357826924 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.717608747 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.060112456 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.881493129 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.718582124 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.997693023 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.92089556 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.71817137 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.761641546 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.717654278 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.943176541 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.967289701 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.819405405 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.720735842 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.716659936 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.720057086 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.717845964 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.86868953 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.789338652 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.71942964 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.714533872 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.742802138 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.955752184 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.839188111 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.722666554 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.743950679 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.925044435 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.83914432 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.816935684 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.511498634 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.716275995 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.778601631 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.71966016 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.719188007 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.7176797 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.870636428 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.828192578 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.798534491 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.719304403 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.718609099 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.717609678 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.373431706 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.91416613 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.810951814 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.846871505 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.967690268 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.921083864 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.495698578 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.717227787 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.456300132 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.882050129 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.945062921 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.948630469 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.836602464 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.722771088 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.054457469 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.716786766 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.717214092 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.968379541 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.937112721 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.814960997 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.719936364 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.717954659 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.72062601 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.95560325 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.722687388 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.811130614 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.719715774 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.719761625 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.815557969 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.81464756 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.947535558 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.930006454 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.747552857 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.057172017 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.216962218 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.962826859 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.784089939 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.965847531 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.721978777 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.720380727 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.795920987 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.557617555 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.969153386 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.958903154 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.961524338 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.752363992 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.43829386 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.71840671 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.943126936 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.93961832 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.977870618 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.968586683 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.951841514 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.03837072 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.718928101 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.718390252 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.024367709 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.841210616 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.720964013 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.061539605 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.946388195 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.250014954 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.744249303 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.019944531 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.847072247 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.721906991 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.34781076 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.717398877 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.947334433 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.757687624 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.720268602 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.721620989 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.935750104 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.710312218 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.719853549 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.370392762 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.779466801 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.722099472 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.951100919 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.724186799 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.987159725 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.723165314 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950400156 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.790025175 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.750156582 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.891752495 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.968414194 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.722303974 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.9597061 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.961021283 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.833184052 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.938342219 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.427092547 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.719774535 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.004517388 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.721687056 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.719864848 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.889058461 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.722679537 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.861794142 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.723101378 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.010855981 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.740913168 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950274069 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.722411642 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.972289138 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.752398512 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.769643889 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.724578666 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.843877644 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.72132202 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.55316392 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.874994368 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.724003863 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.720860372 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.691996774 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.722423482 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.86698427 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.945341258 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.742101595 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.790165864 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.38417824 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.720990827 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.80050105 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.743549632 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.103120251 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.722086872 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.969278212 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.724357866 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.721532245 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.721372497 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.95401886 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.905249307 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.724987584 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.722143968 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.625283304 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.722146468 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.721563986 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.903460638 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.073749712 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.723229283 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.923641408 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.725170495 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.848202568 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.723716409 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.794371436 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.051145187 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.723084076 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.721860097 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.723501707 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.724715454 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.723491749 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.928069947 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.745375318 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.211300714 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.858116005 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.991224006 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.029456755 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.960332897 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.763895363 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.726625456 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.973815417 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.72482919 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.783961797 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.72396467 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.741696514 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.946754289 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.723697103 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.009308566 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.990742836 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.569163208 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.770055116 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.724443175 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.725474041 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.723721005 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.867146712 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.810046725 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.725350288 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.724528768 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.837433105 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.842968881 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.931304634 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.725132606 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.787601501 seconds)
  done (took 870.859816922 seconds)
done (took 1173.726298834 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.72515488 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.724854537 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.725684032 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.729198328 seconds)
  done (took 28.566079887 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.731395845 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.727307533 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.726308302 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.72536099 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.725116892 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.725669807 seconds)
  done (took 12.020461642 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.737760502 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.723778593 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.727806125 seconds)
  done (took 20.849422955 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.796748759 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.110912096 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.855019705 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.182174956 seconds)
  done (took 9.608104638 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.72982735 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.726808162 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.727231985 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.725547859 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.73274692 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.735015124 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.726196797 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.72630622 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.732382931 seconds)
  done (took 17.225714772 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.811844999 seconds)
done (took 93.741697844 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.880355281 seconds)
    (2/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.764137527 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.867777117 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.802359522 seconds)
    (5/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.069538189 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.84350632 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.97421074 seconds)
    (8/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.245754638 seconds)
    (9/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.808679566 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.804582327 seconds)
    (11/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.909167906 seconds)
    (12/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.908628845 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.441108081 seconds)
    (14/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.740477663 seconds)
    (15/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.487987334 seconds)
    (16/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.113359877 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.76032877 seconds)
    (18/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.738975394 seconds)
    (19/309) benchmarking ("sort", Float64, false)...
    done (took 5.608762496 seconds)
    (20/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.202755579 seconds)
    (21/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.740998736 seconds)
    (22/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.842027261 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.893531751 seconds)
    (24/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.84989842 seconds)
    (25/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.134542626 seconds)
    (26/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.906049045 seconds)
    (27/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.175546561 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.760321018 seconds)
    (29/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.908358885 seconds)
    (30/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.760696677 seconds)
    (31/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.737574113 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 8.05618657 seconds)
    (33/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.822306862 seconds)
    (34/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 3.16622854 seconds)
    (35/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.20795215 seconds)
    (36/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.7580999 seconds)
    (37/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.095695632 seconds)
    (38/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.780222662 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.95042726 seconds)
    (40/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.83108165 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.114943642 seconds)
    (42/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.743521727 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.393352984 seconds)
    (44/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.052804386 seconds)
    (45/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.746353449 seconds)
    (46/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.840496385 seconds)
    (47/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.029526199 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 3.417837222 seconds)
    (49/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.866030381 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.870890108 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.739675341 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.006128972 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 1.96061768 seconds)
    (54/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.067178465 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.694401135 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 5.45885306 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.369189822 seconds)
    (58/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.056539026 seconds)
    (59/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.824622565 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.994220722 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.742730911 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.043210785 seconds)
    (63/309) benchmarking ("sort", Float32, false)...
    done (took 5.44046747 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.898254209 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.762021791 seconds)
    (66/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.740543345 seconds)
    (67/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.964766056 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.743768427 seconds)
    (69/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.04110482 seconds)
    (70/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.780382204 seconds)
    (71/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.819302952 seconds)
    (72/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.819125017 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.827809357 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.740128562 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.828130671 seconds)
    (76/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.875705635 seconds)
    (77/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.819878955 seconds)
    (78/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.876854654 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.759271672 seconds)
    (80/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.513830499 seconds)
    (81/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.619743153 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.13545328 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.764240386 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.820987603 seconds)
    (85/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.846707578 seconds)
    (86/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.607271362 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.0782578 seconds)
    (88/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.747084903 seconds)
    (89/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.768356652 seconds)
    (90/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.948628142 seconds)
    (91/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.839097549 seconds)
    (92/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.751714992 seconds)
    (93/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.853245584 seconds)
    (94/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.744477467 seconds)
    (95/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.62152154 seconds)
    (96/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.744628645 seconds)
    (97/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.764493622 seconds)
    (98/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.024243343 seconds)
    (99/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.998046336 seconds)
    (100/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.751198824 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.120625739 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.074682615 seconds)
    (103/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.770397482 seconds)
    (104/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.742834598 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.279027636 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.88584687 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.746302488 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.475793958 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.777949266 seconds)
    (110/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.821063186 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.743093805 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.99750474 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.950151028 seconds)
    (114/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.968288471 seconds)
    (115/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.98848087 seconds)
    (116/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.751186958 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.771338854 seconds)
    (118/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.871273553 seconds)
    (119/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.132909491 seconds)
    (120/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.93358403 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.915442231 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.978629644 seconds)
    (123/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.75014966 seconds)
    (124/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.608259206 seconds)
    (125/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.812255395 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.743659051 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.848599121 seconds)
    (128/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.744858962 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.833440127 seconds)
    (130/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.032130503 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.767594822 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.981473034 seconds)
    (133/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.746922282 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 3.689690545 seconds)
    (135/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.126701436 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.054770496 seconds)
    (137/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.855304574 seconds)
    (138/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.966902874 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.778249863 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.86900475 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.99604045 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.139198228 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.876110251 seconds)
    (144/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.745177089 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.225062705 seconds)
    (146/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.768257783 seconds)
    (147/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.955138421 seconds)
    (148/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.745027032 seconds)
    (149/309) benchmarking ("perf_sum", Float32, false)...
    done (took 3.468119415 seconds)
    (150/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.794440471 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.051044414 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.77377103 seconds)
    (153/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.870500354 seconds)
    (154/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.894437011 seconds)
    (155/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.767735844 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.745919374 seconds)
    (157/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.825243345 seconds)
    (158/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.078789568 seconds)
    (159/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.091060444 seconds)
    (160/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.813867751 seconds)
    (161/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.041377787 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.733088259 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.770253869 seconds)
    (164/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.070460308 seconds)
    (165/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.781564277 seconds)
    (166/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.916123832 seconds)
    (167/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.012139367 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.52551915 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.143457148 seconds)
    (170/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.270355281 seconds)
    (171/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.439649014 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.367500308 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.758342123 seconds)
    (174/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.985106907 seconds)
    (175/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.752999331 seconds)
    (176/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.781593446 seconds)
    (177/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.990017345 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.752380118 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.369969675 seconds)
    (180/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.126564368 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.767088916 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.881308309 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.748920707 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.359000962 seconds)
    (185/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.753708945 seconds)
    (186/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 5.339625627 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.088610805 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.749611495 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.833561369 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.751522517 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.511834397 seconds)
    (192/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.851358193 seconds)
    (193/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.907200019 seconds)
    (194/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.860253357 seconds)
    (195/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.967618743 seconds)
    (196/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.88312938 seconds)
    (197/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.748397383 seconds)
    (198/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.941011167 seconds)
    (199/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.598906763 seconds)
    (200/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.052908833 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.849040689 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.03793059 seconds)
    (203/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.434175928 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.753414009 seconds)
    (205/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.993947132 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 3.348913945 seconds)
    (207/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.535467471 seconds)
    (208/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.649417945 seconds)
    (209/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.05055511 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.820258396 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.060384067 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.54608256 seconds)
    (213/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.947406038 seconds)
    (214/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.101334562 seconds)
    (215/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.958668136 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.85185278 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.098592853 seconds)
    (218/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.887436805 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.981680982 seconds)
    (220/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.010035079 seconds)
    (221/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.755134262 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.074004273 seconds)
    (223/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.001395212 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.409041537 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.942072242 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.748584497 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.782455103 seconds)
    (228/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.902028673 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.886738244 seconds)
    (230/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.761139762 seconds)
    (231/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.750373189 seconds)
    (232/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.095170107 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.779718145 seconds)
    (234/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.846786928 seconds)
    (235/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.852234825 seconds)
    (236/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.93798577 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.75701847 seconds)
    (238/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 3.22655871 seconds)
    (239/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.904646002 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.707987858 seconds)
    (241/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.660201372 seconds)
    (242/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.766767999 seconds)
    (243/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.751178235 seconds)
    (244/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.84921994 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.750755287 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.753931712 seconds)
    (247/309) benchmarking ("sort", BigInt, false)...
    done (took 6.849089633 seconds)
    (248/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.217579253 seconds)
    (249/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.780282894 seconds)
    (250/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.043924802 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.894698701 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.749925415 seconds)
    (253/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.163612118 seconds)
    (254/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.788607557 seconds)
    (255/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.883412922 seconds)
    (256/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.491543738 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.752745653 seconds)
    (258/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.905785033 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.027529688 seconds)
    (260/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.843896123 seconds)
    (261/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.910568905 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.717341439 seconds)
    (263/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.959722061 seconds)
    (264/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.862435299 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.708613408 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.007146867 seconds)
    (267/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.836664542 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.874391402 seconds)
    (269/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.750358011 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.364905304 seconds)
    (271/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.130649926 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.082228386 seconds)
    (273/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.980760197 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.775416981 seconds)
    (275/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.839746046 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.752006351 seconds)
    (277/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.055683484 seconds)
    (278/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.322596336 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.886550603 seconds)
    (280/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.205169069 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.758885387 seconds)
    (282/309) benchmarking ("sort", Int8, false)...
    done (took 4.646851605 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.881584876 seconds)
    (284/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.884845303 seconds)
    (285/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.072054903 seconds)
    (286/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.777739271 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.885486074 seconds)
    (288/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.140494844 seconds)
    (289/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.897120413 seconds)
    (290/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.072575255 seconds)
    (291/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.015642645 seconds)
    (292/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.758323096 seconds)
    (293/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.134792816 seconds)
    (294/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.906337618 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.51131741 seconds)
    (296/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.754784968 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.531428449 seconds)
    (298/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.859140568 seconds)
    (299/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.127675955 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.790659611 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.752076149 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.07236273 seconds)
    (303/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.838598957 seconds)
    (304/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.862363635 seconds)
    (305/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.756243704 seconds)
    (306/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 3.427679566 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.975751089 seconds)
    (308/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.760262021 seconds)
    (309/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.934046355 seconds)
  done (took 970.251143395 seconds)
done (took 972.216806823 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.784202751 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.77352947 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.755156422 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.777772635 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.868964243 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.802834585 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.768983477 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.759193565 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.806062586 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.806123073 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.75374939 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.801465671 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.756217596 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.755966803 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.756312826 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.772791933 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.067658141 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.788175255 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.775027386 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.768168651 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.775449094 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.754621583 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.80591318 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.800937133 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.761097428 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.761858533 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.760964632 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.776617348 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.86966316 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.759971219 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.76203832 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.770456334 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.06887495 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.785374224 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.755757739 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.776675648 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.769762431 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.7690268 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.761276141 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.790341911 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.155519291 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.798336144 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.758799012 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.758085502 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.758071094 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.764867973 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.758654289 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.767301767 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.773327201 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.773587087 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.149223017 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.813516487 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.761706941 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.758593346 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.772587901 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.75866027 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.762205516 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.774799879 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.778333504 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.775088167 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.053226313 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.797691558 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.761955576 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.777447037 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.768235958 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.184469504 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.798447139 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.7666336 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.155762745 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.808264253 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.184751258 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.808524762 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.761986751 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.773567966 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.792013278 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.070018135 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.787631595 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.758115665 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.768090509 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.757385004 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.772357568 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.774193812 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.764019491 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.759298534 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.775219497 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.806946503 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.773005651 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.759955205 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.771481208 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.778820274 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.769020219 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.772071134 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.764368404 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.757788485 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.771459713 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.763442325 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.763430152 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.764247127 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.764796325 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.773641589 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.154941708 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.81770952 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.75804367 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.757649589 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.760154064 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.776071964 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.155478603 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.801717282 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.784520477 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.810304793 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.762321866 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.055921356 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.795145283 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.777982188 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.774263015 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.764001807 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.758966909 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.058607115 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.184454854 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.817420183 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.762213281 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.759924691 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.778092194 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.76298262 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.758869748 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.074046562 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.793923465 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.776718156 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.884075687 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.773782314 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.79557583 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.759686079 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.765387357 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.812192295 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.779013823 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.795021111 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.764741679 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.778278293 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.779601433 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.760270683 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.777172606 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.77883055 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.764930124 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.7729655 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.7619686 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.814536151 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.777373637 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.777097759 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.782705554 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.88454822 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.759405436 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.056357663 seconds)
done (took 277.28954173 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.843223825 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.761594107 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.860770506 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.762423074 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.858525316 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.840512006 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.76468139 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.76380585 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.762728747 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.264304931 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.762947701 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.768643919 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.762163326 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.763015107 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.838944105 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.76397181 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.764296076 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.211326517 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.763739061 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.850639536 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.761740028 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.763751433 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.763769117 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.253657445 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.764017834 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.761982807 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.843521958 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.763456868 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.199944951 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.763812841 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.764223412 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.200886257 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.843649532 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.792035096 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.772019226 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.771487064 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.856241583 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.774010224 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.834547694 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.836909353 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.860270058 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.797352495 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.764189454 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.764456639 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.768751152 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.766358877 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.764521248 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.797848158 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.764217342 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.772073441 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.211748512 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.769858595 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.773525131 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.765919863 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.765514824 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.793656946 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.7651912 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.76711309 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.848222283 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.766580602 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.837400949 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.253322965 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.268680216 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.768745175 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.767714092 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.768388143 seconds)
  done (took 178.22664208 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.831769421 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.84203399 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.830016764 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.769984351 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.813018495 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.832742558 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.770097088 seconds)
  done (took 14.389227776 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.772472254 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.765631404 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.814650078 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.814654523 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.765406508 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.921668813 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.767203043 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.77626921 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.771577103 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.793404751 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.76607389 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.766169229 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.773322727 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.765606592 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.815400749 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.778366264 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.883189993 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.768299375 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.76722063 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.914598222 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.770786887 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.773751091 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.791854122 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.777598753 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.767045442 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.774504542 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.34623341 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.768274167 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.767200959 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.767590129 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.767321069 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.807831335 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.767404677 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.766012534 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.767388914 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.880206078 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.767051356 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.767109229 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.766958979 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.765720399 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.767804297 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.76688659 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.766891715 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.767648561 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.767546018 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.790147072 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.768026823 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.767154365 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.767913551 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.768262277 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.794892525 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.767679258 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.768698018 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.772571072 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.811969567 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.775399896 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.768961533 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.768008572 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.768479228 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.768552711 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.916216267 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.818389015 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.768868202 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.818658614 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.768222749 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.769662338 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.769730783 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.768990934 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.856890576 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.768840218 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.817697069 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.769641176 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.926661941 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.791803374 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.769913559 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.773144737 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.772901498 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.770371763 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.768564559 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.776105952 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.770094049 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.771748615 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.775750949 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.774634321 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.76934042 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.881749958 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.910042886 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.768851544 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.770203519 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.776172687 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.769865559 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.813740097 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.770721493 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.769333129 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.826701309 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.884661177 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.797567765 seconds)
  done (took 195.817873165 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.777888585 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.777553244 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.771894563 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.786382892 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.770496617 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.771251494 seconds)
  done (took 12.359887222 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.773136129 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.773863667 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.769553654 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.770306823 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.770089282 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.77088521 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.770736391 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.772094134 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.774988431 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.770660954 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.77165389 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.773015131 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.774214571 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.773085904 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.773118368 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.773371225 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.773092611 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.773509375 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.771808451 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.771896945 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.026005662 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.770593063 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.77126952 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.774370483 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.776057321 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.771446596 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.790458978 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.771337327 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.770757642 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.779271269 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.776289513 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.772715579 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.775570438 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.778491247 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.775871632 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.774876123 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.776025684 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.773052833 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.772163801 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.771688932 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.772219531 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.771590472 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.772151847 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.773093852 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.774194536 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.779991498 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.776291568 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.788634832 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.775464897 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.775989885 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.774678142 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.77447598 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.775029309 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.774817126 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.777900324 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.778833579 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.776754081 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.772629941 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.772965073 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.7766548 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.776312128 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.773356953 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.775099492 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.777778974 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.780977569 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.774289178 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.777257137 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.777779913 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.773012977 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.772927492 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.773575807 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.773591216 seconds)
  done (took 130.719281138 seconds)
done (took 533.228438398 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.992906664 seconds)
  done (took 8.699040023 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.9188699 seconds)
  done (took 8.684832775 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.330331227 seconds)
  done (took 10.03916142 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.78506279 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.815782444 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.789564599 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.782159936 seconds)
  done (took 28.907838287 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.028217449 seconds)
  done (took 8.735423364 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.795616789 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.772259628 seconds)
  done (took 15.343691043 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.87231675 seconds)
  done (took 8.57933291 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.13447228 seconds)
  done (took 8.849770211 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.792503406 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.806252998 seconds)
  done (took 15.326286398 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.776298036 seconds)
  done (took 8.481772516 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.943967857 seconds)
  done (took 9.752033848 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.797406031 seconds)
  done (took 8.574685782 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.781605369 seconds)
  done (took 8.487132097 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.840917243 seconds)
  done (took 8.547113197 seconds)
done (took 158.714938528 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.77677014 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.772891754 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.775513145 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.77513753 seconds)
  done (took 28.80623472 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.806685282 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.805825334 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.808658844 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.818714334 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.809680495 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.806766945 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.799495488 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.799559405 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.817629028 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.809816242 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.808781789 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.809568244 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.806823233 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.798773581 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.809386898 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.810365365 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.817946092 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.807742553 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.799320237 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.809392688 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.776054996 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.818585651 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.80932474 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.775120699 seconds)
  done (took 45.047709813 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.963957446 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.845866278 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.928683166 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.826517836 seconds)
  done (took 9.272326438 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.825556971 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.828238006 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.838701199 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.876868879 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.925176427 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.836454734 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.797229634 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.795931107 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.782317585 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.827552612 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.903778241 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.824957339 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.915637695 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.775161806 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.962320352 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.774756466 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.775536853 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.827576806 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.878028938 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.943323702 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.776912396 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.825984951 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.830425384 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.823496197 seconds)
  done (took 45.880264293 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.776638451 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.784500601 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.784213915 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.77714453 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.777894676 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.777067601 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.785014715 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.778776864 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.799798981 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.780261594 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.776939756 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.777814617 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.784177104 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.777894843 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.777610197 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.792157639 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.792285012 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.778078634 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.78103375 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.784417311 seconds)
  done (took 37.353369216 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.775322522 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.62162971 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.119892857 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.027876258 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.774949663 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.774709995 seconds)
  done (took 30.804039148 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.789456248 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.783076892 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.776670664 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.835288723 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.918353567 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.783842607 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.77699486 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.787931441 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.827200337 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.84382225 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.801875131 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.80605916 seconds)
  done (took 23.442033834 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.777177562 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.781013068 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.795340637 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.790429093 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.787980593 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.787756236 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.785691671 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.776568081 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.792091063 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.795811954 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.784827085 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.789298583 seconds)
  done (took 43.158464653 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854698017 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.652489918 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230628034 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239963592 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.303299264 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.979376293 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.776009266 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.862074288 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.777478087 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047191379 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.115509105 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984293149 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.018843063 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.51618357 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.785026652 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.246807955 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068495497 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996037298 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804439955 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.440103335 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888336205 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.29036722 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.410160477 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.88998789 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982881387 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.903411802 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.043694922 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.728570069 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827661205 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782404927 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784793681 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.781754061 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.051053197 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900476327 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848978701 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784077484 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.193560265 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.48522164 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.788433068 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.412826109 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.270798435 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.903131154 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782218385 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.77874404 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.706404906 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.285687301 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873640143 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.782771659 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.479231209 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.779955262 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.784469537 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85510767 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.780590294 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.585796848 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.465122441 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.047277692 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.779020658 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782131638 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.330191941 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793568474 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382924922 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.718611305 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.863604691 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.404731406 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240672582 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.938363564 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.780959764 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780877142 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707044074 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.405750446 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897582562 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.917672973 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.797383825 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.422481516 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073137089 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.189760096 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843112841 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058556542 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.545990206 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.717363736 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997615748 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.729227762 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707593698 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.629532855 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.707346046 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99127751 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816581925 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.376138004 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.817518581 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.863825331 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.786896415 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794987238 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783994235 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.997407264 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.67535658 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780525402 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.071601416 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.039530598 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800195373 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.867041615 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708095871 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.784324443 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027471653 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.984532487 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.997378334 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.259269751 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872375996 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.711597219 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.802435723 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.681052941 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.795141945 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.056347588 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842971922 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.794957412 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906078332 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.734794349 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027473772 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.739806046 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.888880125 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.143546726 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.029495988 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.115733647 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.030588451 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844505687 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.788432957 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.783191209 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.472443927 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398854419 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.999541195 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.796629818 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.249642791 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.795848814 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.783633758 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71967957 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.405806411 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.150759647 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.873501828 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.996799205 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.726332328 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066634577 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711014816 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.919975295 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.782017527 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.997840963 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.431465233 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.872852714 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032361469 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.001297028 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.99089911 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79874586 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798996873 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875974852 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801552673 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.189717369 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.037553435 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.785323667 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.785738584 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.482677357 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.848458739 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784483395 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.789850692 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.306226183 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05920084 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.809062841 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.791037834 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.659471374 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.797162031 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847625203 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.787442227 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.788832788 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.300926244 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.292043773 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.791169842 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.427838697 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005914298 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789232063 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.474456812 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975064016 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.798178714 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061868091 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852527736 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.712512317 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.48627954 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.487565138 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786222339 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.712646351 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.787272229 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789607935 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791207661 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.973353026 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.06681157 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839010198 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.426167666 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.89444681 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791678321 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.789122288 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78659916 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.300870116 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.810245237 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381679032 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.799205453 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917643166 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.798912823 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.713583586 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.789173738 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.790018277 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.788137767 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.734186995 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834290288 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.451338486 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996998198 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036670666 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.192145089 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795964761 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.430388115 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.910495435 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.801114842 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.089956262 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410450383 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.795921575 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859341067 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.793389856 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.432670777 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.524550234 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.342109018 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084468141 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106544626 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138405713 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.252068251 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.009858435 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.873686493 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014452255 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.309550398 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.84496815 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.878153796 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.72815704 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80452778 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.437946741 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144617885 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797360972 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006109967 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080179171 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.163066521 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929705624 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.991689093 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817801399 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.683085364 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.715287243 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.325116094 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805840012 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.203392123 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00197439 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873349861 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.098369787 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.877717658 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.788861343 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134431416 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831056685 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.491367113 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.143117087 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.284069219 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.185193065 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022124374 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.795124605 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.228783278 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148136116 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.068841576 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.809704324 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719391108 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.796719015 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.796506165 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.803921103 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.761480704 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.630029462 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.036909412 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798259843 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019248829 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.009163633 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061059898 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.697766456 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.794062079 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790702132 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037133743 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.553451198 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843044932 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.184754584 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.255923441 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.797814592 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.717785727 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718097151 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.492108625 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.800794212 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.757001868 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003425514 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.896291045 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.470566936 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.258500167 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99810801 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.035401522 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.802919122 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.063074589 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06686996 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.284211625 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812124409 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.889791118 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.120945739 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.512340931 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.005560653 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.018700757 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318367128 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.010058834 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248803714 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.762256659 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.792192268 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.99815259 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.007165996 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.181821942 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977270118 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.502999217 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.798132732 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155063433 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85455641 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.168796149 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.986072106 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.87884044 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800276203 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870964975 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797151757 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.798419841 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.798465761 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802787795 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.195679588 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.920395961 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.806097163 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870143928 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833712451 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.369722886 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.802333249 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067402829 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148519259 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.129171712 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.860875573 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.794878083 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802935934 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722198401 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923386755 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.234917966 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066538571 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.911486399 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.931288068 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815144124 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.125694157 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.026348896 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102201243 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.067084247 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.678223973 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.478537974 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.912019868 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.010663829 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80195199 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.998201722 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012789741 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097932961 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367149852 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.894701554 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.984799121 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.068537011 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.157150087 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.796498084 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37632138 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.811723147 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206237066 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.832603506 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.184592491 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058671799 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799701696 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917510448 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.800561603 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.99996118 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.246677968 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.49082652 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.149312986 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.650657282 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.800699558 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073481081 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.131850119 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104764829 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873102199 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803601357 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.497703782 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930320275 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.633791009 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.015342401 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.797433797 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000448071 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.506622215 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.800994617 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076725381 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102342516 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.798043436 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.660064154 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800955473 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.801407806 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.011592009 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011648193 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045413009 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801462347 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.805475882 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.604352853 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078402433 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.861961475 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.725521985 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.799726062 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84407452 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.025481847 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.81630325 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.313450682 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.498694048 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080577545 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.707052852 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815192484 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.170181685 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.179510552 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140317577 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.321373965 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018512893 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.353192631 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.615854057 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172714943 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.800427766 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.164726187 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175435608 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.800230093 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.270066693 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906337575 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.072628235 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.126005432 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.807918037 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.564323247 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.835608517 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013102515 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.155941813 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.730189359 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.804876807 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.847594531 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.801579695 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.781579368 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.810888342 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.714351413 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.167810225 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.639754191 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356249844 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.803676973 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.835303571 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.191031666 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.31106022 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90438535 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817466462 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801531595 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.512072758 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.088260712 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.043318185 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.272956147 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.892017818 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.802327936 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802027706 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.719932052 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.987039863 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.988245955 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087833298 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.114517108 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.907306595 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.805053771 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.011759019 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006361792 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.204044942 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94098777 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.891316365 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913708708 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.743398362 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.506608722 seconds)
  done (took 1621.881730622 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.822856144 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.818170898 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.81513871 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.822511682 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.818747945 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.827814973 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.840390869 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.83883733 seconds)
  done (took 56.340024266 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.802614168 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.963180646 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.808033425 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.805174846 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.808041428 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.804241221 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.958932441 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.815898469 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.807571817 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.808817538 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.804236729 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.804378676 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.078835175 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.824487071 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.804071684 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.867731444 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.808397865 seconds)
  done (took 73.14643467 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.804920063 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.9694207 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.834442366 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.805091193 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.472198444 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.812687295 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.709566297 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.858024978 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.81121955 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.275704478 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.094837985 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.838139459 seconds)
  done (took 89.024661048 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.815994079 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.807207131 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.806277718 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.806528277 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.806831723 seconds)
  done (took 10.787588676 seconds)
done (took 2116.675925005 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.034469801 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.000400235 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.052571548 seconds)
  done (took 5.791300413 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.946399294 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.997779948 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.112362211 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.116691913 seconds)
  done (took 9.914338787 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.121736335 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.195376997 seconds)
  done (took 6.056585746 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.118583415 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.829527082 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.178104312 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.807846528 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.812905631 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.809917279 seconds)
  done (took 22.174020867 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.808489751 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.807467364 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.806769289 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.806868705 seconds)
  done (took 8.968924822 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.80557226 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.493373824 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.804813441 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.814498196 seconds)
  done (took 20.657210595 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.954692495 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.927386349 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.9511811 seconds)
  done (took 7.571956191 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.946666331 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.662599507 seconds)
  done (took 6.34906385 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.941135926 seconds)
  done (took 3.677674508 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.830776647 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.073783935 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.291365381 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.328771346 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.394017163 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.67128341 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.084068146 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.016929378 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.241023022 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.239905882 seconds)
  done (took 23.907999259 seconds)
done (took 129.968365527 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.132068436 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.821808855 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.004327751 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.144378944 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.030092587 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.004583563 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.029281843 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.133496233 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.824217985 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.811022005 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.149704021 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.032096347 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.967556353 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.815202889 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.977261094 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.816029076 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.026937459 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.152238832 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.836407197 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.074369393 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.038456171 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.796094307 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.991587722 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.808630252 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.02944699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.956276335 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.339281789 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.819192578 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.978963444 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.350704015 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.960474016 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.209623218 seconds)
  done (took 165.800429049 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.807202106 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.806928336 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.807501805 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.806638682 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.248628217 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.80815088 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.806657014 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.806439143 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.242034185 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.232729708 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.807000234 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.2380506 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.808837141 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.80635464 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.806678109 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.806338134 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.411007346 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.806410126 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.806997623 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.806467599 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.808111445 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.067207693 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.807376005 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.080409876 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.406133025 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.806895517 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.807167852 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.807126049 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.806645219 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.807188998 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.807136684 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.806945175 seconds)
  done (took 207.035294281 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.701098719 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.808168194 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.810623361 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.807548061 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.808813377 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.809363004 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.807722151 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.808317364 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.536202934 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.527203688 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.809279138 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.807605648 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.809178312 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.807271685 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.811160707 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.808862461 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.808814373 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.745752468 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.80875776 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.818608622 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.809436967 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.400528447 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.811044627 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.399132541 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.809119076 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.808831659 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.809128096 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.808765746 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.808998074 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.810162377 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.809401837 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.808776334 seconds)
  done (took 218.094024224 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.0479417 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.809652948 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.810430159 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.803158619 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.810996717 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.809572523 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.785988325 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.060942262 seconds)
  done (took 18.681273631 seconds)
done (took 611.355370162 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.166422086 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.008605442 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.983230184 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.834608627 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.084867136 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.876718342 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.830430955 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.89747332 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.638237315 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.902911942 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.490888278 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.850902117 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.589192559 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.855030807 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.953530222 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.893671322 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.381114739 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.48048766 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.003181658 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.905298854 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.008418206 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.74029512 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.912076406 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.66550382 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.612423638 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.786314376 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.845038678 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.381817394 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.841597728 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.989520892 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.473819508 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.080834952 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.843558672 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.829038585 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.887506058 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.862195182 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.03480541 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.841502453 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.956205518 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.538873451 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.916198527 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.547452638 seconds)
  done (took 99.965310685 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.821922802 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.817749071 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.817838478 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.818131082 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.826866204 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.817585538 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.817847603 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.817680513 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.817894061 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.81858029 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.818833467 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.826762146 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.818372349 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.825638909 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.81755971 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.818199862 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.818048638 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.826401136 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.817165866 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.817869292 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.81783969 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.81835201 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.813901237 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.817920721 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.818723699 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.817555054 seconds)
  done (took 49.058295826 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.812839464 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.981390082 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.055514513 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.832044389 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.814334888 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.816517696 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.830387112 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.818441092 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.815607272 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.815404415 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.902891951 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.819991852 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.83130543 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.056708214 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.830332135 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.813767299 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.813621201 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.814635258 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.989401813 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.82953097 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.83283922 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.818982249 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.832601109 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.827144093 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.816977675 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.815373554 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.818343545 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.26052881 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.823201281 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.904826966 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.858153454 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.837206648 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.19859845 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.06540967 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.868507152 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.822045072 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.814257521 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.908334895 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.821772191 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.815954553 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.8327179 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.821104589 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.055910384 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.337240252 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.829540206 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.815087525 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.270373884 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.916441506 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.856983365 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.824916457 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.060244188 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.831744902 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.816611427 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.816708488 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.85187885 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.82222384 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.815489013 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.12956507 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.828498229 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.83593603 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.820028169 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.81761291 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.99640292 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.824694644 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.984533611 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.825239242 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.822099347 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.817384955 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.057948947 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.831833909 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.349552064 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.829944167 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.816607303 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.90715013 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.991989133 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.295539092 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.828475031 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.998687799 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.217088408 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.841292156 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.824230719 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.248528177 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.844536832 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.824191999 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.818533621 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.81868377 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.816807154 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.861620841 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.833335712 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.261145927 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.348468495 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.145153888 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.843382493 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.831917889 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.818284746 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.129081387 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.825569101 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.817969625 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.050471563 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.358000079 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.831451436 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.824586356 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.327864246 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.83276826 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.83688679 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.825925523 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.064640222 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.833374031 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.86257279 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.818687717 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.825266082 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.821375994 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.836492237 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.825900361 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.81867791 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.322458165 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.925112692 seconds)
  done (took 225.802104438 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.818769803 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.82071719 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.817701404 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.821325213 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.817494556 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.818951296 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.817619054 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.817652616 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.818986339 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.81762375 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.817263608 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.81831339 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.819552233 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.822787671 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.440010492 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.820559008 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.422758203 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.818062837 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.819221514 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.822143925 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.500661954 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.824554131 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.820200037 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.819242078 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.821072411 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.820960336 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.826182935 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.824010644 seconds)
  done (took 166.617769412 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.820920328 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.004216915 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.839158126 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.850263928 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.828414635 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.820855868 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.959961404 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.844013235 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.826618537 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.820728082 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.821753555 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.880435391 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.831774729 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.919098868 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.852796209 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.927161897 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.924645491 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.827407489 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.821412337 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.822505116 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.850313166 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.829779677 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.881796871 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.944547626 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.843600294 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.934598473 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.840708191 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.823263932 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.822399375 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.93465466 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.843965196 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.88329018 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.851587199 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.841131655 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.939406066 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.939398396 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.925726623 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.925672673 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.828222695 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.823296065 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.823554449 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.822620706 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.934703157 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.844253868 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.824035262 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.937766035 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.841633846 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.824356219 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.823226646 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.823487823 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.837288843 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.840814931 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.887190994 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.954399721 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.861517489 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.847038998 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.92126028 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.947161968 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.825265867 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.921609786 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.83033345 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.936911474 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.843033575 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.824335565 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.825473208 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.827713889 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.853612699 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.929396015 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.92677665 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.831088458 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.921723505 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.860571079 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.832227232 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.825986164 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.825220488 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.936853099 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.944214365 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.859856161 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.860928968 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.854417125 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.833324652 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.825908809 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.825777879 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.841738742 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.83007668 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.938750652 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.942115626 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.831526135 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.825175902 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.826645656 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.825652534 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.849433808 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.946418056 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.863466535 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.930952947 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.891378591 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.901766144 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.841749429 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.839439102 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.831432669 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.887142829 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.842855526 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.838114881 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.117030367 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.886453895 seconds)
  done (took 198.016291271 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.218639107 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.875124874 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.88236081 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.139066971 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.178179564 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.778842817 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.873342758 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.87366539 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.898250717 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.056606678 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.939849964 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.891798537 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.861054709 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.847403966 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.871099619 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.897629884 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.881857626 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.211843503 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.077215968 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.011083016 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.863600143 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.138336934 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.177374994 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.447288799 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.922787655 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.286014263 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.441078388 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.014678798 seconds)
  done (took 60.32001355 seconds)
done (took 801.522169944 seconds)
SAVING RESULT...
DONE!
