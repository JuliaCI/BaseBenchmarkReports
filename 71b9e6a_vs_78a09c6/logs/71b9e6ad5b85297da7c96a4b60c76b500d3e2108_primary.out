cset: moving following pidspec: 1332
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.247814821 seconds)
loading group "string"... done (took 0.463026185 seconds)
loading group "linalg"... done (took 7.570244455 seconds)
loading group "parallel"... done (took 0.172305808 seconds)
loading group "find"... done (took 1.177822478 seconds)
loading group "tuple"... done (took 2.10664173 seconds)
loading group "dates"... done (took 1.33199744 seconds)
loading group "micro"... done (took 0.246403244 seconds)
loading group "io"... done (took 0.74063962 seconds)
loading group "scalar"... done (took 41.725454315 seconds)
loading group "sparse"... done (took 12.83449223 seconds)
loading group "broadcast"... done (took 1.039669087 seconds)
loading group "union"... done (took 14.133534299 seconds)
loading group "simd"... done (took 4.974970179 seconds)
loading group "random"... done (took 9.769414207 seconds)
loading group "problem"... done (took 1.966297171 seconds)
loading group "array"... done (took 22.507399193 seconds)
loading group "misc"... done (took 1.418830693 seconds)
loading group "sort"... done (took 3.56938046 seconds)
loading group "collection"... done (took 19.320962266 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532799146 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140422545 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.130143079 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147962799 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203213865 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.141944588 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155313507 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113333103 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.958830368 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.185783452 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153856894 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.509715749 seconds)
done (took 5.101397302 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.278680846 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094291011 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103291188 seconds)
  done (took 0.864381109 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077945012 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143422085 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094060616 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077807248 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093898561 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077847913 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094655045 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077578116 seconds)
  done (took 1.333176337 seconds)
done (took 3.235161803 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.727239458 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.28748962 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201618552 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.460145635 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196932216 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213207668 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.706017964 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.349755764 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.249982193 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099264515 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.141669322 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.383467786 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135878325 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.715179744 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092133609 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124052415 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.18808326 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.472559925 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08105458 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109364248 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115572937 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14162202 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130374667 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089239527 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.182858638 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081055966 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191669299 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107740303 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079375429 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.284750664 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200544484 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.701470964 seconds)
  done (took 10.950160601 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109739891 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134755165 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097089288 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136905598 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133072717 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097900089 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08652726 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095501829 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120356091 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173844096 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112489157 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135056443 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093524316 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081637327 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113492654 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.241905455 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120039744 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102874201 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09934171 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102353177 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121036334 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114403384 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10826073 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091388492 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167450555 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220315794 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113153298 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128094507 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097887974 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112217115 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144193645 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143907649 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095744887 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080803753 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171922322 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125812865 seconds)
  done (took 5.113539313 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186126421 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120691336 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167021122 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162750437 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139272912 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158607206 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112499487 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252738129 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.176142245 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163710165 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141433587 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114953753 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080239085 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.09792412 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.127166615 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079687158 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.695483772 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.124021257 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.157544095 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117868024 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104886821 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085979072 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.09550017 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087602443 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098123503 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08251696 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.12791628 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.680205874 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164494333 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084054257 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.143112443 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121820068 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101359498 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118589204 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213146046 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127718056 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119555679 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098306158 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078106552 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.194381168 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089450184 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098197953 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104120497 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137646081 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135647224 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098538078 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082182499 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223030555 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083942507 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115405418 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.929818089 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18067232 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090630887 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097321431 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.322954759 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096587782 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096815606 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076240112 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.266398778 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.181076331 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098169028 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080632331 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099066869 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081664385 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.399711888 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080992944 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.643662859 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083439996 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108964606 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083234041 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098449713 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104932886 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088717153 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117001535 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080738061 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.10059417 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079785504 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098149776 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082626795 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111131262 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.123035174 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08510771 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099582569 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163326357 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079480638 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094714663 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099161133 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129238425 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101489334 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080423649 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132362558 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09848653 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081832715 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136725117 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081548671 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11158845 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100002934 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142510367 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081850894 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.175152702 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094383962 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.127772319 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100776776 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115719622 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114624273 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10065763 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08536807 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096823628 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07793574 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166321997 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080897283 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098571065 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082037566 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113154239 seconds)
  done (took 22.998805973 seconds)
done (took 39.735696781 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324430398 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10420162 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104550229 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103314161 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101923618 seconds)
  done (took 1.483354814 seconds)
done (took 2.204694521 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.284245158 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.209918763 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075534783 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165817356 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092535217 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17118117 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157988125 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11018519 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217696607 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.075894344 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.180005945 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07755048 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094326542 seconds)
  done (took 2.659553975 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094064347 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116205805 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082327619 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112595219 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07725303 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113535502 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093325955 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118672773 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110973287 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085750171 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095680207 seconds)
  done (took 1.819002296 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093219385 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114378302 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082736411 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111329905 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076771181 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111400293 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09367331 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117402818 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110934841 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086563627 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094535953 seconds)
  done (took 1.809604093 seconds)
done (took 7.00043362 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090262619 seconds)
  done (took 0.802402002 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.929192259 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.004952678 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11244935 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150742278 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.326632087 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.175831706 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.476719178 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.1274496 seconds)
  done (took 11.226183949 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.115258851 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.103796723 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.11501559 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085690601 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.101955934 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087067889 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102651607 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103761658 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085309465 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103485861 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086515184 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099872011 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100291188 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084120147 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101068129 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084131311 seconds)
  done (took 2.343334127 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119588184 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118717706 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10839058 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110814356 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087764299 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106854165 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106975875 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089147987 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102269502 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105018371 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091369154 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106278616 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10457328 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080152045 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107346248 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108384671 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086958441 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106787843 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108729555 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090612631 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10738248 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096454609 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087133329 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107416965 seconds)
  done (took 3.276001801 seconds)
done (took 18.366422322 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157218309 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110011436 seconds)
  done (took 0.991339694 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095565082 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114611912 seconds)
  done (took 0.937924048 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096097664 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097380091 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122724086 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110641223 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080973789 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097099049 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120446005 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080590027 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097732104 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081157547 seconds)
  done (took 1.716638636 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080869101 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111532302 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102938322 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094820187 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105882275 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095838211 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087951796 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099945176 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11179593 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07721011 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102935647 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114695679 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086179826 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.1168039 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107175622 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083740771 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102720346 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099451956 seconds)
  done (took 2.516118802 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078338795 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098360275 seconds)
  done (took 0.909526023 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080451481 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095191498 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081740751 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098083701 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095635601 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.07704253 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095954523 seconds)
  done (took 1.356575054 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.514477456 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138793507 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.25708288 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085367689 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120804532 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.30521173 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099724478 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08562882 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10420337 seconds)
  done (took 2.504160328 seconds)
done (took 11.662636889 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092063686 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117939741 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11338947 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.471501988 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107572567 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098978372 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.161633581 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.252702974 seconds)
done (took 2.153669768 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.149759905 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322670303 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113350616 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067660783 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096814824 seconds)
  done (took 1.336901612 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078941648 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101185301 seconds)
  done (took 0.918098238 seconds)
done (took 3.146572382 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078971096 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.133032647 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080400855 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099810996 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.078814773 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099828074 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.07864362 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097375279 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078782103 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095315743 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098170485 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080849131 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.097987172 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.080325422 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098194581 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078534766 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096229493 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080835526 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095929259 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077941654 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095415144 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081205677 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095868596 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078100796 seconds)
  done (took 2.92840519 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098332553 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098395154 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104702868 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087021698 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102279984 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085648229 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103827553 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098439599 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086329378 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100314995 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100850266 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084808039 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100746097 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084666473 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100120236 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10217279 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086521266 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097983381 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083220314 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102133037 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104317177 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081286408 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101516485 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086915503 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.101780831 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101193819 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08368558 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099368755 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103094809 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084878234 seconds)
  done (took 3.599233217 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084419884 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095441522 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078869598 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103465259 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078363529 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098622301 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078242245 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096697026 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079857368 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09642506 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080453268 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096044191 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079051869 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097210502 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080300596 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100109176 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109301436 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078951313 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096092169 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079518105 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100742258 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078616078 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096370958 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078404091 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095759729 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078148375 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096878236 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078685825 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096969854 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078353218 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.0999999 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082549935 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096239973 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085737012 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099480158 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078320556 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101020179 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079441988 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097048035 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095788565 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078499918 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096127478 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078671577 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103348362 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078888695 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098762906 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079213255 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098844101 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082080215 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101909981 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080431491 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097268259 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081283098 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096996305 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100529006 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.078534015 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09701401 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078504477 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097720958 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078376495 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095888517 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078694576 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098601694 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079311835 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113172704 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085935556 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096376277 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08070756 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09775624 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081527289 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098705539 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110802537 seconds)
  done (took 7.230121306 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082316333 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10746147 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080906657 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098699503 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076920693 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097491762 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100319331 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079808884 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09887995 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086560889 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097011299 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081307698 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099260315 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109587647 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079713878 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098829804 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085605063 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094406161 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079970548 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100746469 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080814021 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100557882 seconds)
  done (took 2.763917681 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206293605 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104302713 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141643329 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108152232 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083885846 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107082193 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103391277 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08764319 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103223334 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084959445 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101647944 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103645483 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083347174 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101242004 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101497703 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085543583 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103779423 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085676338 seconds)
  done (took 2.647885017 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092408115 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099300011 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103796427 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099652 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100378235 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084904396 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105820596 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109119576 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084728415 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099685149 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091275376 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10156822 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101766682 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083659482 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102679954 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082497804 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102156018 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082320684 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109964988 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105760984 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10496288 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091498421 seconds)
  done (took 2.892810625 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096079568 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101958661 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119250667 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085367811 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096956289 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081241025 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107213131 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081538057 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108657265 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100969063 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082245165 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098167609 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08831405 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099276745 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105762792 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082268502 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102521901 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082905134 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101531138 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078574835 seconds)
  done (took 2.653996041 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101878478 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101512263 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101563603 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09389024 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101768858 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083743778 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110097846 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100965415 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084284922 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127040198 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101915367 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083644043 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110897851 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107762857 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101781847 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092914357 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110563947 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110970382 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084188014 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102238653 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12738597 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083743458 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110491585 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101815279 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.195635751 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101143259 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101816767 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089749998 seconds)
  done (took 3.681034304 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080611801 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100243027 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080145128 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097739414 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080019283 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098014236 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079200519 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098348 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082577519 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097713097 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08289419 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100014363 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082418135 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102582414 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083109353 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100344206 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082195934 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097860401 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080313287 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098253517 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082460413 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100223049 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082583092 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099142174 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080206134 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.10066761 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080526688 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098444953 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082197165 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097762071 seconds)
  done (took 3.466410592 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09032661 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107796732 seconds)
  done (took 0.955755569 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078356756 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116639602 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080349996 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10505071 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105417519 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084244549 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109841534 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088268101 seconds)
  done (took 1.524208051 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097109035 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112686005 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083897669 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114152706 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112083409 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097175872 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169444989 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103424273 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088812168 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099572131 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.115182745 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082387301 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107703231 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083324876 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107914055 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08936362 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100000328 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089627546 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104357957 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09948069 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084608238 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11195079 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085690795 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09769152 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084737334 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113385534 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110830854 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085087864 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104813651 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110338374 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089676483 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095621843 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084169749 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10256486 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081187531 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111341388 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114211547 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085847908 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10975523 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084035721 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112684823 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096506398 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.0886718 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107264875 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093782686 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101652869 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083807313 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.096719671 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098786163 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086491187 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097328797 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083332663 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095838589 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090868257 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10617141 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114827733 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081800419 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103233764 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086255766 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104571418 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089847361 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104524736 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084895078 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.10226013 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108661439 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087307977 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109450682 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078564847 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09581691 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081615986 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110078544 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124233629 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09156648 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102954521 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084659262 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100486414 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104701915 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084783033 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10951982 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091846207 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101944463 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108927302 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090688729 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101961175 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085722107 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110894987 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099214373 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085545173 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098870412 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098710869 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100196181 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081061763 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.100479284 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.11048943 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086923578 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102285411 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081869297 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109854718 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077206359 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106850906 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084335602 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103161508 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111467068 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090239701 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108537193 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110160912 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090841574 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102297701 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086545406 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098689229 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084965686 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104232237 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108196334 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077193568 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10446904 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085583916 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102722763 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090358028 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100057329 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083303302 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109823865 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108937208 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082293071 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098211028 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086035736 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102502633 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087974667 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110098794 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100361924 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079428423 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096904328 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087380328 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102520274 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087838385 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107813948 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104933457 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078307339 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100779065 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088890913 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109000084 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102054082 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083815759 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105975838 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084291732 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101431102 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088999726 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104199015 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082819395 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106873372 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103796664 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079747862 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10698742 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086535069 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.10062878 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087620503 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106708392 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105154221 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085251379 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102148929 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090019994 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103675973 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083127839 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102305811 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082874761 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112055428 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104951017 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079165359 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098927323 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091962203 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100356901 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083878453 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101237015 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104385698 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084960186 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100054539 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084260162 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103917006 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096305636 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109132929 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103930305 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088938405 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111956486 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084349389 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104839753 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102024929 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085456408 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103602546 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091136303 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108019363 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107851513 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.086994774 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099071578 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089313431 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110060732 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083657294 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100000172 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082538409 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106843176 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109579613 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087891448 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103695011 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081653029 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102832816 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106530549 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086844525 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102339717 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082283337 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107831136 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083367831 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110956556 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104001805 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093846121 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106333942 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079254114 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107372602 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100537601 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089980958 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099016859 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083006464 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102233365 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085365605 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102588699 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086751199 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097091985 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091987129 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110737012 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102928117 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084102812 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103451159 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093756113 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104777239 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088123615 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106865992 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107836149 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096660135 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101869627 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087580985 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112477264 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103542285 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078265082 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109905251 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083101931 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102724448 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083269297 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100936448 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087536711 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112793221 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107545035 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077981426 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105536728 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082932099 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.102346097 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079651287 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.11011069 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10669263 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08639827 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112618795 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086386861 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103615622 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088458533 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102790846 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.1045 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085832321 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106501424 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084902083 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106093808 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083406899 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105180793 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083379808 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.102024783 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.107397172 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084495174 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103344844 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090648596 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102991151 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084884593 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106384703 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104640337 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085379355 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103777961 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084262321 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106909891 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085888451 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103897358 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087883252 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098484154 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092230624 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104064802 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111886155 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085191946 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.10053824 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.092163316 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.106144501 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109392172 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085403276 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104985286 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086165544 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10363969 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087555039 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112518507 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101586192 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093308325 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108947955 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084723343 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106961851 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084229921 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104920342 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084399938 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10563202 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104849041 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085992881 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103522986 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089364349 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10674603 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.08404395 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105601226 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104439612 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085208518 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104806987 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078998716 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102427347 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084996518 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104137868 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09206214 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104677636 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106084376 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083350191 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10530497 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083666336 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100147398 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093489411 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113726453 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104419802 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093414938 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10407454 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086814948 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114514709 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097643807 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082936508 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102284788 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083000252 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111683137 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086573601 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.11316949 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084477379 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103759324 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081855303 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106230331 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.10243122 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079353097 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101582271 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088742084 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106029437 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084369129 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105062837 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087062326 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105313461 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111737034 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084312154 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105175051 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085921348 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.101386924 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084287085 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103716874 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087915677 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105491183 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101427567 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082465458 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104273535 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086482693 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.113157273 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08538909 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106142621 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091921803 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104590154 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106935041 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089233977 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098294245 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.088589844 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103986803 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084976608 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103087374 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088904224 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108766142 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105919293 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092183811 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104134476 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086395102 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104339012 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082770009 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104454357 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104154694 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085782482 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103823451 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087289464 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113956464 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083327979 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106618758 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083866608 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.105291659 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109058122 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086446593 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106587377 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093744534 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108041189 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086607675 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111167566 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.108592736 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089002279 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105731241 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086547889 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110815978 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103190708 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093443168 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.10438905 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086119337 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.106001556 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08301382 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104255099 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084865698 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103921152 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108743273 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086453827 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103378246 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084914067 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.102887833 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087042874 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109059873 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111884015 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087687236 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107061585 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080579036 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.101679555 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086908619 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102572589 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087175785 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106985257 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109982942 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088239353 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105336099 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083911057 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111551388 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091014552 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109653456 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082728473 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110283659 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105495158 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087866726 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105987371 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085375262 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106793806 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09076522 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107330688 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.104542087 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094630963 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.109115204 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086871288 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106456004 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086046058 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104925938 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099565964 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086325741 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107104832 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093623169 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106938711 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085744381 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114626111 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.104653992 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085420543 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109272227 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085383318 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111478658 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081020974 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106034958 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106156014 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086912784 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099647272 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084280202 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102520717 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088470867 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104289283 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081070492 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114836341 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112287407 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087525564 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10401838 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084841849 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100722449 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081333678 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10447196 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087028345 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107009439 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113985717 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084720281 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104425611 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081339518 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105070266 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088980212 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108814718 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083028945 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100482048 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083660537 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108584814 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111665383 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084408124 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105314476 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089156979 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108091425 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083310244 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11037675 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081930278 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109182961 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115731087 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087104291 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106675335 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090721075 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113384009 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105930765 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08151054 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106725881 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088952107 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10588266 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.086717583 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106865596 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119258607 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089042118 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104846188 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085182188 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107941292 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08504153 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.113562584 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107079816 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087272689 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110632609 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.087962761 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115473329 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108032438 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092284677 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107066032 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088327182 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104779722 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085180885 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103973465 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084227072 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107407942 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106750081 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091100472 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114302203 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084314156 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115424444 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113192444 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090528364 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.103045401 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084469059 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104831478 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081510304 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106400097 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.0842241 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104284953 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083152894 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105361231 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105617701 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092286812 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107385474 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086738164 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.106291482 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080102463 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.107998656 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091298775 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107354794 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101835202 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086767912 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.107270587 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092282748 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110930032 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086445934 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107879758 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087564292 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107790356 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101329269 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092278888 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105111069 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088969969 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105843457 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086236223 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107478998 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089742197 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113540555 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108079339 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088456111 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118679705 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0891063 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104396862 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103732414 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093021583 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.104916284 seconds)
  done (took 58.944006056 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145653034 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079984585 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099363965 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081346296 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115850138 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102940592 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081860064 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102226385 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082850361 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10508081 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081523359 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101878351 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112106484 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128630099 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096010772 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107191492 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101191862 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082986502 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10136285 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083137733 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111681917 seconds)
  done (took 2.910281543 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103766574 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116192131 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113639627 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118430139 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08979722 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116115558 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115879899 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11798847 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101895835 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114581361 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122055061 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118542582 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093935939 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.114345176 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11378894 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096049051 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122204198 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112188536 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119776976 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097805541 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116945835 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117601541 seconds)
  done (took 3.259920521 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083922589 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103594761 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08783698 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.101046871 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.08646591 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.102235654 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.090614958 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103454948 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090089553 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.105476766 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084286979 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.105309063 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.106785376 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082129481 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.105259992 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084227598 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.155533739 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111126568 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086441392 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109462876 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.100855969 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.0886696 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102560011 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08237892 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105854447 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091333254 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107668389 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084949978 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106476073 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084911914 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107706705 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083057197 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.108825743 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.106806804 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085819276 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10476056 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086831343 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106295632 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082239582 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.103794466 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087310715 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.102398352 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087145855 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108053718 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084310806 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.104908726 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087215696 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.107732081 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.10135668 seconds)
  done (took 5.597565439 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.102438634 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164839937 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088458579 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.147991812 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123284266 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.116462033 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090680167 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144925643 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105453259 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086192346 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126379121 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123130268 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107482781 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091900558 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.11113785 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106715175 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088241369 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106553106 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.09125017 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107408233 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111353327 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093529922 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.123093444 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120811494 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111411734 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086421701 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106468083 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.112469125 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099996071 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.114013988 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112061153 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09263632 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124155556 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.113302254 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086466142 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110928014 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125416464 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.107737868 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089928704 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104484296 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089882096 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112825642 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113603161 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104807695 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10844487 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112500296 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086591735 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.104323758 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.121023173 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089979224 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116678661 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123636379 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111784262 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08771291 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113586915 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123185975 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08684034 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105552663 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.09077689 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120755261 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105179231 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091391459 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121702588 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110037086 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.115472465 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101742868 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112863022 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111758093 seconds)
  done (took 8.329169611 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092548558 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110241023 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120796075 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125093681 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094598624 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.115367166 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113668463 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.093665093 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114947745 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121394617 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115451429 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.138143798 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088727765 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118610647 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114304355 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094035371 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114656199 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114670843 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093959373 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114912377 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114691325 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123961277 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094197858 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123592339 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.145644637 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110201773 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09366844 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115020357 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124213998 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114848287 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127766143 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.095205494 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115310719 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124474157 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127168817 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094633982 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107473554 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114233997 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.094197895 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114916987 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109426559 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102738907 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115041518 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108959653 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094485059 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114969645 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123844848 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127404817 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117712781 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098889636 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.115222817 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124989108 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114155101 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094735785 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123584479 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.151464606 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124726755 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12426797 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115238002 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102216389 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124271909 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.132954273 seconds)
  done (took 7.866429375 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10659875 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113811415 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118373879 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101929047 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084633757 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112807448 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085315234 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.105996864 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.117458075 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097656323 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1216617 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113374789 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095084959 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121688275 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113820309 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114898163 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091565663 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.11365533 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116975181 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.11201857 seconds)
  done (took 2.982553969 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092392289 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125484433 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088404594 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115385298 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.111384112 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094366587 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.111543425 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11110423 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088722656 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111616815 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099904435 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.120436263 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109992893 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09421781 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.120160181 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115577873 seconds)
  done (took 2.532678477 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09507099 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118285929 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12342664 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087395403 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.107799852 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083126517 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.109886949 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.104496585 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084641432 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12514523 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088299858 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112987643 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.111469381 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086588521 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105264592 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090655645 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10506043 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085250819 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.109129118 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.123312844 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098673235 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108158989 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.109160992 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090200798 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109015663 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093707457 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109485423 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.106662613 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08698618 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.109267614 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08881402 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.117166429 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.105550902 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.086332583 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.106969856 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086441701 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10827364 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088476199 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.112558516 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.108688653 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086903651 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107965917 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08777743 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110115993 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083892049 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.110313121 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105312848 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.094770482 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10679418 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087731096 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10935937 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110772479 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.089931248 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.119556265 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091381023 seconds)
  done (took 6.416683316 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098954845 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110912684 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083262301 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106947806 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091276694 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111942797 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.112256693 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090767074 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110403665 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087508468 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111095503 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092755514 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111713856 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113418233 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091041259 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113762504 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083058522 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110178162 seconds)
  done (took 2.664412526 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090896182 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105670253 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093300967 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108953013 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087732064 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113539558 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083781594 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.108818598 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106974949 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088708467 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109535917 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090908355 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10754351 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.090521332 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109876246 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08728194 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.111990908 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108333781 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088602219 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105191521 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091487754 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10866083 seconds)
  done (took 3.028768097 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117220937 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.129380722 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.095253768 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.233775505 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103760801 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.137371203 seconds)
  done (took 1.649587847 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109303087 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123460986 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110379771 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110283347 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119023485 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111098505 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091205625 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111697502 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1222072 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104350102 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112590406 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122337411 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121371401 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099923019 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120084258 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119074563 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111854452 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090895402 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111128139 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132938914 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090816012 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122333389 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112198099 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090741111 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111945306 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121763805 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121583706 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125170398 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090311699 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122125637 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11773342 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090908157 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123192926 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126612201 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113257708 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101274206 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112147161 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13260643 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119197784 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100533876 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113131928 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118846773 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100278239 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119051265 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122845417 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112430546 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09576939 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112115051 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111389287 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139047929 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098087528 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123731944 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119364602 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123114076 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121919776 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140636791 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105470552 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121716345 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119038572 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126307703 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121245926 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098204294 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122338626 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12741956 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119408663 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122499974 seconds)
  done (took 8.395925432 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101555535 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128580778 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111801226 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125734393 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101918859 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112605709 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112282142 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090905377 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11226014 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111680847 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15716753 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09202814 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122333626 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122286821 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111372208 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091207355 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11204777 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121819444 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090521146 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140428055 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111744982 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121975367 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12099232 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100891494 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126208529 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119725701 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112887869 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091526895 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112606537 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112335498 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096892312 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113512541 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121891187 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090048152 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122174584 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111909443 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091491997 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118626556 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111853295 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119583461 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10078884 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132934866 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112947649 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112210841 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105986449 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113945807 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112358978 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090208018 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11292237 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112014021 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104928535 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127882595 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127975791 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122173121 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112774707 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092084405 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112861938 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112581193 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091701545 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119150623 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121825035 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11255321 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14018434 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091788565 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112488729 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121477412 seconds)
  done (took 8.273217492 seconds)
done (took 157.932465828 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097131186 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136291005 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100049337 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.173342294 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105539176 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118332351 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13708212 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097281766 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105650256 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087101162 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.1114209 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091546124 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17739442 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084672056 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105981989 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111012708 seconds)
  done (took 2.679857612 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199060888 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.25509295 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103661084 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107952564 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090871984 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11167223 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.109290689 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.095143605 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.114568077 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.088669194 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.113878866 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090385995 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.110654751 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.089920523 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.114919604 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092204047 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.111651793 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091391726 seconds)
  done (took 2.937002858 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111972057 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.158917075 seconds)
  done (took 1.122185623 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117731307 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179008815 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316254797 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154372959 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105723873 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125882952 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155481771 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129122796 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195923418 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123216795 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122108187 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097643484 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141268972 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11504569 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094714218 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119834669 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142702076 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093066662 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116359049 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117752746 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118920239 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108745922 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.120073622 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097122395 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184481357 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120917788 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087209863 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.112021342 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121278834 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098305864 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.118742149 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.129881398 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.101442141 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17948309 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105459032 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.181262753 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099049594 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112666819 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116549245 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09173173 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121156517 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118617609 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104368235 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11983619 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086587511 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118114885 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10452849 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085223041 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113686155 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096071901 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114150551 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112079573 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155888971 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117897638 seconds)
  done (took 7.580908065 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794352794 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155371612 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089624443 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.883829228 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137997855 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102446201 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.782439117 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13582737 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236053506 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.763917532 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138465535 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125710793 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23161107 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.236786033 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.931137944 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.309001165 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.670692413 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101539279 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150541754 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152183291 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118935231 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136340055 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12974446 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429340428 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094968869 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111711321 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116311637 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.098929057 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158210886 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12459273 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113880094 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178641395 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267619662 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.183766119 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115944653 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089064246 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111363603 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167660065 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266613009 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213659693 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18002025 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086737345 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110693601 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122373614 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110602828 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108408542 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164355511 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.194861151 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171678201 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092238732 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12038779 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119258044 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120537263 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163657519 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120461302 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286623607 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322348935 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111967105 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119572136 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103858593 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262342801 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122208058 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222389023 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11642905 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212453461 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110747834 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781653094 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189829779 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089003834 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117870669 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123055568 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097706997 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.127583319 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173456876 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.414297782 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129986108 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097606319 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117301197 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.212172861 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.131064226 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114994514 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167036551 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120617133 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103625991 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13154847 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128839221 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.176542006 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.23065574 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125848635 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119711096 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093586311 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125928042 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115413456 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212624308 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217490329 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161739404 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210714618 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122007845 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163554752 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188623898 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096944356 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193385356 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096749618 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125429383 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122035186 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216512831 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144640918 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102294174 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.118599292 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12385552 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.154078475 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.132794478 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.102736908 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.196966475 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.466763707 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.174184482 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.113799044 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.133799133 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099063905 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163504388 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117235906 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262549593 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121573774 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168226912 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119644413 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086909746 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121531538 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.168552952 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127071096 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123546505 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102661472 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118401612 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235641599 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216965859 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122389163 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221036702 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183255442 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118796625 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170825405 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121188724 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16522406 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120454855 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121294211 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094969637 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79664894 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124458102 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098069199 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115707305 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186095224 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110042025 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102192618 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124275525 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10797383 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788722783 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127254211 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120856967 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101035728 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117828658 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120496322 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095755631 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116134338 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162024225 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232148796 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121362545 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119608618 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102733185 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.180506958 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093930756 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125237257 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123887428 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124889188 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.09991856 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114882913 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123551609 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169821715 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161843418 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219953092 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.595338035 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090577503 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124982672 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228828236 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089984271 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288221624 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119217581 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223854156 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164985405 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121315374 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317888563 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165194375 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188331677 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126185577 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.17341362 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086580741 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118749021 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.169063235 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112247509 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11681595 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162877143 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124546165 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101196486 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.953174549 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111891644 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229557282 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108129941 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171734206 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093610037 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120947945 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286299857 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111403615 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106745483 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186620933 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09341494 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125056241 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.869949014 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.1030712 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122337998 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118852882 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221873576 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164018245 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118949781 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09834172 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120799786 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163106186 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209967799 seconds)
  done (took 44.283476808 seconds)
done (took 59.449785809 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278519203 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21303829 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.257173886 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167767505 seconds)
  done (took 1.862030499 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.168972292 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147046272 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119549482 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106032208 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149169464 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08467954 seconds)
  done (took 1.645996026 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.352324848 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.269402213 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237542499 seconds)
  done (took 1.734944761 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.28916838 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252927574 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.353688921 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.392629917 seconds)
  done (took 2.283024802 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208032302 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132016675 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110826118 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10395528 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.200030814 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247013158 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140116679 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201057134 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122904134 seconds)
  done (took 2.387516382 seconds)
done (took 10.788596553 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.295011946 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.192502691 seconds)
    (3/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.235600794 seconds)
    (4/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.159592455 seconds)
    (5/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.219610727 seconds)
    (6/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.119829884 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102125047 seconds)
    (8/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.226970992 seconds)
    (9/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.229367826 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123370093 seconds)
    (11/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093738447 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11799225 seconds)
    (13/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.212266317 seconds)
    (14/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.101116929 seconds)
    (15/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.227594445 seconds)
    (16/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.179983174 seconds)
    (17/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.247339631 seconds)
    (18/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.170261908 seconds)
    (19/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11702299 seconds)
    (20/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.154184361 seconds)
    (21/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.183101982 seconds)
    (22/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.217049174 seconds)
    (23/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.147270572 seconds)
    (24/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.172005213 seconds)
    (25/286) benchmarking ("sort", Float32, true)...
    done (took 0.226523578 seconds)
    (26/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096744796 seconds)
    (27/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.139826988 seconds)
    (28/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066047397 seconds)
    (29/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.090367181 seconds)
    (30/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.097791394 seconds)
    (31/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.116312768 seconds)
    (32/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.215394678 seconds)
    (33/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.114600172 seconds)
    (34/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.154098018 seconds)
    (35/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.198205315 seconds)
    (36/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.101266571 seconds)
    (37/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.172680537 seconds)
    (38/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.19670343 seconds)
    (39/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.143292285 seconds)
    (40/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.217402871 seconds)
    (41/286) benchmarking ("sort", Int64, true)...
    done (took 0.223293523 seconds)
    (42/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.128137577 seconds)
    (43/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118666504 seconds)
    (44/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089325647 seconds)
    (45/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.1194847 seconds)
    (46/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091264258 seconds)
    (47/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.155904224 seconds)
    (48/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134841433 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.086711541 seconds)
    (50/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115639027 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.110708786 seconds)
    (52/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.108185896 seconds)
    (53/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.218755349 seconds)
    (54/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.140901005 seconds)
    (55/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.164212888 seconds)
    (56/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090577982 seconds)
    (57/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11442555 seconds)
    (58/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.119521108 seconds)
    (59/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075174673 seconds)
    (60/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.155703809 seconds)
    (61/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.09039314 seconds)
    (62/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117053462 seconds)
    (63/286) benchmarking ("sort", BigInt, false)...
    done (took 0.218304962 seconds)
    (64/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.152042303 seconds)
    (65/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110996105 seconds)
    (66/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.116351459 seconds)
    (67/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.117317666 seconds)
    (68/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.148801205 seconds)
    (69/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.205067026 seconds)
    (70/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110822685 seconds)
    (71/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.076617574 seconds)
    (72/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.094271118 seconds)
    (73/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.186329723 seconds)
    (74/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.089621579 seconds)
    (75/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.169120605 seconds)
    (76/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.131792446 seconds)
    (77/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.176820804 seconds)
    (78/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.09520851 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108087205 seconds)
    (80/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.18939745 seconds)
    (81/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.068426534 seconds)
    (82/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.133060307 seconds)
    (83/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.112573849 seconds)
    (84/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092414364 seconds)
    (85/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.135805191 seconds)
    (86/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.109640859 seconds)
    (87/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067656945 seconds)
    (88/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.177471399 seconds)
    (89/286) benchmarking ("sort", Int64, false)...
    done (took 0.086641317 seconds)
    (90/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.138749276 seconds)
    (91/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065447882 seconds)
    (92/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.091270757 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.135375707 seconds)
    (94/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.086411687 seconds)
    (95/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.117041066 seconds)
    (96/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.09734311 seconds)
    (97/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.108975673 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.134599757 seconds)
    (99/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.091729205 seconds)
    (100/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116531909 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110953022 seconds)
    (102/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.179811021 seconds)
    (103/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.082804974 seconds)
    (104/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.18944659 seconds)
    (105/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.121143229 seconds)
    (106/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.09691084 seconds)
    (107/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163208599 seconds)
    (108/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066497903 seconds)
    (109/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.17127631 seconds)
    (110/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.108925732 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095405037 seconds)
    (112/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.182739503 seconds)
    (113/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124283843 seconds)
    (114/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.122573026 seconds)
    (115/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.172897921 seconds)
    (116/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067383026 seconds)
    (117/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.124081007 seconds)
    (118/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.185308338 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 0.189382558 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095027757 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117819572 seconds)
    (122/286) benchmarking ("sort", BigInt, true)...
    done (took 0.228619846 seconds)
    (123/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.118121332 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115111014 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.13234797 seconds)
    (126/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085615783 seconds)
    (127/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.089874749 seconds)
    (128/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.07635811 seconds)
    (129/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.166392455 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095872955 seconds)
    (131/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.22238908 seconds)
    (132/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.136191493 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.085292521 seconds)
    (134/286) benchmarking ("sort", Float64, false)...
    done (took 0.170977123 seconds)
    (135/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.175833369 seconds)
    (136/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093254931 seconds)
    (137/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.109866334 seconds)
    (138/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.140876676 seconds)
    (139/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.087502091 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109610492 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094419741 seconds)
    (142/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.151215378 seconds)
    (143/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.198516457 seconds)
    (144/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067610731 seconds)
    (145/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.082873686 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.109921197 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094837196 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110517387 seconds)
    (149/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.092434656 seconds)
    (150/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.090970363 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087214711 seconds)
    (152/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.108690966 seconds)
    (153/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066053797 seconds)
    (154/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066423811 seconds)
    (155/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.100314082 seconds)
    (156/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.06645409 seconds)
    (157/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065869229 seconds)
    (158/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.119023341 seconds)
    (159/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.118637656 seconds)
    (160/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.097299621 seconds)
    (161/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.120577493 seconds)
    (162/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09191835 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118742987 seconds)
    (164/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066653445 seconds)
    (165/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113537991 seconds)
    (166/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.095619136 seconds)
    (167/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.114440302 seconds)
    (168/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.174213727 seconds)
    (169/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092180269 seconds)
    (170/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.145589432 seconds)
    (171/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066571063 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.085604581 seconds)
    (173/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090551883 seconds)
    (174/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066882623 seconds)
    (175/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.117886423 seconds)
    (176/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067349122 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.107844696 seconds)
    (178/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066305821 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107887744 seconds)
    (180/286) benchmarking ("sort", Bool, true)...
    done (took 0.195551148 seconds)
    (181/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108393017 seconds)
    (182/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.12596117 seconds)
    (183/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085340216 seconds)
    (184/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.118922545 seconds)
    (185/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.112673734 seconds)
    (186/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.089644208 seconds)
    (187/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066392295 seconds)
    (188/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.111170387 seconds)
    (189/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.124655268 seconds)
    (190/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.100823459 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096289042 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.116961683 seconds)
    (193/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.16012891 seconds)
    (194/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091059881 seconds)
    (195/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134961641 seconds)
    (196/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068017194 seconds)
    (197/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067861712 seconds)
    (198/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.093315667 seconds)
    (199/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092090152 seconds)
    (200/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.066988625 seconds)
    (201/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.110520372 seconds)
    (202/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.07736337 seconds)
    (203/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.089993748 seconds)
    (204/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.082899411 seconds)
    (205/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109741447 seconds)
    (206/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075771388 seconds)
    (207/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067517186 seconds)
    (208/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.124561916 seconds)
    (209/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.158180185 seconds)
    (210/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.113831676 seconds)
    (211/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.135131089 seconds)
    (212/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092995085 seconds)
    (213/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.173843846 seconds)
    (214/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066809391 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109325218 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109760179 seconds)
    (217/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097828325 seconds)
    (218/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.300177278 seconds)
    (219/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.100336441 seconds)
    (220/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.075706813 seconds)
    (221/286) benchmarking ("sort", Float64, true)...
    done (took 0.230787983 seconds)
    (222/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.112178966 seconds)
    (223/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096676755 seconds)
    (224/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.11034333 seconds)
    (225/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067173579 seconds)
    (226/286) benchmarking ("sort", Int8, true)...
    done (took 0.219810366 seconds)
    (227/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.076336529 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110012549 seconds)
    (229/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.127514205 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086229527 seconds)
    (231/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.090245063 seconds)
    (232/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06604365 seconds)
    (233/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092812662 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.10921123 seconds)
    (235/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066610874 seconds)
    (236/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110603619 seconds)
    (237/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.126475452 seconds)
    (238/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.090620071 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.094785633 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109557361 seconds)
    (241/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.09276043 seconds)
    (242/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114848713 seconds)
    (243/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.06728283 seconds)
    (244/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111562247 seconds)
    (245/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066427817 seconds)
    (246/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123623919 seconds)
    (247/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088573304 seconds)
    (248/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.135491168 seconds)
    (249/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094420294 seconds)
    (250/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.090036469 seconds)
    (251/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066945805 seconds)
    (252/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.11426436 seconds)
    (253/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.099385283 seconds)
    (254/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.078888115 seconds)
    (255/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.090389349 seconds)
    (256/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.08656031 seconds)
    (257/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.163456887 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.120218578 seconds)
    (259/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069001219 seconds)
    (260/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066828784 seconds)
    (261/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.090707642 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084408826 seconds)
    (263/286) benchmarking ("sort", Float32, false)...
    done (took 0.172831651 seconds)
    (264/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128802467 seconds)
    (265/286) benchmarking ("sort", Int8, false)...
    done (took 0.187937015 seconds)
    (266/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093947677 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109007184 seconds)
    (268/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095243684 seconds)
    (269/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109749619 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095079819 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109272698 seconds)
    (272/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115601153 seconds)
    (273/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.06680669 seconds)
    (274/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088789911 seconds)
    (275/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112436674 seconds)
    (276/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.087753064 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115166268 seconds)
    (278/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092942402 seconds)
    (279/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.228457475 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116580754 seconds)
    (281/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066892858 seconds)
    (282/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111219591 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.0861091 seconds)
    (284/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.090999056 seconds)
    (285/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.099561574 seconds)
    (286/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.115393072 seconds)
  done (took 35.906280993 seconds)
done (took 36.786928199 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100966079 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147343238 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095662107 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135070748 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123714435 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090522841 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117199859 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097565655 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122229734 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124045271 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097687746 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093294451 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096397899 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119559152 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09622773 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137708139 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123880052 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093894299 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118279898 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085644493 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120351151 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085762275 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111404154 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069732581 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120677495 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093275603 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116442019 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120110806 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086045628 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109967972 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089533929 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117113324 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085979893 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124201889 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092312454 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118994446 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096027926 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119738334 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.11153942 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086055467 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119238888 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086383525 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11645484 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093961319 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116180776 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092258395 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118598099 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.09876314 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138706761 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114449422 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094606338 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120418074 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096495023 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.11797275 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091450581 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119412085 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091293892 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137914359 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.11956326 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091064013 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11801269 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093386162 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115789889 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094728548 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117297189 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120404461 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.096716371 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11463778 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.095952682 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115048311 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085646989 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118930555 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.088864509 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109250178 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095378187 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120053596 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084836625 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115507238 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116871758 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091613905 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109401181 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088670993 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111921263 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092152091 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111745628 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070050659 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114275663 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092534009 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109030986 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095885699 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116626293 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093645771 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111825382 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097547674 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109688757 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092180699 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111271903 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086415126 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112109897 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091316712 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109874195 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088481257 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119555732 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087831217 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116122614 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122924014 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086226905 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117960366 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085714268 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110965745 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10132003 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121074493 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086605599 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115401813 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087448436 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119338753 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087273905 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109733547 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087644169 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112595228 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092073336 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111167923 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090909616 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.117001727 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125035651 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.085964188 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113705013 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08901323 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110287737 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091449355 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110697333 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086372742 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112871031 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077428139 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113099759 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086594836 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117239634 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089417283 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120272296 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088244079 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120412758 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.090821007 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117289283 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092498808 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109791741 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073769898 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115712312 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088586777 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112416344 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086376805 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113044178 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086526089 seconds)
done (took 16.837149463 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086949652 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182916621 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149628388 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142023806 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105871328 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110690265 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121308309 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117771014 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113284382 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141778906 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.11020518 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130869549 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147091783 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085811598 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111099995 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09138015 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112414092 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101716048 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144405405 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131858163 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163134748 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086058874 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146573599 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134104982 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120371332 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113749998 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111094732 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091032391 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114902025 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102943512 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131589168 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114291486 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087428206 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132655534 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104341536 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119738554 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086318556 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11871877 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087401439 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11118458 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139324201 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133342026 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.091912395 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116752815 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091668837 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113591075 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088731497 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120037479 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097313371 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115791009 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125110643 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155118391 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090708179 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121576323 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087347332 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121200403 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121149461 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089905321 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111761587 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089859841 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111208639 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091008554 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12628579 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141167602 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091442114 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121208092 seconds)
  done (took 8.547649011 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103434732 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139313842 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104244912 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129853497 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111216735 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088282689 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112315326 seconds)
  done (took 1.726758544 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088030691 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133857728 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110608271 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135619397 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131875658 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.111306928 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123193328 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08791348 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131240694 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089091085 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133916309 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149105565 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.08945152 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119972725 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136963281 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087819068 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136510421 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088208013 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.1156556 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111106288 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11733471 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134771349 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090595765 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112874329 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10207295 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113411154 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161224493 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093043902 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114433588 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091333036 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11147179 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.149907144 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102530898 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125098441 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088001428 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129104596 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.126914818 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086940664 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125504704 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093400977 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127698166 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.08883107 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.113914007 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08628466 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.1179306 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098297312 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117170046 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.089149074 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116036901 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134868036 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.106044711 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126042355 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08824566 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117432032 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089943846 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119426881 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123346683 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089466056 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133438803 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090090552 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129393113 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106484816 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127651537 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132635052 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090838882 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126859436 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102286339 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116678052 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090096358 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117081722 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130178742 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.085747376 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114967786 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099408783 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115075877 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111917513 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137274625 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115839054 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098371087 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113274871 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088687117 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113266516 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111483373 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117570082 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088226143 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117882682 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091349753 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111976835 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086727424 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116815298 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087327945 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117032418 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117087472 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089733294 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116485048 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.104540566 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114882352 seconds)
  done (took 11.74996319 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089435228 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114086292 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091054257 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114156917 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090332259 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114511127 seconds)
  done (took 1.563621338 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11355682 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116702981 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103494264 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119280186 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154979752 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103144928 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129568207 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122813775 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107745044 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126097238 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128112106 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104750686 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135066943 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120743791 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103423701 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119713775 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103717818 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124068575 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126064467 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096536343 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135608362 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120876241 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096041657 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131121748 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117397563 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094739322 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124644147 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101863937 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126658556 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122815871 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097366684 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.11654713 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094640374 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123099317 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128947829 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095173413 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119589235 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118291467 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099471644 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117049929 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104004045 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121933123 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.1267254 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09559857 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.126579742 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.1244325 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094448298 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12677312 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.128187087 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093422468 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119211959 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094128507 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117945711 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092937551 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120620374 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123413986 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093383534 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128388796 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121006749 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095715081 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117731676 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092191185 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123598789 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117850857 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103451458 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118503138 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120263412 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096012222 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121836691 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.094682642 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118855796 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092292595 seconds)
  done (took 9.158989341 seconds)
done (took 33.683695899 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.690232759 seconds)
  done (took 1.639236165 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.832130388 seconds)
  done (took 1.782948373 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.042488331 seconds)
  done (took 18.022778015 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.490305967 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 3.415035515 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.992156991 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178397069 seconds)
  done (took 6.028772596 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.946828529 seconds)
  done (took 1.918741315 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.280823831 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234007914 seconds)
  done (took 1.472452974 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.767581744 seconds)
  done (took 1.735305293 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.360006823 seconds)
  done (took 2.317662592 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.32439681 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182889662 seconds)
  done (took 1.473058907 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.545341759 seconds)
  done (took 1.510822389 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.313502094 seconds)
  done (took 11.288096784 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265712635 seconds)
  done (took 1.250598235 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300001314 seconds)
  done (took 1.275101708 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.516353661 seconds)
  done (took 4.492705799 seconds)
done (took 57.169775797 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098347359 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125809986 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100807699 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123861155 seconds)
  done (took 1.419624026 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.099800764 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120662475 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099740031 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120167542 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126018514 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095366333 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122940209 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100194096 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119769401 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096457861 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121406664 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119701549 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097613059 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122243914 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.0929467 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.12272133 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098843453 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12130091 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12257926 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095804381 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118386902 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097540656 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124270217 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093038366 seconds)
  done (took 3.628652519 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099926007 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118568846 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095980816 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117638014 seconds)
  done (took 1.412486422 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099139258 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130761597 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105276996 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125501055 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130409926 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105385298 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116626808 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.091565998 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119704677 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.098313846 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.11521294 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138231212 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106172347 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124448811 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101154796 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113319077 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.089983849 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13109128 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12393621 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.099870006 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.116816347 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.097644108 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114733051 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.107806228 seconds)
  done (took 3.678938854 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.168697668 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.125670776 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.136978086 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094179899 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158423378 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.138499508 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.086772009 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139659762 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086778624 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130688161 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117353285 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.131604191 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.12843289 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.086668675 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114362726 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087844651 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127965203 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128099695 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09043474 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126881616 seconds)
  done (took 3.389376664 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096900364 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116568207 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086869095 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115887523 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098195337 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120586464 seconds)
  done (took 1.616285236 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090186762 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114763612 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089270622 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113272884 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093215078 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114261884 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088187079 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113975139 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090217052 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114261995 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088495648 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113048196 seconds)
  done (took 2.204651445 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.500446766 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118913998 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119799902 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090322925 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.120740995 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089221759 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128696075 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091863575 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139916856 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088466311 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115829527 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090636626 seconds)
  done (took 2.675286986 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232339518 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124470322 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278205133 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367384617 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152765209 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164173462 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278577869 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158004868 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.22191141 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148247864 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200271069 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194434244 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150331005 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21320434 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110581485 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144597376 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185519464 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245115828 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151567621 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234512951 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180830711 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166020932 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179156717 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149407514 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137292805 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170502492 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119476847 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102978153 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23166672 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17496939 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215638561 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162465063 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146371951 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205697164 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25279513 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219482197 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28154461 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134127725 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.140172329 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164733367 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258788843 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137029762 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202449261 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154046983 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130500931 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216566746 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164078785 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176062922 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.145282425 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111549028 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220653784 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23727036 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191857197 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138192119 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30154737 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149034387 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.156174936 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192755249 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25049768 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225422589 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186703121 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120161641 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186749138 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189964219 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211527597 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151672823 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180608451 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147339373 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179650101 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187655414 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188953481 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178403223 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184195486 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13932311 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169317164 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170015014 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171096531 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25550251 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210886552 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095477975 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167942514 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148803558 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133278602 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194753861 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097714025 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238980025 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143316466 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162156341 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213801887 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156980563 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15993092 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191355439 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212419148 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119471045 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110989222 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154899452 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.152777695 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174448853 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139200378 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156210559 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156358818 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.102104212 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168532451 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123830503 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182969379 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117536763 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170587545 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181806703 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126278655 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161496077 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150992748 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.122219494 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202911763 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2007426 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142386123 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131961329 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209195749 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177040949 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141756691 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173679987 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227460888 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116064373 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148802435 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225242724 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215200212 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139735888 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228438291 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154864146 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107120886 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.130827162 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179713073 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153534471 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16196783 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133441873 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182269528 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230550315 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099273381 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138608631 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192334849 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133225016 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13205041 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15417 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14658574 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.109071003 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142456838 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144412054 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174501707 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176441143 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154707272 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163415057 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151488346 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252176931 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141009983 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150031899 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147849706 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093216389 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.218675304 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198640809 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129501429 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204984799 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.167899692 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228343277 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168969216 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133565958 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177084937 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102203419 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120571666 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191710856 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166313675 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159300156 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.223869849 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19878307 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.205497517 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183464164 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166543439 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171892199 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165176931 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155581073 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.136944585 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158670159 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158288168 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095764007 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.138888905 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13284961 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146804403 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113924359 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132695792 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222049892 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170000652 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189575714 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157285654 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149261182 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180772218 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129017994 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174165707 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176453819 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147650708 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224026404 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193764035 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184838659 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143141747 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225780309 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.092720666 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124452332 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141003177 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166959215 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106377888 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135788381 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163746864 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179462725 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178324977 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196758279 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210819277 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197549974 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188992331 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.093956171 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168035828 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182666726 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176113666 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.178609871 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140175193 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149763751 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176945073 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156947957 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252772933 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170323969 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174824006 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230983969 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.12147752 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131411177 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149339652 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177649954 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153383137 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175554874 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146052925 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140306045 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159632485 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102483225 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185424486 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185038407 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162095119 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185836245 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.147735496 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209928856 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099832355 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161970975 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15904901 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163686671 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108736501 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173631946 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201387117 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147727797 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164847538 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215009067 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103025943 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306593545 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230500837 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191012224 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137194612 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154350195 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160750776 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161701267 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168090419 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178050443 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157357723 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214224584 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130452961 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135800926 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141012251 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148391177 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149927329 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103627455 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147276904 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17602189 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137097126 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183344896 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153187995 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157877535 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171234117 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149433417 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144483847 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150190123 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212390801 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211344699 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20906006 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150765061 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.176518509 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234177082 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097280225 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13252003 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132269122 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178745405 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107801948 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221143741 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.186895423 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22912568 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181323022 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177909478 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139843247 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119398562 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128444786 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193514126 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206531476 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151793619 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.146075798 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198541114 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.137150754 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130096188 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165163913 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29113251 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145105221 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195364671 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106809336 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274479084 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098575159 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130604382 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162251757 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236140552 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108166323 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178631229 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170341291 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16096842 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162820092 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149439838 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190079185 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242643967 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200360531 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207338804 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104533014 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154952231 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174239687 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219714884 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158254573 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.109232778 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231007002 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195669706 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.220277914 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.112783114 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168871317 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195645867 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128890128 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214979341 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13514453 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206684155 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133757123 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19317325 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152226593 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137031992 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175429629 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.213408656 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113696101 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21326551 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183381463 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13428937 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104375085 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195588438 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17656848 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156050049 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098487757 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207710223 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.096944028 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222951594 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230847692 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134704858 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155338912 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145374872 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134693828 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153960423 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158057089 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112549006 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163856656 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199388565 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134380944 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189126085 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230353796 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169841277 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172822924 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145293797 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691698102 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131425746 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19354894 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147762602 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233185525 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121178242 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199806383 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128904189 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193969959 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19607782 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161828048 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231837524 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191588118 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.206520145 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103279013 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156925504 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154871445 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144305913 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151784597 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168254192 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158674594 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144744639 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177190029 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163052852 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134768009 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139148229 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199534059 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14805682 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182326411 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179691939 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138025428 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17395302 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18578076 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133423343 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177774811 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237082766 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141197004 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151359203 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.105341005 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.148497724 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264026308 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125110538 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188933439 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183696002 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159095653 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166986059 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145650265 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222359579 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157095544 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186447827 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141511906 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158403628 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155563994 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137027107 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101229022 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155373926 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16661181 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149685942 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158519519 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163910272 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200059706 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094599936 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144138148 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314410418 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175708129 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214139554 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134394195 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135176661 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163157021 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14833576 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175498789 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178845645 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135647722 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108251242 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136395156 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.153586172 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111357911 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156109758 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196139689 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164648284 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236169824 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.107377723 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279398143 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140307238 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155233555 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088383001 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133624442 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150835619 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145780269 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159270108 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192110547 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26247308 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148930601 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105789974 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149776091 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126124286 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10711384 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163601998 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163055103 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205375546 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1442528 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081097224 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155169237 seconds)
  done (took 82.098018626 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163390678 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131901686 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145645917 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200839411 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17563222 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.2681891 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208771681 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253857177 seconds)
  done (took 2.618260697 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092797874 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144918796 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156424981 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132505914 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09043707 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118958031 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.34230056 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132230498 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115774417 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120079881 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173105969 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092676275 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.552406849 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090000466 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118934862 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106534418 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.090192021 seconds)
  done (took 3.734116381 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 47.786070196 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.591360142 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.104035478 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.196010631 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.822527276 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.100625723 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.721755886 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.168260159 seconds)
  done (took 61.565576299 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.113743593 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136219823 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.121978596 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.150730261 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140278226 seconds)
  done (took 1.735795325 seconds)
done (took 172.749593375 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096603014 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126827625 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096494401 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128940616 seconds)
  done (took 1.514497568 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093606266 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072464457 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101723335 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073935153 seconds)
  done (took 1.417009651 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.188011148 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.168502679 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.410913997 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070497754 seconds)
  done (took 1.588884991 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112348676 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131146011 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103693856 seconds)
  done (took 1.432922246 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106394968 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128764245 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102029533 seconds)
  done (took 1.418681947 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10400923 seconds)
  done (took 1.18628728 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106714761 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136595059 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108419996 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135153962 seconds)
  done (took 1.56815576 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097960957 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12593711 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.107431124 seconds)
  done (took 1.41125474 seconds)
done (took 12.970520595 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101253724 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.515110354 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383791902 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142956302 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723134586 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379320965 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.030890769 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14480018 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163360893 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.091524795 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137800293 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670447408 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.023500504 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.474554717 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.98010905 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376587002 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674106341 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119785801 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117929551 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092871685 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016901581 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094104926 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122681274 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09197738 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702421787 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424474468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093374596 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.373797232 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.090639623 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124744189 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38157839 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122509639 seconds)
  done (took 17.053092423 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095477646 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171908652 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09664835 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136900026 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122512123 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09624375 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123712441 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092421202 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178664864 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123254041 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109052724 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120089645 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124507785 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094118674 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14092877 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093628587 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124353567 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091502492 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119979792 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120768024 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111835022 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119465479 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093108494 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120567097 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092784407 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134198127 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121723196 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092455409 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120356956 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097348327 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12645479 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093791499 seconds)
  done (took 4.782181737 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13893136 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181959739 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127357294 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126181163 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167831749 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123598057 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198528967 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116400495 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181432544 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124151397 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139383797 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091554972 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155589243 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093287324 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141105259 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119856479 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.094586396 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121671812 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090939096 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123090229 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138469752 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092287564 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121690744 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091938544 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122242629 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10714169 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122683913 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.11960682 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092583185 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12568648 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09822572 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122720657 seconds)
  done (took 5.100908982 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096736175 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125225551 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108138257 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137149383 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.093810428 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124382448 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.095814327 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124057324 seconds)
  done (took 1.991684223 seconds)
done (took 30.011470427 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.109190248 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12581519 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105936684 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134136855 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101631729 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13247575 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090562442 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133207021 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135912255 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10080855 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138029534 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093317183 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121486722 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091463044 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13394529 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098528707 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134554437 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101405851 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13508174 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131092822 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.093908236 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132824715 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101550904 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131798116 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.102716686 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132193564 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.1366537 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098249917 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121964957 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093510501 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123307996 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.105373731 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124877918 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104146553 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125284103 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.095726702 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122807316 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092517519 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132561046 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132089359 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.0988123 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132503728 seconds)
  done (took 5.963803711 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10708297 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141527254 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104295829 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.084107865 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116128003 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079513621 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136734291 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079979664 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109779296 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106179324 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073558739 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105956499 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077690724 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101031666 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076376739 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074359972 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.10710858 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074845384 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075349945 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105193867 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.078857718 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072063629 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107457882 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077226529 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073968265 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109525072 seconds)
  done (took 3.546417244 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099139331 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132779566 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112219755 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183459461 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159170984 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098479751 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131194952 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13828899 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108640454 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119093273 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.094992918 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148661792 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10892577 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128398653 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091107022 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13664933 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134967486 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09355416 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127180904 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112021298 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137939413 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101489971 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140117474 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13216614 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092692377 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.1218551 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095896144 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134631052 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097323085 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13061822 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096667433 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124820289 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122704058 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103487294 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125689417 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093953735 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141895644 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102461555 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129767678 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091856688 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.128951732 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120658363 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.112936024 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160810251 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091368683 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129004026 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094689577 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131451094 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120669277 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110509036 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130107848 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091011989 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124641949 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090495952 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120689734 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105265125 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.122743074 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094267328 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.13058167 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125501407 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104657744 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124421687 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108516676 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12281511 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099182173 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120862002 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091862126 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121162742 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143721311 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094047942 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160773841 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095770575 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123552051 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101210484 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129278509 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127544903 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092652995 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136259087 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101326124 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124694956 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101227886 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124976036 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095153258 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.13941873 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.122751807 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.093979541 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121278007 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099428363 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122786064 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093293547 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134867494 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.090329271 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124219355 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108621177 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120323574 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092424228 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127700298 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125127389 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091194769 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133767601 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097360315 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122042812 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102098429 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121145117 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122969228 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102895317 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12538683 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091053551 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125813881 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098478874 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.121303814 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093116708 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124162721 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093048032 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131437724 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.097461335 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126154788 seconds)
  done (took 14.696402839 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226940631 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213385977 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204302207 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.29097436 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134247911 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11512599 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212335914 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15412373 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122870191 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158348823 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172746595 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180657266 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168424207 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180866346 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168390528 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092789549 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141698968 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163060567 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212868902 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.256015317 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142618547 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099977442 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.158788794 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.15878429 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136419734 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.130759299 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.118595048 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133845855 seconds)
  done (took 5.762279265 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106528057 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154484831 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097380023 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143977711 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147966866 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092182299 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127580306 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093955667 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134704863 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135058712 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092459533 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128382038 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099092807 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130834247 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121767751 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102206971 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131296266 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094991992 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125242543 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09627667 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132726587 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101426135 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127265324 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120451888 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102313813 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120465888 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086511032 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141264384 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121352924 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114563282 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120043355 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100382686 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135558486 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092622572 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122381402 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.093669587 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125128386 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094136973 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.123773117 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090085515 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120918472 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076250424 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121091249 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105182956 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128072162 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079743402 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128514519 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127172653 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.093887935 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.118862227 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095407654 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124648729 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095377324 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129225252 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095426901 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123287287 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095546033 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114615616 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100846348 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124614968 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084455481 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120240811 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097581822 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117784287 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100862137 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126978037 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.090916739 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124893712 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096585605 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128003749 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094209092 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128964019 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.08970597 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125057343 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.09449765 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127569249 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095470107 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.120881057 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120813679 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.092913015 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074150929 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122787098 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073295992 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124755088 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.090829579 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120881241 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09410608 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128556285 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136827821 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094240291 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130687643 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093391357 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121364835 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095724279 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112342098 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09562904 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139106532 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139294739 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09279171 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119911145 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106967322 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125312647 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093074868 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105613091 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10148205 seconds)
  done (took 12.849722138 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126296438 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152851093 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.093975291 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140588315 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15557929 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155831283 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100271523 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130279861 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.093749003 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141266104 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092769603 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.13055062 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092418701 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136764351 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155641283 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103704658 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124245829 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106161964 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126585939 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168657111 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110518648 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14127222 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109863464 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122501843 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098025664 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.139276596 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160319042 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106081261 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135712074 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141201387 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.106943683 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159302393 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111484744 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127342244 seconds)
  done (took 5.42420131 seconds)
done (took 49.330297151 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.187602453 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.412197023 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.190104123 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.110229593 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.221732289 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.217827896 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.201683595 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.192388841 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.774044023 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.189907549 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.424893051 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.750021051 seconds)
done (took 59.990052358 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.252099844 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.322527739 seconds)
    (2/2) benchmarking "String"...
    done (took 1.451768419 seconds)
  done (took 3.888614271 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.564629099 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.133466604 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.444683314 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.18469193 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.186307166 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.47893346 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.917342151 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.56199703 seconds)
  done (took 28.022744424 seconds)
done (took 41.845706739 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.199854248 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.20692055 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.190450009 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.166286038 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.297082753 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.215234449 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.602736328 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.295785914 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.204628623 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.166079132 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.206815752 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.197854124 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.188008899 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.596662136 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.199552123 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.19195454 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.250798371 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.785022148 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.594612061 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.197048291 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.204584408 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.260523929 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.195363347 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.192733287 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.252243885 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.186802297 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.198488099 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.190040752 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.793142952 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.185925723 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.202481285 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.738946531 seconds)
  done (took 190.66948312 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.188091293 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.337367286 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.423799176 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.248133766 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.514215589 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.391254906 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.33758917 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.715152922 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.211266962 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.206902286 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.427877539 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.193799037 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.503186023 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.166042176 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.219185942 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.256365396 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.396136124 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.507040601 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.231232687 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.351776797 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.207330553 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.642455187 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.558507688 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.386123277 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.225305571 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.235188753 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.195430279 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.202893385 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.382822829 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.335523577 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.195069226 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.229278171 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.822557789 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.048207054 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.191067015 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.199417548 seconds)
  done (took 150.000859271 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.18893524 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.19033781 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.190189946 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.22388066 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.190838637 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.782842124 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.776671237 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.70217052 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.611371636 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.631136408 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.467707768 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.189760457 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285060394 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.203213974 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.189882825 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.190251532 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.206531593 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.2325253 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.195365046 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.189694664 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.782241095 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.207471636 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.191470399 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.368296822 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.20689689 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.223153057 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.581504747 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.289541239 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.207831566 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226772738 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.52338228 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.242697718 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191975386 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.610893989 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.536727824 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306315247 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192602587 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224485964 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.191730615 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.472419012 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.192363056 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.192812417 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.195546875 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.895897021 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.197164809 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.786474719 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.198034909 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.190192592 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.197094638 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.193656234 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.387724308 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.950953017 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.214741958 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.192585403 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.195513985 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.193944861 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193314565 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.226475551 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.395694476 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.29066268 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.212614569 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.196889326 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226588292 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.193093247 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.317610784 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211566734 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.399288899 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.252385262 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.41617401 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.784035449 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198623322 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292651133 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31579088 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.194708414 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.19345827 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.196491108 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.194647373 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.305302456 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.194229802 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.621989667 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.194284021 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.375169776 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.211497804 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.639231189 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.298042625 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.193905342 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.194529568 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.630279794 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.199835511 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.196609875 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.963532712 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293090678 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.194248631 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.194550323 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196572757 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.623743387 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.777615279 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.482257153 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.199056424 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.416176885 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.199568023 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.64039433 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.764339822 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.865181784 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.19647679 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307841949 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.375106743 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.21343401 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.195651699 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.639419496 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.200535035 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.254753006 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.196062269 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.594883902 seconds)
  done (took 365.259597018 seconds)
done (took 707.04866082 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.796850202 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.78652974 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.895786979 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.773629 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.743943266 seconds)
  done (took 10.120708247 seconds)
done (took 11.246860975 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.386613194 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.382846858 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257924676 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.391833744 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.22933672 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.40136058 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.364148944 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.217498683 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.302864267 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.279689016 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.299941006 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.250455067 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232148694 seconds)
  done (took 18.122336243 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.52197505 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.547937219 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267313204 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.510099729 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241909155 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519020772 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.405272176 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.410857499 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.41100496 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231853144 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.212422376 seconds)
  done (took 16.405993777 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517679632 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.532780029 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.270350828 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.532278583 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244436896 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.530901705 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407076027 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.422182588 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.427682662 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.232806181 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.209672416 seconds)
  done (took 16.454348948 seconds)
done (took 52.110284936 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.207443149 seconds)
  done (took 2.333115437 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.243945805 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.408815738 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.229524257 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.2139196 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.208582215 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.208603139 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.213683026 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.208827587 seconds)
  done (took 11.063232299 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.204106458 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.204775835 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.206388682 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.207866931 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.206933113 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.207842149 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.206648655 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.207494122 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.206210768 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.207143558 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.207632436 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.205378914 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.208678596 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.205234084 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.20585861 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.206303364 seconds)
  done (took 20.432703191 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.20720301 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.20517549 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.204770022 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.205698534 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.208808729 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.206342404 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.205596734 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.206577851 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.206078872 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.205362797 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.206986015 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.205852974 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.21100117 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.205237893 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.206719745 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.207321845 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.206491242 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.206888414 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.210788064 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.205899885 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.209295665 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.206274324 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.208192401 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.20732749 seconds)
  done (took 30.096179056 seconds)
done (took 65.053199655 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.850091549 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.878039943 seconds)
  done (took 6.858623964 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.210549243 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.207877434 seconds)
  done (took 3.549803447 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.209309287 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.20931279 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.210761795 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.212304834 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.209527855 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.209984072 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.209733579 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.209042431 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.209444529 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.209348506 seconds)
  done (took 13.228887842 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.212369897 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.209495476 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.20729936 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.20980246 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.210975584 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.207172501 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.210074911 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.210181406 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.211579493 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.209398526 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.21130517 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.208021693 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.211694952 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.208357945 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.21151772 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.208938024 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.211118614 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.20909819 seconds)
  done (took 22.909433702 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.211648551 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.211118239 seconds)
  done (took 3.554129592 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.208880149 seconds)
    (2/7) benchmarking "second"...
    done (took 1.208636922 seconds)
    (3/7) benchmarking "month"...
    done (took 1.209730013 seconds)
    (4/7) benchmarking "year"...
    done (took 1.208609022 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.208695676 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.208547678 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.208373372 seconds)
  done (took 9.592732413 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.21359774 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.393590011 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.477766763 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.821121229 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.21250623 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.215878884 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.084916669 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.2151867 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.216824264 seconds)
  done (took 13.983732495 seconds)
done (took 74.807977782 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.243053147 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.226505141 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.543480075 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.218578431 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.232138023 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.509090678 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.247560382 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.333421347 seconds)
done (took 37.68779344 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.209415174 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.191617807 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.003714934 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.206329809 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.247669556 seconds)
  done (took 18.783315569 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.283662583 seconds)
    (2/2) benchmarking "read"...
    done (took 1.547153983 seconds)
  done (took 4.965028481 seconds)
done (took 31.091768964 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213522835 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.213771399 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.213281862 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.213633932 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.210711406 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.213650674 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.211509565 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.211685026 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.211646426 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.210557442 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.213734787 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.213698532 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.213862179 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.214221486 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213278151 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212266345 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211417723 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213491634 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.21136199 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211482812 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211266651 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214101318 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.211579877 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.211770778 seconds)
  done (took 30.234936792 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.214353134 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.213289099 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.215095929 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.214861916 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.212769633 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.215287683 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.21429844 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.212205923 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.214214802 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.214883526 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21297908 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.213376809 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.216204504 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.212353559 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21623352 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.213668835 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.215010646 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213139247 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216547378 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.214340503 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.217031919 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213727089 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.214677398 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214965073 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.214079329 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214720068 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.215230103 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.215244612 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216470878 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.215098747 seconds)
  done (took 37.571630487 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.221489006 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.223640927 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.218121455 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.217345271 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.217983689 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.217341333 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.216595753 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.217319101 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.217499269 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.217402179 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.219124447 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.216905918 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.216797048 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.217113829 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.21695133 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.217006282 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.21722647 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.217044983 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.219202298 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.216802124 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.217228267 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.217906537 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.217020832 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.216848569 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.217400198 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.218297676 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.218320459 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.218515718 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.219090421 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.218037699 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.219020133 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.217769918 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.218019993 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.21829825 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.21872581 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.22278342 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.223256752 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.225859721 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.219071831 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.219026574 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.218777456 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.218476172 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.217480818 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.22213455 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.21808152 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.218486797 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.218829041 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.21858471 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.218268793 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.218778381 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.220059404 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.22121777 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.219272386 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.219113335 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.219244054 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.220305194 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.220019862 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.219562812 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.219491468 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.221673198 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.219664231 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.220214807 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.220886381 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.22013075 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.220560643 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.219595318 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.221360456 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.222829287 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.21962635 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.220318668 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.221157441 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.220583106 seconds)
  done (took 88.911876813 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.221794468 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.217844795 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.218560109 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.219277607 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217718747 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.221192595 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.218762416 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222071811 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217336492 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.220764858 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221250148 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.222144981 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218581534 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.221215666 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221614084 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.218837674 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.220703851 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219846623 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.222095857 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.224493788 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222426017 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.218197216 seconds)
  done (took 27.987746407 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221559583 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.224248209 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.218717859 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.222431898 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.220506747 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221934425 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.22200899 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225077729 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221190266 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21962665 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22054061 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222029055 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219457827 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221621434 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219317005 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.222278456 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222783624 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220564036 seconds)
  done (took 23.127927349 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.220659818 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.22066639 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.226414741 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.220931814 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.220970762 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223346274 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220130578 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223175505 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.222930132 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.220709765 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.225110187 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223019695 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.22362236 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222179272 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224037681 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.221589658 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.223729651 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221131195 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224521627 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221785457 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.221485255 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224579729 seconds)
  done (took 28.039315215 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225545062 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.224631427 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.221154857 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.222910331 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.221683326 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.224660244 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.224899342 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.221741374 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.225549803 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.223253527 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222034642 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.225186813 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.225724663 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.224472099 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.222537192 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22338045 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.224858087 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.22390091 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22542858 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.222232497 seconds)
  done (took 25.619366188 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.226924478 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.227100174 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.227427381 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.227422824 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227244807 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.227229189 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.227947334 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.231427883 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.228202988 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.228501968 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.22788308 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.228152865 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.227142855 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.227472839 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.228674499 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229667548 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2275038 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.228662916 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.227532163 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228308261 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.227832346 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228278027 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.228956431 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.229575733 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.228544817 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.228503698 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.229447264 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.228897058 seconds)
  done (took 35.538497502 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22931145 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228016773 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.224994535 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.226387145 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.225913396 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.226143695 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.225430697 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.226067246 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.228416314 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.225726372 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.229216949 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.230317547 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.228826574 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.22963831 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.228719136 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.228849057 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229165836 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.226511419 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226395621 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228068598 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.228637764 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229627215 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.228801483 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.227252669 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227796123 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.229827625 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226264783 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.228491188 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229476193 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.227037876 seconds)
  done (took 37.982763248 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.24795947 seconds)
    (2/2) benchmarking "in"...
    done (took 1.248761866 seconds)
  done (took 3.64464684 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.228201915 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230054088 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.229881828 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.226957938 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229031934 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.229865839 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.231092729 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228255963 seconds)
  done (took 10.981931043 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.229981615 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.230971223 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.230310482 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.230356629 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.230716196 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.230743673 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238702202 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.250967611 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.231589184 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.23231527 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.238334718 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.23788391 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.23320567 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.231855669 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.231970632 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.233418388 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.231595034 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.232107641 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.232700797 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.233118823 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232559745 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234367386 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234335756 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.229428709 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.233797851 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.243655056 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.256829943 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.232165769 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.232536619 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.234999942 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.231794252 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.229617263 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.232936519 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.233431898 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.233635083 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.232969322 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242045446 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252331142 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.240365175 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254583325 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234246272 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.232971287 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.234184756 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.233588038 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234488217 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.233178991 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.23345283 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.230715172 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.232991239 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.237917835 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.239034084 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.232696222 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.230865458 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.2362623 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.235164406 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239764113 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.252931041 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.237851598 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.243772311 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.245281181 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.267815852 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.260901614 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.236324148 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.23479087 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245850713 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.261957186 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243285111 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.252469393 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.232721787 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.235629368 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.241690144 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269344224 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.263279512 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.238716043 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236446169 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.236167851 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23601395 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234959378 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243707487 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.25851213 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.235528711 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236958022 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.247028285 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.259314361 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.236848106 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.236775991 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.237323573 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.236985299 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.236873719 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247538189 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.257277714 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.237059044 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.236104003 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.237266728 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.238580085 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.239165949 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.236485303 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238202113 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.235608888 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.238401595 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237861962 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.241056048 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.245289281 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237919228 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.237403374 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.244269042 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.2592611 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23754632 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.243492434 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.237239195 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237411042 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.240066194 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.24286167 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.235443223 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.241031306 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.247257928 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.237937609 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.239128471 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.237963521 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.238767656 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246988425 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.264280608 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.238572026 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.238653846 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.244061558 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.250541937 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238920325 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.248454495 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.23858363 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.236249394 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.237251225 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.240674781 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.239472524 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.239379563 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239571904 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240107933 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.237580472 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.240416669 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.240003618 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.240727236 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.240777845 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.240267403 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.240040139 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.241690528 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.241148186 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.240363185 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.244696456 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.259895168 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.241834424 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.241161954 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.238007079 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240364209 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.240348158 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.240620889 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.240207711 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241206646 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.239643978 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.241584165 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241208872 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.241566173 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240972955 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.242592766 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245291403 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.242872271 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.244053745 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.240886798 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.239845349 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.242184873 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.242788802 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.241992947 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.242360829 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.240874833 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.245799104 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.250503446 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.242706187 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.242625216 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.244607756 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.242697804 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243283563 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243077561 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.246125283 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.251080022 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.242764359 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.248939117 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.263266153 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243089841 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.244387615 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.242010788 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.242808562 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243664423 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.246212578 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.251822358 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255010164 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269013611 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.243700901 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.247224249 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.243100317 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.248156465 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.247259677 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.243098455 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.24331173 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243415431 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243384427 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244178469 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.244605459 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.244219267 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.244075148 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.244226811 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.243757472 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.245214758 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244462761 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.244694277 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24424168 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.241408485 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244404771 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244379924 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.243738131 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.242033725 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.243781903 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.244457825 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.245448189 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.244801442 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.250555922 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.242628726 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246761203 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245999088 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.24543744 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.24378123 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.246161846 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247021304 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.244855057 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252189806 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.26513622 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.246340198 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251658629 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.265916679 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.245667346 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.247604066 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.246806941 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.244780316 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.248888312 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.254910059 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.24746438 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.246774649 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.246821836 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246439655 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246473059 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.251852823 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.264008604 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.246731305 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.247659852 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.248901799 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.243849737 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.248369561 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.247542444 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.247255417 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248696801 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247618287 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.247495626 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248890249 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.247902923 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.247947795 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.248427043 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25055142 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.256017018 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.251143592 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.247007208 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.250053181 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.248686343 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.252234536 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.248465024 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.248698366 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.247763524 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261014541 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.277373749 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254829089 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.269509519 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.249498655 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254157966 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.269731948 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.252111622 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250375691 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249984042 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.248251011 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.248092426 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.247064836 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249028172 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.249915886 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.249920183 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.250605567 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.25364196 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.249576729 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.2493172 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.249464454 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.250551242 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.250048821 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.249746722 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.250158127 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.251628728 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251784012 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.249599191 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.250111777 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256786202 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270657331 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.251776979 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.250601002 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.250206202 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.249827485 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.251576401 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.250422331 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.254192013 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.258172247 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.253687206 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.258457229 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.25181532 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260939485 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.250966052 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.255697719 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.259883224 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.24875649 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.250505954 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.251221052 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.252762894 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258169804 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.272302362 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.252742142 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.256420498 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25224323 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.251655087 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.253184436 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.25338392 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25295517 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.252965983 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259992672 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.273927059 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.254987903 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254633097 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.24960513 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.252610219 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.254068847 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.251365121 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255721898 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.252379748 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.253611302 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.253050525 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.253408413 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.254016646 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.2545039 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.25360904 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.251155386 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.254633805 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261396685 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.276637785 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258289803 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.255234931 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.260484669 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274724253 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260658814 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.275255558 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.25389718 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.254443483 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.254953452 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.255891803 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.253164178 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.25540249 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.254438241 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.255536881 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.259255356 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.254564142 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.256277341 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.254404732 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.25454906 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.253640231 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264722828 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278713576 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.255995575 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258135118 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.252771371 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.256583397 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.259270608 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.255363948 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.254727234 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.258826934 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26530527 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262426151 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.255631458 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.255478699 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255584705 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257055271 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.254356448 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.255839127 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.25631382 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.256337865 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.256161704 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.256357687 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260049054 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.256454365 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.257525995 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258041909 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.257507618 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.266118171 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.277625833 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.257827472 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258274969 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.259255561 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.257657959 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.257442031 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.257264931 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25705226 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257284254 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.258200833 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263880716 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.263353382 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.259192304 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.25733686 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.259169067 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.256943441 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.259401487 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259266694 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.258268249 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259391944 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.259213269 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.2572627 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.259245815 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.257202981 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.259118577 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.259464065 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258979946 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.261854787 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.265868549 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258637169 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.256621761 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.258683706 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260131553 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.258359875 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.258552463 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.265502471 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28339727 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.269625521 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.2675701 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.263381883 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.259284686 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262511253 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.268164841 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.258099013 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.259504112 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.259881342 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.25971925 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.26053798 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.262269205 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260571688 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.265491829 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.281338696 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.25995063 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.269044014 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.279983013 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259594048 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.261593123 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.264337214 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.260017993 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.258442638 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.260869534 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.259624246 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268240196 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.281514458 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261304732 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261188508 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.260497155 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.262660261 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264573837 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260417714 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.260920049 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.258429529 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.261877267 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261824494 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261937088 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.259593045 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.260480312 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.261197156 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.264761433 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.268676974 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.25916675 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263082223 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.262676243 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.261877209 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262777113 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262621201 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.259469922 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.26093228 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.261924229 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262873626 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.262486128 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.264797607 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.262401172 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.265185044 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.264741148 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263874469 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26612175 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.272812457 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.271363991 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.261113122 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.263031086 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.263265023 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.264916559 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263337111 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.26254845 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262834178 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.263099751 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.265228856 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263067739 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.26310185 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.26590544 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279226013 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.284011753 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263286181 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.264169462 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265448738 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.263439043 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.261859421 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.264145438 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.266753278 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.267284443 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.271535501 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.264183769 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26978057 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285219482 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.264220727 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.268281778 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.267941574 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.271842603 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.266755188 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264434557 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.265091234 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.269512487 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.279928848 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264861004 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276007514 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295173867 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.286052703 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.264419394 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.266467327 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263880226 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.265687962 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.26680013 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.265872485 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.265155945 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266588034 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.265641963 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.267463196 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27048884 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.266004935 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.267930451 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.265835893 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.26547297 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.267344244 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.265009719 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.266514925 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.266619085 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.267461989 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.267647976 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.267992935 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.267312119 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279897146 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.294493179 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.268924385 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.26908114 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.265528242 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.269969934 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.271149676 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279036648 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.275067922 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.267803821 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.26675844 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.269003893 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267042066 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.267567644 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.269185499 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.267042763 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267957448 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.266238541 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.280031805 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.295903905 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.273336727 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.268022731 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.269338725 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.268582552 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268014189 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268049195 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269237265 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.268145721 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.271009243 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.272641852 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.268326186 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.269329663 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.272047212 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.277075531 seconds)
  done (took 748.016397902 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.267420994 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266729505 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265500522 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266421261 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266320347 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267179024 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267474726 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.267304046 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.267403798 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.267815566 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.267792797 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2682313 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.267165376 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.268190103 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267355166 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.267623596 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266687126 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.267225653 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267807355 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26943969 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.267752706 seconds)
  done (took 27.8008926 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.271056931 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.267769407 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.268099531 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.27040359 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268619548 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.271913379 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.268175115 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270500623 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.271763787 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267946217 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.270894881 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271408243 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.269613852 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.267990897 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268220922 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.272096747 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.273076697 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2685356 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.272808808 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.270334184 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.271505567 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.269434121 seconds)
  done (took 29.129418462 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.271643572 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.272233758 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.270917433 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.270055081 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.272416717 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.270362306 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.27226501 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.27183518 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.271962335 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.271995448 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.271515649 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.272798963 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.278660742 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.277674949 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.273508615 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.272664176 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.419022775 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.274219748 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.2735783 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.273275225 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.269628375 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.277114429 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.292087775 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.270451401 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.271006505 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.273329463 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.273550725 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.274280981 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.27376092 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.274976931 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.277272468 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.272953818 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.272130898 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.275850151 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.272612331 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.274782479 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.277546095 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.274715444 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.271154656 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.274115173 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.283578753 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.29447451 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.274436859 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.279615811 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.297322957 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.274192677 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.278180548 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.280845544 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.272101187 seconds)
  done (took 63.819092837 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.275315914 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.275355649 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.272501947 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.2754954 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.276175923 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.275194284 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.275582222 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.274855582 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.272772244 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.272745843 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.277015783 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.274508313 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.273414231 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.276254273 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.276866733 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.274083837 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.273937761 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.274325421 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.273985335 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.273974312 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.273033732 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.278444339 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.277442329 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.27517605 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.27677222 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.273926928 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.275352582 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.276992584 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.273950361 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.274235695 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.277751597 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.27674424 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.276794968 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.274413836 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.274608959 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.27747153 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.277289405 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.27380405 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.277488618 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.275568201 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.278588383 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.278014741 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.277502799 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.278444841 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.275811164 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.275599567 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.276083038 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.275628203 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.276251212 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.278589959 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.278168295 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.275340544 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.277892014 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.275726377 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.279647789 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.278718093 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.276229664 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.275754794 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.278684131 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.276526093 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.275824201 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.279520602 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.277208491 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.279473568 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.279531259 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.276981558 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.276806618 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.279212549 seconds)
  done (took 87.971288164 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278889559 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.279205613 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278766869 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278273919 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278980724 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.278487081 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279211768 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.279699989 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279113478 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.278977952 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.279301586 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.279292597 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.279913785 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.280391828 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.280176018 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.279577772 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.279268044 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278901157 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.280143053 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279229485 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.279281338 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279583286 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.279626533 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279221382 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.280820233 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280985726 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.279705926 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.280897095 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280773148 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279791376 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281919276 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.280438751 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.281590136 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.281070284 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.282039909 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.281031044 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.2807885 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280406605 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.281068583 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.2811671 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280912093 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281864 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281165607 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.282335523 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280966849 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.282775552 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.282178083 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.282310765 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.281520247 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.282105698 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.281490774 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281792274 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282082065 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.282887234 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.282027526 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.283182263 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282340547 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281981862 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282700679 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.283241804 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283584373 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.283197118 seconds)
  done (took 80.602918536 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283197713 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.283664564 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.280738982 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.280572797 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.283095805 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.280567379 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.282722537 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.282930845 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.283453224 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.283342513 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284063802 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28138959 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280766113 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284087067 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.28091463 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281481751 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280747165 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.281891224 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28413683 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.281744224 seconds)
  done (took 26.844036497 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.282513103 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.285160354 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.281650227 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281701294 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.284852813 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.282722521 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.285060553 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285092435 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281738265 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284798038 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285163784 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.285950133 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282160086 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282626482 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.285145748 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.282852032 seconds)
  done (took 21.738444535 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.282530753 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.284787241 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.284965688 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.285176236 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.28342906 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.283300285 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.285901639 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.282784071 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.283209577 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.287658734 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.286016916 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.286732008 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.284781906 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.285254272 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.283725934 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.286096882 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.282433705 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.283602537 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.285847739 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.286170628 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.28543739 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.283974151 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.287346186 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.286413598 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.284784094 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.284834407 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.284827063 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.28434042 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.284356873 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.287605792 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.284738815 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.285762423 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.28486247 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.285003254 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.286266673 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.284219426 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.287355134 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.288591871 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.287718663 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.287400493 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.288030683 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.285211567 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.287258088 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.287052356 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.285614546 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.287746301 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.28386613 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.285555817 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.285387496 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.285948604 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.288220063 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.28845485 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.287268378 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.288542694 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.287873275 seconds)
  done (took 71.91388613 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288867492 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288401127 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.284656446 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.289821994 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.28956319 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.2871389 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.288195684 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.289335108 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286491779 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.289703648 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287305677 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.289169976 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286860291 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289277948 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288320748 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28999659 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.286925528 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28827342 seconds)
  done (took 24.391085701 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.287288307 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.288135397 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.28980199 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.287167813 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.288366214 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.29053501 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287224646 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.28986879 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290434723 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.288403309 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288178712 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.290699688 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29087223 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.291448469 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.289278421 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288452718 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.290983826 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290865825 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.289702227 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2878864 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.291959659 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292088241 seconds)
  done (took 29.574857504 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.289541422 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.28995442 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.289605525 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.306734262 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.309421079 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.313024524 seconds)
  done (took 9.003630255 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298846036 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291855251 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290374469 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292117341 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292534878 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289522358 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290382212 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288695724 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292161463 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290498358 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289089244 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292786501 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291749836 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289762443 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291631637 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292985502 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290163409 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290487922 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291970301 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293328728 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291124647 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292389464 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291074142 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291090713 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290231121 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290442487 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293450778 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2918673 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290672756 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293245405 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294391075 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2916571 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295166957 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29180068 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295065831 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293804008 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292380553 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293752704 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294785927 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291755586 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293995388 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295010253 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293726186 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292077893 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294898926 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292150851 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291817017 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293049546 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29267331 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2948807 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294350189 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290600867 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294323045 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294450107 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294974135 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29548268 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293621517 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291814128 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294689563 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293211263 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292393646 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296143037 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292435218 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294117287 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29583837 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293347849 seconds)
  done (took 86.548054801 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294137136 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292500552 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293361353 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294839164 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292766061 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29389994 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293338027 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294093438 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292905847 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293955416 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29683813 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294019439 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293921369 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29394208 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294402664 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294529926 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294039524 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294651745 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294198709 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297746793 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294711868 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295669563 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294880961 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294612919 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294215078 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297592184 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294497975 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294777496 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294215803 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29421764 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294133041 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294961406 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294956224 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.296019712 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295236657 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295261526 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295396142 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294783091 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295715695 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298095022 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295522307 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297886723 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296022082 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296572306 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296316419 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296109322 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297085856 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295498505 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296867811 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296650517 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295036365 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297274301 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296662364 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296314935 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29617961 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295289178 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29694624 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296458885 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296054566 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29934213 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297657188 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296905459 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30019726 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296148826 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29705843 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297983859 seconds)
  done (took 86.715130257 seconds)
done (took 1744.843839248 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.46151812 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.415515609 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.297383407 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.302176506 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.298718139 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.298487027 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.300053892 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.299636877 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.299125568 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.298749741 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.298613994 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.498328391 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.297153416 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.298241506 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.298116993 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.39273175 seconds)
  done (took 42.568706864 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.329003438 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.305146882 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.428477119 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.329611835 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.329143372 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.505121556 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.367836812 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.308706023 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.489979129 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.350283647 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.990110362 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.329521678 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.30416048 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.503085589 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.324798486 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.507247864 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.576860967 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.000845763 seconds)
  done (took 30.495526234 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.803802571 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.337549699 seconds)
  done (took 9.356450416 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.324457858 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.303631998 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.305194041 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.303419769 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.295228772 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.295637331 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.303175848 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.296330592 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.348319205 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.445750543 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.307304979 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.313661371 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.32629404 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.305260722 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.301809934 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.342189209 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.482423267 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.304092486 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.301693386 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.310499757 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.30427527 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.403192857 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.349978493 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.303034461 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.443254856 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.360506574 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.312502024 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.312419059 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.459573061 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.30435331 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.304928062 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.305515976 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.306831558 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.924796707 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.768007837 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.322319692 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.332077992 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.314604746 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.303129974 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.449370838 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.307955106 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.312020175 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.298361424 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.781671756 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.452781815 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.434954323 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.607429301 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.326590914 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.30848499 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.373687756 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.312923768 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.307672337 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.338504532 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.092552189 seconds)
  done (took 110.883004775 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.34877068 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.68973851 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.469566744 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.321956362 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.965126274 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.981986811 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.323374638 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.624605466 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.378621574 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.30018042 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.600068368 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.849238186 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.327648216 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.306190162 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.972836299 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.37155412 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.309893395 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.065848283 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.32062144 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.305073711 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.818629485 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.3010196 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.335035766 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.463953314 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.341139161 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.784651409 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.839390919 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.622538257 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.322105758 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.302115442 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.798968232 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.321641935 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.373985468 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.303011679 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.576782168 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.68852776 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.683121416 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.324358895 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.308247011 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.30677689 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.338335297 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.779786543 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.68908763 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.330492917 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.302453724 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.784555694 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.320241641 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.307513735 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.311017642 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509982601 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.998541904 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.302535167 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.820196407 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.303338868 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.675303785 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.334435973 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.36018572 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.815023692 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321362948 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.32135604 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.320667818 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.305431133 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.304691862 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307550808 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.302854013 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.67813536 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.674514032 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.306892296 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.676967231 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.807196359 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.322172369 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.85393607 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.239627733 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.31743367 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.406691742 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.313146752 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.875712626 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.824427268 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.351588919 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.303712933 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.66419607 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.3279534 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.600143808 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.322112385 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.306151406 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.829098827 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.313897334 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.361297741 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.304406242 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.335749168 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.930456538 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.305860854 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.585794805 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.350745125 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.305328328 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.306308576 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.325870921 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.312333935 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.306277285 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.306971073 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.85710621 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.324996505 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.447609005 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.331519439 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306519968 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.30625062 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.307148059 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.308253403 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.530181979 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.875223492 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.336343706 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.30685776 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.318386776 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.310483305 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.469131236 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.312935947 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.642637659 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.325819932 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322281922 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.316518256 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.028957927 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.369407701 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307304528 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.329346523 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.218284134 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.518516216 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.327751556 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.307400718 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.310469429 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.328599691 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.637636169 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.328168323 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.334695059 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.308304971 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039659636 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.355368636 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.323891028 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.658494134 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.316051723 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.309553205 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.309737362 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307656855 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.619268068 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.588009538 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.583911523 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.309248133 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.331042515 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.033763116 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.366267096 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.449200807 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.330992831 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.343756847 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509011923 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.77483753 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.310029544 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.97215343 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.309347615 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.529292556 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.309953626 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.613138579 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.823491427 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.328687406 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.317688224 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.038838247 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.054375256 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.012096949 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.310744527 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.600339091 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.278348032 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.791951601 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.310605652 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.311253376 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.74288712 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.313338561 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.310785537 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.309040239 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.310970268 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.468249101 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.485717995 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.479686306 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.318554143 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.788362135 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.351213176 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310923993 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.330457211 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.311221008 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.658377437 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.374094017 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.313489215 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.344012583 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.312050466 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.315889789 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.809441416 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.28229401 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.321184883 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.465634607 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.969968835 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.330289029 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.311348537 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.034477479 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.616475458 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.850764941 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.393302579 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.648421963 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.335846156 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.352311457 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.916317036 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.393184293 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.811963109 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.332840331 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.314531705 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.925956598 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.332893179 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.67265369 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.315045404 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.312363683 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.886537716 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.331598897 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.316092383 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.643139485 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.340028111 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.56760355 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.313538519 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.328667422 seconds)
  done (took 1107.614813326 seconds)
done (took 1302.132754281 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.313071338 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.319574518 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.302281602 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.318508945 seconds)
  done (took 26.486502527 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.323821198 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.319845067 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.322049443 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.31988826 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.324023083 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.321201159 seconds)
  done (took 9.165326579 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.510410015 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.320207715 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.320491654 seconds)
  done (took 19.385261134 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.541584812 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.718694532 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.709193159 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.673597037 seconds)
  done (took 10.878013573 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.322543941 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.321453638 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.322079834 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.324928026 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.326089489 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.327855017 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.32524436 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.325031219 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.327352551 seconds)
  done (took 13.155549459 seconds)
done (took 80.307435944 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.299065413 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.041174141 seconds)
    (3/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.628970948 seconds)
    (4/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.408142163 seconds)
    (5/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.300326635 seconds)
    (6/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.444577156 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.584402598 seconds)
    (8/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.442745447 seconds)
    (9/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.29758007 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.376688083 seconds)
    (11/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.343211178 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.343263607 seconds)
    (13/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.297592378 seconds)
    (14/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.428380471 seconds)
    (15/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.297122297 seconds)
    (16/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.317304916 seconds)
    (17/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.354490138 seconds)
    (18/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.316292171 seconds)
    (19/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.364369835 seconds)
    (20/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.989484498 seconds)
    (21/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.647100732 seconds)
    (22/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.821657669 seconds)
    (23/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.5961086 seconds)
    (24/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.906120845 seconds)
    (25/286) benchmarking ("sort", Float32, true)...
    done (took 6.318763477 seconds)
    (26/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.344521934 seconds)
    (27/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.317443271 seconds)
    (28/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.590297855 seconds)
    (29/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.872819884 seconds)
    (30/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.323124745 seconds)
    (31/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.1591336 seconds)
    (32/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.301263914 seconds)
    (33/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.360858247 seconds)
    (34/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.083174532 seconds)
    (35/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.318801164 seconds)
    (36/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.322788523 seconds)
    (37/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.768387952 seconds)
    (38/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.300241371 seconds)
    (39/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.220403014 seconds)
    (40/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.302140581 seconds)
    (41/286) benchmarking ("sort", Int64, true)...
    done (took 6.318879944 seconds)
    (42/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.215706549 seconds)
    (43/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.319812607 seconds)
    (44/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.393537972 seconds)
    (45/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.449834702 seconds)
    (46/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.857147665 seconds)
    (47/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.04967242 seconds)
    (48/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.353192723 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.319636863 seconds)
    (50/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.359142731 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.742656506 seconds)
    (52/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.875455323 seconds)
    (53/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.185733652 seconds)
    (54/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.402636467 seconds)
    (55/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.299691591 seconds)
    (56/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.300204678 seconds)
    (57/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.346946429 seconds)
    (58/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.430018919 seconds)
    (59/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.874377986 seconds)
    (60/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.270006844 seconds)
    (61/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.443996944 seconds)
    (62/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.581741527 seconds)
    (63/286) benchmarking ("sort", BigInt, false)...
    done (took 6.320696231 seconds)
    (64/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.722684137 seconds)
    (65/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.35617563 seconds)
    (66/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.382810556 seconds)
    (67/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.406253794 seconds)
    (68/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.302633183 seconds)
    (69/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.208885903 seconds)
    (70/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.399973063 seconds)
    (71/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.229574898 seconds)
    (72/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.610770186 seconds)
    (73/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.319180813 seconds)
    (74/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.328290353 seconds)
    (75/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.103840554 seconds)
    (76/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.352346423 seconds)
    (77/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.01661156 seconds)
    (78/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.330105161 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.218069251 seconds)
    (80/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.020305316 seconds)
    (81/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.300993659 seconds)
    (82/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.71545528 seconds)
    (83/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.232294994 seconds)
    (84/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.149262427 seconds)
    (85/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.010176757 seconds)
    (86/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.323118667 seconds)
    (87/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.332592998 seconds)
    (88/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.259181383 seconds)
    (89/286) benchmarking ("sort", Int64, false)...
    done (took 5.599742733 seconds)
    (90/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.336991431 seconds)
    (91/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.304572073 seconds)
    (92/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.32136789 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.340366436 seconds)
    (94/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.381124908 seconds)
    (95/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.335050061 seconds)
    (96/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.322551742 seconds)
    (97/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.323054309 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.031238228 seconds)
    (99/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.348862244 seconds)
    (100/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.348814145 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.273443314 seconds)
    (102/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.415463158 seconds)
    (103/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.087777976 seconds)
    (104/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.303536234 seconds)
    (105/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.353439761 seconds)
    (106/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.336828189 seconds)
    (107/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.330069723 seconds)
    (108/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.302998153 seconds)
    (109/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.301257149 seconds)
    (110/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.341035104 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.523393785 seconds)
    (112/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.439776811 seconds)
    (113/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.774009731 seconds)
    (114/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.306707159 seconds)
    (115/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.769688707 seconds)
    (116/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.974170774 seconds)
    (117/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.501312225 seconds)
    (118/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.567205092 seconds)
    (119/286) benchmarking ("sort", Bool, false)...
    done (took 1.865687006 seconds)
    (120/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.365686372 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.583054916 seconds)
    (122/286) benchmarking ("sort", BigInt, true)...
    done (took 6.330943905 seconds)
    (123/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.517763009 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.211440893 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.613280491 seconds)
    (126/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.426055984 seconds)
    (127/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.34567805 seconds)
    (128/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.828653573 seconds)
    (129/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.321506078 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.429025653 seconds)
    (131/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.826156059 seconds)
    (132/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.021913007 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.55062995 seconds)
    (134/286) benchmarking ("sort", Float64, false)...
    done (took 5.770226596 seconds)
    (135/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.928409777 seconds)
    (136/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.468541183 seconds)
    (137/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.341119608 seconds)
    (138/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.005828855 seconds)
    (139/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.351035513 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.230546515 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.357433907 seconds)
    (142/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.70887473 seconds)
    (143/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.306565482 seconds)
    (144/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.305764044 seconds)
    (145/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.44458851 seconds)
    (146/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.368316391 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.354956396 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.325364616 seconds)
    (149/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.18418409 seconds)
    (150/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.855158441 seconds)
    (151/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.328278062 seconds)
    (152/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.409841744 seconds)
    (153/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.86242227 seconds)
    (154/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.312486507 seconds)
    (155/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.536108594 seconds)
    (156/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.638387038 seconds)
    (157/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.612353644 seconds)
    (158/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.412649668 seconds)
    (159/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.437373198 seconds)
    (160/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.326611401 seconds)
    (161/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.353221175 seconds)
    (162/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.344225915 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.693622813 seconds)
    (164/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.324815058 seconds)
    (165/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.414983404 seconds)
    (166/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.411995745 seconds)
    (167/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.34331209 seconds)
    (168/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.346327419 seconds)
    (169/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.353321034 seconds)
    (170/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.00708708 seconds)
    (171/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.64830042 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.783511896 seconds)
    (173/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.341056565 seconds)
    (174/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.309660067 seconds)
    (175/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.36926121 seconds)
    (176/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.018205242 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.75262603 seconds)
    (178/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.353710961 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.374103787 seconds)
    (180/286) benchmarking ("sort", Bool, true)...
    done (took 5.44963913 seconds)
    (181/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.404593372 seconds)
    (182/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.958135365 seconds)
    (183/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.211889013 seconds)
    (184/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.328086805 seconds)
    (185/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.909469509 seconds)
    (186/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.307874447 seconds)
    (187/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.308910279 seconds)
    (188/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.379001679 seconds)
    (189/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.224488754 seconds)
    (190/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.325807666 seconds)
    (191/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.963044195 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.537171011 seconds)
    (193/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.347272476 seconds)
    (194/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.861715452 seconds)
    (195/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.329419498 seconds)
    (196/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.385450406 seconds)
    (197/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.369226038 seconds)
    (198/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.332135147 seconds)
    (199/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.351946916 seconds)
    (200/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.733982712 seconds)
    (201/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.474263091 seconds)
    (202/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.825080161 seconds)
    (203/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.341269087 seconds)
    (204/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.32151936 seconds)
    (205/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.371328038 seconds)
    (206/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.986232506 seconds)
    (207/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.333400187 seconds)
    (208/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.090336295 seconds)
    (209/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.44696705 seconds)
    (210/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.206700288 seconds)
    (211/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.229065626 seconds)
    (212/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.376236902 seconds)
    (213/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.309049411 seconds)
    (214/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.328377935 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.752656526 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.150296265 seconds)
    (217/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.437778209 seconds)
    (218/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.757613813 seconds)
    (219/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.751933627 seconds)
    (220/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.709318535 seconds)
    (221/286) benchmarking ("sort", Float64, true)...
    done (took 6.330286493 seconds)
    (222/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.474676858 seconds)
    (223/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.414864234 seconds)
    (224/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.346111162 seconds)
    (225/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.575236424 seconds)
    (226/286) benchmarking ("sort", Int8, true)...
    done (took 6.350128102 seconds)
    (227/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.174943837 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.556391963 seconds)
    (229/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.799321841 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.325962871 seconds)
    (231/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.321715152 seconds)
    (232/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.11589645 seconds)
    (233/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.377006427 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.699916823 seconds)
    (235/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.429554405 seconds)
    (236/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.435022699 seconds)
    (237/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.706929747 seconds)
    (238/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.393792406 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.734094847 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.014392916 seconds)
    (241/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.416659628 seconds)
    (242/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.845588828 seconds)
    (243/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.230049651 seconds)
    (244/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.401053669 seconds)
    (245/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.312163895 seconds)
    (246/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.797362994 seconds)
    (247/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.416878467 seconds)
    (248/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.914959262 seconds)
    (249/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.358324739 seconds)
    (250/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.021298429 seconds)
    (251/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.431011313 seconds)
    (252/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.416200158 seconds)
    (253/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.072674121 seconds)
    (254/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.332364922 seconds)
    (255/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.575243634 seconds)
    (256/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.845844874 seconds)
    (257/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.354329511 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.42484186 seconds)
    (259/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.321676361 seconds)
    (260/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.316836804 seconds)
    (261/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.549625181 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.43577391 seconds)
    (263/286) benchmarking ("sort", Float32, false)...
    done (took 5.374128907 seconds)
    (264/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.017883403 seconds)
    (265/286) benchmarking ("sort", Int8, false)...
    done (took 4.359277193 seconds)
    (266/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.472629996 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.445088163 seconds)
    (268/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.359404422 seconds)
    (269/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.168379041 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.167855236 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.976542293 seconds)
    (272/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.360084674 seconds)
    (273/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.523621623 seconds)
    (274/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.45330399 seconds)
    (275/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.397060291 seconds)
    (276/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.434656949 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.375920654 seconds)
    (278/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.360304186 seconds)
    (279/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.33556598 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.35801966 seconds)
    (281/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.314068459 seconds)
    (282/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.341503342 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.279357521 seconds)
    (284/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.149766435 seconds)
    (285/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.840710331 seconds)
    (286/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.393885363 seconds)
  done (took 948.054751363 seconds)
done (took 949.291709016 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.372847184 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365140162 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.34958585 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.371789403 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.459474326 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.372185211 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.361748083 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.352446518 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.397421124 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.398355433 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.347028145 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.370215138 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.349196228 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.348525669 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.349037865 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363000428 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.480341323 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.348417934 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.365665409 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.361352459 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.364238446 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.346393555 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.399827012 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.371796811 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.35513053 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.353229179 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.35201076 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.367766906 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.460671109 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.352033369 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.353676516 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.360129152 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.534215194 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.354845332 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.345113954 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.368737234 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.361675239 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.361874818 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.355988324 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.381494968 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.999248338 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.373111352 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.350592323 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.353009038 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.352923581 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.357579727 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.350367951 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.357217495 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363638462 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365477062 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.019264494 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.390224995 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.353720855 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.351583391 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.363974962 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.350256964 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.35665997 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369123742 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.370628286 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368441022 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.525924325 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.36315458 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.355629291 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.3670554 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.357265647 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.060868479 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.374878768 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.357484367 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.007494909 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.384864278 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.063275055 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.384852013 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.355863645 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.366553652 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.383584369 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.543156792 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.354737527 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.353811856 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.359407732 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.351252162 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.365172778 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36497255 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.35887026 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.355542917 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367486175 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.376872838 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.365950897 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.353899416 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.364182337 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.372263799 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.360640947 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.364705643 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.358615206 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.349969962 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.364507607 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.35937412 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.357048804 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.356137503 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.360637024 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.367150171 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.006652999 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.398043566 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.352453391 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.352032645 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.356211015 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.367977865 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.92982861 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.372647218 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.378974869 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.403005831 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.35733308 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.531515882 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.364172403 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372450243 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.365923896 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.359118243 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.352600112 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.536037764 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.953084983 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.394973136 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.357345254 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.353687514 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373695707 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.359670293 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.354119691 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.493111585 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.359659333 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372071455 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.477471761 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.370137638 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.388548569 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.354481817 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.361884195 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.380764654 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.375643717 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.388481352 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.361632378 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373772088 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.372010207 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.354544196 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.366602227 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.368967785 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.360587655 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.366642818 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.3522232 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.380196282 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371464637 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371596654 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.381351589 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.478606605 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.357069672 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.479965562 seconds)
done (took 231.406705317 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.414672703 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.35215958 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.43767362 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.351432474 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.454923163 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.454718025 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.348772892 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.349828248 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.350259785 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.732391675 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.349827026 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.352084176 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.345613104 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.350153845 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.436121558 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.352522626 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.349651693 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.694766265 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.353115231 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.423939707 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.353357439 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.350803142 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.352438608 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.733720493 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.353249726 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.349909628 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.424313785 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.353094956 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.701930984 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.349496639 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.352653327 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.699964718 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.443091854 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.370262884 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.364828781 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.360917767 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.45685989 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.374415218 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.435749884 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.435746028 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.438874544 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.393268657 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.349053937 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.346718419 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.355717867 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.354191067 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.350641367 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.381967814 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.352394238 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.352382234 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.697995576 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.36438107 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.362826872 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.352076659 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.352882462 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.374995658 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.354089843 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.354827738 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.44448505 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.356339036 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.417755826 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.736234735 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.737114015 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.355567352 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.353313471 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.35375761 seconds)
  done (took 149.779404102 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.4213279 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.429044387 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.472399075 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.374345386 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.40442446 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.479635722 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.375944772 seconds)
  done (took 11.221901349 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.361473852 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.357848692 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.406160096 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.405150612 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.35800291 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.533431871 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357194334 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.36735493 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.355184383 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.408834528 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.360452351 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.357452324 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.36362373 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.352048392 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.405297542 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.368402543 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.472633686 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.358313165 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.359339026 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.50831628 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355608323 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.365905562 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.410545369 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.368813169 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.360236262 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.362933636 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.170474882 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.358687378 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355975541 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.357896113 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356268976 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.435566976 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.359064082 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.356073959 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355685065 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.473810606 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.358300366 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356166432 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.359401315 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.356236297 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.358579877 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.35916384 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.359006923 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.357281226 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.358270712 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.381549089 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.359194147 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.359823934 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.359218297 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.360212467 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.411155864 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.36063969 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.356706787 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.357262112 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.415622252 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366052548 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.36050423 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.356468693 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.360311567 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.358062453 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.509582311 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.408004332 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.360375307 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.407502264 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360908576 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.361136133 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.363191225 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.360391859 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.41514912 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.361798293 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.408410717 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.358475584 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.549425477 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.384910513 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.36284157 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.36391758 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.3639359 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.360872017 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.359428453 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.367216176 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.363963927 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.361875327 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.366280073 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.358320753 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359193975 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.530523119 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.470638589 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.364578655 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.371801316 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.366624327 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.357960739 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.414203197 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.36126087 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.357905657 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.418907286 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.472053203 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.410078619 seconds)
  done (took 156.12749124 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.362706844 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.364937193 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.359107671 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.374218471 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.361364381 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.357752197 seconds)
  done (took 9.44692356 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.360064063 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.359445097 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.358450637 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.35780785 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.361990707 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.357980071 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.3567543 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359702062 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.361227657 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.357966731 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.358886383 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.363167945 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.358385579 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.358825527 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.358685197 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.35793059 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.358546608 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.355117872 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.357996906 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361260669 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.450846324 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.357515985 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.356012636 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.359749151 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.364017764 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.3634167 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.364329143 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.357855486 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.357585013 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.364623634 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.378974298 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.358741827 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.359210547 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.367459734 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.361490654 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.357862719 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362393129 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.360496109 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355224537 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.359653593 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.359842422 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358150972 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.358666269 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.35993762 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.360487578 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.365016802 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.365528745 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.365901669 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.359307157 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.360357994 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.360045852 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.359714345 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.360216902 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.361058203 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.362012513 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382538542 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.364823311 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.360462866 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.35957967 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.360383973 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.362398048 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.359391932 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.361040658 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.364055997 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.366945852 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.362617745 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.36171459 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.364563027 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360679262 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.360837711 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.362156671 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.357367371 seconds)
  done (took 100.354449603 seconds)
done (took 428.194186043 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.380406292 seconds)
  done (took 7.648515752 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.477124309 seconds)
  done (took 7.748274796 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.281333874 seconds)
  done (took 23.554701191 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.383188163 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 8.392896541 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.387322187 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.376878355 seconds)
  done (took 28.810891125 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.889119821 seconds)
  done (took 8.157556444 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.368798113 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.354221649 seconds)
  done (took 13.994862838 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.455268348 seconds)
  done (took 7.725399412 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.411405376 seconds)
  done (took 7.684424219 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.369840422 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.373463112 seconds)
  done (took 14.029771239 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.338800889 seconds)
  done (took 7.608413621 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.234282317 seconds)
  done (took 12.505338375 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.356462328 seconds)
  done (took 7.629176756 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.4309763 seconds)
  done (took 7.701305798 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.967969604 seconds)
  done (took 10.238453772 seconds)
done (took 166.308550622 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.353720826 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.36223962 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.355178886 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.354893861 seconds)
  done (took 26.697313798 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.395624283 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.394810438 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.397498963 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.406075679 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.398588069 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.395741822 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.387625406 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.387824547 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.407323625 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.398809591 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.397419517 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.39875121 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.395651025 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.388160074 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.397247584 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.397447497 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.407317817 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.398401554 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.389614722 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.398270098 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.364291924 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.407235558 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.402328342 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.364608381 seconds)
  done (took 34.748928035 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.883587144 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.434139149 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.516364494 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.416123 seconds)
  done (took 7.522132732 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.415487575 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.417255111 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.433890043 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.467540582 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.495731969 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.427776494 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.386185052 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.385565568 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.371692822 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.418584012 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.493089232 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.433231693 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.502177555 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.364840977 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.578649819 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.364829509 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.365312006 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.41711566 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.468791832 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.482809875 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.366889583 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.418022556 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.421078772 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.43343644 seconds)
  done (took 35.602516698 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.365622798 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.382856462 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.364714769 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.362801194 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.371839214 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.365423736 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.364138443 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.366347921 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.364876873 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.370534574 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.366366669 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.377030875 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.36344066 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.364607027 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.369549379 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.365269866 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.371315341 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.364651326 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.365382034 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.371155501 seconds)
  done (took 28.632804882 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.358386993 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.212739839 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.710623948 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.6160948 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.360251444 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.361900996 seconds)
  done (took 27.894385202 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.441920432 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.599340436 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.364169336 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.756190457 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.846334039 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.383119777 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.365133304 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.621132459 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.971087414 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.972817905 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.428533783 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.437093743 seconds)
  done (took 20.463194249 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.360712705 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.358936246 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.360288428 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.392242104 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.423147492 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.386215645 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.371785131 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.357409675 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.429443834 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.446663589 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.385866231 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.426139834 seconds)
  done (took 37.972946811 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446005746 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.406882948 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.379226737 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.437431502 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.089410359 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571971005 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.423597667 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.806941094 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.367096788 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633776127 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360897541 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452549643 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.615127772 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360876146 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363957644 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.444929386 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609725877 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890802846 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366739938 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.709342673 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391466944 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360405318 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.721687266 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.400371461 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572442721 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.502785237 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.621956711 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.138666301 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686636422 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375472119 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371869204 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361465693 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636422199 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050700946 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478762856 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373097477 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365043912 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.923538153 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.355698348 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.692485754 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381787769 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.367218352 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372605024 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363664748 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.29769462 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368552041 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.807166033 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.37645798 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.074658326 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.363830062 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375155734 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458110082 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.366224607 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.936363522 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388208608 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.375852595 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.367265531 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461100098 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95644153 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.191182922 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373127641 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.298709466 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385074991 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.62312723 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075924225 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.391712557 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.36759515 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375086492 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298727456 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.742644203 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387188458 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50262938 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.387652285 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.02648122 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15996791 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.400922803 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.301739122 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939238288 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374346847 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.303334328 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593792882 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.142907373 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3003724 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.32020326 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.299010321 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134871758 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377130185 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.829990362 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391876944 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.82876875 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.383150965 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384485579 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389191302 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.589192641 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.245533763 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363946388 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.374006036 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486563517 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387842677 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.809637887 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307745403 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.370072149 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621248222 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.577866952 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381086869 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.457812136 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599864378 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374687202 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.381498486 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.369857421 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.377618416 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.001532109 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401381619 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.199442504 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388956921 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.144862985 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172972158 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37158093 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.393852285 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.367689125 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630895842 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.192902973 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.254413247 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43406853 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368879412 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367826523 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.726017372 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.964590105 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.250786402 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.364070291 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381685423 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.378522891 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.368786817 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326593967 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.379314915 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368388947 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.174536633 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.593887041 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378678923 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643504018 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303305577 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507143766 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385908455 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.592701176 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.696508366 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.397784912 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629570604 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368037776 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388536332 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399605096 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392172988 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469982363 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391382333 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.37247193 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.624259697 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.373508581 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.374220781 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.724142428 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.158931399 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374440793 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.375898575 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369314754 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993476303 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362603479 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37698436 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.262821293 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.383407851 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438743785 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375222712 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.380231682 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.347181319 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389011561 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.375716663 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.366239168 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61176413 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38240175 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.645795989 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452034436 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.577380906 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.00953519 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40690069 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.304417186 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.081679255 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.064839257 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373456432 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.558885631 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375090015 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382556696 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386915013 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.372304813 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.014774959 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395439476 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.63783267 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.383345626 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381650265 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.376142897 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37242562 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.344828174 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.221287676 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381099072 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.40067965 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516562423 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.386107225 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.30615431 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.889287599 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377018111 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373338528 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.14982041 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406344457 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.626894634 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867546222 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632320759 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376561953 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388855437 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.821847772 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.410977606 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.375959008 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372574283 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390871865 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.377376036 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381425535 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.384119277 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.725648105 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.750969491 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941495078 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196663651 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989140726 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419349885 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.379675256 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.285336903 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.812516214 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31079168 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.033357583 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577584186 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.835784522 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334017029 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584814147 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.660885352 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212656072 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386290128 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601742281 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395362218 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.381302815 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391643167 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586520156 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409034884 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.383645161 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.308642212 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.673039274 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615352548 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390922093 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457714217 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815895066 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383397367 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.158751535 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.435174352 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.797189142 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.582963487 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.927313552 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.774832187 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385231252 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394381667 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871117384 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382617819 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.902100766 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039722843 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.411156306 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.590666464 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318975427 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.386405427 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.387820146 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.373463601 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.817786225 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.381420169 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.636202331 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389018444 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31126841 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.377040018 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975527086 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.255762586 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.383797024 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37766659 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155015786 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378895013 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69998466 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.378084703 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.314423423 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398833707 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.312466325 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3122791 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.072059919 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38036338 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347257837 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896769593 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.378857175 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39819837 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384370017 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229984342 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633746095 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.392262346 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.998740299 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62381613 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399320292 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402610389 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.38202629 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385032794 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.363693194 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.261821174 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.614657929 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429673355 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628898444 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.431158213 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.281037995 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.38434954 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091657204 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.261566302 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.39171177 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658773443 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.112168663 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.388036023 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186801933 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426284655 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385859829 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.405977881 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388469724 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404034177 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471129791 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392534801 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.390667441 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.391854112 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.562192421 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385575814 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406294924 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.392993474 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473912525 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.225474298 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.359530273 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.158105316 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018648117 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223954466 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.050104673 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418601891 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379892059 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38948278 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316378748 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533163213 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.908505681 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656668938 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499788902 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.388699215 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407616041 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380682227 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404297992 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597209935 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65605017 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.352373214 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382344706 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.176878759 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.276954889 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393084787 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.593864886 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927591603 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978836369 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511179278 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387615032 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.830077615 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662450612 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.475140755 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382063246 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977607724 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.388210009 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.807145058 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.414313381 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39034777 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535071209 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391642551 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077890442 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.414073518 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.539806812 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.156508405 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.672075124 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643304118 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.903583043 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.396453332 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016485151 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.177098665 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651719768 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453546072 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393800836 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.499493128 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530533356 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.382360001 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.289512377 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384297287 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233996816 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.093524433 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.393985965 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014028827 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665281137 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.388214586 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.382745396 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413550456 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.39467552 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.609367748 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150363181 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615185922 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397348443 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387465919 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.958218725 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012932347 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416402195 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318428629 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.388293679 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648786543 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.640197044 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408390957 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.838564327 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.097097153 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971001432 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.361603957 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40742118 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391900494 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.139028079 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013467311 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.388377 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936102179 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.050260751 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393761967 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666079002 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.391755304 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397348476 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663002869 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.390462461 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.389776832 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404251282 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.010161753 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248382287 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.398471224 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.77108597 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.330255889 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.615668811 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401200728 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32734932 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387656338 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.574794811 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.391277385 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507728702 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399630883 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.394586005 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387847031 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.149570475 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679431644 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.393883654 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.376625566 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.376552224 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.411014928 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486745455 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631239201 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395900793 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.858847663 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.741042186 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.645323099 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.40519389 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.371890831 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.392814785 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38948788 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.115726567 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.410749426 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408823921 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987652984 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.402814152 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.400511355 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394412117 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.605929283 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602513474 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.389682208 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.426260277 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401905955 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406470682 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.289829507 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.16377451 seconds)
  done (took 1656.795698971 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.443755668 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.447209918 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.434560338 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.441697854 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.417654801 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.408438766 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.411162178 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.46787063 seconds)
  done (took 52.775228405 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.393582468 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.546869031 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.423259111 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.390454488 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.404428389 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.406584989 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.878905069 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.419013997 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.398945548 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.400474182 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.392015872 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.405038627 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.084234722 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.400476248 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.403726654 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.376246549 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.399647865 seconds)
  done (took 66.436074958 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 52.777472004 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.352898463 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.841214824 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.444805495 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.711995467 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.397296411 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.783013228 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.432767835 seconds)
  done (took 101.046666329 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.408963492 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.409888375 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.411074079 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.410437601 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.410678538 seconds)
  done (took 8.357508504 seconds)
done (took 2106.220059662 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.396426623 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.399941969 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.397064741 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.399838678 seconds)
  done (took 6.898401649 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.374279049 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.100392236 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.379186488 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.39771995 seconds)
  done (took 18.555920126 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.417149346 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.410488662 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.15779211 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.084619656 seconds)
  done (took 5.549515601 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.145586583 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.158407702 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.139840799 seconds)
  done (took 7.749118795 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.392536738 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.400302981 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.399524261 seconds)
  done (took 20.498271872 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.696310921 seconds)
  done (took 3.003504569 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.539425519 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.589903232 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.70907728 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.73152941 seconds)
  done (took 7.877264218 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.778960732 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.765287352 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.584970789 seconds)
  done (took 6.435570224 seconds)
done (took 90.701837177 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.476960305 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.777799559 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.608273565 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.446855443 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.627218941 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.60801421 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.585678284 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.411711602 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.955455719 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.944456873 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.489889695 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.626812433 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.535642196 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.77844025 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.535361325 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.399838891 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.630770309 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.530897535 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.134407253 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.328455184 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.587042367 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.085608193 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.318967435 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.347732877 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.639025497 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.558549593 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.667200158 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.398247496 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.308875322 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.92683365 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.557362111 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.410315245 seconds)
  done (took 196.546076591 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.408372868 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.395407868 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.396906579 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.415810929 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.412001037 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.400291369 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.397641959 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.398321309 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.424200451 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.408532034 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.402259208 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.39638154 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.396380964 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.412771216 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.396234067 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.396047759 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.395502058 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.408963736 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.396658169 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.411385884 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.397259642 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.403982943 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.395938214 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.413750234 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.414651692 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.398120335 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.417231155 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.398080208 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.417668187 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.414030333 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.399387506 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.400032799 seconds)
  done (took 206.24746003 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.397377964 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.397475775 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.418461118 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.416540012 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.396372355 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.397499678 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.416546868 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.416740724 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.414784812 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.430158213 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.397415479 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.415837256 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.416150906 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.417859781 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.399085873 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.416261213 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.42724989 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.397358417 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.416858477 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.397906942 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.417393975 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.415877116 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.418436508 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.416946761 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.398531637 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.398913428 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.397752914 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.421991248 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.39915683 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.399902504 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.400232901 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.401876022 seconds)
  done (took 206.402783274 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.601950253 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.406918549 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.408094556 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.359548469 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.407754103 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.408449868 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.401171318 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.597601188 seconds)
  done (took 14.903449077 seconds)
done (took 625.409168832 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.793705173 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.501185839 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.612677522 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.428064714 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.2310823 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.44697151 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.427764722 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.608577325 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.362897202 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.615879472 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.733777987 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.444251187 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.885900237 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.426665856 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.691334188 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.532118746 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.309885294 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.438010491 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.755626191 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.985466649 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.700603498 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.914903896 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.629699051 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.348562637 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.903975679 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.916788231 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.187386953 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.30114406 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.446886236 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.764691266 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.214525144 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.454308332 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.495074879 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.494299299 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.551733727 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.528925054 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.420755476 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.491874439 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.634524492 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.683462752 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.000698088 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.18890218 seconds)
  done (took 95.818969667 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.392700057 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.39220046 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.391947876 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.392200677 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.393350898 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.392348493 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.392025008 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.391734341 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.392837824 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.393020539 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.391340518 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.395041484 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.395464562 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.394584729 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.393302537 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.393660105 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.394046411 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.394992441 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.394316255 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.392702674 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.393840978 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.392790092 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.393954726 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.392892458 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.394675317 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.394298189 seconds)
  done (took 37.545293482 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.411266961 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.664262572 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.840152104 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.419072137 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.412640033 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.416101807 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.497408447 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.413094787 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.414876163 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.416001801 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.588400436 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.41541632 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.449790127 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.869421112 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.416269839 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.413709526 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.413025421 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.41344582 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.674942593 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.422589528 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.520610553 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.414457756 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.498211382 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.424317789 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.437557267 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.413231163 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.419515426 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.981873967 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.435152493 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.589115732 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.28494714 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.497571964 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.931830485 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.877711548 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.292249804 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.41994748 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.415613529 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.593417075 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.415906652 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.415482795 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.501966084 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.421736931 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.850378712 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.083122539 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.434409711 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.416927195 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.004545916 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.6170461 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.690637995 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.427220642 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.877243133 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.417871611 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.418438861 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.417462196 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.681622736 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.423059074 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.415995902 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.001273741 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.444564387 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.501449717 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.417988446 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.416217642 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.686232889 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.418828251 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.674823249 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.421104099 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.42500449 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.437989528 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.853721675 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.418370262 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.108372074 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.435436737 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.418616973 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.592648995 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.670974136 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.039449691 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.444744312 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.692137542 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.951413243 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.518098752 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.422234138 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.972494004 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.522443585 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.422262037 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.420748038 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.418545597 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.418755077 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.463810161 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.499586836 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.047614952 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.119029661 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.025539281 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.524217684 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.431441053 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.419186493 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.998483935 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.439292832 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.418490328 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.848509968 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.107094751 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.437615226 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.427518457 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.111029801 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.440203093 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.50621469 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.425168412 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.863004296 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.420378399 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.465856114 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.420160987 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.42638304 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.443531926 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.505291967 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.423667119 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.42128348 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.081974057 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.619639884 seconds)
  done (took 187.04872176 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.414431121 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.429700743 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.411965086 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.413613026 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.413381691 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.4219386 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.413385524 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.412386651 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.419747612 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.411538465 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.413665463 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.413569847 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.415650238 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.440405305 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.425264741 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.421490592 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.027027085 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.415746987 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.414539658 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.413264395 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.235063416 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.420077197 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.415877303 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.414443324 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.415228821 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.41548869 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.443975684 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.41755069 seconds)
  done (took 154.46632087 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.422051901 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.033074429 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.441166234 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.565528243 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.445195114 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.420383009 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.564910696 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.486671899 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.442338246 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.421502291 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.421394397 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.759310627 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.426779179 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.977990367 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.634109044 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.587290057 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.980393638 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.443184487 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.421802835 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.421735358 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.566650501 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.427710275 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.748557328 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.030816167 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.444131612 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.030887282 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.407003088 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.424202027 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.422698355 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.034353911 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.441493147 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.750382899 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.506777486 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.487262277 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.053293913 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.997081994 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.997303554 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.582503684 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.424855933 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.422227185 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.422572738 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.407546928 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.034291849 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.444956568 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.425665489 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.024426549 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.445418785 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.426001961 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.430498355 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.422554748 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.488367661 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.508743174 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.773481242 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.041037522 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.525840325 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.436455421 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.565855235 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.819144213 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.427543315 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.980632594 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.408566279 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.041416235 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.44612099 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.409161658 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.426010245 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.430379417 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.588030874 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.568596626 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.980828483 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.445594255 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.981377683 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.607089947 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.424724435 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.424106931 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.428415837 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.041908607 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.002604582 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.607687187 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.57251538 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.639778909 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.411319474 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.425835941 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.41191354 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.51088278 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.427272613 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.045035072 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.002922369 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.44772307 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.429570776 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.42881974 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.428657241 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.619385467 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.062397191 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.529681437 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.972997198 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.775843838 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.757640981 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.428790095 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.491411471 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.445406343 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.759561716 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.429542938 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.489028498 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.88642001 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.758030626 seconds)
  done (took 170.749321922 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.683678837 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.73437185 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.52268814 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.581317763 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.045189487 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.011328022 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.784069396 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.577065053 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.544311887 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.697741425 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.641368781 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.515096197 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.655199331 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.511381562 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.197641098 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.524432396 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.543937561 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.584637049 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.588341717 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.490718165 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.131886126 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.728541454 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.624623882 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.393142326 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.526660261 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.266940739 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.010604413 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.99198638 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.609914899 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.804145853 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.975487799 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.579210611 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.441057185 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.167036351 seconds)
  done (took 69.019312533 seconds)
done (took 715.962106865 seconds)
SAVING RESULT...
DONE!
