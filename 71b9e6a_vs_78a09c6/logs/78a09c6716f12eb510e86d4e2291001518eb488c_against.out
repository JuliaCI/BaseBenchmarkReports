cset: moving following pidspec: 23608
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.225441563 seconds)
loading group "string"... done (took 0.45596634 seconds)
loading group "linalg"... done (took 7.473080851 seconds)
loading group "parallel"... done (took 0.168349342 seconds)
loading group "find"... done (took 1.159156215 seconds)
loading group "tuple"... done (took 2.060339137 seconds)
loading group "dates"... done (took 1.30739004 seconds)
loading group "micro"... done (took 0.243808157 seconds)
loading group "io"... done (took 0.722365585 seconds)
loading group "scalar"... done (took 40.250858001 seconds)
loading group "sparse"... done (took 12.336486161 seconds)
loading group "broadcast"... done (took 1.104543963 seconds)
loading group "union"... done (took 13.416388072 seconds)
loading group "simd"... done (took 4.744127926 seconds)
loading group "random"... done (took 9.545094545 seconds)
loading group "problem"... done (took 1.979222362 seconds)
loading group "array"... done (took 22.268762174 seconds)
loading group "misc"... done (took 1.408337105 seconds)
loading group "sort"... done (took 3.549999125 seconds)
loading group "collection"... done (took 19.240279635 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.533383634 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13940934 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.130804141 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146608491 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.202592947 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14110009 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155390259 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113154631 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.959280169 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.177595277 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151077915 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.507752411 seconds)
done (took 5.087006284 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.223884306 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093596134 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102841527 seconds)
  done (took 0.862934503 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075931573 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143622662 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093228779 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077445858 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094336275 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076912862 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094283922 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076692077 seconds)
  done (took 1.329788052 seconds)
done (took 3.176891871 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.72831789 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.274914021 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201386091 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.457349882 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193192204 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.211756644 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679025158 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.359768336 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.250485268 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099232432 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.141123295 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.383477182 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134886278 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685017442 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.0890539 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.121498771 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176010914 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444774301 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08260172 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109377858 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115169449 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140757089 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.126671478 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089769181 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183039798 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081796569 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.190677566 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107192972 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079447999 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.28565185 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199951343 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68086235 seconds)
  done (took 10.814161102 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109315859 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.131721927 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096639957 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136991844 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132087224 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09847631 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08546435 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095111692 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.11916627 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173432027 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.128025482 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.118991677 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09388185 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08180125 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113677859 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.242124466 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119252354 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101856204 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099004887 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.10329221 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120076046 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111047815 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107746132 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091270549 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165511495 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220321886 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11096942 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12475458 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095667345 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.109889009 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142356072 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141218474 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093140088 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.0793019 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169956879 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123755796 seconds)
  done (took 5.077015232 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.185046916 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118580152 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165773855 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161239565 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.137792706 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.157462584 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111280618 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.252311637 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.18297334 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16109195 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139577451 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11575655 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079284702 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098298039 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.09423809 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.656135404 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.12130195 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.153188944 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113818392 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101605229 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082807245 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.154759131 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103419727 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078611317 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099551745 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.105614356 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.322495578 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.155930666 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098194057 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.128346106 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119194548 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080062342 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133535802 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.206001549 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108403688 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13748887 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094749365 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078071748 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.171655245 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103591083 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078065359 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119684299 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133052078 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132711678 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.076729796 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096901653 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203833224 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096289717 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078728327 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113385576 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.938437729 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179824601 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.087656531 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.0944189 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.317731023 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096519591 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096393032 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07613596 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.260426388 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.177192676 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093629798 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079334588 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096044513 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077715915 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097621764 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.379371915 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095552174 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.827754171 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080564175 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105619892 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082129661 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095426392 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10187921 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085998562 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113263877 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078593147 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097564057 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077744778 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095990756 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079997498 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107882166 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100333852 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078847486 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163067341 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078360378 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113017544 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125368208 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082892017 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.093433114 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129017467 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082098974 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096440495 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132132097 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079558008 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093708602 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106206762 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08271131 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142184033 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096094201 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.170151245 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078833999 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125662757 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097962948 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113088235 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112546121 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097575926 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084579246 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09442049 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076066708 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163062364 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078426734 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096391225 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080368978 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109340619 seconds)
  done (took 22.540929253 seconds)
done (took 39.105322569 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.321461618 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.100481528 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101677579 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.1007479 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098645112 seconds)
  done (took 1.466842433 seconds)
done (took 2.18707566 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.283451037 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.209044849 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076086231 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16530638 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092338185 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1696715 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157563078 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110387814 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.21515552 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.075609438 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.176940766 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07592764 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092650224 seconds)
  done (took 2.645098243 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093688398 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113150626 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081715548 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109697217 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07601808 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109787852 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09133589 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115246256 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107730047 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08380757 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092589807 seconds)
  done (took 1.789636774 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09281554 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111034182 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081227787 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109331301 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075154903 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108336994 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091222944 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114295625 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108571583 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083337892 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092509156 seconds)
  done (took 1.782661742 seconds)
done (took 6.926951101 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08861782 seconds)
  done (took 0.799631794 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.912902972 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.815672966 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112451399 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.147101471 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.312546971 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.170007218 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.46501989 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123149208 seconds)
  done (took 10.972792737 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.113910865 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101490577 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098876914 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08107801 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100231578 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.095489493 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099449095 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101476434 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084351104 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102233011 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.084342954 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099857298 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098144789 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.082388643 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100057471 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.084340089 seconds)
  done (took 2.306936613 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117696881 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116374584 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10419609 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106567002 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086087545 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102789648 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105329902 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087195538 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.099863479 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102849733 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089715481 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103881234 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101886658 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078491897 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105196544 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10583216 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084962414 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104141753 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105401965 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088844838 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104538634 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094511685 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085814048 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105112594 seconds)
  done (took 3.210325736 seconds)
done (took 18.005781611 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156751657 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106358702 seconds)
  done (took 0.983833042 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09324159 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111411105 seconds)
  done (took 0.934862848 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096210347 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095008084 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119851202 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108380671 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.078922066 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094569176 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11747333 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079030174 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094581516 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078908742 seconds)
  done (took 1.694925273 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080986602 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109182676 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099969348 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094214934 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.102618789 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093571063 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085775972 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097945255 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.107829151 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075198345 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.1005908 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112603267 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084598021 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114271046 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102597842 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081357949 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101307543 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097194114 seconds)
  done (took 2.471232826 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077690307 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095565637 seconds)
  done (took 0.902544227 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079667281 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093032104 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079779224 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095174278 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092444448 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075745373 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092704507 seconds)
  done (took 1.336840279 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.505227849 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135179037 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.251330772 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.083332047 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118658469 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.298390664 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097577277 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083689978 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101892912 seconds)
  done (took 2.459763685 seconds)
done (took 11.510562116 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092219884 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115977557 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110683214 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46204915 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106645416 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.09687719 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159004109 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.246399814 seconds)
done (took 2.123995543 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.148310588 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323957674 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113120168 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066669299 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093652153 seconds)
  done (took 1.336837786 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079216592 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098969266 seconds)
  done (took 0.916901755 seconds)
done (took 3.142215722 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07938762 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.130062132 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.078754034 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097214219 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077405334 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.0979282 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.076428473 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094469642 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07965129 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093238026 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.09507049 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079225703 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095323811 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079913476 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093284619 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077034845 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09562237 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07619646 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093085219 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076436286 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093235226 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079363611 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093237584 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077175638 seconds)
  done (took 2.880708392 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.096734231 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096941585 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.100573872 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08434186 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100513106 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084588368 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100954435 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095495313 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086003728 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098348193 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099009683 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082415779 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098394666 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083692193 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097818136 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099220803 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08439037 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096076399 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08163808 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099492121 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101026138 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079779018 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100934494 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100399488 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.082937794 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0995062 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081706678 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.095884437 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101295185 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.082853115 seconds)
  done (took 3.536104089 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083187541 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09346475 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077326213 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100191164 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076288923 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095553145 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076153661 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094751508 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077857409 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093639012 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077872329 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093054983 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076905173 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095357658 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078444192 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096905736 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.105655131 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076939813 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093667529 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077773097 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097799608 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.0767817 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094676327 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076422798 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093487395 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076313706 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094080155 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076459849 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094512165 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077227675 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.096232548 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080523328 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094311584 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084210225 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097545984 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076909763 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097490965 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077484101 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094180806 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093201404 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076637495 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093889942 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076712185 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.099980277 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077701548 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096094327 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077652928 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096041101 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077898209 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097357785 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077180192 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.092998747 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078493736 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09482589 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097589392 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076385076 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094311841 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076264271 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094887319 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076997681 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093361039 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076237474 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095777941 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.076923051 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109164003 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084050245 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093507136 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078651041 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095491558 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079426727 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095805861 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108175489 seconds)
  done (took 7.053151739 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081450771 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104871647 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079936626 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095462889 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075893955 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094618192 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097523139 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077151926 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096528431 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082821391 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094827592 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078837977 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096520942 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106789789 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077569104 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096925506 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083836589 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092095321 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078289 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09769984 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078146506 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097488219 seconds)
  done (took 2.712486499 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207033523 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103365415 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139971192 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106870511 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081086736 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105188774 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100543329 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085741992 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101040796 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082279672 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098743202 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101045236 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081430239 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099335687 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099507752 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083397118 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100783455 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083293292 seconds)
  done (took 2.612575397 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091348447 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097922108 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101611986 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096783021 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097379411 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0823417 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102887475 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106799762 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082448409 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097457542 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.08895965 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098642488 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099123297 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080463959 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100469198 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079835626 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099366151 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079665081 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106446888 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102794494 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102483623 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089645751 seconds)
  done (took 2.837835556 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094907758 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099507079 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116347141 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08232233 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09336473 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078294676 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104510166 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079704189 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105113693 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099017232 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079712508 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095913165 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086702643 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096822339 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.101515844 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07947211 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099221438 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079718346 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098999993 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075456453 seconds)
  done (took 2.600539083 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10069915 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098599856 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098844266 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090774557 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098812998 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081475154 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10780677 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098518134 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081679214 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12359137 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099660463 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081018782 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107522374 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104417152 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098979496 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090637129 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107034676 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10839924 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082716532 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099212757 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123435572 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081892116 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107962821 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099231927 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.191531181 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099171995 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098902225 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086700076 seconds)
  done (took 3.606314507 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080080168 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098249293 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077578123 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09607725 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077447943 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095718047 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078043494 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095338192 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080266239 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095114952 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080151838 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09773209 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081172146 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100412996 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080059243 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097244088 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081420419 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095072943 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078110596 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094807193 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081329671 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097450601 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080333634 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095191678 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078494273 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098397242 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078346274 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095005485 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08085478 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095791727 seconds)
  done (took 3.398934506 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090268116 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104715127 seconds)
  done (took 0.953416754 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077641755 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113502867 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078162798 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.1022999 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102451028 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.081441402 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105648004 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084745786 seconds)
  done (took 1.503475571 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096875218 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.108737614 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081452985 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110212127 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108799493 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094390555 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162745219 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09930164 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.085784619 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096071755 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111131056 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079953918 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104243806 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08102154 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103437548 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086849752 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095678313 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086128611 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10061895 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096705619 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08233889 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109321873 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082874962 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095384791 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082519143 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109239503 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.107423346 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082627192 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101612464 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107252334 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086404553 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092780241 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080823098 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099084212 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079650723 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108227784 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110745914 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083644678 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107213313 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082615755 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109949247 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093726788 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085456729 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104991508 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0912129 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098687944 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.081290287 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092816925 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095988991 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083082425 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093507871 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081843387 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092951023 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088398697 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103029183 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111881367 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080003411 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100429124 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083903228 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101207723 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086166539 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100950478 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083484777 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098085443 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104694421 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.084976332 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10575051 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076449057 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092503218 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079094784 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.106813981 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120791146 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088047316 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099546428 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081412436 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09632368 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101508281 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082802592 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10560764 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089282241 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099084514 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105378074 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088742151 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098337198 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084649311 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106626758 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096770934 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082899801 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096407541 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095918772 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09778578 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078865952 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.095816006 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107420799 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084726682 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098502662 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079192891 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105668891 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075460146 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102831361 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082057891 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099114613 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.107382005 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086815517 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105088863 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107207144 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088572369 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099206495 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.083818407 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095790489 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082954578 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101114136 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.105930514 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.074642724 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102305033 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083115812 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100836516 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088087906 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096494202 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081413842 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106200964 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105605202 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080155696 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096074207 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084039991 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098667748 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084268393 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.10563746 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097132948 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076168702 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09451512 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085647528 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099538222 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.085805191 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103832631 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101385833 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075497476 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096415365 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085294025 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106380802 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099338832 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081157458 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103603927 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.081565639 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098112796 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.086296807 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101486486 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.079773629 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.102851172 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101363961 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076376861 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102568001 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084603204 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097682152 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085232429 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103457809 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.101988442 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082770978 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098106014 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087212896 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100690808 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08010879 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098412197 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080279032 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108380071 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.100686342 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076618934 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09593271 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088163514 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097118089 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08119105 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097557598 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101166658 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082665643 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096754686 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.080861346 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101057415 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092736433 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104727601 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100576547 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086703206 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.10931649 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081026171 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10158284 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.09921783 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082626628 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100061715 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088306174 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104940949 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104964834 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.083813339 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095968346 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08623228 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106780609 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080303195 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097378298 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080448887 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102663124 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105019427 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08498507 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099913232 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079696784 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099857146 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102149114 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.083766367 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099832755 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080569396 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104025319 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.08028951 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.105344679 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100281994 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090767907 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104253624 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076749257 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103494024 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097972624 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087565968 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094970385 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079353153 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098779481 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082593004 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098550325 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08398429 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093332045 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088801715 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107776183 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099738761 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.080555927 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099974439 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089504499 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101331403 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084609809 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103106093 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104619052 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093725718 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.098843399 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.084885546 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108247181 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100197984 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075326053 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.104702675 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.079822169 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099125483 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08029118 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096994443 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084425021 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107955589 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104189212 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.075672104 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102963142 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08045715 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098459618 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.076810959 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105848572 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103193177 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08309229 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109179199 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083429879 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100503501 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085685767 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098680886 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101008242 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083146684 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1029544 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083215373 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10205993 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.080936802 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101202113 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080572785 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098386073 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103151164 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082178186 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.099572788 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087802539 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.09941149 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081472545 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103702442 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100758545 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082922232 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101191531 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08186571 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103699748 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082060786 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.099899472 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084735695 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.0948942 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088713337 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100531262 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107876566 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.081548673 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096516608 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088074145 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.10181287 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106753845 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.082679841 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100492807 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.0833638 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099782875 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08508057 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108661824 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097306524 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091216002 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106333506 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082185711 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102509985 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082166212 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101968097 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081228939 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102463819 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101427429 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.081333943 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099949009 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.086056204 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.102751165 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082138789 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102108291 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101637539 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082028128 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101798017 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076598537 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099524945 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.0818844 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100381142 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089957909 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100799881 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102286303 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.080359336 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101195107 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.080736756 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096740165 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090242511 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109770837 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101395132 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090009988 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099422594 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.083439226 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109297404 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094648842 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080704626 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098167647 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080127762 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108388009 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08346299 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.108658255 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.0820193 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100146004 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080039111 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101420633 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099049595 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077351704 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098133642 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085725095 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103903446 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081080764 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100903236 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084806229 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101411288 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107815871 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081417072 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.101999363 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.082684593 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09747307 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081167981 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099308171 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.084804915 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101669431 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.097498587 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079014338 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100203134 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083384457 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101417142 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082393902 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.109857361 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088714597 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100225843 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103122853 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086173616 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094801937 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085149543 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.09982805 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082455777 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099325968 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.085701865 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1034355 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101214826 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.08900763 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100807593 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082792882 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101845101 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080468869 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100714754 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099971222 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083310515 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100373302 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083829343 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109733371 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080160666 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103235566 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081883419 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102252412 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105117671 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.083720497 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103561549 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089952675 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104565648 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084223163 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.107351618 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104499164 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08496337 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102929002 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083844682 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108108197 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099294637 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09040974 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101071837 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083561247 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102535114 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.079810751 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100982687 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.0814319 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099640322 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105208299 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08267454 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099878783 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081064479 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099173111 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083816842 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104787116 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10824692 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.084258657 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103824581 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.077157075 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098508347 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083829973 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098187565 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084373791 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103330812 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10612858 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.084015765 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101306216 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08130698 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108475475 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088361219 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105494185 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080182546 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106153976 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101306022 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.084390754 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101507806 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082658155 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102176785 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086853761 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.102860825 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100421586 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090492281 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.104464829 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083846422 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103037822 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.082931169 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101493445 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095281266 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.08280483 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103044951 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08859099 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103007378 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082400874 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110709721 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100481192 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082904792 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104185463 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08160805 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107636426 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078608027 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102096921 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10277675 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084286104 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096739953 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082002747 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.098767857 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08539102 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100286223 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.077978905 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110450839 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.107768718 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085176122 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100092486 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081361335 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096741453 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.077829964 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100575928 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084313728 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103158092 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.109864461 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081115723 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100160898 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.077998712 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101766254 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085563878 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104149485 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080321089 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096724316 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081442305 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104409272 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108897614 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080835122 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100481051 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085571096 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103016224 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081216706 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105117232 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079803564 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105622655 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112357062 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083605823 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102011225 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088189772 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110284447 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102411913 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078269287 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10311561 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.084957575 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101855815 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084104052 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104132779 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115736462 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086556904 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100365806 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081817671 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104520618 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.081969186 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109426146 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10399235 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084057823 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106841446 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085163639 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110895331 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103461034 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089025642 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103433235 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08445238 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100087724 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082879806 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100646781 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081255825 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102667975 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102092865 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087395067 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109907273 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082450768 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111648635 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109463265 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087889695 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097748805 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082334113 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.100143719 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078165694 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102612118 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081265713 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10064503 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080297778 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10075504 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.101899168 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088769574 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103044412 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084269332 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10193742 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076859371 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103438024 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086554348 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103050175 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098077367 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.082534603 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103018151 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088211421 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106265949 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083830905 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104187507 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084655499 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102948081 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097641724 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.089847607 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.1008512 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085996274 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10134021 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083300959 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103051683 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086574935 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108299468 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103302359 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08607469 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114145875 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085453114 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099213151 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099327178 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088775436 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099901968 seconds)
  done (took 56.956084275 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1446525 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07951936 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097075929 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078650904 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111014272 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09839116 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078423754 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098232506 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079549319 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101013806 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0786192 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097434198 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108075999 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122261029 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092362721 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102333072 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096577875 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07974921 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097120482 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078940323 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108019368 seconds)
  done (took 2.837643866 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103959686 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115842438 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113039032 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118490234 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088352927 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114158528 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11297786 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113408425 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097098 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108698029 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116892561 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113271818 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089560259 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109638528 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109493377 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092171966 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116862466 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108346229 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.113968109 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093182517 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111296374 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113239988 seconds)
  done (took 3.180852956 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083390624 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100788122 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084017751 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09683669 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.081648557 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.095922589 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086719712 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099387006 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085787109 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.10098748 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08070647 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.100439275 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102433659 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.077696116 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10089592 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080335875 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150547601 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105967448 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082161768 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104170518 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097332456 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.084553576 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097114833 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.077947581 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100539031 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08655522 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102475316 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080646284 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101386476 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081748535 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102451818 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079481733 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104006241 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102196967 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081720712 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100621107 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082545736 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100696266 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078315163 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.099703697 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.082699047 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.097472174 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082435687 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103382381 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08045241 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.099497204 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083513115 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10165263 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096740266 seconds)
  done (took 5.377957347 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.102475428 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.158825434 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084433961 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141202868 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119619685 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110672237 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.085990058 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140385053 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101376805 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081667276 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120176246 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.11842985 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103565716 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088259886 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.10632931 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102571856 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085134843 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100594296 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087905089 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102371553 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107369543 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089118673 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11779318 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117428751 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106992776 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083111357 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102915393 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107861029 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.095551881 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108865259 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107495746 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089506092 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.118568949 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104176351 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082022745 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105378332 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.119253386 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083748111 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104968627 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100140015 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085181512 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108228013 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108396621 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100282913 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103647035 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106913601 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083409771 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100236731 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.115137778 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086473188 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111717241 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118234378 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087016446 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103710361 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107569538 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119191781 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.0829535 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100496747 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086615977 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116142302 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099428549 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086821349 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.116742107 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104465273 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.090076711 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.117829024 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107590337 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105963559 seconds)
  done (took 8.004655719 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092263165 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109176777 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118830295 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118822258 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089336025 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.109570813 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109118841 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089335839 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109498562 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11425386 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108337978 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131375723 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085170392 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112382491 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109200978 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090451151 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109082246 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109334871 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0890297 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1090821 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109491595 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11755935 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08995235 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11779973 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13911324 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104243735 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089183817 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109286123 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118184222 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109203015 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122285249 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.089856778 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109593908 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119277506 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12234423 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090008627 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102108712 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10874561 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090799355 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109578374 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103683077 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09890093 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108611997 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104499302 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089364846 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.10987661 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119708409 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.121876755 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111993858 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095608753 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109447036 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119754409 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109581038 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089684667 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118372246 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144740225 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118567252 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119434983 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109408265 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098002426 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117967427 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.126346871 seconds)
  done (took 7.547651611 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105994723 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114377492 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11658331 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.098611742 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08126945 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106908502 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081590199 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101391749 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112301513 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093271155 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114576634 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10762772 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089801717 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115702877 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107812394 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110398236 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088324375 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108460747 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112823228 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107976737 seconds)
  done (took 2.899536078 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093359494 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123023384 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08426064 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111047935 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.106888288 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090978145 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105683466 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106827287 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085369175 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106785334 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095054879 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115730676 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104065817 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09128277 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114621118 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109806411 seconds)
  done (took 2.468722229 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095037857 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11642474 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119371702 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083417594 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102880818 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079764633 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104725854 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099271942 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.079947714 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120028862 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083842756 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107338748 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10572945 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.0816847 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100165124 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086225881 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100662271 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081257433 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103989856 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.117499449 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094976454 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102841276 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104474839 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086300817 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104025276 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089038554 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10434573 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101917405 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082801834 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104293993 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084052261 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112292771 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100038928 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083027784 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101293908 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08180909 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104667817 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084275146 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107404956 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104043146 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082491136 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103574355 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084536792 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105006042 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079690485 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104089065 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100117389 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090297048 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101999305 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.083969843 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104141325 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106096535 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.084887102 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114881469 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088081601 seconds)
  done (took 6.169485191 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098436677 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107751211 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07926983 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101893444 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.0868385 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106201664 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107502841 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08714927 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105258149 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081448445 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105885796 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087922209 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10681484 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107326555 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085699702 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107455665 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08057461 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104825603 seconds)
  done (took 2.582391315 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089373516 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103714981 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091302004 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.103669821 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08344663 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10732694 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078928136 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103584663 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102931456 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085026222 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103646364 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087024209 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103022885 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086505834 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104243211 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084060654 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107116829 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103298127 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08392939 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100328785 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086592453 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102526683 seconds)
  done (took 2.933100477 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.11666926 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123729334 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091901366 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.225928188 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103078199 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131171127 seconds)
  done (took 1.624964422 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108310564 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119029196 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104670243 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105128212 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11430049 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105295538 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087698925 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106568703 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115429341 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10037567 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106329313 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116698395 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116586172 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095221411 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11372882 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11291149 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10598054 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086903643 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105177844 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127609648 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086235787 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116217896 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106404315 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085415931 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107292014 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116119542 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115516405 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119967613 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08631763 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116503313 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113073475 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086161231 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11733838 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121185151 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107774114 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097045155 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107027338 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126757363 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113958135 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095270347 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107611297 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113491796 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096051259 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111888945 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116703626 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106580605 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09119602 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106733909 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107169442 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13495418 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093946697 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116905917 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114500978 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117571012 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117267104 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133393903 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100508383 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116541851 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11324503 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121176234 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115417363 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093144459 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115513646 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120933014 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114356969 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116156552 seconds)
  done (took 8.043284342 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101201126 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125941057 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107891968 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120871177 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097047633 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106510767 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106876087 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086980275 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10715965 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105063576 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150329929 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087095054 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116495329 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116313312 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107097786 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087381399 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106552925 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116016621 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087027525 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133484137 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107975638 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116249302 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11517296 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096443782 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122518262 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113300839 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105701102 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086370841 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10673038 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106149323 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09243587 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107875694 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115495301 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086036031 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115734012 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107517259 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086666859 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112846271 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106490814 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113508809 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096899016 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126502876 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107373907 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107154325 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10016589 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108239859 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107529878 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086573338 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106963718 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10596926 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100088236 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121630171 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121502294 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116442905 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107058656 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086914638 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107330951 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107159009 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08677162 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113705025 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11631582 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107371741 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133144825 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087507411 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10766004 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117256241 seconds)
  done (took 7.923888216 seconds)
done (took 152.982328202 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.096364389 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13506877 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094906332 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167837144 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106124588 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.11787839 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136612457 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096590896 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.104963406 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085275833 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.104886848 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086565855 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170629947 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084965262 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106104046 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.105935808 seconds)
  done (took 2.636101562 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.197995482 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.251959413 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101074447 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104689742 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087369761 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109379114 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.103656689 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.089926426 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.10832217 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084237836 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107356499 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.084440257 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.104377836 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085428592 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109139445 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.086590195 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105199162 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086887657 seconds)
  done (took 2.84758546 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112779766 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.152358038 seconds)
  done (took 1.110353467 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117427795 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179795012 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314576209 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15416944 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105457751 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126202002 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155564413 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.12974921 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.194971246 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12119398 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120526241 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09622356 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138712471 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.113945761 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093223303 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117183336 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.1398067 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091869005 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114140376 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11477952 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115550761 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105570624 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11427945 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.091804379 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179044657 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119401046 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084620039 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105311996 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114777874 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093887505 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112364741 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124047553 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096372319 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.172989691 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100641342 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174611115 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098834887 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111056486 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114235789 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.09011049 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117523992 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116584897 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102636921 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117988398 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08340037 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117567721 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104986114 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084212815 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113107957 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.095748308 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114456685 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.111939642 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153709372 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117569164 seconds)
  done (took 7.454006599 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.791993303 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154454764 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089433128 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.880097561 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137374338 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10212105 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.778767809 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13582413 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23474471 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.756194391 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131876096 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120777757 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225710258 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.236534854 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.923121943 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.305366763 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.670703259 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101726283 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150437142 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151259818 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118340889 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135635961 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.128435146 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428196415 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.093445073 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111608807 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115745695 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.09869869 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15783427 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124656237 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113682154 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177085194 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.244288864 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203429115 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115121687 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088666274 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11104566 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167163411 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265226834 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213680728 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180023951 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085979312 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110292699 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120811309 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110597368 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107821372 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162592521 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.17264548 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.192661801 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091084575 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119713007 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119519386 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118737715 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164507552 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118191335 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.285476759 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321554873 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111067632 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120195987 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104810703 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261390224 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.120882204 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22168963 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115885308 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211619541 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109098543 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778844679 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18859924 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089404485 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.116899585 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117708768 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094474536 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120662755 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167561251 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406888433 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122627411 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092109934 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110948216 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204081663 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124345174 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1095237 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159928543 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11519376 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09775704 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125232269 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122357961 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169578522 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.227672564 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123587625 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118329765 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092918984 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124966155 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11550581 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211987095 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217838671 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160805729 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210088861 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121130371 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162422974 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188755555 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096864636 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193047745 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096599376 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124996399 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12183278 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.213306003 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144982525 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101078371 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115980547 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117801155 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146876273 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125859881 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097237572 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.167143828 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479039548 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166264898 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107900618 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125434716 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098652841 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159907952 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11735988 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258339742 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120629573 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.166353873 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117642334 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086925706 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118712648 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162983686 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121309198 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098790977 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122454975 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11787256 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233569152 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214482966 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122759256 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220773244 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183773414 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119145588 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170132436 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121354428 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165733702 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119066767 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119545514 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093997167 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792937532 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122258471 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097925672 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115335592 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186627077 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11014265 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10192451 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124211884 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107049358 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788184725 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126644112 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119208768 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101053791 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118413086 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11961583 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094571919 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115705505 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160047723 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228687494 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120216416 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118867943 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101599028 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181163535 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093950003 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125134857 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123062631 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124006674 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.098999836 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113371833 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123169194 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168951229 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161865112 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218158347 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.5925705 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090083209 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123516255 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227208598 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089546141 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288398085 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118243095 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.222787512 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163412656 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.119458253 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318490425 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165455034 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18666023 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125660075 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172377885 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086474359 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11746723 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16202737 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112349792 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116247682 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16086685 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124030647 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10102056 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.961471903 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110872065 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227594411 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.085391837 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.19123025 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093857699 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119728241 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28406177 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110311552 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106478521 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.1837619 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092295952 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123912845 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.847335065 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124970607 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120458721 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117456312 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.197765455 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184626356 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096484536 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118270081 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119116018 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162151296 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208876363 seconds)
  done (took 43.885940432 seconds)
done (took 58.773948909 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.272801505 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211745411 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.255368939 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.1661945 seconds)
  done (took 1.848907604 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.168407805 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.146259428 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119552592 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106608432 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.153325528 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083749041 seconds)
  done (took 1.650697123 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.348465277 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267014424 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.235025934 seconds)
  done (took 1.723809945 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.284464734 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.245877735 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.352890122 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.41368107 seconds)
  done (took 2.287836554 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.205871404 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130288594 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110543381 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103564118 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.194375156 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246348634 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.138760919 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.199482925 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121145052 seconds)
  done (took 2.368761262 seconds)
done (took 10.753857971 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.249479204 seconds)
    (2/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.156125062 seconds)
    (3/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.125665539 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.244895012 seconds)
    (5/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.21753749 seconds)
    (6/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.174105125 seconds)
    (7/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.198559768 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.124939962 seconds)
    (9/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.169310777 seconds)
    (10/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.249186341 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121580354 seconds)
    (12/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099446815 seconds)
    (13/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116625761 seconds)
    (14/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.192596035 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116383895 seconds)
    (16/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.23059622 seconds)
    (17/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.189918293 seconds)
    (18/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.119857568 seconds)
    (19/286) benchmarking ("sort", BigInt, false)...
    done (took 0.218245634 seconds)
    (20/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.17116671 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.1336688 seconds)
    (22/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.157716672 seconds)
    (23/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.192527423 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.12367759 seconds)
    (25/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.146708134 seconds)
    (26/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.124187591 seconds)
    (27/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.222111695 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.220712949 seconds)
    (29/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.123118918 seconds)
    (30/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.13630558 seconds)
    (31/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.205226252 seconds)
    (32/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.185516207 seconds)
    (33/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.114818547 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116401234 seconds)
    (35/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.117226924 seconds)
    (36/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095628102 seconds)
    (37/286) benchmarking ("sort", Float32, true)...
    done (took 0.227951352 seconds)
    (38/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116733687 seconds)
    (39/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.182085842 seconds)
    (40/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.11287062 seconds)
    (41/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.11976406 seconds)
    (42/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093689699 seconds)
    (43/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.118083382 seconds)
    (44/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.117532545 seconds)
    (45/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.146028707 seconds)
    (46/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133665045 seconds)
    (47/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089234532 seconds)
    (48/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127520335 seconds)
    (49/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.116629369 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111559026 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.115784466 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.115535168 seconds)
    (53/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.090721567 seconds)
    (54/286) benchmarking ("sort", Int8, true)...
    done (took 0.217252051 seconds)
    (55/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.183841832 seconds)
    (56/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.086714031 seconds)
    (57/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.153727235 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.10947053 seconds)
    (59/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091298379 seconds)
    (60/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10798004 seconds)
    (61/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.216368088 seconds)
    (62/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.092016416 seconds)
    (63/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.108581419 seconds)
    (64/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.228291039 seconds)
    (65/286) benchmarking ("sort", Float64, false)...
    done (took 0.146255465 seconds)
    (66/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.092660237 seconds)
    (67/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.165972342 seconds)
    (68/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.089814732 seconds)
    (69/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.08763113 seconds)
    (70/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.196887941 seconds)
    (71/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.131165681 seconds)
    (72/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.197945792 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.085508295 seconds)
    (74/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.227690724 seconds)
    (75/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.220568669 seconds)
    (76/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.087804882 seconds)
    (77/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.186669745 seconds)
    (78/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.117076123 seconds)
    (79/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.153621802 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 0.108742467 seconds)
    (81/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.096432484 seconds)
    (82/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115219805 seconds)
    (83/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093239369 seconds)
    (84/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.14940996 seconds)
    (85/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.184219099 seconds)
    (86/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.18306251 seconds)
    (87/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.123062145 seconds)
    (88/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.12091364 seconds)
    (89/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.070046624 seconds)
    (90/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.147400181 seconds)
    (91/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.184116884 seconds)
    (92/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093237136 seconds)
    (93/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065730794 seconds)
    (94/286) benchmarking ("sort", Float64, true)...
    done (took 0.226971131 seconds)
    (95/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.099697675 seconds)
    (96/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094087382 seconds)
    (97/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119900379 seconds)
    (98/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.137787334 seconds)
    (99/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.069297222 seconds)
    (100/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.085315386 seconds)
    (101/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.182060468 seconds)
    (102/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.114034641 seconds)
    (103/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.092226374 seconds)
    (104/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.113963667 seconds)
    (105/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.083916591 seconds)
    (106/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.14061905 seconds)
    (107/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089489463 seconds)
    (108/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.140105164 seconds)
    (109/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.118535026 seconds)
    (110/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.066157476 seconds)
    (111/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085182244 seconds)
    (112/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.119105125 seconds)
    (113/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.137200187 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094454747 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.107164711 seconds)
    (116/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.087407738 seconds)
    (117/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.107428459 seconds)
    (118/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.083280221 seconds)
    (119/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065080309 seconds)
    (120/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124245158 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.133833937 seconds)
    (122/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066335205 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.10769268 seconds)
    (124/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092092754 seconds)
    (125/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.098148445 seconds)
    (126/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.097372482 seconds)
    (127/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.108925653 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.092213877 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.107565945 seconds)
    (130/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06600818 seconds)
    (131/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.065958556 seconds)
    (132/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.140563713 seconds)
    (133/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.172778335 seconds)
    (134/286) benchmarking ("sort", Bool, false)...
    done (took 0.179882347 seconds)
    (135/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095344294 seconds)
    (136/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.169839182 seconds)
    (137/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093811305 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114639017 seconds)
    (139/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088368185 seconds)
    (140/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136120783 seconds)
    (141/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117454505 seconds)
    (142/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.158937335 seconds)
    (143/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.090401715 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.085278608 seconds)
    (145/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116112593 seconds)
    (146/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.09336818 seconds)
    (147/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.12392702 seconds)
    (148/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.06747559 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108730276 seconds)
    (150/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093630646 seconds)
    (151/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.109562655 seconds)
    (152/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.089656342 seconds)
    (153/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.118509748 seconds)
    (154/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115056766 seconds)
    (155/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.161924953 seconds)
    (156/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.089312842 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.08581603 seconds)
    (158/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.089759296 seconds)
    (159/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094757904 seconds)
    (160/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13730816 seconds)
    (161/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.089585019 seconds)
    (162/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.090886774 seconds)
    (163/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.06626676 seconds)
    (164/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.101266048 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.11085953 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.088781057 seconds)
    (167/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.086824244 seconds)
    (168/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.065963238 seconds)
    (169/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08918341 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.085475699 seconds)
    (171/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.114399757 seconds)
    (172/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.09358449 seconds)
    (173/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.090843781 seconds)
    (174/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088589135 seconds)
    (175/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.090703018 seconds)
    (176/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.150033151 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115931756 seconds)
    (178/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.170958953 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09564656 seconds)
    (180/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118893848 seconds)
    (181/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.096318894 seconds)
    (182/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117016632 seconds)
    (183/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167843823 seconds)
    (184/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.126527308 seconds)
    (185/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.09013194 seconds)
    (186/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066053518 seconds)
    (187/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077174162 seconds)
    (188/286) benchmarking ("sort", Bool, true)...
    done (took 0.218762845 seconds)
    (189/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.132938551 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084845002 seconds)
    (191/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.111323148 seconds)
    (192/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066914624 seconds)
    (193/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.109811424 seconds)
    (194/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.182179815 seconds)
    (195/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066683694 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.09484641 seconds)
    (197/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.089355654 seconds)
    (198/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137127181 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094094478 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108518306 seconds)
    (201/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092486173 seconds)
    (202/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.076260853 seconds)
    (203/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.115925705 seconds)
    (204/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.19032419 seconds)
    (205/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086560031 seconds)
    (206/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.151110945 seconds)
    (207/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.126311679 seconds)
    (208/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068036532 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091363123 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.107419096 seconds)
    (211/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.092008535 seconds)
    (212/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.089866211 seconds)
    (213/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068668315 seconds)
    (214/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123709918 seconds)
    (215/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.066393502 seconds)
    (216/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.075862616 seconds)
    (217/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.151856127 seconds)
    (218/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066894793 seconds)
    (219/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.088903413 seconds)
    (220/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.316667163 seconds)
    (221/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.164477364 seconds)
    (222/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109768775 seconds)
    (223/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066293512 seconds)
    (224/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066244642 seconds)
    (225/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.110967433 seconds)
    (226/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066886008 seconds)
    (227/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.090128405 seconds)
    (228/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065617833 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085434142 seconds)
    (230/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.112427369 seconds)
    (231/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088704848 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111515408 seconds)
    (233/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.158815247 seconds)
    (234/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065534384 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109170164 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092511856 seconds)
    (237/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.154503245 seconds)
    (238/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.08580001 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119320056 seconds)
    (240/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.15762469 seconds)
    (241/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.100786374 seconds)
    (242/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066094346 seconds)
    (243/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.17882483 seconds)
    (244/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.066410658 seconds)
    (245/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.089974708 seconds)
    (246/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.155012613 seconds)
    (247/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.132454457 seconds)
    (248/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066104935 seconds)
    (249/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.13614448 seconds)
    (250/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.107690597 seconds)
    (251/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065632952 seconds)
    (252/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.12148867 seconds)
    (253/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066012301 seconds)
    (254/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.087056604 seconds)
    (255/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.08990641 seconds)
    (256/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.099856318 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.107874001 seconds)
    (258/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.160566628 seconds)
    (259/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.111878332 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108011965 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093107153 seconds)
    (262/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.090831671 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084928445 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.109712031 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085196819 seconds)
    (266/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.065375664 seconds)
    (267/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.098269559 seconds)
    (268/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067810983 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117188448 seconds)
    (270/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.184919615 seconds)
    (271/286) benchmarking ("sort", Int8, false)...
    done (took 0.187340604 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091645546 seconds)
    (273/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.109470707 seconds)
    (274/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110875474 seconds)
    (275/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.090143556 seconds)
    (276/286) benchmarking ("sort", BigInt, true)...
    done (took 0.229124804 seconds)
    (277/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.099292987 seconds)
    (278/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.090486157 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086075057 seconds)
    (280/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.108511473 seconds)
    (281/286) benchmarking ("sort", Float32, false)...
    done (took 0.172309712 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091236889 seconds)
    (283/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067021926 seconds)
    (284/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111615916 seconds)
    (285/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.065878763 seconds)
    (286/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.11034641 seconds)
  done (took 35.638186778 seconds)
done (took 36.515361925 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099225886 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146150606 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094806281 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.133520326 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.1219954 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090893043 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.11594348 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097111633 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.121675171 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.12393094 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09703673 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092160251 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095756427 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118656791 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096162741 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.136446877 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121663862 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09232745 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117313463 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084942364 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119664862 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085470142 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110348415 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069032506 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120001762 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093309601 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.114933808 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118027318 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.085056805 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109120696 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089096419 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115953104 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085337561 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122600076 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.091898649 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.116747374 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095717812 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.11807014 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.110232687 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.085957592 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116301114 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085589301 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115605522 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093668191 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114077028 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09059693 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117326749 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.097289992 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.137134277 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113905263 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094211807 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119511977 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095384562 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116347095 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093484019 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117897396 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090829586 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137382844 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117002495 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090232189 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116340947 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094021493 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114023574 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.093205385 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.116758952 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119832151 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.096635972 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113680144 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.095927223 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114354356 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085950203 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.116769128 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.088660201 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.10970452 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095128496 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.119017903 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084487637 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115107934 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11535616 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.090809364 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108604113 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088070861 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.110846293 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.091951025 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111108437 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069046673 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.112463303 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.091686626 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.107956119 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095088996 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.114811558 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09264813 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111522142 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.09772149 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109666449 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091555875 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.109447313 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086856491 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111941332 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090129774 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109125566 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089228077 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118626645 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087955905 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.115970683 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12251328 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08565921 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116814535 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086013998 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.1097339 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10152702 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.12006295 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086009197 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11504786 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085363034 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.11726275 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085348138 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109336537 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085547366 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.109341422 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091561286 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.109734493 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088308301 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.117483649 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123605702 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.0854426 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.112888362 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089337251 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109802698 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092488317 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.109459434 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086948975 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111644196 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07692574 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113032273 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086510751 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117467373 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088934691 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.117631482 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088721893 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.118983606 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09136332 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115695468 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091589278 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109384507 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07365435 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114917111 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088388569 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.111536297 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086017692 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112336787 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086105245 seconds)
done (took 16.708907093 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086083105 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182289244 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149717102 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140800062 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106393642 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111046351 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121164581 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.116116735 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112295256 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141227016 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109301473 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130829955 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.145975236 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085296969 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111091921 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.089942237 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.111871753 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.100576378 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144371549 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131604546 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.161879844 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085392165 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145044388 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133359668 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.1199855 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.112444441 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110683253 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090990294 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115393982 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10282395 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.130779144 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114428535 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.086843043 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132100055 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103011488 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119044006 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.085886026 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11740953 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086024462 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111424223 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139371452 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131613224 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.091362001 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.115861372 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091183352 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113012433 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088190104 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.11956699 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096595299 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115058101 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124967901 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.153689075 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.089963952 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121016802 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.08565979 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121078066 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119917814 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089228244 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111632057 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089658956 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.109812224 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090127008 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125780708 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141184866 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090430209 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12026332 seconds)
  done (took 8.503588342 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103309241 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137825425 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104253606 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.12929258 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11065979 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08755673 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.110948932 seconds)
  done (took 1.721952498 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087615549 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132673965 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109567635 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135390917 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130290589 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110356199 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121719675 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088278722 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130068141 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088744976 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133016329 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148243668 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088865034 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.11968506 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136686687 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087411555 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136547661 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087974061 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115387046 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110383257 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115312394 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133829259 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089914909 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112310574 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102016729 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112464996 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160983374 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092963478 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113280892 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091709562 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110650042 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.149607896 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101935548 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123583968 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088176655 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128569798 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.126951396 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08559434 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.12468095 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093322753 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126001186 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088563981 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.113671956 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086805765 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117111398 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098058932 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.116486015 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.112821803 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091479039 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.1320237 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089331945 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.143001254 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088611842 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116037656 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.08951666 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118641588 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.09760676 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113138016 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131418163 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089420492 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129372689 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103765508 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.126507812 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129194193 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090516012 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126047832 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101787017 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11562732 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089686882 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116120252 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104485005 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111335458 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.089227341 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.123034523 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115275623 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111228785 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136413694 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089113345 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123548802 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.112249998 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088152697 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113338045 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111231808 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117805814 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087692102 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11642272 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091209554 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.110886215 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087725237 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116587796 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086830015 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116739256 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091225261 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113444963 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090635017 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129527836 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11408369 seconds)
  done (took 11.686602149 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.088591359 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113481044 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090209425 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113885006 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089513916 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.113698154 seconds)
  done (took 1.557919227 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.112790383 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116344861 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102832055 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119500002 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154338431 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103266292 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.12819338 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122394162 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107753395 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12555517 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128018192 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104021349 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134400495 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120280769 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103604355 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.11913372 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103311949 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12304902 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125827498 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095268966 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.134587981 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119367564 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095254903 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.13019111 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117822417 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09400969 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124263413 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101962826 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125497583 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122818599 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095903425 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116683084 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096793449 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121922885 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128585753 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095472424 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119447607 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117251182 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.098085999 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116600252 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.1033153 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120709203 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125844266 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.092540169 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122264489 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119653535 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093124926 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123499569 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.101958835 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118067848 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.117179088 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094007832 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.116387655 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092471363 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.119221462 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122371445 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093357098 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.1301289 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121535213 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.09473261 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118463054 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092586072 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.1225359 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117106233 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103026443 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.117949844 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120003732 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095973558 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120456295 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.094810221 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118970594 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092147687 seconds)
  done (took 9.110794121 seconds)
done (took 33.515321581 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.68663003 seconds)
  done (took 1.634821571 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.819072724 seconds)
  done (took 1.77233514 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.904205595 seconds)
  done (took 17.884002815 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.485893943 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 3.304867616 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.98218397 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.177115508 seconds)
  done (took 5.902509732 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.946190238 seconds)
  done (took 1.917274354 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.280060638 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232614133 seconds)
  done (took 1.470614537 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.783656047 seconds)
  done (took 1.751211826 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.358883498 seconds)
  done (took 2.318076616 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.321775358 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181770372 seconds)
  done (took 1.468220068 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.543133473 seconds)
  done (took 1.507522278 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.425779008 seconds)
  done (took 11.394640033 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.263030045 seconds)
  done (took 1.245985517 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299006697 seconds)
  done (took 1.271093195 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.479708145 seconds)
  done (took 4.452231144 seconds)
done (took 56.951858378 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097743719 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125794266 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100460969 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122909465 seconds)
  done (took 1.413379608 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.099748281 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119708289 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099391426 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120195491 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124770939 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095320881 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121852023 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100339282 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119878559 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095541874 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119663478 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118438893 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098257916 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122340818 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092570614 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123648066 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098279801 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120445251 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12290919 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.0954511 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118165729 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096311844 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123621985 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093652861 seconds)
  done (took 3.614586485 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099830302 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117651717 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095604762 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117187585 seconds)
  done (took 1.40858636 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.098765672 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130042986 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104622535 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125380953 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130442563 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.104968644 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115450302 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.091305003 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118318754 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099714259 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.11545936 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138440854 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105221377 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123619766 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.100745489 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112603625 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090408739 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130182464 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123312042 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.099346339 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.116661297 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.098204201 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114698404 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.106973717 seconds)
  done (took 3.669980865 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169865806 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.125916856 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13717084 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094144154 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158897338 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139441789 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087837553 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139082994 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087081188 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129937306 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116931707 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132074993 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128540442 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.086986934 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112651888 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087138265 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127588405 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128369658 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09049009 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126357187 seconds)
  done (took 3.386877276 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097242939 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116881571 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087347146 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115431522 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.097945801 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12001102 seconds)
  done (took 1.613409434 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.089421334 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113559795 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.088987468 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113128808 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.092769138 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113816904 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.086824708 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113147447 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.087988123 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113311648 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.087491975 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112234351 seconds)
  done (took 2.1907268 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.496486384 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120302225 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.11888687 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089401139 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.120421851 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.087467093 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.12861108 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091511422 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.138877322 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088207505 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.113820437 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090081155 seconds)
  done (took 2.661608411 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232820183 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124554204 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.279837224 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364271423 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154147708 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163134511 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27391933 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159643451 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.19560363 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148512895 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228967954 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193785799 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149981053 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18909045 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136675754 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144286966 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187604649 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24685863 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151206296 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208655571 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203847192 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165658273 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178119967 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149602081 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110804179 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190854263 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094065565 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128527895 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204845008 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203136837 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186374245 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158819702 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144749088 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234334935 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245895618 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193439158 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275355494 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13287627 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.14202599 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165321072 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262217837 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137649631 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230939597 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153688381 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103215361 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218754644 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163819551 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174942803 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.144304148 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137991737 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195793413 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238110281 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192157091 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13684618 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298729172 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146478082 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.154948785 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186577388 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250306059 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222463792 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186272519 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.11906153 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186270262 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18826756 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209966576 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.123321385 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.207105194 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145722323 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180948883 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1879734 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164587338 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202010307 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178288817 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137927988 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169540727 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170955615 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171377289 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256140575 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184185871 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121008017 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167801514 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148040662 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10313092 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192571238 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124417543 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212650552 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1426479 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16182005 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206508987 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157014444 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159855591 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216526191 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18199402 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145973199 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082787222 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151183567 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15408689 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174526802 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139091153 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157120629 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154542322 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128131753 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166101386 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096784468 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181795667 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117611381 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172540275 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181961196 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127011031 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15933646 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151231716 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148907875 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175435992 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198900408 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139734735 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131275191 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206722492 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175945434 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140498525 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176120985 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224609289 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116544114 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147712023 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224496859 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215077288 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140118519 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225891331 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125115364 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133994372 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13202757 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179483319 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153781915 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160488366 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131296748 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181022914 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204534049 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125489974 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136489819 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192523314 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132353909 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130985042 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151991717 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120135611 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.136535663 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14136734 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.143153667 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173361329 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178211144 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153131338 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165155998 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149090778 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247513713 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138020948 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123361757 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146604573 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119952538 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191861181 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222732777 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102877702 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230293208 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.169446875 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19634771 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167043735 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132953916 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175822292 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129454678 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.091915282 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217891717 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165902437 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160687507 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195041267 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220513328 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.178408549 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.179909249 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164490925 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199738448 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.136406757 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15481655 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.136761239 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158760121 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157469896 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122177212 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.110448069 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132953485 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149014919 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141323425 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104652495 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223293888 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167784624 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213419905 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130450619 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146179498 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178194171 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128092436 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174307946 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.20237361 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117948905 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.22363483 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19158094 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182871529 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141863889 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224916576 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.092005446 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124660905 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.139976221 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168327377 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104850775 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134193031 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160617154 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179678583 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204503077 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169660058 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20325471 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198406156 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187796796 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094293143 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167000381 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181661411 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1751292 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.178162081 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139899945 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.148949374 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17487133 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153040927 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252073438 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168165323 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17374966 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203381559 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149960188 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130708651 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148359979 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175665138 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151496443 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174436271 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14472243 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138152597 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158345759 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10129437 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158326223 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211260472 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160805665 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186034051 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148298211 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183715424 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127484844 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160245 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158742689 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164093704 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080190595 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200008725 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201401246 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145201031 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164698753 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186016193 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12999438 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306303957 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232915767 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193368824 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136392415 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154931909 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159739313 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161115557 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168770431 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176894644 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158001451 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186960463 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15729419 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134162091 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110445888 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148991018 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151817551 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131190166 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146966811 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176599618 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.135817247 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188112316 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1531612 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156996066 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170111261 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148353826 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.116325656 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148737802 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240149215 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182886368 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235993379 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.121653403 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.203525523 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206157499 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125649299 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10275409 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132909491 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176695587 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134948154 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189965164 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.211998494 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197714868 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179648498 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204115723 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110772012 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119181596 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156213566 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166817935 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201388085 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147488862 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.146241213 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228017932 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109394996 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130134566 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165315805 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287026883 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144731352 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192989827 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106193442 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275361937 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098948241 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130573088 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161190949 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232519407 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.107365368 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176281402 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169662372 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160075605 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162625735 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148274025 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190467793 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235628232 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197669595 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208440393 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104470402 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155818817 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173708471 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218727242 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153889639 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.109241353 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228331592 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194704382 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.193714758 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141003289 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167686291 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166942267 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156917335 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211527439 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106033613 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233478579 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105343008 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21712961 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151159282 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136990677 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175499862 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.18673266 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140148084 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185677174 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208415593 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106611054 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132115401 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1649607 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175792512 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153091558 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127227346 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181065031 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124705328 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195210671 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258130859 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132260843 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1534765 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118326016 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135611338 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153004866 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157224378 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138960333 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139527751 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22470957 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13310952 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189166626 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198145726 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196594278 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173893347 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144479793 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691523709 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102011566 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220096328 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117533744 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233123866 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150448956 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172011839 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158807479 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167258032 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191922704 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160219634 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.227835699 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217017917 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178026259 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131116043 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156360515 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152420328 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.114994177 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151623582 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166776637 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158160249 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144807181 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176152037 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189360939 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.10627542 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138640992 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197005162 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148502499 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184259486 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177983403 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138843239 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171097945 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211564097 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104668801 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.205493524 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206027816 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141377252 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148395793 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.131975942 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.120388966 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258973838 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124869083 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186828966 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182478833 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15722204 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166442149 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145046043 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218791303 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155310903 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184317878 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139993015 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157723245 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155047312 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137157549 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101897547 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155818349 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165850964 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148859038 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158115093 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.161871189 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193670208 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094041831 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142857993 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309382765 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175503095 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213482539 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.1353319 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133720202 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160135122 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120972136 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.202768481 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178313495 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.133831148 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106462974 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136485004 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.127470619 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137394694 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153575833 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191512278 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164547656 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232269316 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.108342526 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277739107 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138189654 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153997074 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087985372 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130854041 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148139016 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115822828 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154186274 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217517378 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259132483 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.121420916 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13395949 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147667635 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124180469 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108217066 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163373024 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164324853 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175944108 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144092596 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.107811195 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154053119 seconds)
  done (took 81.533640416 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176929449 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.138289012 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149987223 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203205887 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175902612 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268884286 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208716313 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251851028 seconds)
  done (took 2.647811959 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092659544 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14434253 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156101223 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131464134 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090242306 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118313731 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.338723103 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132176768 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.11523105 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.119880814 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.171712767 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092762553 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.541748803 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.089351058 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.11842254 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106874651 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.090349016 seconds)
  done (took 3.716603564 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 46.989523118 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.505083043 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.945424732 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195015502 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.80687745 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.094209809 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.71444691 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.167998248 seconds)
  done (took 60.492306048 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.113914399 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136031844 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.121711657 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.151318204 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.139500675 seconds)
  done (took 1.733619154 seconds)
done (took 171.050397653 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.095808405 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125917111 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.095889475 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128436586 seconds)
  done (took 1.509814671 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093598768 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069663065 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099583216 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073628358 seconds)
  done (took 1.409956087 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.187124264 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.16655495 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404006868 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070691928 seconds)
  done (took 1.581404747 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112621838 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13116486 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10378388 seconds)
  done (took 1.431298467 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.104787536 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127891523 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102689272 seconds)
  done (took 1.417071518 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104664162 seconds)
  done (took 1.184662919 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106152355 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135439506 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107612996 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135351817 seconds)
  done (took 1.564725208 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097721513 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125580706 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.107891995 seconds)
  done (took 1.410582991 seconds)
done (took 12.938444234 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101844469 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.416189233 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383550445 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144241486 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.71976475 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.37932726 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032598596 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144762483 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163293971 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092293579 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137401083 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.669590556 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.061137411 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.371286171 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.019475213 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371132921 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676225199 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120206748 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11868789 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092092341 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018065203 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090983871 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120552807 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09166042 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702995675 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424278735 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094018484 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.374037018 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.090764434 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125040139 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381211754 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121164885 seconds)
  done (took 16.919073298 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093702292 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172039924 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097323032 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135972199 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12167826 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095378156 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123137025 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092370502 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177467015 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121223826 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109176008 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120238088 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124469216 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094287583 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140990736 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091248374 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124249808 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091888883 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120253305 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120501769 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111366285 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11918408 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.092889899 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120575106 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092350982 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134428721 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120702753 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092400952 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119646944 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096934602 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125599463 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093433957 seconds)
  done (took 4.767205605 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139193349 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181110111 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126859754 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124834678 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167046759 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122623316 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197090773 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116357505 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182286031 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122507144 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137973417 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092239791 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154989321 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.092849422 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140755066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11951648 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095624297 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120685642 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091141263 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122174425 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137958708 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092007183 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120160837 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091481489 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122094581 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106656901 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122645712 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119905033 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093151528 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125106473 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098748392 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122401599 seconds)
  done (took 5.087714338 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096569772 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124882939 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108372028 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.136858021 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094068567 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124737251 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096242069 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123592818 seconds)
  done (took 1.988354022 seconds)
done (took 29.843430752 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.109006569 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126195368 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106381101 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132660242 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101664437 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130913289 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090390117 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132390481 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132176414 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101884097 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136016086 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091553413 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122298484 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091704422 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133752258 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095934031 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131592755 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10097219 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132288231 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13052199 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.093665566 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131323017 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101718323 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13185783 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.102364479 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132149616 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136909809 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.097908227 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121022029 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093484708 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.122961174 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.102604889 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122382843 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.103695097 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125450413 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.095944778 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122612798 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092409062 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132797903 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.130351032 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.097960003 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131663594 seconds)
  done (took 5.930302006 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106268468 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138199633 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.103841997 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079646474 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11592727 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079094051 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137186616 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078270931 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109194304 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106196083 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073080723 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105314885 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077794627 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100437119 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.075832236 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074242049 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107140133 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07519386 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.074638785 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.104872209 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.078688734 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071575876 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107716213 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077257055 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07365764 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.108622717 seconds)
  done (took 3.529316389 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099052801 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133187574 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111268265 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182569952 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159448199 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098035997 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130746495 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13840347 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107505251 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119574842 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09535949 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147921738 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108664357 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128232327 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090552642 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136441624 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134126034 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.092550603 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126970513 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.110550739 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137226765 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102379246 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13939651 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131606169 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091431178 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121364874 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095599009 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133227632 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.095979551 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130484426 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095261526 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.123417937 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121848199 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.102857882 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12475145 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094267467 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14119237 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101818659 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129763636 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.090863824 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.128437879 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120789892 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.112322717 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160166522 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090352286 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127885963 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.093829427 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131173597 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119995416 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110301908 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13006754 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.090781918 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123996873 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090469749 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120068598 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105952194 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123060377 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093651533 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.12999396 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125512601 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104376848 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123953909 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108113801 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120387932 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.098846028 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120446952 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091842138 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12006236 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141917663 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094060468 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159380441 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09123974 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122766577 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100815078 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128917278 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126843943 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092013584 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135282522 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101871753 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124019741 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100784388 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124557232 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095165101 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.138699821 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.122392932 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.09478656 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121112024 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099139249 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.12371839 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093242286 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134953467 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.090643861 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124173004 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109913764 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120309038 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092836943 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.12763922 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124709077 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091571686 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133749073 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097514912 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121393711 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101003039 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.12124815 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122577918 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102727884 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.124521798 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090936543 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125396546 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.0976013 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.121500119 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092656115 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124768637 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093326633 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131496076 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098085523 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126017611 seconds)
  done (took 14.647780536 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226834852 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212444024 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.231720554 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261595672 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134723995 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115026766 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.208425858 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.153706157 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122359461 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158424921 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172511479 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180192892 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167123739 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.178835188 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.167510713 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.091526868 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.140431816 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.162533539 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212975349 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.255287361 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142197553 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099589459 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.158259184 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157361243 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.135692805 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.130802019 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.10932225 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.131988357 seconds)
  done (took 5.72598126 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107171382 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153998846 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097136404 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143424657 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147038398 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091974185 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.1271432 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.092989609 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134461495 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133966336 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092497711 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128027089 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099783842 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13087122 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12160192 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102378461 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131164368 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094722768 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125522486 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.095677301 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132367258 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101001635 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126619999 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.12008036 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102020743 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119863215 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085228409 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141008253 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120465653 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114067261 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.118828091 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10038215 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135580649 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092904351 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121777315 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094334864 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124093955 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.093999681 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12497061 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090443244 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120825335 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07598733 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120449272 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10559319 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127526905 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.078940389 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129625776 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126530163 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094929623 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119740209 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095056134 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12447845 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095865478 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129224944 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095004533 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122845301 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.094980543 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114567777 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098470433 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123229697 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.083961411 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.119647977 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097380175 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116238376 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.099940616 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127042998 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091716504 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124357324 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096258769 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127304174 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.093630989 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128605681 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.089361937 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124940629 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094751087 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127763174 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.094670243 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121042953 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120424803 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093620728 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074483246 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121817795 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.072957726 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12508096 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.090611492 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120929854 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094406502 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128480094 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13696465 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094758605 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130667519 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093716041 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.120466006 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095536406 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112248715 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095295779 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138071007 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139755867 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093329472 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120171271 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106743206 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124031508 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.091663586 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.104804034 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10158579 seconds)
  done (took 12.81860696 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.125105052 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.151657676 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.093495632 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.13943583 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154078638 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155314377 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099823312 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128913565 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09422513 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140220301 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092847757 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130324876 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.092569391 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136335066 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155261338 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102656646 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123526363 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106482578 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126243253 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.166350135 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110140826 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141491274 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108949202 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123114862 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.097610607 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.13819382 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159141701 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.10579102 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135518566 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14090766 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10666398 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159637227 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111851504 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127150908 seconds)
  done (took 5.402365449 seconds)
done (took 49.138620904 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.18726835 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.425259774 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.187083843 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.133911678 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.204333615 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.216656041 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.197505239 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.187028061 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.716906843 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.19235355 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.445924239 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.74123961 seconds)
done (took 59.949628562 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.264074174 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.324167686 seconds)
    (2/2) benchmarking "String"...
    done (took 1.455190737 seconds)
  done (took 3.896206772 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.55834234 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.130675717 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.450401767 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.186216245 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.203920883 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.483653637 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.871599425 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.523507874 seconds)
  done (took 27.967087234 seconds)
done (took 41.804234674 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.17568948 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.251542269 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.20099214 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.168707383 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.299873853 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.215997343 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.48219135 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.216434543 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.205962443 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.169968739 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.212213237 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.188816699 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.226995886 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.542182778 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.194578262 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.188632224 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.244825341 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.721462926 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.603740023 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.194988992 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.203973859 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.221574518 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.20446676 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.19106553 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.274362017 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.19441013 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.189502105 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.192536188 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.711503222 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.194144076 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.202973325 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.728544115 seconds)
  done (took 190.331409205 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.189686564 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.298352251 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.330878015 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.240142158 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.797476322 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.387934137 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.337540898 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.859301612 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.208959151 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.209045044 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.417592934 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.194450501 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.49681239 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.164175027 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.219779502 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.271105157 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.387817737 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.499238148 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.229928911 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.350599585 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.215951747 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.530865075 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.465555911 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.380293865 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.218725605 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.240751256 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.21642231 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.234369326 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.402799742 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.324149233 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.249046039 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.199318248 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.805490656 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.047423587 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.209253957 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.204270628 seconds)
  done (took 150.154538334 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.193038559 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.19155628 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.191829965 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.224482502 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.191347498 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.756492685 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.757096377 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.697277398 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.644778352 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.521942892 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.451735125 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.192568174 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286920153 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.206052767 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.197115605 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.209033987 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.236735584 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193058609 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.192040111 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.77402199 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.20822863 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.192676349 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.369231215 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.20981895 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224368056 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.583066844 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.27007285 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21033185 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224973166 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.524833201 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.243172512 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194259842 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.556837682 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.428902995 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310478823 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19778541 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225528264 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.194155897 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.473726307 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.193016343 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.19510559 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.196755323 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.843899897 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.194506786 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.194482679 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.759476365 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.142345508 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195433461 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.194954889 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195772036 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.601571962 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.822848262 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.211261884 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.194041435 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.198171274 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.19461817 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195552554 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.228667592 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.610743335 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.289970938 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.212398119 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.195911963 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.198702442 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228504049 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.194566991 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.244672006 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212125824 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.645976488 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.266713317 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.414495605 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.777063265 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199251656 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294327351 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316670544 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.195448284 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.195609409 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195381641 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.195760072 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.307413997 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.196405854 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.617035596 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.372210359 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.212962644 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.521103808 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.293859038 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.196887258 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.62392597 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.197327553 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.197052902 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.961768634 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.293150714 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.195881146 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.196276001 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196414606 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.196439347 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.617527797 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.763938079 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.469812563 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.19642391 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.757293091 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.201754076 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.634722764 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.75531446 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.904777213 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.201676285 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30892686 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.372922708 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.214750383 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.197471699 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.527844283 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.197608081 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.25411274 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200601256 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.597918765 seconds)
  done (took 365.466114761 seconds)
done (took 707.071324312 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.800758692 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.793358567 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.906164677 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.78992558 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.755753474 seconds)
  done (took 10.171131259 seconds)
done (took 11.297812947 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.384651707 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.383210177 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257300943 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.385412602 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230871272 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.402225779 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.365415628 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.22188293 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.299341712 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.280304134 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.300028002 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252365041 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235669691 seconds)
  done (took 18.124874659 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.522269801 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.51033904 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26323788 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.50624764 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239573311 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.518961528 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.401968856 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.416084793 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.41526525 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.233151105 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.212652734 seconds)
  done (took 16.367543412 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.521415447 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.564017771 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266458693 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.515587648 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241296409 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.520314605 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.402562704 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.41473342 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.417591128 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2350756 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.212143847 seconds)
  done (took 16.438278183 seconds)
done (took 52.057677946 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.208748339 seconds)
  done (took 2.33658744 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.244251152 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.408203306 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.228464003 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.214855963 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.209941122 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.21015216 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.214870823 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.210182865 seconds)
  done (took 11.0693293 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.206517402 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.206524459 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.20665747 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.206852797 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.207267214 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.209333736 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.206757803 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.209948253 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.208601281 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.209381867 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.209458362 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.209228974 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.206730223 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.206839147 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.210580848 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.209936757 seconds)
  done (took 20.458695406 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.20937296 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.207230378 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.206867511 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.207644281 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.207910148 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.210859454 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.208572827 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.208201925 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.207026853 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.208793251 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.209044096 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.207573593 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.210067004 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.208442156 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.208726934 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.208978325 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.208149462 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.20887477 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.212582082 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.208472046 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.208711668 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.208177414 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.209101148 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.209794741 seconds)
  done (took 30.141628891 seconds)
done (took 65.135347405 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.837326623 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.897921105 seconds)
  done (took 6.86624377 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.211914658 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.210691463 seconds)
  done (took 3.554067386 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.2117182 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.212148457 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.212357393 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.2129963 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.210389569 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.211266365 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.212028938 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.211728384 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.21109703 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.211480657 seconds)
  done (took 13.249311653 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.211626146 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.21234847 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.210304838 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.211477274 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.211534443 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.209732361 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.211609 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.210946465 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.211935006 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.209639088 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.212280089 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.209901878 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.2127802 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.210145633 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.212752232 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.209948959 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.209442824 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.210564689 seconds)
  done (took 22.930718334 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.213106565 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.213021828 seconds)
  done (took 3.558095171 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.211234628 seconds)
    (2/7) benchmarking "second"...
    done (took 1.210555804 seconds)
    (3/7) benchmarking "month"...
    done (took 1.210113458 seconds)
    (4/7) benchmarking "year"...
    done (took 1.210086135 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.210678416 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.211037638 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.210876665 seconds)
  done (took 9.607561685 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.214299179 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.390105401 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.468752798 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.813538685 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.213373722 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.216797756 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.070234942 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.217304116 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.220494142 seconds)
  done (took 13.957657407 seconds)
done (took 74.856415418 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.236667333 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.226720161 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.452832324 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.217031647 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.227392748 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.510045357 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.213998008 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.333274735 seconds)
done (took 37.553107215 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.220383895 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.199499451 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.980031967 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.192328564 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.247424878 seconds)
  done (took 18.754325267 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.247306933 seconds)
    (2/2) benchmarking "read"...
    done (took 1.544645539 seconds)
  done (took 4.926602068 seconds)
done (took 31.036144583 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216192315 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.21440372 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.213587333 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.215684907 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.213362692 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.216303896 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.213582653 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.213567904 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.216279368 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.213136855 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.215756117 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.216160025 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.215734242 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215452936 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212716379 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212098514 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215870434 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.213984695 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215072566 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212290229 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.213185887 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215985278 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.212688312 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.213465221 seconds)
  done (took 30.28240361 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.216434965 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.213404873 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.215762659 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.215316041 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.21255939 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.215534652 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.215827056 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.213911584 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.215392036 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.217956745 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211651368 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.211557923 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.21350123 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.211713035 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213211133 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.211626053 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.213874391 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212852487 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212521568 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.211154813 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.213281991 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211317324 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.211889817 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213177875 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.21068218 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211613916 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.215083649 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.211095 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213065084 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.210799324 seconds)
  done (took 37.531783407 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.218146078 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.220576571 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.214046724 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.214045977 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.212614187 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.214131384 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.212761766 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.213848126 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.212947925 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.213854606 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.212923151 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.214514951 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.212126822 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.21371018 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.212842493 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.213026028 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.213749727 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.213329862 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.213004307 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.214687919 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.213189023 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.213182094 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.21416798 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.212655565 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.214120543 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.212916083 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.21398565 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.211718402 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.214819738 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.211432471 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.212704164 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.212939242 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.212668025 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.214583508 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.213158085 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.213146974 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.21809813 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.219434726 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.212538533 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.213349416 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.212707147 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.212446971 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.21421054 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.21355633 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.213496805 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.214463856 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.214014906 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.213188292 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.212596181 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.21378374 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.213280459 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.213930902 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.213601329 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.213374471 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.21476725 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.214010283 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.214912356 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.215168584 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.214283297 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.213582171 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.213944846 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.2153874 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.214898251 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.21488073 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.215659675 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.214456194 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.21373106 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.214457997 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.215748274 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.215777007 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.214881854 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.215828997 seconds)
  done (took 88.545763381 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.216386111 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.213608338 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.212476589 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.213844835 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213092183 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.215672488 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.214743391 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215746185 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213092734 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.215813531 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215017883 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.213308571 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213805153 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.216485665 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216088175 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.212898449 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.215798277 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21314401 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.215606171 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.215931573 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215819303 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.21396776 seconds)
  done (took 27.857048435 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217241681 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217658664 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.213747747 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.216155379 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.214353558 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.216530304 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.216631027 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219324407 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216107747 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213726255 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214666864 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217038975 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.214525505 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214345579 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213952776 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.215703837 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217206457 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.216798734 seconds)
  done (took 23.020978142 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.216185164 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.215215525 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.21710132 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215510607 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.215137458 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.2175596 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215273586 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.218192084 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.217862063 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.215607674 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.218923132 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217672288 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.219685309 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214932897 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217568626 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.216734093 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.219683617 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21613529 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219792649 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216544486 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.216392383 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218802368 seconds)
  done (took 27.913321708 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218719608 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.219182784 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.217145913 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.216732768 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.217657774 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.218579773 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.219838597 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.217211567 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.220625085 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.219535386 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217200099 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.219688582 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.219231449 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219132715 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.217499013 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21700414 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.220312167 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.218319341 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220478161 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.217282278 seconds)
  done (took 25.508919074 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221033835 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.22133084 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.220238995 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221297737 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221689626 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.220816604 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22147699 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.221441285 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.2220349 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.221483776 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.22230182 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.220972209 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.221367861 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.221173836 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222360835 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221201765 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221631224 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221616249 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222889581 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.221369365 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.222868029 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222214972 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221988874 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.222614665 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.222349973 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223222476 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2221866 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.223642733 seconds)
  done (took 35.349641171 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222822553 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222526567 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.220692228 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.220460159 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.221634476 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.220572847 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.220990951 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.219858953 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.222316511 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219549259 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.222179511 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.223322318 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222410757 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.22329056 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.223076057 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.222465917 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223136364 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.220831797 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221350337 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219515384 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.223902096 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226937583 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.223480919 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.221374114 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221039654 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.22274179 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221841432 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221071811 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223435727 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.221873713 seconds)
  done (took 37.802118339 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.24322852 seconds)
    (2/2) benchmarking "in"...
    done (took 1.242566783 seconds)
  done (took 3.62758351 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.221188474 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22476492 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.223452734 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223491473 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.222197584 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.224992306 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.223997979 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221375767 seconds)
  done (took 10.92697181 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.225286398 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.224818836 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.227292864 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.224874793 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.224584414 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.225595798 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232904141 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.244508911 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.225464027 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.226284868 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.232980716 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.235756929 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.227191532 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.225966332 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.225140343 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.227708118 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.225498787 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.224991113 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.226186079 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.229102797 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225277841 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.227897946 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.227143537 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.22252427 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.226008885 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.236197707 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.248318396 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.227266496 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.224944678 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.228743939 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.223769829 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.22154556 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.225018988 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.22519657 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.225371288 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.227340255 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234826919 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2444658 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.230631265 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245374901 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226484242 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.222396261 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.226146687 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.227921255 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.226882915 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.22544566 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.226038234 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.223715309 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.224560738 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.228442626 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.230684142 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226230147 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.222972059 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227941917 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.227142152 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2318064 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.24406788 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.228848395 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.235823732 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.236047709 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.257816581 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.249680103 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.227947842 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.224758706 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236168628 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.250203325 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233946106 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.243246786 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.224525182 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.227261431 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.232020828 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257894619 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.250929536 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.225227291 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.22690252 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.22708923 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22829912 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227437582 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234975167 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.2497544 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.22729198 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.226864263 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.236283271 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250184579 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.226861238 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.226903642 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.228474735 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.232621566 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.228585647 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239418451 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.24714998 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.228334552 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.227735052 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.22813774 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.230444128 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.229281672 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.226586484 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229486478 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.226937192 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.228474612 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228468033 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.23162332 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.237149942 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227776081 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.228694533 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.235118471 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.248887901 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228006956 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.235441676 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.227693545 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.228495224 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.231099499 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.23477852 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.226216266 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232536384 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.237912282 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.230311404 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.230658746 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.228333522 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.230405756 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.239922313 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.255393827 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.229910868 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.229991509 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.234773999 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.240767816 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229875175 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.232836023 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.23061812 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.227330323 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.228612166 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.231714737 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.230653807 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.231306937 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230717899 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231880738 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.228177932 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.230491374 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.229189215 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.232406275 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.232578644 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.231066468 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.231801312 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.233396625 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.231163102 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.233230547 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.237762306 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.250931588 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.231901078 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.232413603 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.229578448 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.232354007 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.232587036 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.231682834 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.23211569 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232861257 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.231137755 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.231919117 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.232930516 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.233483939 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.23294888 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.233583472 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236589057 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.233388561 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.236829653 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.232268092 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.230353627 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.232500698 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.23282162 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.232616436 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.232563006 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.232884829 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.236685549 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.241352043 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.234060879 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.233079167 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.236481256 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23241334 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.234672628 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234050732 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.236271314 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.241756936 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.232577294 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.240039015 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.252863488 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.233652707 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.235497442 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.234872442 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.233893468 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23373818 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.236930949 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.241206031 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.246736005 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258799451 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.235762583 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.238831131 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.234991721 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.237590628 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.238495355 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.235258578 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.235182953 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.233642585 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234670376 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.234752692 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.236410428 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.234738709 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.235141276 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.235609126 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.234969089 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.23570498 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235887486 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.236572768 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236295871 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.232843166 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.236850968 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.234661633 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.235079128 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.234200875 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.236320291 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.235627517 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.235967644 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.235926803 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.243756376 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.233703883 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237523549 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237894783 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.235957637 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.235872359 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.236174073 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.237862447 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.236835656 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243358783 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.255783044 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.237635564 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24278449 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.254732923 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.237721641 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.239825811 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.238244322 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.234918632 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.240104903 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.246414021 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.237881405 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.238239464 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.23762972 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237948218 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238668364 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.243620984 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.255148082 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.237945822 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.238424838 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.239989937 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.235043524 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.239114753 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.238929161 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.240577925 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240901959 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23949061 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.239486047 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.240397584 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.239381577 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.239047559 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.239275926 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242542033 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.24661889 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.24552778 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.239427441 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.241034875 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.240054812 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.243665083 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.240704886 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.240928917 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.239324042 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252949538 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.265036948 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247056045 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.260095651 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.241488437 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246059658 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.261388085 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.243461183 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24030699 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240252511 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.241094104 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.23931938 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.237799132 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241316489 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.241198528 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.242044489 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.242465406 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.24563105 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.241344045 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.240743088 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.242082329 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.242043352 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.241965856 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.240780956 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.241244874 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.242958148 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242347028 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.241662838 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.241785343 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248414601 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262126902 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.241798473 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.24182448 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.241146279 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.24115244 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.242983322 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.24186623 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.243998533 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.249898643 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.244807284 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.250686016 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.24327427 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251589739 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.241948358 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.24452062 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.250006181 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.239004012 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.242383517 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.24317332 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.243798649 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250261452 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.262580748 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.244071293 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.247934189 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242028246 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.243381565 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.243522002 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.243605943 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243658657 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.243134384 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252098157 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.263143235 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.247843016 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245155275 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.240491876 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.244299096 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.243985706 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.243043173 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246888214 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.243513405 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.24361998 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.244052004 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.244098348 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.243971312 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.244000044 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.245055074 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.242925923 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.245170151 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251347034 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.265278846 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.248780734 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.24460795 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.251561574 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263518774 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252729278 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.265105365 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.245022936 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.244404279 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.24500252 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.246825445 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.245536006 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.246541656 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.245271768 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.245989793 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.250019807 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.24651556 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.247745718 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.246708685 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.246301351 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.245729895 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256323596 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268345389 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.247933703 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250250881 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.244168796 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.247601953 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.250299709 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.246822644 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.245825514 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.2492067 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256183746 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254759055 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.246990392 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.246206058 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247310342 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246222402 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.248331937 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.249359981 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.247453382 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.247359537 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.24687629 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.247164716 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249846539 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.248021515 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.248951018 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250442834 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.247024444 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.258270982 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.267194922 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.248645623 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248838334 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.249057611 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.248816705 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.247410733 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.247579693 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248759659 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.249049885 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.250676243 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255776768 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.254740247 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.251958823 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.248473526 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.249075337 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.250377423 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.251573715 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.249878081 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.249640261 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249166899 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.250133908 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.249371645 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.249718135 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.248552238 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.25039767 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.249615874 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250830316 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251875041 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.258345993 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251095102 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.247002123 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.251134457 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250794066 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.248389382 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.251361354 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.256991038 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272250654 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.260876987 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.258943324 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.255386648 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.251220342 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253726669 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.258878528 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.249535043 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.252855105 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.250607552 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.25147853 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.252273081 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.254405001 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251151332 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.257357236 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.269557913 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.251613935 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259590406 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.270748372 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251208206 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.252156094 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.255693017 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.250689546 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.249066896 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.252118992 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.252334336 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258445735 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.272697696 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253013276 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253352246 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.250964717 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.253162798 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256469726 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250982081 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.253456262 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.250380809 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.253573184 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252570456 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253368559 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.250976453 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.253159329 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.253630874 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.256353945 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.260899124 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.251458777 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255225803 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.252645374 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.254194708 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253166401 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254026122 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.252042157 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.250813483 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.253557955 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254811334 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.253674139 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.255992801 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.254681993 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.255865857 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.255868204 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.254539999 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257432295 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.263743029 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.262187331 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.252227081 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.254666933 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.25633193 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.257672726 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254638062 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.25490599 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255126736 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.255522258 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.256165165 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255249674 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.25615699 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.259329269 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272114335 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.274619852 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255543367 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.255844771 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257781699 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.255779811 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.25342636 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.255171301 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.257821685 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.258759489 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.263725737 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.255747185 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262422737 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274666083 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.256898939 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.261502506 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.259711053 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.263655589 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.258871617 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256661746 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.256607817 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.261487009 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.272940498 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25737155 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265590916 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287718111 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.277376597 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.257824968 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.256739943 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255865521 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.257099667 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.258555924 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.257467367 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.25824991 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257955424 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.258051126 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.258251377 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262830385 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.259125422 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.258848988 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.258703553 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.257712778 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.258460239 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.256375168 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.257752644 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.257807749 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.258736145 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.258495071 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.25869029 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.257886315 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270791717 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.285202321 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.2594168 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.259102547 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.256874999 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.262293981 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.261450593 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269877451 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.26530642 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.259395896 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.260178346 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.261251657 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257918979 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.258487006 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.259548164 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.259045464 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259890763 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.256868339 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.27303443 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285080819 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.264636892 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.259525266 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260659792 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.261488079 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260126102 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260993345 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259292427 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.261902176 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.262731531 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263424325 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.260836374 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.260325226 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.264332182 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.268373973 seconds)
  done (took 742.889218322 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.259203375 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257975247 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258355749 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.258775104 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257740384 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258121494 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258387731 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.258510829 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.258623009 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.258947069 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.25918497 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259060999 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258549454 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.259574578 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259248143 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.259558329 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25943966 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.259672719 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.259914996 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259823871 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.258912119 seconds)
  done (took 27.613420816 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.263131791 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.25980581 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.260477954 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.262231063 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25922723 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.262838377 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.260859118 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262330649 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.262323901 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260972025 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.263265457 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262057004 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.25981458 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.259984611 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259294518 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263582827 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.263769533 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.261579291 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.264410926 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.260837914 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.264073634 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.261215541 seconds)
  done (took 28.934989501 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.263543303 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.262840924 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.26245987 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.261847316 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.265103837 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.262365806 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.264693434 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.263826239 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.263548539 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.265028658 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.264015995 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.266429894 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.270944506 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.269408561 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.266321755 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.264312559 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.409258717 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.265298746 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.265927824 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.265056748 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.263157988 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.270413405 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.283319916 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.262348175 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.265493746 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.266267778 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.265714638 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.26552296 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.265833223 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.265090665 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.270165672 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.265305203 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.265301698 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.267611738 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.265426704 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.267939286 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.270161972 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.265089951 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.263685365 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.266981706 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.276133351 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.286855601 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.267807524 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.273179231 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.286760026 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.267361763 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.269038556 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.274370222 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.263907627 seconds)
  done (took 63.42854438 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.266907206 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.267376238 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.264787974 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267914758 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.267775218 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.267624428 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.267310276 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.267648906 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.265029376 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.264200599 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.267551801 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.266037425 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.264772761 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.267016096 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.266946369 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.265514185 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.265296951 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.265795435 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.264257401 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.265312859 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.266879696 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.267865828 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.267996274 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.26596447 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.268197658 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.266062391 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.265673852 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.268620835 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.266908449 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.266975118 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.268638983 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.268759957 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.26869505 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.266797953 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.267130974 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.26880493 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.269282087 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.266780911 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.269262844 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.266631155 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.269519368 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.269374179 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.269454759 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.270082904 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.267803643 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.267223916 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.267095947 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.267535209 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.267903626 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.269997115 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.269709452 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.269766162 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.270384949 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.268563251 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.270756954 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.271129689 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.267216033 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.267153593 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.270501379 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.267902326 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.268218823 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.270001737 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.26787575 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.272782562 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.271055614 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.268039804 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.268887915 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.271378013 seconds)
  done (took 87.397696365 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.270067587 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.270046654 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270710143 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270387713 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.270047228 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.270933498 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.270665221 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.270711901 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.270830106 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.27118591 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.271700295 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.271569524 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.271520538 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.271325726 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.272317748 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27024541 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.270802632 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.272011094 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.271658534 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271447504 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.270799528 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.271225717 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.271463171 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.272422347 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.271351515 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.271337074 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.271207255 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.272022863 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272925907 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.273356163 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27189956 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.271906413 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.272441014 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.272180458 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.272425311 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.272539973 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27267574 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272289135 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.272798746 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.272644822 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.272697255 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273749391 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271872266 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.273045935 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.272591632 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.271728298 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.273034791 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.273749362 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.273695414 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274532884 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.272560735 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273890646 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274057458 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273346081 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.273259856 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.27331797 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274992705 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274137668 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274709034 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.273406226 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274018523 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.274072358 seconds)
  done (took 80.066131104 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274955867 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.275532301 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.272549261 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.272573743 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.275124771 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.273061532 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.275607539 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.274488594 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.274965794 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.275156169 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274598982 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272264334 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272768693 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275128297 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.272947232 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273562202 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272879138 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.274042731 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275473506 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.273272261 seconds)
  done (took 26.671146517 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.274419849 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.275452785 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.273923287 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274348302 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.276315551 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.274458995 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.276687171 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275327122 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273985166 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276161938 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.276997159 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.278123676 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273798241 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.273874481 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.276646979 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.273562513 seconds)
  done (took 21.593330846 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.274295262 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.277465578 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.276715606 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.275231847 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.274156599 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.275174945 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.276393896 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.274437743 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.274503017 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.278099254 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.276775337 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.27717953 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.276936603 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.276953377 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.274301359 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.27765922 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.276874805 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.276044227 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.278058239 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.277629813 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.276897743 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.275888386 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.278126515 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.279323839 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.275589626 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.276691953 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.276391622 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.276024311 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.276668148 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.278345976 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.276439365 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.276173266 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.277785854 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.276899463 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.278688491 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.276817428 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.279536594 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.279501157 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.279287733 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.280359114 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.28016145 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.277261654 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.28049044 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.280188837 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.277417727 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.280055216 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.277395803 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.277955052 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.276492869 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.2777313 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.28091947 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.279475455 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.280661273 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.282116092 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.281140772 seconds)
  done (took 71.458979224 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281064237 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.279913944 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.277666931 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.280966059 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.281569248 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.279248483 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.281145973 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279000535 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278747966 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.281372906 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279259762 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.281940555 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278001325 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.281046549 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.280181356 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281747727 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.278197554 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.279240144 seconds)
  done (took 24.234480053 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.279566121 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28000686 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.281433294 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.277925678 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.279184885 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.281722801 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278680774 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.28158389 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281777029 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.279492692 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279297094 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.283623485 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282472076 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.282021121 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.281009841 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280379939 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.283498852 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282468899 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.280020851 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279668573 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.282621882 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283204399 seconds)
  done (took 29.377795518 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.281152203 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.281799669 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.282721554 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.298354497 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.30087816 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.304493043 seconds)
  done (took 8.945378346 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289982308 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283443747 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280477965 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283172404 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284077291 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281271459 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281004689 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280264654 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286111097 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281560485 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281795172 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284002852 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284012039 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282458715 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285007538 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284159434 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282478241 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281591605 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283311062 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285202126 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281499747 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284526636 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28272505 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282157834 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282234475 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282195663 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285324216 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28298273 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280708133 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284807835 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285741255 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282089321 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28523511 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283660956 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286040849 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285567814 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283269833 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286096223 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286182554 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282228175 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285679097 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286673991 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286732027 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283464186 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286555712 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284106505 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283290757 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28431627 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282725807 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286665736 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287310881 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282921993 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285909705 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287481853 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286520702 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287292674 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283889556 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284648738 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286632798 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285022092 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284836092 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286875383 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285476835 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285187803 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286689447 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284634384 seconds)
  done (took 85.983387458 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285561334 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284219282 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284631275 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287425152 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285757835 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285353632 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285590557 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285522787 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286378936 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285801174 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288740791 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28531276 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286234397 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287214564 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285929599 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286116172 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288133562 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287158973 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288009022 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289187291 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286696424 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28688405 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287123431 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286155607 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287212588 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288650555 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286577479 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286515358 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286667051 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28604449 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287189168 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286204076 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286495782 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287963899 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28658692 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286470178 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287393997 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287047639 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287965375 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289337182 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286572085 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290943845 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287483579 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288161739 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290382548 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290489352 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288620097 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287749245 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287583315 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287243708 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287739109 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287427378 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288816081 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287254484 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287962955 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287861069 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287144899 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287665805 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28913333 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290467462 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288367253 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288180182 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292150257 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288820767 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288694726 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2876827 seconds)
  done (took 86.172797008 seconds)
done (took 1734.269672649 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.452922258 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.408304471 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.289473064 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.28891691 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.28993083 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.303569465 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.309277125 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.290422664 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.289522638 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.290478897 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.288897237 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.47808039 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.28817433 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.290240778 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.289571155 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.385217172 seconds)
  done (took 42.43799702 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.319154601 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.296149268 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.410999301 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.319013052 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.318406992 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.482952503 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.354492745 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.296743115 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.469386113 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.336844025 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.876606512 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.31880405 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.295483955 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.421694396 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.313378507 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.483666472 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.552064778 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.893305917 seconds)
  done (took 29.964409513 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.757259538 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.321275235 seconds)
  done (took 9.284288688 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.314522283 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.29622519 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.297191619 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.295722977 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.28910655 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.311252463 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.293430645 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.287510617 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.03041966 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.428043443 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.301365202 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.303550063 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.313815755 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.29643652 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.292523735 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.332054136 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.4673585 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.293964996 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.293985155 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.301639206 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.297133242 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.388899857 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.339212951 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.294698969 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.425298629 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.032610696 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.303197544 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.303118227 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.449025588 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.296837891 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.296066152 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.296134339 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.298571527 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.903684443 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.742147388 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.311966721 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.337423978 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.305829053 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.295375501 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.434151645 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.300245102 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.302993895 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.300765796 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.727885496 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.431012971 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.415178616 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.526556474 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.321277286 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.298540015 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.359939864 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.298471228 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.298780386 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.327175184 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.062774111 seconds)
  done (took 109.580289405 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.331504735 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.678912278 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.458372036 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.316967752 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.919506925 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.978801075 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.312559987 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.590277133 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.353914173 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.291267806 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.586948276 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.809249958 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.317230693 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.299799184 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.921722718 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.358686302 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292953258 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.03313382 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.313903679 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.291879546 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.792997792 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291674402 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.302332076 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.458625589 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.329178873 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.750967037 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.711999606 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.585615156 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.312384881 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.292993238 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.75916685 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.309303469 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.332471507 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.294652815 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.556575952 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.657515592 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.65095506 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.313851851 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.343195378 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.29431065 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.325491896 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.747369511 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.656915808 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.311268169 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.300810178 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.751241428 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.31035254 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.299175907 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.300266367 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.494425153 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.979398421 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.295867868 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.694713946 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.294869833 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.662444563 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.356666649 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.367480311 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.784331862 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311643555 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.266976872 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.358635905 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.294433001 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.294268981 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.294364655 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.296726181 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.645289672 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.64757159 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.295511192 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.645101645 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.775440364 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.310863281 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.825765811 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.202774126 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.313180845 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.393333148 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.293744359 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.829521382 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.792259941 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.332590781 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.295672802 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.633152838 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.313516746 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.580235903 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.311168576 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.295560174 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.822891298 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.302747136 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.337747208 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.295348246 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.318709554 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.916288365 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.298511683 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.567575568 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.313473944 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.296630746 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.296371302 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.308911162 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.295662732 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.297107969 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.303285666 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.824348207 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.318641316 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.414919125 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.321397366 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310426131 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.297254895 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.299835377 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.297310626 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.516109311 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.773608224 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.322862442 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.299727009 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.310540238 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.302549944 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.466441446 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.302703881 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.609537091 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.315586219 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298102353 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.306155087 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.955942372 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.347349896 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297253043 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.302159703 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.188691353 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.502462225 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.316959732 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.299500581 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.298349988 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.316282646 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.566907005 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318305203 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.392826082 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.298792239 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.014430641 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.322405542 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.317594848 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.625287145 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.307277372 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.209763963 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.323549479 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.298782002 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.60162215 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.566907572 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.562407175 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.302245683 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.316249687 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.006411717 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.325030228 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.436975958 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.318931602 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.344451184 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.497630408 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.773334404 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.301814931 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.941348384 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.300705226 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.515119042 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.30040869 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.614559737 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.801157554 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.323293033 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.307119486 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.013976787 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.038438295 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.991170673 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.299213066 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.578651328 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.252155889 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.788151353 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.300355395 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.30177859 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.736949865 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.301130437 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.307556305 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.301906479 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.300622674 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.452766846 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.473856008 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.459161467 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.30922897 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.757039326 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.331727454 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.30956695 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.300535816 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.302012348 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.65074737 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.386983996 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.303509512 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.337159992 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.301231922 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.309259294 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.791766507 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.247144259 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.308008539 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.454460872 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.942757988 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.326945125 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.302419449 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.922945026 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.580879007 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.817494347 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.372513087 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.616590175 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.319717207 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.341806643 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.882887272 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.356629741 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.781923518 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.32282799 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.302692045 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.902786693 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.328109737 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.653398567 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.304568431 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.302910363 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.854340899 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.321018174 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.311061949 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.636423891 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.324997595 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553327341 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.3046591 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.316934908 seconds)
  done (took 1103.56031871 seconds)
done (took 1296.032438014 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.3043967 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.304158472 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.290467664 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.310827418 seconds)
  done (took 26.432681903 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.31345364 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.310336202 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.312578033 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.310045453 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.3175914 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.311143872 seconds)
  done (took 9.09932491 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.342434351 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.311306831 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.312082401 seconds)
  done (took 19.190053851 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.523411714 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.635534532 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.670667588 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.527312665 seconds)
  done (took 10.58209107 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.312341381 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.312318501 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.311720773 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.313045751 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.315285749 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.315966027 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.312975739 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.314764024 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.316115424 seconds)
  done (took 13.04845403 seconds)
done (took 79.577408574 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.691901156 seconds)
    (2/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.316204524 seconds)
    (3/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.055918199 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.959269499 seconds)
    (5/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.344343758 seconds)
    (6/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.307314644 seconds)
    (7/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.620173582 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.56653852 seconds)
    (9/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.341409319 seconds)
    (10/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.28715182 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.347228379 seconds)
    (12/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.332091778 seconds)
    (13/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.333199851 seconds)
    (14/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.621894365 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.335376703 seconds)
    (16/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.296599764 seconds)
    (17/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.522139912 seconds)
    (18/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.936708627 seconds)
    (19/286) benchmarking ("sort", BigInt, false)...
    done (took 6.309453869 seconds)
    (20/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.572954265 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.673326159 seconds)
    (22/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.746490378 seconds)
    (23/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.700492211 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.025182383 seconds)
    (25/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.559361654 seconds)
    (26/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.417373765 seconds)
    (27/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.289426777 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 6.30855748 seconds)
    (29/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.138240251 seconds)
    (30/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.313069836 seconds)
    (31/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.18713539 seconds)
    (32/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.300430777 seconds)
    (33/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.323971649 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.438913537 seconds)
    (35/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.433805345 seconds)
    (36/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.308446617 seconds)
    (37/286) benchmarking ("sort", Float32, true)...
    done (took 6.342903814 seconds)
    (38/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.335445098 seconds)
    (39/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.778823774 seconds)
    (40/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.307803284 seconds)
    (41/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.437789733 seconds)
    (42/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.390882737 seconds)
    (43/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.416639148 seconds)
    (44/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.311901036 seconds)
    (45/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.298374059 seconds)
    (46/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.400509156 seconds)
    (47/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.377191705 seconds)
    (48/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.77535288 seconds)
    (49/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.42616459 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.728194523 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.444329068 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.572009791 seconds)
    (53/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.432393353 seconds)
    (54/286) benchmarking ("sort", Int8, true)...
    done (took 6.30971342 seconds)
    (55/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.312450316 seconds)
    (56/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.320675938 seconds)
    (57/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.694917747 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.389599494 seconds)
    (59/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.081390488 seconds)
    (60/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.309310852 seconds)
    (61/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.335361779 seconds)
    (62/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.751589351 seconds)
    (63/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.309469203 seconds)
    (64/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.877018878 seconds)
    (65/286) benchmarking ("sort", Float64, false)...
    done (took 5.654535774 seconds)
    (66/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.289757819 seconds)
    (67/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.954748608 seconds)
    (68/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.887153293 seconds)
    (69/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.41492244 seconds)
    (70/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.29074343 seconds)
    (71/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.364893532 seconds)
    (72/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.082235173 seconds)
    (73/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.745565213 seconds)
    (74/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.329964409 seconds)
    (75/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.835022415 seconds)
    (76/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.553638975 seconds)
    (77/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.818418657 seconds)
    (78/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.339730994 seconds)
    (79/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.665481657 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 5.531823174 seconds)
    (81/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.395478339 seconds)
    (82/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.337697588 seconds)
    (83/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.337452862 seconds)
    (84/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.68549027 seconds)
    (85/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.774022169 seconds)
    (86/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.290991471 seconds)
    (87/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.543709325 seconds)
    (88/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.33761641 seconds)
    (89/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.291789166 seconds)
    (90/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.682153802 seconds)
    (91/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.297979485 seconds)
    (92/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.396883108 seconds)
    (93/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.291626939 seconds)
    (94/286) benchmarking ("sort", Float64, true)...
    done (took 6.312801229 seconds)
    (95/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.859571837 seconds)
    (96/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.352758013 seconds)
    (97/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.32109963 seconds)
    (98/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.173924326 seconds)
    (99/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.316632888 seconds)
    (100/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.338346705 seconds)
    (101/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.294093478 seconds)
    (102/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.438778203 seconds)
    (103/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.205743902 seconds)
    (104/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.34285456 seconds)
    (105/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.17629237 seconds)
    (106/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.570313306 seconds)
    (107/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.378741117 seconds)
    (108/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.492602526 seconds)
    (109/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.399865453 seconds)
    (110/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.526138143 seconds)
    (111/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.772823719 seconds)
    (112/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.315782689 seconds)
    (113/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.807841589 seconds)
    (114/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.51402912 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.670505559 seconds)
    (116/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.440472366 seconds)
    (117/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.184834874 seconds)
    (118/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.964980243 seconds)
    (119/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.46783204 seconds)
    (120/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.696651402 seconds)
    (121/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.293519041 seconds)
    (122/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.298567089 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.753575087 seconds)
    (124/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.815342466 seconds)
    (125/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.686734671 seconds)
    (126/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.333215241 seconds)
    (127/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.132842529 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.592421675 seconds)
    (129/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.975757055 seconds)
    (130/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.528803035 seconds)
    (131/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.29521098 seconds)
    (132/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.951856674 seconds)
    (133/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.300508635 seconds)
    (134/286) benchmarking ("sort", Bool, false)...
    done (took 1.849835274 seconds)
    (135/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.355375765 seconds)
    (136/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.547840924 seconds)
    (137/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.597484411 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.112360563 seconds)
    (139/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.383925686 seconds)
    (140/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.322845206 seconds)
    (141/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.569040658 seconds)
    (142/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.296445976 seconds)
    (143/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.315836006 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.544460651 seconds)
    (145/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.35870776 seconds)
    (146/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.418973744 seconds)
    (147/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.4388059 seconds)
    (148/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.298873831 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.139865283 seconds)
    (150/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.342283796 seconds)
    (151/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.352533825 seconds)
    (152/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.423546986 seconds)
    (153/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.31857042 seconds)
    (154/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.332120153 seconds)
    (155/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.297839545 seconds)
    (156/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.950391745 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.960923421 seconds)
    (158/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.182101935 seconds)
    (159/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.353786111 seconds)
    (160/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.398868647 seconds)
    (161/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.334500005 seconds)
    (162/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.321858518 seconds)
    (163/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.977025811 seconds)
    (164/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.302229793 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.253654034 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.297105623 seconds)
    (167/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.320811088 seconds)
    (168/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.298596309 seconds)
    (169/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.364067205 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.032757027 seconds)
    (171/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.42312227 seconds)
    (172/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.327168676 seconds)
    (173/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.323202026 seconds)
    (174/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.405758864 seconds)
    (175/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.297859702 seconds)
    (176/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.316599403 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.344194517 seconds)
    (178/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.297481523 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.376407391 seconds)
    (180/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.327295396 seconds)
    (181/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.415038413 seconds)
    (182/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.344630816 seconds)
    (183/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.302861658 seconds)
    (184/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.812903815 seconds)
    (185/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.57469185 seconds)
    (186/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.172175976 seconds)
    (187/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.157348311 seconds)
    (188/286) benchmarking ("sort", Bool, true)...
    done (took 5.422938643 seconds)
    (189/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.962773218 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.378947839 seconds)
    (191/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.377487419 seconds)
    (192/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.173480837 seconds)
    (193/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.318024305 seconds)
    (194/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.321807421 seconds)
    (195/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.906407582 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.944195902 seconds)
    (197/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.299124887 seconds)
    (198/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.859095348 seconds)
    (199/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.527716413 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.219762634 seconds)
    (201/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.345413463 seconds)
    (202/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.09714985 seconds)
    (203/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.329435195 seconds)
    (204/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.336046179 seconds)
    (205/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.328277061 seconds)
    (206/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.79131991 seconds)
    (207/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.609797006 seconds)
    (208/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.303028765 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.344130309 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.361617847 seconds)
    (211/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.34386342 seconds)
    (212/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.803230344 seconds)
    (213/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.306356872 seconds)
    (214/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.87490506 seconds)
    (215/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.507024377 seconds)
    (216/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.642132784 seconds)
    (217/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.129450019 seconds)
    (218/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.311693001 seconds)
    (219/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.733402794 seconds)
    (220/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.404486252 seconds)
    (221/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.348873865 seconds)
    (222/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.12927754 seconds)
    (223/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.301600306 seconds)
    (224/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.30133831 seconds)
    (225/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.348814474 seconds)
    (226/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.312655527 seconds)
    (227/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.308930569 seconds)
    (228/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.101629852 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.803533836 seconds)
    (230/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.39216018 seconds)
    (231/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.470714403 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.537463625 seconds)
    (233/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.436576394 seconds)
    (234/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.277819141 seconds)
    (235/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.230042686 seconds)
    (236/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.347755364 seconds)
    (237/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.316809941 seconds)
    (238/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.14022099 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.706442255 seconds)
    (240/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.413962883 seconds)
    (241/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.301809578 seconds)
    (242/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.317862391 seconds)
    (243/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.444915673 seconds)
    (244/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.703989741 seconds)
    (245/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.30227128 seconds)
    (246/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.120934865 seconds)
    (247/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.9107938 seconds)
    (248/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.302459501 seconds)
    (249/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.184368265 seconds)
    (250/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.463162385 seconds)
    (251/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.400033228 seconds)
    (252/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.67012057 seconds)
    (253/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.304876058 seconds)
    (254/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.424406162 seconds)
    (255/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.912729088 seconds)
    (256/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.053286447 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.939614695 seconds)
    (258/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.342112889 seconds)
    (259/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.771532814 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.273013146 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.406269583 seconds)
    (262/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.383600572 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.428536616 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.27783159 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.434176791 seconds)
    (266/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.304110163 seconds)
    (267/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.687720714 seconds)
    (268/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.325743685 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.129598697 seconds)
    (270/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.418047903 seconds)
    (271/286) benchmarking ("sort", Int8, false)...
    done (took 4.381130577 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.367241199 seconds)
    (273/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.339039611 seconds)
    (274/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.351994152 seconds)
    (275/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.161011608 seconds)
    (276/286) benchmarking ("sort", BigInt, true)...
    done (took 6.3247881 seconds)
    (277/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.046958384 seconds)
    (278/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.526790841 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.752934253 seconds)
    (280/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.423703695 seconds)
    (281/286) benchmarking ("sort", Float32, false)...
    done (took 5.348048578 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.363785379 seconds)
    (283/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.809512266 seconds)
    (284/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.388650314 seconds)
    (285/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.142039494 seconds)
    (286/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.343597877 seconds)
  done (took 937.730911036 seconds)
done (took 938.957369083 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.363439596 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355041828 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.336762081 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.358336221 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.447778026 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.360677401 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.349208419 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.340671354 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.384986743 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.387746258 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.334836389 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.357816167 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.33779247 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.336301539 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.338189797 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35313827 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.460565096 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.340422526 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.35459516 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.348007806 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.354210116 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.336922557 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.387773651 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.360723984 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.342108352 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.34106505 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.341257621 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.35716211 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.448931472 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.339827279 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.342469078 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.350716207 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.411124846 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.33878751 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.33602574 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.357696618 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.350736656 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.350472087 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.343956636 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.371193683 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.833699445 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.355730373 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.339075595 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.340650189 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.342041463 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.343851333 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.341111261 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.347714081 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352935486 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.355216431 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.81898819 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.371212692 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.343356322 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.342459917 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.352409527 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.339867005 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.343144968 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356831753 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.359836294 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.357087447 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.396870724 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.346588248 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.343543188 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.356387644 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.347889356 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.856944444 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.355241909 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.346666116 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.828537019 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.364404116 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.855059814 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.367290289 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.343388847 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.355762363 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.37275086 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.409410429 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.338743696 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.342656868 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.349481154 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.339451344 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.35380139 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355211334 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.348210481 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.344465863 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.35617623 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.364898877 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.353537373 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.343814918 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.353627019 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.362203687 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.350002183 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.353944784 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.348183844 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.339419073 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.354091692 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.347168918 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.345801256 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.346760084 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.349812734 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.356144432 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.829362418 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379793078 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.343447415 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.341590281 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.343891456 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.356699938 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.830760846 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.361966888 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.366544927 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.391819411 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.34679116 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.40214019 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.347201577 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363120388 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.355373577 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.348920068 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.341149621 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.403316548 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.822494092 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.376181307 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.347943494 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.342181282 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363810316 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.347767806 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.343008445 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.41668445 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.347469167 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360089919 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.465873262 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.356362331 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.375863911 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.342513062 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.350044681 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.369762728 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362633611 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.376654942 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.350534586 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362231683 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.36166747 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.34302956 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.357756769 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.356309737 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.34682215 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.35331226 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.341760421 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.368661561 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361119198 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.359371155 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.368539768 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.46614229 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.345445372 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.407868817 seconds)
done (took 227.651525964 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.405257168 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.333640588 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.427982007 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.341740673 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.44351253 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.444686225 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.339463756 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.340694507 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.339124057 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.724114846 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.338934279 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.349684084 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.336798156 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.339749158 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.425317669 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.341710989 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.338852421 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.684753538 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.343075166 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.412805088 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.33588201 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.341179895 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.341517821 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.721920274 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.342923341 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.341122288 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.414054549 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.344316052 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.689038815 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.341650523 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.34017725 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.688016626 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.432429027 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.360642424 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.353717401 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.350089408 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.44549835 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.362735089 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.425734043 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.425945302 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.431068938 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.384895612 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.33971657 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.339143831 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.346153762 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.345002228 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.342023855 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.371275324 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.341645575 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.34258457 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.686963765 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.354150621 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.342961375 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.343937364 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.343347064 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.373998429 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.343706938 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.345987328 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.43428401 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.346067084 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.407186199 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.725974039 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.728027453 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.346105299 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.344818866 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.343579887 seconds)
  done (took 149.097649745 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.412135664 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.420158595 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.461665885 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.36369814 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.394788213 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.466101694 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.36455612 seconds)
  done (took 11.137597991 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.352226372 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.347548302 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.396030124 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.397434473 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.346146561 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.526485056 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.348259802 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.357882273 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.344981916 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.400687042 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.35108073 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.34654519 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.354392586 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.340840237 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.394985718 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.360113976 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.46251696 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.348367532 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.347621525 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.498469672 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.345019294 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.354185199 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.398399099 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.358139674 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.349674191 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.352233559 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.158409006 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.34825997 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345154358 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.346625678 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.34732529 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.424310888 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.349315086 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.348992308 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.346209671 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.464959753 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.348406907 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345561276 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.350692048 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.350484938 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.348279705 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.34959107 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.348665843 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.34734006 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.34890812 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.372257138 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.349723657 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.349217729 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.349338401 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.349836409 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.399529035 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.350128701 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.34745473 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.348260343 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.405303949 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.357888537 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.350874607 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.34672143 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.351265468 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.3483342 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.501049595 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.398210421 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.351296482 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.398529188 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.350601694 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.349919127 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.349751251 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.349972331 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.405373349 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.350575879 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.399633614 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.349327386 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.539697237 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.373527728 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.353791102 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.354482758 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.35425797 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.351680338 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.351510822 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.355240767 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.349410437 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.351772494 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.357947104 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.349240818 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349172481 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.52060469 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459742378 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.350035381 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.365096225 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.360164819 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.349802138 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.405475446 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.353437488 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.351090202 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404289836 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.467305809 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.406539622 seconds)
  done (took 155.171467565 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.357533192 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.360853834 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.353676493 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.368747875 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.352837364 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.35269855 seconds)
  done (took 9.408053153 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.356510291 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.353917175 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.353494165 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.352925993 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.352491881 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.353972919 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.352361603 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355701121 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.358200634 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.352488854 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.355361253 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.354769857 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.353948789 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.354031026 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.353407527 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.354955533 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.352403725 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.352658852 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.354370173 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353784672 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.4583802 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.354265476 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355042435 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.354659917 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.361055525 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.355155721 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.361543523 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.355223774 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.357605782 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.36414453 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.374764558 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.355987694 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.356062703 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.361858159 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.360588866 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.357603059 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360211317 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.358993781 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.353014239 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.359241914 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.356003321 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.356842249 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.355851939 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.357182395 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.358334811 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.36152758 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.362733782 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.363634572 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.357764166 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.357749911 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.358330435 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.356974643 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.358397418 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.357875504 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.358901982 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380090889 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.376552519 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.375179212 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.358195483 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.359583644 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.360393469 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.358764122 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.361413413 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.361812792 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.35720602 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.359886792 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.359212897 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.363892619 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358574249 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.359045366 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.360100548 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.356354246 seconds)
  done (took 100.165099571 seconds)
done (took 426.232088125 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.798287697 seconds)
  done (took 8.065045364 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.524180098 seconds)
  done (took 7.793859363 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.579183486 seconds)
  done (took 22.856401114 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.375164805 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.862266594 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.385437001 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.352238344 seconds)
  done (took 28.243033239 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.759005026 seconds)
  done (took 8.026430506 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.357841183 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.349702435 seconds)
  done (took 13.977583626 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.473036446 seconds)
  done (took 7.740257963 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.392981823 seconds)
  done (took 7.669703045 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.355394685 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.374693413 seconds)
  done (took 14.013067592 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.333606845 seconds)
  done (took 7.601530054 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.858629959 seconds)
  done (took 12.127752925 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.360648228 seconds)
  done (took 7.631817149 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.398158623 seconds)
  done (took 7.66552143 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.649469359 seconds)
  done (took 9.916752582 seconds)
done (took 164.59738093 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.353783985 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.353645 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.356550988 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.353309384 seconds)
  done (took 26.686313449 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.393784062 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.394229902 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.396645102 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.406283996 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.398787539 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.394706742 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.389377428 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.386272448 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.405951851 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.397933862 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.397433997 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.39761814 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.394529166 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.387026699 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.399447949 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.396560839 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.405223686 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.397056774 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.388799637 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.39779584 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.364196845 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.407884489 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.398316576 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.362434985 seconds)
  done (took 34.728225121 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.882780839 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.434503784 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.516093975 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.416103295 seconds)
  done (took 7.521272819 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.413679969 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.417564131 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.431460484 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.469320526 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.492581985 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.427940849 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.391107244 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.385208124 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.371522824 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.416798329 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.493419669 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.432971224 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.504751345 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.36513158 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.550092643 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.365456322 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.36442153 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.416095704 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.468016737 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.482478102 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.365383237 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.415238261 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.420429278 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.434180705 seconds)
  done (took 35.566963077 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.363603245 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.383717996 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.364187447 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.362064531 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.371187873 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.364320976 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.36406913 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.365586216 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.365002315 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.370638971 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.363127215 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.377869751 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.363100447 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.366223743 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.37063103 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.364918028 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.371888091 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.364569071 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.364683395 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.371315562 seconds)
  done (took 28.626439293 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.359559934 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.256609 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.709367104 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.61535431 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.3589428 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.362187049 seconds)
  done (took 28.935636417 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.440365802 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.595812595 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.36607516 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.742189274 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.836863948 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.386737631 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.366689839 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.61682247 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.956231162 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.95993043 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.432951902 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.438595167 seconds)
  done (took 20.413241734 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.369007824 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.364380857 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.375197302 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.379213629 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.424797231 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.387986911 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.3733615 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.360407033 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.424796035 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.446953305 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.387046005 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.426227687 seconds)
  done (took 37.994772927 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448882426 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.407234837 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.329094885 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425971465 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.080667977 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572892886 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.412891153 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.076893911 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.386696905 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635840103 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375975031 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455259968 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.618265473 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377788642 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.365976994 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.425880376 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608479441 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855919865 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365576745 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.595968056 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390284088 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373292359 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.629459862 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.60881247 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595934903 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.34309189 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.624656258 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.140962188 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666750546 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.377451566 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376214464 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364933784 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638297155 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032421556 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480575878 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.589232806 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399813413 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.995171706 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.34689082 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.542360199 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371078717 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36724647 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375610084 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36409607 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.298546395 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365690654 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089776845 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.392300258 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.077317576 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.364851692 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642020388 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462072042 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.37054592 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.359699439 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385999848 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.37522892 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.369906307 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461975636 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955198899 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.066069399 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373471748 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.304731754 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383037598 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.603252388 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034953566 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.39107404 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.370292503 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370375883 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300410216 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.52714323 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385561393 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530212339 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.393106041 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.991179907 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078277505 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.388847245 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.301899217 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927666936 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382304494 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.304324641 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594418724 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.142143714 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303185979 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.314276654 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.301065086 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089178321 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376319373 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.784582514 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389811483 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.105109937 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.6135611 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408001289 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391436207 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.590594176 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.247305899 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369782231 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.372639981 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499048385 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38924184 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.090585443 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321855975 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.371123578 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622318618 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.578818237 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376475965 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.415713629 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879880167 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389140449 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.404215897 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.369593453 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.596699746 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.995110209 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.403108517 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.071225558 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389540787 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.144407029 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120777943 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372884997 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.376924055 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380722693 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635911898 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.163742809 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.286621813 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437822678 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374447917 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369821961 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.634689476 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.223890014 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.27315659 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.5854363 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400232996 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.381983201 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.372177783 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3168376 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.374977092 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385926695 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.151613687 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.593909094 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375631757 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649480748 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305330919 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51856458 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.381420348 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.59437781 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.669484978 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.398537822 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631536831 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382573286 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384438512 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384866116 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391970297 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472835059 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395056546 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.375531735 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.630149985 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.375901712 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.376698321 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.648551302 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.153984994 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375648746 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.377967394 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395330503 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983082707 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369551697 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377227892 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.262419779 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.387892479 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440535768 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379687226 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599496668 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.339728281 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398424844 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.378551842 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.372078695 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595721957 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385024583 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.561129096 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456477558 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.865628829 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.000759021 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406650176 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.310291221 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.087385223 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.068887073 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375972406 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.571548251 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375375446 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.601911834 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40765011 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378536204 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.003597218 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395112693 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.557560915 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.383812283 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386455655 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.381871961 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377210466 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.290919088 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.114005426 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381792579 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.390639884 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518672354 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.390297542 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.310284795 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.89347953 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381470132 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376863644 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.153111525 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411289278 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.561550249 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19629552 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655883573 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380766491 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672918684 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.745395877 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.411954875 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.376376427 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390010855 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390875438 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.393482601 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385646991 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.388049674 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.620501332 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.81720823 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942773222 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131643423 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962165767 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.718379113 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.408153557 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.259999414 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.104130388 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331746518 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.033652423 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.586690323 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.121819624 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342046692 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872265562 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.66781447 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206038748 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.658503481 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607336026 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.697994001 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.401989709 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662840148 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591729903 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412143415 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.378000374 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.309925672 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.677207178 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952587717 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411618588 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457003208 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106023353 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412348576 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.159147742 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.449376243 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.121613224 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816759018 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.946906594 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.765671475 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393709253 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393412337 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19811965 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406400981 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.907425794 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036213988 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400776646 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.893227263 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33617928 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.613485781 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.414841683 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.379825777 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.795150378 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.377498377 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.634292987 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663780053 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316525429 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380886518 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944227812 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.26693346 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.386216944 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381803882 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143936507 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384616993 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688805863 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.395016622 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.285690316 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4030144 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.315324943 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315853776 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.074488298 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392181891 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368842933 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894427437 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.389732817 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405720792 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392053055 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227469424 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.639198064 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.395889192 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.991784507 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626335079 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38271642 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424420188 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.385380755 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398681769 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.368387874 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.280730793 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.61823409 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381920376 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625921196 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.370083962 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.285740004 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.405176169 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597724426 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.275179323 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390491149 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649172963 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.117784663 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.855991878 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127952813 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428743891 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.391230667 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.39692183 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397113686 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402878491 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472040953 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613025453 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.417741958 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.394856281 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808053836 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419802966 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388022507 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.397372658 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477630546 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.120157888 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.285599818 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.15669455 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99720276 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154431167 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.019761748 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.685652575 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388248072 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385558912 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319095615 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533882067 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.912097257 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660430854 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514799815 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.385219159 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409750257 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385563797 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395684066 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601197514 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659318761 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.255683957 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394966643 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.046241783 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.268378762 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396276622 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.597168352 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90166519 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974563325 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.576102167 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399568415 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.116378812 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680698127 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.477566714 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386082034 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.975422067 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.386614477 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.152238446 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.39311966 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386688694 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537791603 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664913553 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063291305 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.416911102 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.542412753 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.159968771 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.600556857 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.645568405 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.928170595 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620078497 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022870742 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.139965341 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651834275 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458216515 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.614751864 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.515495621 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535372807 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.385902339 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.296461281 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387582308 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232781543 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.097992669 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.396777773 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009045367 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669323498 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.391173825 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.385338202 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414606091 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.396725946 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.611168308 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122488714 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613098628 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399304062 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398067001 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.95754435 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007230084 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.692446881 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327011299 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.392906431 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65048841 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.646402895 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414615487 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.842361243 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.10167529 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964878809 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.361306426 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411314999 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390126863 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.134696706 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009092579 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.317425529 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912646244 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.048655065 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391093508 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668010475 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.396634537 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39451048 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669980896 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.393688559 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.402340291 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628406651 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.026485967 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236369529 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.394878879 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.733033239 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.331161713 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.618394764 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42410504 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327585493 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392607858 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.831527322 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41678873 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522026467 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402889026 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.403610274 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400922356 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.156626464 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675974116 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.396482152 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.393970752 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.377376709 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424218778 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490082741 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971673951 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418073068 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.067285323 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.740880218 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.646768912 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.401132592 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.375777782 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.396155134 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392902728 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.110164433 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.362043568 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400308897 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979034365 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.41009886 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.406787036 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395478323 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.608432158 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604329393 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395283514 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626031653 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415673044 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41065822 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.294368405 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.160366295 seconds)
  done (took 1666.516168574 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.402710293 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.441690597 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.441626276 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.450701501 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.438154249 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.404552656 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.467755601 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.426180472 seconds)
  done (took 52.778330221 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.395705732 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.553278754 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.426995616 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.410583415 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.407318655 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.405760401 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.875074555 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.42759175 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.407787098 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.404067967 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.404263885 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.397744619 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.080796715 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.405126096 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.39509106 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.37949145 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.405360958 seconds)
  done (took 66.49652357 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 52.056122385 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.342860394 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.712227115 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.481263032 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.609807081 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.397777179 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.703442712 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.42885228 seconds)
  done (took 100.040261973 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.412704827 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.412194948 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.412355058 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.412269186 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.413536045 seconds)
  done (took 8.371783359 seconds)
done (took 2115.948041469 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.398474791 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.401430135 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.398585014 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.402674039 seconds)
  done (took 6.908794466 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.375953936 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.096659367 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.37719212 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.39208609 seconds)
  done (took 18.549874069 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.396216512 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.415693088 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.144325719 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.052968697 seconds)
  done (took 5.507318672 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.146499566 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.154023108 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.139545414 seconds)
  done (took 7.743121622 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.390763386 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.397259251 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.396123335 seconds)
  done (took 20.487814535 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.683361633 seconds)
  done (took 2.988331396 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.534766433 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.591606735 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.744582407 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.745372743 seconds)
  done (took 7.921769121 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.791775814 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.761898056 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.576476305 seconds)
  done (took 6.434371867 seconds)
done (took 90.663379395 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.424627259 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.415225224 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.600628002 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.394727231 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.626270968 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.601227076 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.702624023 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.364305735 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.106213071 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.896006029 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.401400782 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.623342217 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.870781416 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.416707216 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.870222907 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.4155904 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.625557227 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.476854261 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.083286464 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.319104597 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.705204727 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.035977055 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.228777007 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.267371024 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.628930981 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.552608536 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.616192709 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.418067693 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.260160328 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.839465454 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.557287862 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.39987302 seconds)
  done (took 196.049897464 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.39412757 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.393547485 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.395381789 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.409158522 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.40026246 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.392966006 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.39486189 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.394282615 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.39621375 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.402225133 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.394804436 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.394121705 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.395068077 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.412349299 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.393891107 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.395397707 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.413070232 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.395399181 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.41262832 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.418205074 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.400839344 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.396225383 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.413763569 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.406924682 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.395338313 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.396213175 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.423769129 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.398513593 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.395822671 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.408624831 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.398400351 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.412375293 seconds)
  done (took 206.150972177 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.395987927 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.42945122 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.395354562 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.395764065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.397967187 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.397887111 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.416942133 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.395769057 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.426176894 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.402178627 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.406351101 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.396796423 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.396308052 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.396909656 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.395749817 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.398216577 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.404590563 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.395577964 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.419278364 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.397157237 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.399098943 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.417712359 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.411076985 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.404488504 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.397458636 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.399153083 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.414927295 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.397677976 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.395566079 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.398485709 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.398773189 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.4155876 seconds)
  done (took 206.219480313 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.593833732 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.404035525 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.406586558 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.343139482 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.40581592 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.40508479 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.400579057 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.602262664 seconds)
  done (took 14.87165584 seconds)
done (took 624.597411251 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.760883861 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.466643919 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.612039887 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.428075567 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.228335698 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.445200219 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.425853171 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.605330481 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.358458218 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.611343803 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.724084075 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.442579024 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.873453179 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.424198986 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.695103728 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.530111863 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.300421129 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.423852194 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.751552348 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.007920059 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.696807619 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.902539527 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.627290956 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.344206217 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.887299629 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.900954936 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.22223317 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.30925553 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.445352276 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.764800587 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.174975816 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.487980026 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.493565777 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.492467512 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.552039488 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.52736352 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.455098005 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.49219619 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.631454764 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.674053909 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.993101684 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.172877866 seconds)
  done (took 95.674293432 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.392571396 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.391221252 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.389954614 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.391888145 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.392284729 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.391393399 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.391121843 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.389283124 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.392145475 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.390383592 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.391767508 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.391785497 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.39139671 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.39461093 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.391845305 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.390990164 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.393523056 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.394860594 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.39331069 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.390592392 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.392882769 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.392788022 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.393240429 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.39113991 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.394033161 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.393042652 seconds)
  done (took 37.509300476 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.413888234 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.667449138 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.837456683 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.417738545 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.410502102 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.41421074 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.494682464 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.412588904 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.41436749 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.415637521 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.586119152 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.414206798 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.448384026 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.864116912 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.414510773 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.411427069 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.412545296 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.412683167 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.678623726 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.420856033 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.517603665 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.412683468 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.496048338 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.423564799 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.43797951 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.41446414 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.416152562 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.98395099 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.434379792 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.589166698 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.270282186 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.496285846 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.923558704 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.867830765 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.270023989 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.419223596 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.415088656 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.589516307 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.415708434 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.412409595 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.495486242 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.415359519 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.848552772 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.078239028 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.434202816 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.413666144 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.004618571 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.611909205 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.675764517 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.421972762 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.873782343 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.41840688 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.416553459 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.416551111 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.676840444 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.422628937 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.414428817 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.997105837 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.444487446 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.498586566 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.416741897 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.415391247 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.686936394 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.416908178 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.675605728 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.419646658 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.42503344 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.436902786 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.85076991 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.419588833 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.099039079 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.435506494 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.417458501 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.588812395 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.67369659 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.040232998 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.439144008 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.689089431 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.939980234 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.51712548 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.421135363 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.976299207 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.520773255 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.419433632 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.418910815 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.420331437 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.417765282 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.466623665 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.497563654 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.045026715 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.11155111 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.01842992 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.521176864 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.43135439 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.418257581 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.993440382 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.437611437 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.417688616 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.847554991 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.102787338 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.437344904 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.427056483 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.105196691 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.439491411 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.502608732 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.423743123 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.86024497 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.418995397 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.47039658 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.418423933 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.425248347 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.442746771 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.502709761 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.422954495 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.420380428 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.075309314 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.618551287 seconds)
  done (took 186.7850918 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.4213236 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.412449059 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.414609659 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.412626229 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.412673047 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.421091952 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.412011486 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.412289087 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.417860949 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.412884606 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.41389237 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.415059832 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.414218606 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.440124908 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.425657526 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.421222294 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.030082857 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.415796699 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.41463207 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.431607845 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.228232033 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.417026804 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.413477915 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.413246986 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.414916638 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.414968616 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.419761965 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.416666164 seconds)
  done (took 154.434966864 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.4211278 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.01856138 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.44189547 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.564716877 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.446430566 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.420208417 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.558656755 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.483362197 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.442366976 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.419525133 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.418725351 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.738957968 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.423102617 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.970593796 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.62855775 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.579258453 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.966026926 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.440252739 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.420410901 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.421331971 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.564088458 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.427112813 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.742166385 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.023147591 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.441532036 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.021065937 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.407749903 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.423341666 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.42216321 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.024492283 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.440016781 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.745434211 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.504439839 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.486582116 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.042874124 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.988082698 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.992776307 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.580873993 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.422356726 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.420414771 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.421964797 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.406636766 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.024575762 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.444513371 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.423314408 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.01575816 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.443939515 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.42478846 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.428983588 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.421986613 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.485653133 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.505710494 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.7678591 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.03207823 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.52495842 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.435086314 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.563797834 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.798681106 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.427221572 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.971707493 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.406184631 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.033099424 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.444645801 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.408613445 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.423841355 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.429764318 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.584243467 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.56429116 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.975128124 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.443417975 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.993625007 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.607348453 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.422058165 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.423094905 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.426929992 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.029932528 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.009168769 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.605384956 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.568975765 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.636081551 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.410647547 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.425270389 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.410421424 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.507201153 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.424291374 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.033519644 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.992133888 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.445689473 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.427600368 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.428230163 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.428226498 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.614693205 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.052558052 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.527358592 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.970944852 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.770805562 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.752789656 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.429279518 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.489420304 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.444499403 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.75335894 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.427477131 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.48825526 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.864379104 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.754224234 seconds)
  done (took 170.3515869 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.682323098 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.646583019 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.522884553 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.583897069 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.054567541 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.999934249 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.746731245 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.568216129 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.542072967 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.695586481 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.621664289 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.515765047 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.648535505 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.511649172 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.179461137 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.51764784 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.540028415 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.581143884 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.588294948 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.463046151 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.109494152 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.716849055 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.625132393 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.352117143 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.523690774 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.223889712 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.015747184 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.962907201 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.619794028 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.773474886 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.965077098 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.572331096 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.419491289 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.144983993 seconds)
  done (took 68.566880265 seconds)
done (took 714.633035214 seconds)
SAVING RESULT...
DONE!
