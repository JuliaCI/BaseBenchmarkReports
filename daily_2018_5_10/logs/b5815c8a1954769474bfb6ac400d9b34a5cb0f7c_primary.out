cset: moving following pidspec: 27804
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.519630307 seconds)
loading group "string"... done (took 0.542736926 seconds)
loading group "linalg"... done (took 9.161686558 seconds)
loading group "parallel"... done (took 0.180856109 seconds)
loading group "find"... done (took 1.330234071 seconds)
loading group "tuple"... done (took 1.989969467 seconds)
loading group "dates"... done (took 1.39597386 seconds)
loading group "micro"... done (took 0.200288624 seconds)
loading group "io"... done (took 0.522046233 seconds)
loading group "scalar"... done (took 54.245350987 seconds)
loading group "sparse"... done (took 14.406183993 seconds)
loading group "broadcast"... done (took 1.350273325 seconds)
loading group "union"... done (took 10.476517161 seconds)
loading group "simd"... done (took 3.093153846 seconds)
loading group "random"... done (took 11.811686984 seconds)
loading group "problem"... done (took 2.257390162 seconds)
loading group "array"... done (took 24.756189398 seconds)
loading group "misc"... done (took 1.166738033 seconds)
loading group "sort"... done (took 3.856312225 seconds)
loading group "collection"... done (took 19.628063477 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.626428127 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.184534481 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.205811105 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.2890352 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.242368592 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156304001 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141112301 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.26255584 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.751653537 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.213750375 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.129810943 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.51160705 seconds)
done (took 6.540886899 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.253499539 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.180990722 seconds)
    (2/2) benchmarking "String"...
    done (took 0.168869251 seconds)
  done (took 1.119696747 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073145362 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.152414616 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.104693256 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.091788533 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.089909701 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.1062085 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.088971618 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.104984001 seconds)
  done (took 1.511849294 seconds)
done (took 3.733005261 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.517351541 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.872075893 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.507649371 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.162539932 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.302959773 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.297985088 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.335595362 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.200272321 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.088469245 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088361766 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175067832 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.388476116 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.445172153 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.957485142 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.088015691 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.113381187 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.116500587 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.771407919 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.076944761 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.112021572 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.516579043 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.19372558 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.095783798 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.125091572 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.183352691 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131494624 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159822347 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101657288 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.665929623 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.129764407 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.187958401 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095734248 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159146913 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.193818511 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.208952964 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.09063276 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678451631 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198248672 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.091086369 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097507541 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.66434084 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116681353 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.185360486 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.101383716 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089686647 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181184825 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.095450725 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076193612 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.115567926 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.08194516 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.164609175 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.444788903 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104461629 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.170866277 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.090553091 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.685604438 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097038791 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274536877 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123462888 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.092056549 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.088593607 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087582096 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160844896 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.09269081 seconds)
  done (took 20.119115182 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.148496828 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.16387586 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074854955 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.154530249 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121259976 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077129936 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099312125 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076000911 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106506021 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.243006338 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136052811 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.154015959 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089355468 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085620094 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.125487295 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247549447 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104362758 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120293426 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08555085 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088392723 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137727568 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094070875 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088565272 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108180656 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168298088 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201702994 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106213639 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120731759 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.085122244 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093263353 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138766408 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144885827 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.089805617 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08482824 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171036944 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120895514 seconds)
  done (took 5.249483004 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.20620648 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121830575 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.214448774 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.160380497 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145721831 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16785363 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.145179598 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.287372545 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.207829542 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163194332 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130355819 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104825891 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09409447 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078539649 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075958658 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.518339497 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.138094761 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.172476274 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.134293657 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104289859 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079971986 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.384154287 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081816623 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095662426 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084663776 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068000158 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.199716227 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08275544 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.098079266 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101985305 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088235673 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131409338 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194804334 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115417725 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13726681 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084206425 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077416929 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.21689367 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.109118842 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076423912 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104923988 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132815204 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113163056 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099771631 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.107677395 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220534368 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081949794 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101333733 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.063525452 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196460217 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.1562358 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097090301 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290689058 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098439671 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084134533 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.099484123 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081423479 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.249747135 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113123583 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079241361 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096640547 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085039574 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07578486 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.43051155 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10667078 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.137023641 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.09635355 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.138239825 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.967594833 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10247331 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085821805 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101255987 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083305037 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097795478 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096496974 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076451146 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077714317 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096133006 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082284421 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078013834 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111555549 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083003646 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094641233 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145181577 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.100297973 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117691668 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108490441 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100547245 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078337775 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125590788 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080530352 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080828944 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.172438554 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084823472 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110713585 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083894052 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142869499 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080077793 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.217545651 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081414807 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080454498 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123860002 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.085537156 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127441545 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098279465 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095923438 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080451573 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.092974065 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079914625 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144303485 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082812308 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080313358 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099309049 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.090791989 seconds)
  done (took 23.044066803 seconds)
done (took 49.184309063 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.464281391 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086916764 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08586849 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107235153 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086637064 seconds)
  done (took 1.684294753 seconds)
done (took 2.51260447 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.329520291 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200018236 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099272214 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.196796629 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083955252 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.202557937 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.188695659 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09270298 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.214505467 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082814131 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194423411 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082678253 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103914214 seconds)
  done (took 2.925003613 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100145859 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107361278 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.116378695 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100564694 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080712015 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097094309 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115390093 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108498808 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096386714 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109436203 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081581718 seconds)
  done (took 1.938957014 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097580405 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103457037 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093369998 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114259895 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080880591 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095219958 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113859858 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105218057 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095359517 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110035403 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081996053 seconds)
  done (took 1.920479822 seconds)
done (took 7.609478893 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.137881371 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.210889145 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.167503616 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.217460395 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.355579875 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.244417491 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.575821814 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.153588229 seconds)
  done (took 15.048556876 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.1698484 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.105168236 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093067324 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085316127 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.091686906 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.107061213 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092039825 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086673527 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.109180203 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.0921718 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090341282 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.103631805 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09340105 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.089744046 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085150635 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.107374383 seconds)
  done (took 2.490114425 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.13714565 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119972528 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.11214336 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.093731417 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087874035 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.111909416 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095531222 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.092372821 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.108256142 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089542121 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09560848 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.111104203 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.092399773 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.087192557 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.110028064 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107743196 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087188443 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110690049 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107324036 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091999331 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.111851424 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.091219394 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090690477 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.111184571 seconds)
  done (took 3.365994647 seconds)
done (took 21.732266555 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.151452333 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100063676 seconds)
  done (took 1.083145297 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.140393882 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.157502105 seconds)
  done (took 1.1332025 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.107660173 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084323778 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135112479 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098499938 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084831046 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.102316729 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.112851564 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.102626639 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.086301801 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08527471 seconds)
  done (took 1.840475556 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089465331 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088940206 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.118778017 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.138357909 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110866801 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.090014341 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089974825 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087662029 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109517311 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.085601829 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093759015 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.1239423 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089578254 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.122312259 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.0917168 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.091717374 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.112779891 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.090118907 seconds)
  done (took 2.664044462 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.085587931 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.088148052 seconds)
  done (took 1.014567224 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.088930247 seconds)
    (2/7) benchmarking "second"...
    done (took 0.085360628 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086442057 seconds)
    (4/7) benchmarking "year"...
    done (took 0.106589301 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.085229805 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.084893584 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.102833942 seconds)
  done (took 1.480497433 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.499600778 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.266751648 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.373222134 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102125511 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.140927278 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.350963665 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.140921606 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.099099966 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.096618686 seconds)
  done (took 2.944811131 seconds)
done (took 12.995798717 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091822495 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.218048568 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.760567831 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.107628393 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084317609 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162913576 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.290497762 seconds)
done (took 2.561059426 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.356281855 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.15046251 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087409801 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08600888 seconds)
  done (took 1.522702235 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079868911 seconds)
    (2/2) benchmarking "read"...
    done (took 0.093863358 seconds)
  done (took 1.023009229 seconds)
done (took 3.394777128 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085682838 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.086202973 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.135775476 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.083496603 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083689513 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081311985 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.103101085 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.084125849 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082654815 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083221865 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.104766776 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.084571032 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084697413 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10370435 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085630605 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085573793 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08640951 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10503173 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085969257 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086709085 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.103159949 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.084727688 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083128872 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084535527 seconds)
  done (took 3.060674682 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109078321 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.086105569 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107736177 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090728959 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.088992716 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106886705 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.0896543 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.085417997 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087212448 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.105591138 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087997153 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087618608 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.104208256 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088797617 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085601506 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.109210997 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090286684 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085976135 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106938235 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.092157515 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091539203 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107990328 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093169065 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091263542 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109760414 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092224116 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088908293 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.105950972 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092964777 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091311168 seconds)
  done (took 3.712998953 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096049278 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.08327035 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088163217 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117721184 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088688218 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089552065 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104946093 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089628259 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091155984 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088235688 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111673718 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091509185 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087276487 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110992669 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092456678 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093151814 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.09668011 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.103833776 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084789521 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088062411 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.108300368 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085377856 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087803894 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.086632029 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.106568224 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085417773 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.087797461 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.105344349 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089583424 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.0873161 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.089367648 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.107816358 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088116389 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.098153997 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.110363049 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089982309 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093063462 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083159623 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.108722264 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085526745 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.08624963 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.108124268 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.088920922 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.098146846 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.089626387 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.11229316 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.088552312 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09255818 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.110671002 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09566711 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.088180088 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.0873008 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.113166183 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093072764 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.093123223 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.105479167 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092443409 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.086439969 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092126712 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.108613917 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086369621 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08608686 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.113935417 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092412837 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.106213146 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.116223548 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09037551 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.093409693 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090163143 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.115537857 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093906266 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098405792 seconds)
  done (took 7.752169381 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098952969 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093486675 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084522725 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.106739867 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08681558 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087818529 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112504015 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089915932 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088902427 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113822639 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090249692 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08836614 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087305117 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109503554 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090338237 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088162264 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114476723 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088740876 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.088709343 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108806965 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091046301 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093425149 seconds)
  done (took 2.961707589 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.231114763 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094021927 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136054542 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118130813 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.102988836 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120093438 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.092294729 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093922165 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113149665 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098738525 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096951483 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113559983 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105801344 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096960061 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117435299 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09922114 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114629135 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09882478 seconds)
  done (took 2.904828966 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.099572434 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.08745555 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.12772641 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.088576092 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086813751 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087214999 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111155824 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111294213 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087233477 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.105895362 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094017373 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087389036 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.106948505 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087487521 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087461709 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108162113 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.088740147 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086268076 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112119544 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09238457 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092600568 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113567794 seconds)
  done (took 3.013165829 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102112832 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08721981 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123949553 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090116358 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085536697 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08594109 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.11114403 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.085888237 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092140117 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.10693416 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086466827 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086071755 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.120702026 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086772274 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.091168968 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104536586 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087739601 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086401284 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105408065 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08674934 seconds)
  done (took 2.775485233 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.172520964 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125184971 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106709642 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11319621 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12504825 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106535896 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112831386 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124996594 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105603202 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134242421 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107695071 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107538815 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132454155 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110527693 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104787692 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134071224 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114367617 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132406125 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10608901 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105518069 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137070088 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10615865 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132499702 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107009579 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105524194 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125366201 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107498615 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111599791 seconds)
  done (took 4.181849301 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087445176 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086265494 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084333208 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.103525391 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.085707028 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084877532 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08339052 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.104581511 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087246577 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084597606 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.103925207 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.08715163 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086111336 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.086037205 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104637306 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.088824346 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089433959 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.087981676 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111553607 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08922541 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089739806 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108950814 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090575866 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089232676 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087644793 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.109041144 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086527019 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085459849 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105707641 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086009507 seconds)
  done (took 3.633241545 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.097258693 seconds)
    (2/2) benchmarking "in"...
    done (took 0.094568842 seconds)
  done (took 1.060349543 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.09479311 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101429904 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085224522 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105794284 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09304141 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086608406 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112690912 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092282169 seconds)
  done (took 1.641962443 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.142731325 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.163626566 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09271218 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.098083124 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.163232581 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.156317754 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13393172 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.091394214 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107081105 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082140191 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.157185046 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08233019 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090328961 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085823462 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10937518 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095207137 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.086284428 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.117567096 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.094800765 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.088034234 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111509166 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095995439 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091221408 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.117025985 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08434178 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091964453 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113026647 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101851012 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085922455 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.112046135 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088917845 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.085241513 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.110030381 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.093290352 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08776771 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.16463499 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097713293 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104946583 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092092897 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092898257 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121061909 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.107445386 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091317061 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087459599 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113324138 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.092545961 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.091784691 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.106631107 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083493677 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084473112 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.105911887 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086952311 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.085593396 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108500703 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091310794 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096459823 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.108027811 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087330093 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086070135 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084306815 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107938162 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086314076 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091819817 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.110403679 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091763628 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090352091 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108280902 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.086919313 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088071834 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.107041268 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090242475 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104901816 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109589483 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.092943269 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092085246 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.106702433 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088747521 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092138735 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10637568 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092225671 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.09135055 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115919794 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112490276 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085982743 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085163598 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.114666589 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.08980984 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.090342926 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.101739229 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100846836 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.089995594 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.106816412 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083916885 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087887143 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104767872 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.093350489 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083254539 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089932423 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.106521879 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.093076725 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092175072 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107539111 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092053391 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092918603 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113238392 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090595966 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.15404291 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088239975 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085046976 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.087981941 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113104831 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084472822 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089672362 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.106301032 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088533559 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085140545 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.111495014 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091795664 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.091600408 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.091505636 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112429469 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.090932604 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.089088642 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.106813986 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087029429 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.091359191 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116109911 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093531785 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.089351878 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.108019251 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.088294687 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089883046 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.110068283 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088937825 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093634507 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087303276 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.1060573 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.089589608 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.092327884 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110697104 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086359963 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.088537381 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110397548 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090023545 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.090285267 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11044327 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08672716 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082026114 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.109332568 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086743446 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.087075913 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1144889 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087238421 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.090867214 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085880364 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116188696 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08791791 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.092442645 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110801284 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.094171554 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091975017 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100780013 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088531316 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.090914619 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110617754 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088395038 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.087547791 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.08608311 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.115037953 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083915461 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.091040332 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101484579 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088203887 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.092795711 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.108647067 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.093292202 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086444585 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.147569528 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10261758 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095383158 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088869325 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112331503 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.092503196 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088973648 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.112152034 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094670335 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.092762451 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111124664 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090708548 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093259865 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105321954 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.091083772 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088304322 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110113194 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084443534 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.089087219 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082056174 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.113493125 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093222458 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.092480707 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.113074856 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092159711 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089379345 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11606149 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088590991 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.091710413 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.10221397 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095396148 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.09784249 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093981306 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11406665 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093422634 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087779318 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.108147258 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097838921 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090476203 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.11094583 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.088789314 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084454042 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103044837 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.095332714 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.092052137 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085628521 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.1068252 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093768 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092729463 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10881639 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085096887 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.092770621 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114706023 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087480038 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091500691 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106950783 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090191016 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098352137 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102380875 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088842302 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093298775 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.112561031 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089186806 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091664408 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.090605438 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.116629463 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.093065385 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.090802634 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108767485 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098562065 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.08874101 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.086369639 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.108113582 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.093242365 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083993688 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.108947893 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092600188 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08770308 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10688564 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097168812 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095314074 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.113577466 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090930473 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.092649515 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.112650181 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.096528948 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088775113 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.093695648 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106574793 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084532862 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086572247 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103063997 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.090978468 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086831252 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.112461401 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.090820388 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090251272 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.09236346 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114104527 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088639957 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.093507038 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122203084 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085191317 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.103165394 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091282818 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090460607 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.096983909 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.108877232 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09026212 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092894546 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.114194282 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095260756 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087138007 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.108760748 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.096310145 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.096304985 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.115073508 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.096582731 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.095358938 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086398601 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.114080354 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088890857 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09471009 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.106120895 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091290752 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090517581 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112287896 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089931117 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.089569488 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107454285 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086151875 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087319356 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.114383503 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091914493 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.093624549 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.0900362 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.110357876 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.088540711 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086132521 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.115596868 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.090640928 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.095446188 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.108285136 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086038105 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085017142 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.113802554 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092872004 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.095866571 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085585952 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.113836366 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095745386 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.093263323 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.109711946 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.099710327 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097806067 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.114925873 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098151854 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084663842 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.108949144 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098370967 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.088215863 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.091598083 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.11217799 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086976793 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09370887 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.115552376 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094633317 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.089136835 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105041541 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.091524565 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.095355186 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.092445364 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.111639561 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.091566036 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091641811 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106727993 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094045196 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.093853591 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.112610593 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097202325 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091070527 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.113020697 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089881856 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.095182306 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.089040962 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.105790031 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08557299 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088492091 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.116480314 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08651807 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09573976 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.11356762 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090014106 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089307101 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.094124985 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.108931849 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094924148 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093661494 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.111206962 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099936403 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08916427 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.110479568 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.096291127 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.094526304 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104609172 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09254707 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09125474 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094745696 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111693605 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.094912924 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091103253 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115218468 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.092183579 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.093537879 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.115426024 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.096123645 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085329818 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.11632871 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098181016 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.092595793 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087409398 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110726069 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087434426 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090198597 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.11706748 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089603968 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097844758 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.115591638 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090961603 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089574311 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.11540198 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092490179 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096391741 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087564306 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114719943 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08613308 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093898638 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.111363408 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.096684648 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088081242 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.107314881 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09629984 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.094669183 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114131753 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09584494 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.09656858 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.105085319 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086978528 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.091606677 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088184685 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120150149 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096647906 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089903745 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111337102 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.092202632 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.090527517 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11606291 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088433653 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089052798 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.112360775 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095666462 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090151855 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086439579 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.11548005 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091872605 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093272828 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112444711 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087766804 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.09121424 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.117357818 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.09212428 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08784778 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.109484447 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09943184 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091251647 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.108454807 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087906089 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098535587 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.113428096 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098148564 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089249595 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.092565206 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.110814701 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09271307 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.096672467 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.111292875 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094280442 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091015858 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116260892 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099092004 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085184611 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.110110186 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10244835 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09517233 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115793959 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.092804409 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.090487562 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096251867 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117583371 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.092100643 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085420008 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.108338817 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092401196 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085681275 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.110971391 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100047516 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091415728 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109493141 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096519246 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094661217 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.090589978 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.112007221 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088326206 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097040926 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.109458028 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096847071 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085649798 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.106075134 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.093627739 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096035808 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091479259 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.113266634 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.091760853 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.091367559 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10793664 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091158887 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.095278337 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115618116 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.097013197 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092855976 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090579204 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.11635157 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10074984 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.090800734 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.112678018 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100863259 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.097007697 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11424189 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.0931942 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095870095 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.118055888 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.092975253 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.09656088 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110509473 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093033775 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.097625063 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.118163946 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104216145 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091330841 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.106572117 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.096816741 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.09026289 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086658659 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.118060181 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099648578 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.097463933 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.113274197 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090080687 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099897236 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118173532 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093620943 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.08979127 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.11018956 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.096585974 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090820353 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.114005718 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090882003 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.098980123 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.096642435 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118083474 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.101106624 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086445077 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120626151 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096372318 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.100342627 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.111873942 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088222227 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087786599 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.091753135 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.119245197 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100232583 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.094342484 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.115301043 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.095950927 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.093488152 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112941653 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091740886 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.097765653 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.095305511 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.113726646 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.095728644 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090993272 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115222302 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.092602096 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.096800095 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.118179525 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.095702583 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100422612 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.116629695 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093271005 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089687595 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113891064 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.094252071 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094182623 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094764869 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111250824 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087293 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09621718 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.118690585 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094609312 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098698044 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118973252 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.093268291 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095836676 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11982561 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.09657059 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.091804078 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093878991 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.115132872 seconds)
  done (took 59.704837318 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143230132 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098236443 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113249993 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093586648 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110923609 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115277624 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093534443 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093767702 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.114179988 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10401479 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.092500981 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112129429 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110279789 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113576451 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131505868 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102684018 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112414247 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095268587 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091765571 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093306052 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128686785 seconds)
  done (took 3.182018955 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.111728546 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.106561006 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123754581 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10732986 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098665659 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.125134059 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103360073 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124702653 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108480102 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100082943 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.12851482 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104035341 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.120246392 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.102594991 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100593028 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123085201 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.108644222 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098335203 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.126902408 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10431648 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121673774 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.105562044 seconds)
  done (took 3.374001722 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.103158016 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.095768626 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097468202 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.113001378 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.09774501 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.092315672 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121204537 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.093689349 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.101712437 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.094050867 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.111066525 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094912972 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098849473 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.113938555 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091134715 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.092700911 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.122483274 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.09912282 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.098415557 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.091756785 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.127835852 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.093270924 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.092672295 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109842623 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.10702389 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.09771091 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.113956743 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.097726678 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088469997 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.116872956 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.096192362 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093975831 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.114984522 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091576977 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089295697 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.096721584 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.119039668 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.094286894 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.092765632 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.115497462 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.095196415 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.098253129 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.118116787 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.094582332 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094626944 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093230697 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.119509403 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.093447376 seconds)
  done (took 5.806797351 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.124153226 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160816798 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.097729509 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.134597838 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.130710789 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.103044518 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.095832518 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136240518 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.094693175 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.117750511 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.110905378 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.10675904 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120889359 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.100704676 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09796091 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.120361911 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099304407 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09595066 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.122417531 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.097278421 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10063275 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.120793525 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.108810024 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.126292787 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.101205971 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096175323 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.116826125 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.101988126 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.105797471 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.122447613 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.344362919 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.101495817 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.128993762 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.097203664 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096397195 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.120993044 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.109193892 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.096117095 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.12087756 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.095908612 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.098358695 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.121761179 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.099928907 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.108314446 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.120508906 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.099746453 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.096050552 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.115925974 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.106769851 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.09791601 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.126727567 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.107577394 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.121181614 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.098656568 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.100465056 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.128436463 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.098087655 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.095625264 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.120203745 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.10722488 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.094469988 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.12128735 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.107902717 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.097788606 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.124665161 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.107602688 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.118063271 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.100865595 seconds)
  done (took 8.791768917 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134309374 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100906738 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130154331 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111218449 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101494336 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.123255062 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101768188 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.101383287 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123412218 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107121399 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121787399 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.201293709 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.119765661 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.106087569 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101539132 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124032011 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10174553 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101496426 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12521264 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102765519 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.101222577 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131486845 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101795816 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12913637 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114962103 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098253699 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122179929 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103872685 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10919558 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124136251 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113812741 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.121806947 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102778331 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110383549 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.134022134 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.102713601 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.096630003 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12398387 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.103023172 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101561701 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.120806245 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110737776 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.100680787 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.12104709 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103013812 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101250759 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132559117 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.112182072 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12787826 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109415543 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.102434712 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132286743 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102717523 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100847473 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133213747 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.116176388 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132738385 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11024654 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121963696 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111720528 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109394722 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138762701 seconds)
  done (took 8.078459555 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096494888 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095335678 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.093966269 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.11563512 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095698859 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093574613 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094060168 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.117636075 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09674764 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094524845 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117160994 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096149071 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09398472 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09448111 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115778088 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09473626 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094167716 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092673346 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11841654 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094591521 seconds)
  done (took 2.944159203 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.105980878 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.113379084 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.116876445 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103441784 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.098716827 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123110633 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.098658177 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097213383 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095992146 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120410844 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107187631 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104717591 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118409075 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102842341 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125012886 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104216745 seconds)
  done (took 2.679395939 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.116441108 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.113951653 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.19107902 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10021374 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.118758421 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.105377905 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.096989909 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.098737002 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.118964859 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.104080284 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.100874431 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.122719956 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.098159681 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.098122568 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.119637441 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.101353599 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095690292 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.121820865 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.099985973 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.164932582 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.123917295 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.098728815 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.09712505 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.123843909 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.09880689 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.100596236 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.12681114 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.097713333 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098856216 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.11996507 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.099928475 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.104169124 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.118624744 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.103180787 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099218827 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.118966375 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.099614465 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.097953999 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.09982861 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.120777737 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.101765703 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.097866234 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.119843429 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101562138 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.095376619 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.120128659 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.09715474 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.10316238 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.118647501 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.100194973 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.098239662 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.105458343 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.124870908 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.106573029 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.104471879 seconds)
  done (took 6.977760698 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110699142 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098997536 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.130578216 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097832667 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09903171 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.097875828 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.121920627 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.099239857 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097766453 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.119050442 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099751719 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099261266 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118723507 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101217799 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098275319 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099868129 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.118102218 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.098515028 seconds)
  done (took 2.856783141 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104134114 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096658334 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.101579115 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.119076679 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.097099619 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097148378 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116193482 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.09883824 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097174573 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096310717 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119908843 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.099451316 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096134399 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.118984813 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097735009 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097338813 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.118652015 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09889312 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097716876 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09571018 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12017794 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097451862 seconds)
  done (took 3.234199644 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.111463632 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.184760192 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107235483 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.194859993 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.096878091 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095026039 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127805441 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098085597 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113290337 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117824641 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09619405 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095995564 seconds)
  done (took 2.391797378 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129374691 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136116841 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120138489 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099875874 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106413124 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12355112 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103781098 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101482347 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132532343 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11272502 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122789123 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111498323 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109650069 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131350479 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10670811 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106023018 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124990892 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102259543 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096954197 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139860405 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101410908 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131270165 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10242364 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101256961 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124791411 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111015882 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130465782 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114938995 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101214214 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133417243 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107899093 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101128096 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13296597 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112686354 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119394164 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112003493 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101349 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139163095 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108054616 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131040283 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099977823 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106910747 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13211119 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108425468 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110014418 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12534255 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108058266 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101603365 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125505626 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123323879 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12948616 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110602164 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106759955 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133379433 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11078103 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145434671 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114467244 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1320384 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108237135 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134586911 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111725776 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106894113 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132632997 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114129244 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128103341 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111899562 seconds)
  done (took 8.66487663 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140219759 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097673994 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123294864 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114590611 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108861541 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125643292 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102542995 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12254119 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103855565 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099093222 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169020885 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103353829 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113327392 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132649526 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102410705 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123830847 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104096595 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110412081 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121108803 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125887326 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101890022 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134256409 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110993858 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133121435 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113941373 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127621908 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104165744 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102432746 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123662929 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10356924 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10714165 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125362935 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112503863 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09869778 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132887998 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103142749 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101965987 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130613241 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104094784 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128946257 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112252643 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117664155 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125279132 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103658144 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134926956 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105054793 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103150272 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120092762 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104862365 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099518805 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136198294 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115375822 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113200081 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133858548 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103212971 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123187906 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103902325 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102694646 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124518681 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108888867 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10979273 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124871661 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124656608 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124007891 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10479612 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111028921 seconds)
  done (took 8.596984341 seconds)
done (took 164.829830606 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.150539563 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.192331088 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.144925227 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.179387063 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093323018 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127469402 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.149505681 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148278844 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091183864 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115094103 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093182777 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095493133 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.182048925 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093267707 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091854392 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.095207351 seconds)
  done (took 2.996632876 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19295871 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.310609179 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109060951 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.117708557 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101627003 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099130868 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119320775 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100116119 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097036397 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126745408 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100779809 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095238466 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127107086 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097138146 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096428003 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120811345 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106804556 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098838626 seconds)
  done (took 3.185219327 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119220449 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142853709 seconds)
  done (took 1.230267554 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130277921 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.19750278 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.27742797 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172513664 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12182861 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13578557 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150861594 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132301644 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.179969274 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133040838 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112251517 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09739429 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147040247 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103607833 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.109531585 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121477305 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126865637 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.130044738 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.110496109 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099326652 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140986792 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103486836 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.101931579 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.132001479 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.169613373 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131988102 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103146731 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101778695 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12258748 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109735122 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.103864005 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13649852 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110491585 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173577674 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102886638 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.169441214 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.107261855 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119951289 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.109635121 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097879598 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.123742387 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101982829 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.114115585 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.121112596 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103087345 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128267945 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104309737 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101315522 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.128676104 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109202962 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.106172689 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128650436 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.165960675 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.1098719 seconds)
  done (took 7.849500192 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.860813694 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140004957 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097917907 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.014550926 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148913223 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113229485 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.85288007 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.144154217 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250769143 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.877628952 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11469279 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.110463772 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.257366881 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.225511214 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.953536655 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.340793109 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.69577266 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.13530916 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127083951 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.16288606 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106780518 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147232591 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119534598 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.41874354 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099171442 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097846777 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128216229 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11017065 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177291591 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.097450186 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12341995 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171141705 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.262997652 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207583195 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120010208 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098358162 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097204255 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.181650231 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268770149 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216231266 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.18375463 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095356244 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09641049 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127609126 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118628169 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094011421 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179125336 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.187730436 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.187635102 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102524618 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110240374 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1312935 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.104861738 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177229457 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095102248 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.319469134 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.346668194 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098265757 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104590447 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137290503 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265930886 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097611625 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230599969 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147077139 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212637486 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097180962 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808745484 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.181937094 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097123277 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126622586 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105200158 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102888956 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129491512 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.155094015 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.395363552 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109316043 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125404555 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098257925 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.241083036 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.097626854 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119152051 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159369195 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122017646 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106161031 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110363245 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133346892 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.185742425 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.217982663 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.1334854 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106352224 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125441407 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111376613 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098151979 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.230890977 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22678355 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174914141 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230918716 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107324559 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181963711 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.180330521 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105542903 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.18613816 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104713894 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136433651 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106825807 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221444047 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.15550826 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.09842526 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10218892 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130248477 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.135769735 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123602669 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.106782514 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.184214829 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.454808734 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.157716056 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.118155837 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102231359 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106216843 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179458792 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103719702 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260091055 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131254728 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.181837554 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106166778 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.094160693 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128654912 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.156625612 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131194657 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10615178 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129381537 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109822411 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.248125683 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220930685 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111279132 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239916352 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.190396256 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10497924 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189639759 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10554979 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187978072 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129285846 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108123004 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098430489 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.796396544 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134980105 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105960577 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125046485 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183572109 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097560765 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123789778 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098215206 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09550959 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800868524 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123030513 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.09730948 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099103778 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126987701 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107272171 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104669344 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126775711 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156276583 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.264463976 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113056372 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126673435 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099871636 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.176656032 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101553526 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.098296539 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.097863597 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12254201 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107454524 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.101564749 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123386586 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187731048 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.154210343 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226709959 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.541223705 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122387967 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098634157 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237685705 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120134372 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29349951 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107301571 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.229914636 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185132525 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.095563868 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.342809513 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163722176 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205355556 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.101412359 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188454704 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096173489 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129304242 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.15599035 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122347287 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106837325 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177157918 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11307249 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.134689001 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.954252847 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098849403 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249373545 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.095337302 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.186445929 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099635006 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129772006 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.297978159 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098914803 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137464522 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.156634347 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125818182 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.0994116 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.602624347 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.099351677 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131139256 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107464848 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233213616 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184680683 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106709844 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131441118 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112145061 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180872038 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232189021 seconds)
  done (took 44.857160353 seconds)
done (took 61.08146196 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.297502691 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.261855692 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.306542465 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.213359904 seconds)
  done (took 2.142226444 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.269621061 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.169106629 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.235601048 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096485988 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.246703864 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096115846 seconds)
  done (took 2.11039738 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.494410158 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.384873354 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.344687473 seconds)
  done (took 2.222075427 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.257946892 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.247495765 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354081447 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.40725354 seconds)
  done (took 2.376077663 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.309236656 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133382204 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125826194 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.2112412 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.261417587 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.234924704 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148511768 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.198034668 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132657315 seconds)
  done (took 2.799481248 seconds)
done (took 12.640584115 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.163904307 seconds)
    (2/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.282103778 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.168165822 seconds)
    (4/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.133546601 seconds)
    (5/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.109861057 seconds)
    (6/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.319199961 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.274203968 seconds)
    (8/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.357415406 seconds)
    (9/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.315607381 seconds)
    (10/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.323253333 seconds)
    (11/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.243711559 seconds)
    (12/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.194253156 seconds)
    (13/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.263578656 seconds)
    (14/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.310795733 seconds)
    (15/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.082745063 seconds)
    (16/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.305421538 seconds)
    (17/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.257688591 seconds)
    (18/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.106346203 seconds)
    (19/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.116204748 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.221317426 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.123348517 seconds)
    (22/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.219732317 seconds)
    (23/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.354140369 seconds)
    (24/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.105960964 seconds)
    (25/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.103663232 seconds)
    (26/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.232183409 seconds)
    (27/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.103531303 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.157900617 seconds)
    (29/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.147049597 seconds)
    (30/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.233607086 seconds)
    (31/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.10933402 seconds)
    (32/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.124324571 seconds)
    (33/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.082701674 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.170490227 seconds)
    (35/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.083594156 seconds)
    (36/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.220010228 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.130507229 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.133938481 seconds)
    (39/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.12841408 seconds)
    (40/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.100025929 seconds)
    (41/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.231759827 seconds)
    (42/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.33201545 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.105094723 seconds)
    (44/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.236428939 seconds)
    (45/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194431021 seconds)
    (46/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.206388128 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.10370458 seconds)
    (48/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.217140874 seconds)
    (49/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.082841691 seconds)
    (50/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.176670968 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.140598556 seconds)
    (52/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.231334605 seconds)
    (53/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.226221351 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10573979 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.136542715 seconds)
    (56/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.131386605 seconds)
    (57/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.106433337 seconds)
    (58/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.201269021 seconds)
    (59/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.158690755 seconds)
    (60/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.294457148 seconds)
    (61/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084199752 seconds)
    (62/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084286703 seconds)
    (63/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.083133826 seconds)
    (64/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.128739239 seconds)
    (65/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.08489553 seconds)
    (66/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.151955103 seconds)
    (67/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.215691538 seconds)
    (68/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.088560013 seconds)
    (69/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.103928387 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.148985816 seconds)
    (71/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.184735058 seconds)
    (72/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.155112202 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.13103775 seconds)
    (74/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.180258859 seconds)
    (75/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.081655436 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.163966717 seconds)
    (77/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.167176046 seconds)
    (78/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.162195439 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123510367 seconds)
    (80/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.103992703 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.130242164 seconds)
    (82/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.083451822 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124014182 seconds)
    (84/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.202860378 seconds)
    (85/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09924625 seconds)
    (86/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.103207652 seconds)
    (87/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.088112678 seconds)
    (88/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.123856279 seconds)
    (89/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.083786369 seconds)
    (90/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.083487177 seconds)
    (91/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.083213591 seconds)
    (92/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.224303423 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.104959026 seconds)
    (94/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.082936875 seconds)
    (95/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.107833047 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.107033933 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098520562 seconds)
    (98/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.17117438 seconds)
    (99/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.083184612 seconds)
    (100/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.155903219 seconds)
    (101/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.103940852 seconds)
    (102/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.107274651 seconds)
    (103/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.177971609 seconds)
    (104/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.180229374 seconds)
    (105/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.177806079 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.122765549 seconds)
    (107/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.187207445 seconds)
    (108/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.135670669 seconds)
    (109/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.083517913 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.104424215 seconds)
    (111/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.123351429 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106679248 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.105320559 seconds)
    (114/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113604552 seconds)
    (115/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.083977378 seconds)
    (116/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.159709812 seconds)
    (117/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.083891158 seconds)
    (118/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088438702 seconds)
    (119/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.108195606 seconds)
    (120/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.188516893 seconds)
    (121/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084034864 seconds)
    (122/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.083368209 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.131190483 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.105667743 seconds)
    (125/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.150096594 seconds)
    (126/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.20552276 seconds)
    (127/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084019462 seconds)
    (128/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.082349399 seconds)
    (129/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.140111702 seconds)
    (130/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102983352 seconds)
    (131/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.083115895 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104950972 seconds)
    (133/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.179615036 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125617454 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124048856 seconds)
    (136/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.133268393 seconds)
    (137/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101737594 seconds)
    (138/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.156975927 seconds)
    (139/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.084398459 seconds)
    (140/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.089311867 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.084429444 seconds)
    (142/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.106955912 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.131898922 seconds)
    (144/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.089587968 seconds)
    (145/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.083621603 seconds)
    (146/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.08344133 seconds)
    (147/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.082852052 seconds)
    (148/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.107877926 seconds)
    (149/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.090247134 seconds)
    (150/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.10993684 seconds)
    (151/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.150212591 seconds)
    (152/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.10954315 seconds)
    (153/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.087625028 seconds)
    (154/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.084696142 seconds)
    (155/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.08354728 seconds)
    (156/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.129666574 seconds)
    (157/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.179122126 seconds)
    (158/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.098118664 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.124237481 seconds)
    (160/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085326351 seconds)
    (161/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.084334146 seconds)
    (162/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084142924 seconds)
    (163/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.082037469 seconds)
    (164/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.136320129 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.106276106 seconds)
    (166/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098049705 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.151710162 seconds)
    (168/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.083748749 seconds)
    (169/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106623675 seconds)
    (170/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.082719361 seconds)
    (171/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.109343943 seconds)
    (172/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.106884376 seconds)
    (173/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.111906494 seconds)
    (174/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.12268697 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108160415 seconds)
    (176/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.08871349 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105043522 seconds)
    (178/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.109195302 seconds)
    (179/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.083933105 seconds)
    (180/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.083625166 seconds)
    (181/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.104601478 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.148471925 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.106769552 seconds)
    (184/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.08381323 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.128983936 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.085538022 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.084372647 seconds)
    (188/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084216982 seconds)
    (189/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.082882118 seconds)
    (190/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.08319429 seconds)
    (191/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.107018365 seconds)
    (192/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.083932549 seconds)
  done (took 27.654583663 seconds)
done (took 28.66234594 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.215046202 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130071142 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108218283 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.106537341 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.204696071 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115267556 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.142914538 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111993566 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.111889533 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.129195739 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100117228 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.116556515 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.105622135 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.203109419 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110464881 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127577256 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099408096 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114661449 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.142956758 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.118498765 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.205716678 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102698838 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.112832408 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.126056173 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.18119339 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126294612 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.1082999 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.107132438 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.138611871 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.107533043 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.106747253 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098992046 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.143538178 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.118805145 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098745746 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.132277082 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10131659 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089586539 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.130514145 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.10926422 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.115387182 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.105864004 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.135035495 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.100718461 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.106831792 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.131848777 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100821174 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.110627116 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.123699643 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.108884616 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102077899 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.143386703 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.106310614 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098612327 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.121871582 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102203691 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114339836 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099167532 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.141994032 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100005752 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.100472601 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125762052 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.109659893 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0994588 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.131168781 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102057005 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.107026882 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.13207393 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.10750229 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103112746 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098492202 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.132645519 seconds)
done (took 9.724879122 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.10677015 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.155314526 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.201824838 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.214131515 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129145623 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.14080801 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12161149 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128908366 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.142760653 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125103989 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.158067039 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.129264289 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.214922575 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.112911975 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11436264 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.135961396 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11571231 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112290825 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.215314854 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.12232269 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.15592473 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.112588684 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.158236419 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.123769942 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106138685 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.15410876 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.106813952 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.134361203 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.109839071 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.123635996 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.149146756 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.108772642 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.10617802 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.15169301 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120290217 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11325417 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.141270765 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111354177 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.104701336 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.131534572 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114590545 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124902525 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.132162218 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11667485 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.134365262 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116613908 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114910429 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.137615964 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.110457863 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.109541633 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.133087525 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135404566 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.112609577 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.139529593 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.114836162 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.113979928 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.139187659 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.115677994 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.106040723 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.139428742 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107916048 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.106734662 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.136162335 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.129313161 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.106306863 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.140740724 seconds)
  done (took 9.649309414 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124932759 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135226791 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140260591 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115936536 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108338551 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123055247 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098797069 seconds)
  done (took 1.899719715 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.100661052 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187768686 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209175393 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209588507 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.179803302 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.220144467 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146176822 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100553947 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130634473 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.134505909 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.187128828 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.240321305 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.105358823 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.140379081 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.18586078 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.125548231 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.187443154 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.125899838 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.112335358 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.213267499 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113268181 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.127505739 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.138683304 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.099981414 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.209909205 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.100321891 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.264865934 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116162306 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131913416 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114755221 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110717735 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.20446125 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.209122426 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.114517698 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.104562902 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.209609079 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.20464148 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111736884 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.222047779 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105093649 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.208738843 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.112395085 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115064359 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.136117504 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11667697 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.169934513 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.145507785 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.112822753 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.109994797 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.219755137 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.108552154 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.21144874 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.10764011 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.138088987 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11028399 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112764933 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.147778391 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.112380277 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.221482272 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113861978 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.210097361 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.182379861 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.211553854 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.212197204 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121671887 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.214112153 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.179587448 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.138265272 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109156177 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.111050469 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.213123689 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.1082386 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.137863368 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.172202039 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143541356 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.185057419 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.213901894 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108375711 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.139775289 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.103656719 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.108777876 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.127734438 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.175737298 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.136548052 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.109791762 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11756402 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139547948 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112004041 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.104806566 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.149825087 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.111442752 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.10991639 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.144010518 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11150881 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138999507 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.191007429 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.135727812 seconds)
  done (took 15.589908899 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.10572673 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.101644088 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.105885712 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.127696573 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102701186 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.100431489 seconds)
  done (took 1.711617154 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140954745 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.112930858 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.147874501 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.114454015 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.164267102 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.217421044 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.225981733 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108790347 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.155494337 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126587081 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.217521914 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.199942327 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.224718422 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.116150756 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.224783441 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117624392 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.229615961 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110760447 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.14975047 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110888284 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115438605 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.144599442 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110741765 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.212745495 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.114302047 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.142933284 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111016058 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124375211 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.146557465 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111107916 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.115577653 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.138973165 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.109825281 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.108784119 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.227659811 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.106981944 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136459124 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.125140643 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114614147 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.14213495 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.201746636 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.136986395 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123015542 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.12162088 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.137333685 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.107951275 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121726582 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.137634993 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.225988674 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123428097 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121569037 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.140178886 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.116308926 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122717941 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.134313615 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111058071 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121986839 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.229072135 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.115277232 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.13569824 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.113303714 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.114231285 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.137892612 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121486121 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.114182066 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.149073405 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.107941725 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113756372 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138049196 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.114861194 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122638779 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.140307641 seconds)
  done (took 11.223657965 seconds)
done (took 41.118274926 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.562837125 seconds)
  done (took 2.632772184 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.913694409 seconds)
  done (took 1.985003935 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.018833216 seconds)
  done (took 20.122993432 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.536649035 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.61271195 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.058506953 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.153488398 seconds)
  done (took 3.433306673 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.017601715 seconds)
  done (took 2.106000141 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.295288161 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.26595051 seconds)
  done (took 1.635171214 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.749382854 seconds)
  done (took 1.837527139 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.541014258 seconds)
  done (took 2.616208587 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.35994817 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.17294611 seconds)
  done (took 1.623507826 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.631401499 seconds)
  done (took 1.724286634 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.410484839 seconds)
  done (took 21.504508092 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.246191621 seconds)
  done (took 1.338997374 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.28030266 seconds)
  done (took 1.375422406 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.781996133 seconds)
  done (took 4.878349619 seconds)
done (took 69.891879915 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.112779262 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.114934824 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114530441 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139206957 seconds)
  done (took 1.564472595 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12117095 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116349914 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.118846307 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.142368426 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122129346 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115057671 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143203876 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118508336 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11505719 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144511775 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116751133 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115008066 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145181669 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116096923 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113146317 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144202273 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121038298 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116101764 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.141070534 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118137376 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116701551 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.116909306 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.147173543 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119927986 seconds)
  done (took 4.101611581 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.112768463 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106507297 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.107319342 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131767563 seconds)
  done (took 1.557000388 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126066989 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128784993 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151038436 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125246313 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128264201 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153739376 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116548047 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114115826 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.14156772 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125684177 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.13174609 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155551864 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128896563 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117673392 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153445396 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110495163 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116534436 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15472466 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123618673 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125163581 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.143752892 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123967157 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.120427505 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151709378 seconds)
  done (took 4.263736369 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189277603 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.124679185 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.165421386 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158270691 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.167298183 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.11105955 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.135685988 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.145004307 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.118619289 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.114353024 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.14278026 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.158556482 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.143793789 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.114780871 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112565296 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.143869817 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.125787163 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.118799206 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.182476863 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.116790411 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.144095927 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.125968673 seconds)
  done (took 4.157159093 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.118662196 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.105889998 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.101834711 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.136204919 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118215427 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.108739811 seconds)
  done (took 1.79408877 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106127081 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.100961223 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.100426179 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126183252 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106147039 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101006445 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.098245946 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.12722453 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.100866608 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100273884 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.12671967 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.099999376 seconds)
  done (took 2.400667558 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.346694266 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106276038 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.133399214 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.107528328 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.111856738 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104524802 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.146507385 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.104839696 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.268660689 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.10523467 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.14477216 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.191691519 seconds)
  done (took 2.97862543 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204211477 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140370672 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295091352 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.36429998 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161149187 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181649607 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.271556969 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187603249 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201530276 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132299532 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240930267 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151054688 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175242207 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170349354 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160896683 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.162458426 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191855416 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186852607 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170697343 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194017847 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179364697 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186681073 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176107425 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17138475 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130697375 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182961641 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115341048 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122200478 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190144334 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158556304 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193561354 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168753336 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136912632 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215789716 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257825264 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168820316 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284562952 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156469194 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.177798782 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.205429439 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253728087 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134735639 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21007772 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17348863 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125620138 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197127827 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148458818 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.194674553 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.125513464 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136769616 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20152968 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196325667 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172076132 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157242682 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308264724 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161969397 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.134944993 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195226433 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205466524 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182714993 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188042751 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.117585627 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20617524 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205507187 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175136924 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.161394323 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.15927945 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146375824 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161436837 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21692671 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171781163 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180133011 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.220747718 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124760626 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179434064 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165364267 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200726096 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169053341 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180076976 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.113017621 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170652216 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129372306 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11975546 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.229233712 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116723693 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219667151 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124730073 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.345496999 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21119835 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149117151 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182271348 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177889263 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154190566 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138752202 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.13833618 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139764399 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.183425608 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15079674 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153585665 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151728864 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159155201 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123544861 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143177508 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.144038154 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151787575 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.157864651 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158506237 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179736436 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125595098 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184160232 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142806322 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.145515118 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191534226 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204503406 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125551675 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124818609 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212975825 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177036386 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.127406722 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196123317 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177963769 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.172672387 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13122511 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187299423 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183683687 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163407356 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180905716 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159170262 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130231641 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.171679481 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155863537 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178989007 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149251235 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122229404 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.172922924 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21761575 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.122614092 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13037846 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190013452 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125469596 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148155615 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132994741 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155349335 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.135788046 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.13724481 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.155227562 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147185701 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179889381 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150123597 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178070102 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128634413 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199167437 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125567949 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.181662244 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140838391 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.112166504 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195157824 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206197803 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123645295 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224414803 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155831956 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216778581 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181010229 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126264133 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19938527 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122313478 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.112853016 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18451447 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146643335 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183439515 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.171266101 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21088226 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.186894804 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.143084716 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169822403 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187291871 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170734003 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174490754 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138523026 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178490606 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159769134 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.114372733 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145444733 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.1217141 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130785013 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151058834 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129596391 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197116145 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182125521 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180093455 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179803894 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132190554 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205502894 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.119877308 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183174535 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.157274535 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161778035 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.174877149 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202347824 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159000865 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163706814 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1534696 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.141660852 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120257991 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.152965291 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15918058 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128252469 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157469821 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134859077 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205204685 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194248233 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141623824 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220011692 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187069657 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188230941 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.11327991 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.193344614 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18988637 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153121616 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.175966446 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159222231 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152313055 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202497803 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135129618 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209738762 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149146258 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184080804 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209720858 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150277337 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123111509 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170311684 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152645274 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160110411 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157623039 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169169186 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123064515 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174503183 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.13274479 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117523731 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203744689 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163157113 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163956247 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.181410479 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161933746 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148143047 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136367498 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178977512 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139849366 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.112439139 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192885625 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204201837 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141561475 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17464343 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170892663 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123055561 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.341720317 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212689384 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170329973 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158124953 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134582863 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184264284 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156629928 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185025282 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173363106 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163415599 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172804047 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182360998 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137033987 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150077962 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14241339 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171427963 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.146755323 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.124933497 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178752579 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.135443474 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20569058 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13187135 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18224323 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151900906 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.173821369 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145270996 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161660036 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189883036 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180287375 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168083618 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.178017837 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.159749583 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214416687 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117142856 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151160215 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.125658485 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202938735 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125141192 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183102209 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.176526892 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215819306 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187459534 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15519886 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160514937 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121299592 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150263479 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169817582 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213329854 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130402042 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159651443 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186694494 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.162039071 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1253831 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181850628 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274911085 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169607634 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167278199 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.146297738 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.271347892 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151923718 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12679653 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183754647 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166076811 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.152236086 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179113727 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155824907 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165097689 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157079476 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1597947 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209352487 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187921819 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190429721 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165708498 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.166902828 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152853398 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183193869 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196768798 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138507034 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138220472 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185499056 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174643432 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.203535628 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.124804072 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180615863 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151748124 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179152294 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190610859 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133043916 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212046625 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124226535 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156262953 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159698226 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117160405 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180420509 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.200805348 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125774655 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198358127 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155653141 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125809861 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149287159 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13972364 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178308691 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132576548 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.122707649 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204513443 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.150640792 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158349246 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199540336 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126426352 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149568056 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16935948 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124151588 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162155034 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136905507 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12425272 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.193104981 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179322133 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.15248661 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17353884 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185263745 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157634174 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179732638 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135646627 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.688401217 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.122218048 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203577775 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141687693 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211055955 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143882607 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185105781 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152528286 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171080062 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159236436 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170909959 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.24386879 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186140766 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150374895 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154022072 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136244932 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133679911 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.155393181 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146449583 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180684513 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134422238 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154834643 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.152260561 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134683484 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.168431183 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132766778 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206505714 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142091095 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206939479 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204216078 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131692885 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181647245 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167514375 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151321412 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158695818 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195097944 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135702974 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167943738 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.128065851 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.129237435 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205178069 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.117753591 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178862953 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156399086 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178338076 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154267979 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.126927781 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184252487 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13427959 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182709576 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1204182 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.174214977 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154758331 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153748334 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.122041882 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152081485 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181922467 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149312863 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149755069 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.16712411 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205647597 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.118589624 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126038444 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29985934 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154268672 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211294378 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.14294409 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157205072 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13767948 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176097526 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.147816111 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182633543 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.122805692 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123989189 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.152731947 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.171506875 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.179698456 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154029842 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201133567 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154694171 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215700105 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.130473453 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.323624164 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132950679 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180851859 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.1248656 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.121015217 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164550414 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12790847 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163022616 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184494142 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206033643 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147851445 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.17001717 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129623292 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.148006219 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126913519 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159603939 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174681887 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153567722 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167011376 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111331005 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163880509 seconds)
  done (took 81.809467337 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164628976 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15021889 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165983887 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.224672611 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194749013 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.296443481 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.23453497 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26355197 seconds)
  done (took 2.870164255 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119001822 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15639168 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.138969794 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.1431789 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.116196906 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.451696218 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.155703184 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.117285045 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.163297852 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.155881073 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.139918937 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.623718406 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.111517631 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.142603211 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.128425059 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.116720887 seconds)
  done (took 4.154193048 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.502741947 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.587051972 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.247077691 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.277763576 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.232218738 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.178699408 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.798116213 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.189559315 seconds)
  done (took 13.200769758 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.649871224 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.131908129 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.318260818 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.259710491 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.177947889 seconds)
  done (took 2.727885958 seconds)
done (took 128.661543345 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.118904563 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.118072542 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.118461025 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.149847226 seconds)
  done (took 1.681676347 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.184810071 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093860034 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096703855 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121761399 seconds)
  done (took 1.682050269 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.450653757 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093983146 seconds)
  done (took 1.759853506 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.145326888 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.143141646 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.162192536 seconds)
  done (took 1.649647594 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.139865703 seconds)
  done (took 1.328697952 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.125998357 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.118191711 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.238445942 seconds)
  done (took 1.677550022 seconds)
done (took 10.968722913 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120055724 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.418198086 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.430031219 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133303378 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.70701262 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425672336 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.02607587 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172752049 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17278008 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134990977 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131721468 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688139622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.044418334 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.36200877 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.002226616 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.388339136 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.691288843 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109451107 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143244051 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109994562 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.006258486 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135405581 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111213672 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109249688 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.714443523 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420273988 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.106456235 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.394103508 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107787443 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110144261 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.423317057 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10920391 seconds)
  done (took 17.338262491 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117065276 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171406363 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143548664 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109424182 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110890497 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136921087 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.118997487 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119979863 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204114439 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.106917062 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159040455 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.107614901 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112296658 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.134733927 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134949117 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.106949489 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.109086095 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141309413 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115883289 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.108906846 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160280156 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106624106 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108239118 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139696678 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108296565 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.128815442 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137509571 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120261141 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107056215 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141012358 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11275078 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107658095 seconds)
  done (took 5.248494336 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157344329 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178513319 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14608293 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146637728 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185323314 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.109567144 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.22028024 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146572331 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201808299 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109270727 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130914048 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135003337 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150222722 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.10861073 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163671622 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108377562 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111189121 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138420897 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116475526 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109530551 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.15964308 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107419957 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109305487 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.13883616 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10838299 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131339583 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136387409 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121273816 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106738573 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.141560329 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113909191 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108473544 seconds)
  done (took 5.559387216 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.125061572 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123831131 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131547073 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162450402 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118656375 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12232342 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.152801188 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118955243 seconds)
  done (took 2.260635352 seconds)
done (took 31.597679612 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133821725 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127961175 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128483817 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150735578 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.191535734 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.143789808 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126235935 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.113487672 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.151121898 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130833882 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.10749102 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.113897225 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.157596472 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.118419296 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.223644897 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.122732302 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.228840137 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.195551452 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.145019362 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123100519 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.115643071 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.229138901 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.118805711 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.143071365 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.204200673 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111121127 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.215438851 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.117742555 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.148299862 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111532768 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.223517648 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.119280155 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114195493 seconds)
  done (took 6.098146951 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.211260149 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.114239109 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148115111 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.117329812 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.114511918 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.145724747 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.212573803 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.144857188 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118195257 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.116575335 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.115586127 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.224061633 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.119948039 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.13902059 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.117897806 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.11481728 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.243144871 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.11516869 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108134507 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.12510978 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.110773679 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116749941 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.258633103 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.108848879 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.116019311 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.147459073 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.117537107 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.119438381 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.143370618 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.117010353 seconds)
  done (took 5.437328743 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124629672 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130350932 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.132804618 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.214082373 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145286398 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159094393 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13968982 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131847767 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.170620913 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.110973735 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125015473 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178879518 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128524513 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120650869 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144073769 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131997585 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133052068 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.140664971 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119414794 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126970974 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.161574593 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131030687 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137764656 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.147833696 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110663369 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11653255 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.149021754 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126905068 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.11784452 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.123394007 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.142300197 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114038211 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.111259427 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.176587001 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114588052 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.123022308 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.168350304 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122583431 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.12403231 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.172766678 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.11485306 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.113083595 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.167754622 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167606321 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.111274313 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.15527181 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122499423 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.124395737 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.140364054 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129705339 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.154239246 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.141164905 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132034509 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.110341074 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.13921634 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119731988 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.110249998 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.142418624 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127376487 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.113723316 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.164933857 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119101829 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.120899815 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.112009944 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.151919489 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.10969785 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.108414542 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.144177384 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.13934437 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.11713528 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.178039228 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111438105 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122717875 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.15156597 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122761626 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.122821074 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.109537359 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.151998652 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12200258 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.116018545 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.153427636 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.113934665 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.113625956 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.157659788 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.1335184 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124496213 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.153294247 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125812267 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.114020311 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.140578809 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129407949 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.112469964 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.115738909 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.156582143 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111293271 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.113020249 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.154277406 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122553274 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.108262061 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.166231447 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115304406 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.109716183 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.164633401 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118133812 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.116840437 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.119418106 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.184978246 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.111076828 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.150737125 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125785949 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.110128887 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.117449335 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.145793384 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110577709 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.128660772 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.156116402 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118456804 seconds)
  done (took 16.779576965 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.32276383 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.312403268 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.179833983 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.312027088 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.154303529 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.209697063 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.30978378 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.310649647 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.109883602 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179919416 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.161716246 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.277933797 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.143517161 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140144525 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.313644093 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.364151043 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.172269055 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.148827806 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.178938026 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125507202 seconds)
  done (took 5.652783905 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132327883 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147533854 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.16457614 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14194842 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.118182909 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.155824237 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.111845571 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.129704464 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.149977005 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123115004 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.113309538 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.157699321 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.120151467 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.124852663 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.156811606 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.152450239 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.11904947 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.145238159 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136246584 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.115459868 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.13460004 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140178436 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.119457284 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.164970463 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.128162609 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123753339 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.139696724 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.117974195 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.11593587 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.116365712 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.145657252 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131229994 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.117415386 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.138059783 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125148485 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127537115 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.143542257 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115334871 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.115423703 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.114548842 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.156868186 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.122235518 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.119655723 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.132170785 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.129998935 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115866122 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121236162 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.156034908 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.110704904 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.126328756 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.154764854 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.123932969 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.11796978 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.159410412 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.116840908 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128543052 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.151200658 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124465235 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.11657085 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.109660684 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.140530411 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116770954 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.116857675 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.152269444 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126128893 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.131833978 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.158394503 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.11206844 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.115388141 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.144800199 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117827813 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.127231184 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.162994807 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.118313174 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.11540939 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.154075012 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.117993971 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.098559819 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.120854001 seconds)
  done (took 11.571476404 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138911443 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.119694064 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130865401 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.17859798 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.12357013 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.11681847 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.150064813 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133528323 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124016321 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.158750573 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.125383353 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.124895397 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165602332 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.121488615 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.118465422 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158988853 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124538201 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150926091 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161900206 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140877277 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125644398 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.149321251 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.124761429 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123655755 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173232685 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124013226 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.138963479 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.155599585 seconds)
  done (took 5.122281263 seconds)
done (took 51.865084757 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.341379186 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.559358541 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.326608192 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.326694316 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.342314201 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.33166582 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.328871573 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.328669678 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.93877562 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.309031119 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.328154059 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.331214773 seconds)
done (took 30.023137459 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.324531157 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.857691594 seconds)
    (2/2) benchmarking "String"...
    done (took 1.611217047 seconds)
  done (took 4.693535514 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.320174811 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.320388563 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.54652989 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.320191676 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.332907851 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.320233417 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.331343496 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.338285495 seconds)
  done (took 16.73226702 seconds)
done (took 27.292895062 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.393918123 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.498929342 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.5695758 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.324654234 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.325584431 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.34656754 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.326843833 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.340602653 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.32926363 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.326880804 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.742111393 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.584252334 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.342057831 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.704986792 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.323447409 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.326675408 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.340632307 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.553080853 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.325386359 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.356738411 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.307413275 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.311569874 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.352969441 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.328572 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.328908578 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.326224383 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.359180262 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.325642008 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.508776479 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.357512969 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.358930758 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.327785616 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.351087742 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.326708303 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.321382865 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.334157588 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.51441809 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.328869164 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.312606862 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.337163435 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.511854045 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.33648567 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.321745303 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.346452871 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.324763229 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.36518328 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.313824006 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.437501421 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.344953238 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.3327151 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.32840931 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.703518908 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.329920125 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.334287611 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.323802638 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.537347298 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.33914029 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.382806663 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.349284682 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.335714898 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.322339959 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.349527781 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.329351666 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.326243281 seconds)
  done (took 151.555151666 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.32278003 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.327995901 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.336101119 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.36684041 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.326078913 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.326416882 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.323048377 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.325170525 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.325797049 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.32593537 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.325175999 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.323469512 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.339820624 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.272780159 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.32859027 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.342206675 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.325422299 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.321485444 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.343420446 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.322035677 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.350607633 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.327139362 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.338862106 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.32105479 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.363392679 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.396745329 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.344265259 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.346131973 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.329275092 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.32091544 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.35934483 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.372979248 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.928554976 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.188818092 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.331965059 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.335830581 seconds)
  done (took 84.733037155 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.323428815 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.322425402 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.322024888 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.352972722 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.324040552 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.886573068 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.889385268 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.039089713 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.617987519 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.64935556 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.605803638 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.324284373 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.414605931 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.332308495 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.321024566 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.336040794 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.345480138 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.32518623 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.324242681 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.887244916 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.337349041 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.343466357 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.497733067 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.338394921 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.353490588 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.719039451 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.322535986 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.354305198 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.653790065 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.372774723 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.323405054 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.69897352 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.874424091 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.435888208 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.323831687 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.355358371 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.323697547 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.603511827 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.323229218 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.323094793 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.325821138 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.984031355 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.322947517 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.885068654 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.326412189 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.254276514 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.323642655 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.323319997 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.413631208 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.975916691 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.326767017 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.323022765 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.325635259 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.322382099 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.321411714 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.322085071 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.35587168 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.476166974 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.418527068 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.32423217 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.325428626 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.354588655 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.32209943 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.547928938 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.321259284 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.319792706 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.376034988 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.446831745 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.471741711 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.874504085 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.323421516 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.418155387 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.440276639 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.321326356 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.320385359 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.321623654 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.322251409 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.431435129 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.320284142 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.320707248 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.719404303 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.493511878 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.33892072 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.58307473 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.417953682 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.320827369 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.669655667 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.324377482 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.322553533 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.038352806 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.416830944 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.321522306 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.32193335 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.321315954 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.717731131 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.866076618 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.533313208 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.32588606 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.727021132 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.326339321 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.323005081 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.731705546 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.848560742 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.978422681 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.325590982 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.435159567 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.490656298 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.339365787 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.320882223 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.562826695 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.324301443 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.376079809 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.325708495 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.722615542 seconds)
  done (took 378.8145248 seconds)
done (took 616.326278639 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.209062583 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.165641585 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.307633095 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.172391963 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.154937533 seconds)
  done (took 12.232290638 seconds)
done (took 13.454621371 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.506972695 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.508341037 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.38160179 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.508465748 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.353484716 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.524030746 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.500355488 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.343557641 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.434504411 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.401988532 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.431384063 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.372962287 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.352871494 seconds)
  done (took 19.845668803 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.592691291 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.331269955 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.392512083 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.574043259 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.369743702 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.601507708 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.628139941 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.331276874 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.481856972 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.358960001 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.339751654 seconds)
  done (took 19.226232327 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.612625487 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.331138414 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.38092922 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.598013041 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.364487729 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.601485516 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.654847101 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.330584156 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.476471698 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.339748022 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.338234008 seconds)
  done (took 19.25321886 seconds)
done (took 59.549260497 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.406087892 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.717236159 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.352755893 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.347384523 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.336735054 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.341751044 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.350074017 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.337667327 seconds)
  done (took 12.414691713 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.335947115 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.334849309 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.335983466 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.334955056 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.333737411 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.334888279 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.332527511 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.334557519 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.333686939 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.337775736 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.335033121 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.333350361 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.335414045 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.334511623 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.333135105 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.335943544 seconds)
  done (took 22.580721612 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.336016345 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.336721959 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.334329016 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.337149709 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.335187019 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.335053657 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.337061157 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.336334737 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.334478453 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.335965459 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.338199239 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.333820559 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.337489382 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.335519226 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.335272775 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.336439677 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.335282164 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.336858647 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.339740485 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.335623143 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.334968293 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.334498803 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.336640569 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.335437829 seconds)
  done (took 33.290438965 seconds)
done (took 69.509434391 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.322418402 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.326174934 seconds)
  done (took 5.87244757 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.395051213 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.395088049 seconds)
  done (took 4.015129109 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.335322062 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.332999701 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.333851928 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.33430294 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.33579666 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.33604854 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.335494205 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.335418933 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.334704614 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.332177032 seconds)
  done (took 14.569633097 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.336429713 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.3357468 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.335980736 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.337854683 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.335498469 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.333352155 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.334997149 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.33458602 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.335697477 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.334698534 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.337338095 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.336586278 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.333699822 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.334228682 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.334952691 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.33397041 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.334856213 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.335098751 seconds)
  done (took 25.257944829 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.348200441 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.356218373 seconds)
  done (took 3.927195434 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.475818819 seconds)
    (2/7) benchmarking "second"...
    done (took 1.376990213 seconds)
    (3/7) benchmarking "month"...
    done (took 1.451054142 seconds)
    (4/7) benchmarking "year"...
    done (took 1.441665459 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.377725276 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.354717943 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.376196231 seconds)
  done (took 11.078012983 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.336945352 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.545438866 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.67040133 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.875692735 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.33692689 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.339523239 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.15522401 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.340090306 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.34234253 seconds)
  done (took 15.167005288 seconds)
done (took 81.109497472 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.323509567 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.371263208 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.364293225 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.347020631 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.630240807 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.365668643 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.327210711 seconds)
done (took 16.952400879 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.310661985 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.312329902 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.323716042 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.340662345 seconds)
  done (took 10.511156493 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.328828583 seconds)
    (2/2) benchmarking "read"...
    done (took 1.613445325 seconds)
  done (took 5.166191967 seconds)
done (took 16.900720464 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.335990335 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.338351576 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.337321935 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.337285153 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.335530498 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.335488199 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.335672732 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.335963489 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.335762977 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.337163898 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.335639417 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.337724214 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.336870557 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335177835 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.3355832 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336493125 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.336942022 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335078886 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.338121233 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.336555354 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.335805001 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.335439358 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.335771415 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.336643361 seconds)
  done (took 33.296850619 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.336328217 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.337896861 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.337177129 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.336783913 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.335595 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.336148385 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.3385088 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.337469341 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.338581685 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.339012222 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.335820935 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.336076129 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.337691955 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.336136995 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338219147 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.337421972 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.341768177 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.33694419 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337982459 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.335004895 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.338268001 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337103642 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.33668434 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.337849728 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.335056782 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.336782618 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.339274128 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.337775063 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.340339749 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.336229243 seconds)
  done (took 41.347794641 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.343519641 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.343972173 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.340091272 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.340028116 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.338765985 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.340719937 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.340528414 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.341934333 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.341004859 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.341431414 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.342156472 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.341461524 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.341088396 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.341421044 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.341247302 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.341031665 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.341289414 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.342081157 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.341882031 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.343586122 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.342019886 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.342709041 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.343922792 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.343448043 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.341712018 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.342383297 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.340154575 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.343420352 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.342225066 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.342646385 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.343922098 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.342643556 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.343151833 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.342362377 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.342320089 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.342956525 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.346740695 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.347874936 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.343107982 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.341906516 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.344056037 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.344717009 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.34205921 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.34338206 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.345246938 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.342420149 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.342369236 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.345040312 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.344181803 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.343041912 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.342820532 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.342252985 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.344665182 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.344191403 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.344944157 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.343529977 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.345496955 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.345700129 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.34635255 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.345214511 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.345848669 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.34472308 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.344998668 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.347258836 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.34632645 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.346784967 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.344775833 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.347998351 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.345038716 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.346047966 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.346220388 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.344711435 seconds)
  done (took 97.950947405 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.342834269 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.344266627 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.343148682 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.342319883 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.343254909 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.345199761 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.343797959 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.343194428 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341579793 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.345145749 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344998999 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.342082788 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340933211 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.344909049 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.343860299 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.34302146 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.343544497 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.342761557 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.3457964 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.343600396 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.344185622 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.3423399 seconds)
  done (took 30.789152284 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.344787502 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.348167816 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.344573797 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.345994677 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.345135955 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.346603215 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.345011869 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.345923392 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344557612 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.343433052 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343410502 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34470164 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.345757835 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34531168 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346024894 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.348767586 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.34562857 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.345559197 seconds)
  done (took 25.451822199 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.343534332 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.344197808 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.34564261 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.34371761 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.34399055 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.346151627 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.346095521 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.346594236 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.347301033 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.343603989 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.345600408 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.345479693 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.345446454 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.345148331 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345633962 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.346102739 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.34775945 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34355444 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.347560849 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.347382079 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.345983255 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.347562087 seconds)
  done (took 30.83539425 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.348876515 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.347549316 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.349086902 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.345537128 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.348714247 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.348868579 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.349153035 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.347917422 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.350401272 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.347340684 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347784149 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.347300576 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.347938183 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.346211004 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.348309196 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.345908978 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.349822765 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.346591394 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.348506131 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.348290069 seconds)
  done (took 28.196256886 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.34976385 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.352274854 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.351682873 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.351187526 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349979324 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.350490529 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.351082577 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.350297923 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.349673281 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.350120189 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.349514466 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.351959472 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.351617621 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.351645388 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.351005225 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.351086021 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.349582056 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.351533622 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.349866796 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.351448953 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.353198507 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.35141153 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.352361099 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.3497199 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.351108202 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.350447455 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.352464292 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.351016188 seconds)
  done (took 39.061744247 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350701926 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.349697919 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.348766575 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.349373285 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.34888622 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.349209756 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.34864824 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.351931194 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.349884974 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.348286484 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.350408066 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.34962906 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.352701265 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.351713317 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.351592227 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.353225354 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351415697 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.349121177 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351279458 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350947052 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.351524869 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.352378162 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.35140825 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.349998002 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351166712 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.350561833 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.351168518 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.354481645 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.35188029 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.349249282 seconds)
  done (took 41.755758984 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.370862191 seconds)
    (2/2) benchmarking "in"...
    done (took 1.374712176 seconds)
  done (took 3.982717738 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.351103807 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.354265637 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.352339355 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.353342643 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.352120801 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.353877411 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.355155543 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.353690629 seconds)
  done (took 12.063651047 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.348184989 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.357109428 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.356233924 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.355444471 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.356316497 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.349301665 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.357792338 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.361893581 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.352674965 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.351649877 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.354494929 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.356731096 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.356260264 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.354553264 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.353249647 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.354396856 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.356567281 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.359401054 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.356122548 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.355732593 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.357468275 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.35245116 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.35479943 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.357557057 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.352538466 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.360276781 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.359295393 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.363268304 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.354887746 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.357366244 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.356175497 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.358444736 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.359103394 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.356715796 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.358998087 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.357761832 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.362061147 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.361131862 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.359293165 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.362872526 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.359999038 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.360073335 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.354241956 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.356301251 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.355914777 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.360967144 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.357509094 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.358930744 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.353703794 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.3546809 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.361330412 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.353363324 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.356134742 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.356799803 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.357036503 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.361674568 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.362558784 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.353899374 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.360459258 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.362765273 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.368860933 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.36559695 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.356510064 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.361970584 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.363675384 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.370790581 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.365817967 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.36707436 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.359647378 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.364109372 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.362549293 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.370233316 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.369235254 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.360784016 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.360485722 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.361392871 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.35511484 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.361069152 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.359989454 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.362339387 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.363248299 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.359940827 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.362544126 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.369066758 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.357004731 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.361466748 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.360588024 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.360087833 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.356807353 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.364882934 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.367121181 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.363138104 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.355650372 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.355042692 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.35829617 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.361807778 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.355798403 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.358403985 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.36283585 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.362433813 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.361919378 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.359297392 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.363457283 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.362315156 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.362519719 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.361713429 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.366459976 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.358000795 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.364170321 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.365633258 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.362572171 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.35820836 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.362127334 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.364316419 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.361715319 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.361670623 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.364165306 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.359641194 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.364829385 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.36314432 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.368371043 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.375409198 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.364714484 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.363947086 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.362495612 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.371632669 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.362376409 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.361784675 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.368211247 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.367471426 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.363956168 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.361579275 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.368692354 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.359619053 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.367582756 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.359831102 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.367041133 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.365493429 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.365263906 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.358642911 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.360922492 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.362904854 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.361351972 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.364314777 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.367953536 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.361805219 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.368546599 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.364195754 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.364093917 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.363624067 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.366027863 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.368277032 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.361874323 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.367774222 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.360398293 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.36690113 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.36071526 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.368314587 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.365476264 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.36954923 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.368897135 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.364079212 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.365943977 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.368209791 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.364399633 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.363712561 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.367747163 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.365477425 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.366602289 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.360848817 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.367184864 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.36016471 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.364959422 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.372169017 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.365628175 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.367024691 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.363892457 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.368959089 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.365956078 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.367276365 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.364210199 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.366290668 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.370595072 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.368551845 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.371156159 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.368262724 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.365986511 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.36514747 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.364114185 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.369790322 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.363713146 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.371732782 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.373581995 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.375626512 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.36517643 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.371509364 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.364863435 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.372541111 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.366944487 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.372375458 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.367487835 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.368143963 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.36330288 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.368655957 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.364951825 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.370348707 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.362082988 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.371397594 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.368657524 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.370951869 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.370843717 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.365871153 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.368939852 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.369556064 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.368781294 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.37188185 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.365365056 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.370044562 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.365575548 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.366597062 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.371178189 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.374609991 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.372226756 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.373008345 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.366876597 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.368938034 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.368003724 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.367128739 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.373318132 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.368495633 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.369250888 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.376367525 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.373215565 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.370017876 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.375177788 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.374801908 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.366075434 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.370678153 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.37637452 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.36983819 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.368740408 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.37383957 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.375905931 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.371507386 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.374891785 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.363219533 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372170711 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.375579629 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.373483401 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.369561801 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.373323844 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.368340647 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.371040475 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.369905777 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.36618765 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.366598374 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.370286203 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.373168613 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.37375832 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.370375801 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.375187008 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.373406467 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.374485275 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.372442277 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.374526511 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.369469116 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.370794831 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.367693499 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.367846299 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.373555904 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.364311281 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.370379333 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.365789183 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.377205652 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.386037784 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.372893882 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.374743029 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.371953657 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.374945818 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.372943975 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.368855251 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.369945348 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.367296444 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.37153123 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.369948053 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.374440848 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.370396347 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.374415736 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.369853699 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.374783876 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.373711675 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.374102295 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.364167706 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.374689321 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.3735983 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.37012835 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.367803496 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.372434366 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.368982978 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.37507575 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.369906144 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.369543269 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.378602443 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.37303028 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.372719225 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.372576334 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.369168535 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.373009437 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.373424222 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.375785728 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.370801135 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.37750156 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.371064597 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.375061233 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.372804135 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.37499824 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.375195405 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.370838544 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.378736003 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.375574351 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.370210307 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.369109385 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.37273219 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.373388419 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.377536039 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.368186776 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.373253881 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.374316218 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.375844761 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.37256767 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.377181956 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.373094135 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.374908347 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.377654643 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.374241661 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.370739372 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.373059976 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.374795618 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.376237117 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.378185021 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.369399357 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.37232803 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.378570878 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.369020627 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.376186432 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.372654853 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.378290363 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.376084098 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.374852888 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.378022033 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.378994667 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.376600851 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.379400637 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.377647514 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.376384915 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.379234483 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.379465159 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.37652006 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.382633137 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.371052923 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.378303086 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.374851096 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.374733876 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.371610991 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.376271092 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.375490667 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.369286425 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.381135395 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.378030181 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.374976375 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.373655795 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.37989228 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.372676703 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.379934642 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.393004864 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.373853363 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.379878045 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.377172391 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.374840828 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.380314744 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.378160675 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.369911268 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.374467643 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.379038513 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.383559171 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.37381678 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.378839219 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.373124641 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.382214903 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.381447367 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.378747705 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.378857211 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.37800305 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.37339578 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.378606684 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.375353412 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.380604171 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.374289876 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.375186006 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.374603184 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.380736635 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.38282937 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.374563459 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.381309991 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.378066663 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.37689859 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.377902865 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.381751945 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.375258738 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.382047062 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.378923296 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.380398405 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.380400723 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.37905957 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.379134348 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.37993315 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.37512896 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.376797014 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.386523029 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.381268914 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.37983274 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.378297479 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.38514654 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.377105526 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.379086074 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.383298355 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.378956645 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.382638841 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.379348972 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.385916143 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.37904094 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.38337144 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.381393572 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.381411879 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.374201243 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.377678486 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.385748602 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.382386458 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.384117508 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.382874042 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.382060935 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.375287679 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.377775767 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.381595409 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.379889676 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.376908605 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.385374428 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.377988816 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.378435351 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.379406533 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.38070256 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.384777905 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.383594139 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.377165525 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.39023836 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.386111961 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.384557997 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.379537061 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.382230704 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.380461258 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.385205619 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.383241803 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.380132272 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.388326484 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.38730279 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.389677188 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.381498133 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.380179442 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.38119816 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.386679416 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.383535239 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.383556748 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.38342158 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.38157683 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.387331266 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.385869871 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.385536505 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.378091426 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.377696632 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.382760062 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.385250939 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.383676234 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.380159373 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.383048766 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.379995141 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.384502625 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.38238523 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.38355259 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.380818599 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.379485162 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.385627412 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.379480351 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.384878717 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.383307029 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.382176462 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.384258259 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.385867816 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.381404296 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.387511464 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.391634386 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.385578389 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.381998429 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.382269753 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.38301804 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.387191737 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.386590675 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.379312649 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.382310753 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.387269483 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.386560323 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.387465984 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.381042762 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.39603849 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.39299584 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.384431105 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.382924596 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.387435506 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.390620539 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.3843385 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.388326553 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.385134953 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.382397184 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.394643676 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.392801654 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.39045845 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.389930913 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.379773116 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.391252191 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.387196861 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.386308512 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.385484908 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.391501091 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.391105732 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.384086018 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.394310477 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.391291347 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.392322001 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.406025221 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.387774257 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.385198888 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.388278317 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.385635507 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.388135687 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.385645742 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.39259399 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.388892512 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.390159323 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.385894617 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.385224241 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.385786784 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.387383731 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.394725667 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.387986831 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.3833984 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.384583178 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.389795434 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.391434057 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.392855249 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.390881578 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.391594112 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.390978801 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.387175964 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.399202623 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.399799632 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.392578636 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.395033481 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.389207916 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.390652499 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.39029184 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.39331313 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.399861023 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.390600092 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.390935424 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.386912591 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.395178529 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.391035244 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.385486745 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.389335814 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.392238494 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.393366109 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.399635778 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.404416803 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.392395735 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.392662906 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.392232945 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.392397356 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.390341878 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.394249096 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.391885734 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.389584216 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.3893306 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.397019902 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.3925136 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.392096941 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.3899641 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.39748588 seconds)
  done (took 819.942983042 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.392492209 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.391722687 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.395482812 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.394195173 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.392502088 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.391916035 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.393226667 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.395996498 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.3922723 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.391763573 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.394751629 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.395801049 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.392390831 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.392949926 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.393296511 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.396713257 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.394945608 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.396923062 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.393678629 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.395576208 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.395201779 seconds)
  done (took 30.542353516 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.395916462 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.393867783 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.394022407 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.397086587 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.396263976 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.395227546 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.398002228 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.394770233 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.395982653 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.394776778 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.395093549 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.39716819 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.397573968 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.394394908 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.396689299 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.396267071 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.396602868 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.396059009 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.397108356 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.394190014 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.398853231 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.39670794 seconds)
  done (took 31.985892706 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.398266299 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.398283857 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.393656685 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.400015799 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.397394662 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.396802697 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.395840817 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.397912789 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.398968497 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.39296349 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.394845119 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.396090207 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.397231544 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.400017949 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.39190465 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.396132233 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.396354847 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.395767312 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.398165058 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.393914609 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.397027303 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.398040436 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.395812334 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.392088016 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.395306224 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.400265969 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.392441053 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.398296759 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.391556855 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.399125723 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.400895429 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.392365568 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.392992799 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.391095758 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.391394858 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.401948568 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.397022378 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.396618626 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.398696935 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.400362083 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.411615243 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.397370526 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.396875881 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.402105559 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.400757768 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.391877124 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.40326707 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.395112358 seconds)
  done (took 68.327390338 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.396550855 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.397455644 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.394652836 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.399709107 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.396703528 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.397034614 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.398329777 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.399958779 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.395256419 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.394704907 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.39726333 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.397922535 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.399716172 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.401808548 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.396789108 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.399344423 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.399841464 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.39877703 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.396680286 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.3985115 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.397234102 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.40083058 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.401314276 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.401189713 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.402878614 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.400764254 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.398332297 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.399281355 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.402244026 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.40129127 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.403095556 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.398769151 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.400636967 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.40134503 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.401620595 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.399860629 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.401519931 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.398777216 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.399902391 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.398522121 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.40473461 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.40305808 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.39814872 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.398742832 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.397820666 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.400010093 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.399613662 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.400999356 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.400071588 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.3990245 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.40237468 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.398643842 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.399484844 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.398171984 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.401706387 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.401747074 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.399445716 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.400204364 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.401524853 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.405158996 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.398307974 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.403930895 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.401460126 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.404139504 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.400553183 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.405928841 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.402229139 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.401844169 seconds)
  done (took 96.472933523 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.403824786 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.401059946 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.401718893 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.403856554 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.401522883 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.404230542 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.404430155 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.403655666 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.404173947 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.40322169 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.402384885 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.403573477 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.406199799 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.406636853 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.405728019 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.404658118 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.403316008 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.403880867 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.407492874 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.404351662 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.404509477 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.405897319 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.408033841 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.404832948 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.406044234 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.408087499 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.405525388 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.406995921 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.409674623 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.407352645 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.406466595 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.406362316 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.408934766 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.407455701 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.405343354 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.406919469 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.404070965 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.408509906 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.408084896 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.407219949 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.405793737 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.405043889 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.403134868 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.40658485 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.406374506 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.406568904 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.406537645 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.407462375 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.40786059 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.405579899 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.409144993 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.4083455 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.407955491 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.404011035 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.407858861 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.403055052 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.409435676 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.411052321 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.412785375 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.406250847 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.404106585 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.405213813 seconds)
  done (took 88.441226601 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.404910198 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.407904389 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.402979359 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.400203016 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.403145103 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.39987316 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.403110367 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.405080907 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.402511944 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.40416835 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.409574441 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.398771999 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.398606466 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.401909705 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.398417562 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.400701909 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.400563136 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.401204395 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.396840415 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.397471268 seconds)
  done (took 29.32107142 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.397132326 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.398311368 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.396150678 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.396159566 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.392065471 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.393265588 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.392972247 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.39311733 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.393188946 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.393140729 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.394542234 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.387681728 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.385480276 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.388989512 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.386694692 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.386335485 seconds)
  done (took 23.550331051 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.387088057 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.385628137 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.384102134 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.383446621 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.38424259 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.385053881 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.385439735 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.385046993 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.383851073 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.382792731 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.382212419 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.382204999 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.383226956 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.383988797 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.381633346 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.38289081 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.379551939 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.376799891 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.379340949 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.380986352 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.380006253 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.379391403 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.381533541 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.377483746 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.372160302 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.373887955 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.37295252 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.37417388 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.376538973 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.375965435 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.374447034 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.371866373 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.370191835 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.369657471 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.373054907 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.37159262 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.371999452 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.371920975 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.368734706 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.366461409 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.3668202 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.366387538 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.369196655 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.369214643 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.369323604 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.365326754 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.364421094 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.364490497 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.364019537 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.3637229 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.364938081 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.365506197 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.366086945 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.361947546 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.361224175 seconds)
  done (took 76.886377581 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.36081805 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.36258869 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.360214939 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.364168968 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.359404408 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.358168563 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.358848392 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.361170397 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.358743288 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.360775291 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.361714737 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.35770454 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.357158996 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.357126418 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.356763474 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.357669755 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.355413119 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.356396727 seconds)
  done (took 25.71395614 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.355172459 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.355096742 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.3555806 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.354531664 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.354323886 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.357006053 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.358269054 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.353271354 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354542049 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.353056757 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352784209 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.355248384 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354353363 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.353715073 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.354286317 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.350744922 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.353153211 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.351536079 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.350015013 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.350958926 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.351849735 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.354467929 seconds)
  done (took 31.030535553 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.343913168 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.342693981 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.344482782 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.359470448 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.357086209 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.346261931 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.342197302 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.342369747 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.363048041 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.384244032 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.377380308 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.355299035 seconds)
  done (took 17.496599201 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350415426 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348778207 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.345586983 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347383886 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348429094 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346290292 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345315311 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349405504 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346017999 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344337523 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344864568 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347143638 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346513484 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345656012 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347629443 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34774788 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345009641 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343986404 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344118769 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34501435 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344669077 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345232995 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345330412 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342400011 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342367681 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343810002 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344617076 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344487951 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343468168 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344621632 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343480777 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341820585 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342894124 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342011777 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343884763 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343658316 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343085005 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34614106 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344201093 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342064634 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.345505238 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344348982 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345949933 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342682577 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344406168 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34409868 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342219326 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343141462 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34173257 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345295386 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345234272 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344083719 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34587254 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345923699 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345102301 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346491425 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34481185 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343582842 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345050413 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344968608 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344948254 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345516762 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34423521 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344730669 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345580542 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344968502 seconds)
  done (took 90.00410692 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343833431 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.34334639 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344999651 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344583567 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344628551 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345804102 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345690914 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345234221 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345072681 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344313385 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345893907 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344767113 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34580971 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345303113 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344420171 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347374201 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344606218 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343807457 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34470974 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.346311792 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345077833 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34446037 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347326594 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343029678 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342082236 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343086625 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342404621 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343527408 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341664878 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343696413 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342888263 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34079584 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341865162 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.341688609 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34200995 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341419863 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341681185 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34378049 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340704884 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34138063 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341389411 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342633603 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340367546 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340733456 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340605842 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34221265 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340500829 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34036094 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3397595 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340143486 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339426354 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33943716 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340785978 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339459165 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338288025 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340052641 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341387943 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339366818 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338692902 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342284961 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339478438 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338678892 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.338590274 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339159494 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340412111 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34056259 seconds)
  done (took 89.836057719 seconds)
done (took 1905.509938505 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.49645444 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.451588564 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.333455169 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.349712776 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.333729767 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.358701405 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.349053989 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.334686898 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.333990917 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.332773211 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.333042853 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.522854254 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.389200427 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.335616338 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.332685143 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.430957687 seconds)
  done (took 27.24824614 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.359123304 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.345724221 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.447160402 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.343057136 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.364117432 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.521621648 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.396618192 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.343536426 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.501659135 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.358912889 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.335793396 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.360485468 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.337846461 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.336148868 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.357360797 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.52227015 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.581344713 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.342206738 seconds)
  done (took 29.385334155 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.764477887 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.37257625 seconds)
  done (took 5.369926908 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.35953214 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.342218836 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.34093256 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.338136266 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.332296765 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.331827869 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.337718465 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.331290744 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.334788205 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.463029934 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.339611174 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.349383078 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.335851127 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.337862015 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.342008148 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.381459972 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.500386438 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.343217208 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.340954738 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.342130303 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.337379852 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.432665922 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.377966024 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.344765029 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.457616743 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.343285251 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.342786293 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.343734773 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.460070998 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.346260257 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.336932609 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.33605892 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.339012012 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.332517389 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.779591895 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.331907039 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.347305602 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.364591767 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.342977411 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.481959856 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.341682981 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.344482372 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.331434018 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.795721819 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.456591855 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.458115426 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.333119834 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.339253516 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.33936224 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.406590778 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.337991834 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.33933954 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.394180487 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.154643289 seconds)
  done (took 85.512438283 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.352685162 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.332475999 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.500462437 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.35224524 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.331823925 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.346553386 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.331810074 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.604349074 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.377683213 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.343285596 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.611848524 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.826656021 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.341576234 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.364391387 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.787247154 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.341677468 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.332250993 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.330186183 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.331329233 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.332406872 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.845547587 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.335201966 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.333522315 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.395507832 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.370776435 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.783109938 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.334764047 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.340882766 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.338400477 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.333173531 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.782944976 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.338467082 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.380477424 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.335084584 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.602469895 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.686270368 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.659097436 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.334474971 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.335782366 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.333130032 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.33816605 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.774808404 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.667348468 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.336106375 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.351735468 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.785364652 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.33716491 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.334708641 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.336491567 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541495191 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.335866524 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.335210677 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.336748733 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.337250633 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.332676367 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.411136411 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.381879281 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.826786054 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.338370046 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.337986727 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.356051 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.335124209 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.341474029 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.336224148 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.352996605 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.677621286 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.53314842 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.340287093 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.677313229 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.78089579 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.337678657 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.848875056 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.337697872 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.353132755 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.537545135 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.335383166 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.353195241 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827550443 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.377524652 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.333489636 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.659479269 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.34208522 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.621956744 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.351731042 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.33399173 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.876000567 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.342303931 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.373819116 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.336884638 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.34378056 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.338600678 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.337386509 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.611900611 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.369050216 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.333273637 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.334456584 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.355271741 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.33077671 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.349110479 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.331378827 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.843015497 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.335650947 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.328712528 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.336035222 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.327842539 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.347457702 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.334060365 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.329490789 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.556719989 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.333549995 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.335837296 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.328085001 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.328138966 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.338394445 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.375933005 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.33332116 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.624261991 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.33466165 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.330259836 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.338996041 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.32750175 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.332014588 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329002127 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.337372173 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.195103877 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.583077244 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.350798041 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.333645723 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.331652338 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.329864 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.332298415 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.330631766 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.354243268 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.332606445 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.051627268 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.339393995 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.32943476 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.329334708 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.330937124 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.329887492 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.336738702 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.33177276 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.625558813 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.607086524 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.511069525 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.332712583 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.332882081 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.037134404 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.33485659 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46889544 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.350420673 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.331163917 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.534097483 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.535441908 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.331280216 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.331282119 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.332437353 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.554357831 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.335648902 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.647805544 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.812005208 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.335633257 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.335772592 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.053839511 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.036949262 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.336385659 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.33648091 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.614075024 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.347932579 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.331396739 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.331604334 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.332805295 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.334149364 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.34747182 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.331331942 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.331876457 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.331854582 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.338826062 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.504668971 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.351258663 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.333556022 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.766543914 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.389739219 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.332955987 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.337404026 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.332671963 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.332514034 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.366929391 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.331550326 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.372468707 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.333157074 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.338291211 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.839869455 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.33541832 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.336602871 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.482707067 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.965182415 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.335635786 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.334188495 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.336445553 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.809030801 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.841081827 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.337437411 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.630172541 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.344274788 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.371047796 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.336762327 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.402987173 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.801815122 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.338805238 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.335383835 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.926480354 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.337700952 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.73960149 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.334266881 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.335070451 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.855012089 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.336997953 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.339463094 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.334962604 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.337484514 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.613508337 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.337864424 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.337285028 seconds)
  done (took 495.113494768 seconds)
done (took 643.859442168 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.333948909 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.335372771 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.322053985 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.337221698 seconds)
  done (took 10.561954102 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.354782337 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.342578037 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.346830636 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.33777976 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.349138203 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.339421156 seconds)
  done (took 9.304038791 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.334456794 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.338427647 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.337553351 seconds)
  done (took 8.243184561 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.548725757 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.361501117 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.693692983 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.343342663 seconds)
  done (took 9.18066718 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.349085374 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.349362764 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.348726476 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.351323175 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.355108005 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.357305095 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.35102333 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.351088571 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.357454586 seconds)
  done (took 13.402470066 seconds)
done (took 51.926067313 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.408843515 seconds)
    (2/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.415004332 seconds)
    (3/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.402840789 seconds)
    (4/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.370851061 seconds)
    (5/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.369664702 seconds)
    (6/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.044421659 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.494602959 seconds)
    (8/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.284430696 seconds)
    (9/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.221785351 seconds)
    (10/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.334300644 seconds)
    (11/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.51031267 seconds)
    (12/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.411002282 seconds)
    (13/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.324396249 seconds)
    (14/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.606654332 seconds)
    (15/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.325736159 seconds)
    (16/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.334929772 seconds)
    (17/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.326276667 seconds)
    (18/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.37450815 seconds)
    (19/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.338112511 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.55492736 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.408107566 seconds)
    (22/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.410154943 seconds)
    (23/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.321008213 seconds)
    (24/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.370049805 seconds)
    (25/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.507510658 seconds)
    (26/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.106140532 seconds)
    (27/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.430668599 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.437642959 seconds)
    (29/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.409463793 seconds)
    (30/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.371670704 seconds)
    (31/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.322880046 seconds)
    (32/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.406374405 seconds)
    (33/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.324475547 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.428571076 seconds)
    (35/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.139424483 seconds)
    (36/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.153572707 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.464867171 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.492852928 seconds)
    (39/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.374259976 seconds)
    (40/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.323845933 seconds)
    (41/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.357494008 seconds)
    (42/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.342607443 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.405527735 seconds)
    (44/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.500587612 seconds)
    (45/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.200354701 seconds)
    (46/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.328325103 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.498381206 seconds)
    (48/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.447642204 seconds)
    (49/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.478929597 seconds)
    (50/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.483301679 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.447844604 seconds)
    (52/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.32774119 seconds)
    (53/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.199019134 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.465852269 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.34775681 seconds)
    (56/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.38286476 seconds)
    (57/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.372591328 seconds)
    (58/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.334541285 seconds)
    (59/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.559030256 seconds)
    (60/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.458849218 seconds)
    (61/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.325023464 seconds)
    (62/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.327579213 seconds)
    (63/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.327416524 seconds)
    (64/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.464286781 seconds)
    (65/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.328965895 seconds)
    (66/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.388191446 seconds)
    (67/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.413632593 seconds)
    (68/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.524952085 seconds)
    (69/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.382440548 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.430987323 seconds)
    (71/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.455624789 seconds)
    (72/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.325070658 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.442811648 seconds)
    (74/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.328604748 seconds)
    (75/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.509442816 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.56893132 seconds)
    (77/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.306586661 seconds)
    (78/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.361739823 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.456157234 seconds)
    (80/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.371459605 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.451232351 seconds)
    (82/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.003490145 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.428607279 seconds)
    (84/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.498270493 seconds)
    (85/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.524252308 seconds)
    (86/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.45482125 seconds)
    (87/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.471539979 seconds)
    (88/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.459830615 seconds)
    (89/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.16411679 seconds)
    (90/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.200230543 seconds)
    (91/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.33132352 seconds)
    (92/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.102277115 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.497358325 seconds)
    (94/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.347802292 seconds)
    (95/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.531929774 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.378079607 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.459089166 seconds)
    (98/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.453300755 seconds)
    (99/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.567798176 seconds)
    (100/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.601687331 seconds)
    (101/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.375017632 seconds)
    (102/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.142517955 seconds)
    (103/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.54416236 seconds)
    (104/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.612419518 seconds)
    (105/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.472570684 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.417333759 seconds)
    (107/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.327843908 seconds)
    (108/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.412511043 seconds)
    (109/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.528627678 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.457040166 seconds)
    (111/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.461363689 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.567707629 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.562863585 seconds)
    (114/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.341266678 seconds)
    (115/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.352075867 seconds)
    (116/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.687510302 seconds)
    (117/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.33333161 seconds)
    (118/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.33780215 seconds)
    (119/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.485439905 seconds)
    (120/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.340719592 seconds)
    (121/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.054107604 seconds)
    (122/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.333916186 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.511000027 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.383644406 seconds)
    (125/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.470741322 seconds)
    (126/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.456590357 seconds)
    (127/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.529647753 seconds)
    (128/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.429801556 seconds)
    (129/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.348445189 seconds)
    (130/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.364895527 seconds)
    (131/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.205300085 seconds)
    (132/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.391990408 seconds)
    (133/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.569909819 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.439316913 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.474777148 seconds)
    (136/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.366343953 seconds)
    (137/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.37974858 seconds)
    (138/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.497317711 seconds)
    (139/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.160724025 seconds)
    (140/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.529946126 seconds)
    (141/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.497633476 seconds)
    (142/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.413899815 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.405099166 seconds)
    (144/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.472999588 seconds)
    (145/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.573292229 seconds)
    (146/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.242925342 seconds)
    (147/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.059376797 seconds)
    (148/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.118935727 seconds)
    (149/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.60222592 seconds)
    (150/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.487813102 seconds)
    (151/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.562809226 seconds)
    (152/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.336157827 seconds)
    (153/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.105241753 seconds)
    (154/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.338598358 seconds)
    (155/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.065638878 seconds)
    (156/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.388413931 seconds)
    (157/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.505978153 seconds)
    (158/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.432744394 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.410596371 seconds)
    (160/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.336833844 seconds)
    (161/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.336923682 seconds)
    (162/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.339945121 seconds)
    (163/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.497411107 seconds)
    (164/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.351538766 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.389027001 seconds)
    (166/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.456343654 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.45857808 seconds)
    (168/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.384727455 seconds)
    (169/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.375881412 seconds)
    (170/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.503833902 seconds)
    (171/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.335744886 seconds)
    (172/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.381596375 seconds)
    (173/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.429196608 seconds)
    (174/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.410932672 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.472655841 seconds)
    (176/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.573902873 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.511656219 seconds)
    (178/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.336420687 seconds)
    (179/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.444140272 seconds)
    (180/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.162234094 seconds)
    (181/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.404419737 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.544927376 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.476072011 seconds)
    (184/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.010109166 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.504326848 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.338744753 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.342824486 seconds)
    (188/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.342399781 seconds)
    (189/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.437150645 seconds)
    (190/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.33613499 seconds)
    (191/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.393090719 seconds)
    (192/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.457879067 seconds)
  done (took 342.5673972 seconds)
done (took 343.802798213 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372699717 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.437426181 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.35606375 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.358452992 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357967685 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.349750239 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.392072099 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.35844792 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.36796451 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.367715462 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.350363458 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.382867719 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.370189935 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.366450119 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.390772384 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.358636366 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.357055008 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.365937783 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.371251844 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.370997062 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359407898 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359649049 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.377558917 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.357294546 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365223114 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367211839 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.366023086 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.350147309 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.382896778 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.37030673 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.359017669 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.368247797 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.372230166 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.367904721 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360985312 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.366371104 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360318525 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.440613444 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.376197213 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.366719516 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.36426898 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.372474632 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.364694493 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.36400909 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.367979496 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.379624573 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.367318331 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.374557766 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.359033635 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.361943762 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380094941 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.37060539 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.364309893 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.358472317 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.364727022 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.379366915 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.368047734 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.377407381 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.365117482 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361424771 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.393598533 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.375389399 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.3703108 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370517682 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.365421933 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.373611031 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.368063989 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.374404776 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.364674446 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362426693 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363255224 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.366652067 seconds)
done (took 107.860268429 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.482889274 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.360085174 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.496653413 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.366735921 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.521253313 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.493302926 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.363818505 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.367011609 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.364649455 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.154964328 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.365105864 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.366777127 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.36308417 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.368813567 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.487944001 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.368941541 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.367408881 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.053271294 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.369500476 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.502102212 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.360917803 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.367897916 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.368372788 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.156990445 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.362443352 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.359284458 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.50213876 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.368685622 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.05782008 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.358225809 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.359841087 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.057537804 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.503412417 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.386745823 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.378058567 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.377570799 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.523332072 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.373396245 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.483402412 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.482383423 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.500244041 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.408564008 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.35802077 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.362815148 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.372159856 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.369338776 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.369025417 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.39674383 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.362655289 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.368115914 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.055924742 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.379760922 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.368317817 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.370929203 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.368362159 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.399524028 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.370353391 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.370784207 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.504561909 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.370997501 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.486850085 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.158164816 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.16276732 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.372084077 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.362363263 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.370752053 seconds)
  done (took 110.365779817 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.432846759 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.439642964 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.476036138 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.368080675 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.417180627 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.478516914 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.36901312 seconds)
  done (took 11.236841303 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.372275551 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.372342359 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.414240695 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.415983894 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.372248386 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.521800744 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37282738 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.377913302 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.371154285 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.419265361 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.373981098 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.373145845 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.37891291 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.365083892 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.415069137 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.379127308 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.483552631 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.368417926 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.374005106 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.520849941 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370725614 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.38144111 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.418054117 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.377834379 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.375755792 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.373915576 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.141182145 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.372702466 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371805666 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.374785995 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371754667 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.420151644 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.374931855 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.366654019 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372327773 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.483643967 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.371562138 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372610043 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.374885077 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.3698757 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.376702532 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.374168384 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.376906169 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.37333121 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.376294991 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.391947489 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.3772189 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.374761495 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.374969338 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.377458965 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.42025584 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.374389244 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.373357927 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.37432685 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.425398529 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.381619448 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.374297193 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.373939335 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.378129491 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373700549 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.525885352 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.417806704 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.378061417 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.416918174 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375218878 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.375501194 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.378375109 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.375425244 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.423767538 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.373414107 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.417524068 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.37510571 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.550349984 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393809806 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.378451363 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.372925114 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.372813134 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376094488 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.36765086 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.377306703 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.375334916 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.37189974 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.376458581 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.375089591 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.375260617 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.527814469 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.479884949 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.375607987 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.383240362 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.377776434 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.375600012 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.424479141 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.377182042 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.375876745 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.422234208 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.485730917 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.425089642 seconds)
  done (took 141.287362014 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.38432449 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.382320503 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.375317979 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.399142544 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.373167676 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.371001407 seconds)
  done (took 9.546508563 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.373830523 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.379542455 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.377087473 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.376067359 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.377296021 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.378891825 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.384604376 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373968844 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.381114149 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.380154092 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.378847157 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.384662877 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.385061116 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.376609318 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.382157634 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.381718107 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.384008815 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.377782873 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.3788388 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378414883 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.370970664 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.378270511 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379472785 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.375245108 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.383140343 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.380648409 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.39401724 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.382206413 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.378767956 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.382331278 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.382634579 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.380342383 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.376653561 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.378582929 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.388470072 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.375893813 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.381744208 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.387733725 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379936444 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.38077203 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.386467565 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380423432 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.382408306 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.387192833 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.376472555 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.377556052 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.391949874 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.394761158 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.383950227 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.388512072 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.388235333 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.38051991 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.383355072 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.390486568 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.377083099 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378364721 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.390896769 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.386115503 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.381347669 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.376905029 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.382282098 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.38407488 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.376673611 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.388536172 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.380361515 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.38806771 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.376913366 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.382867472 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38256373 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.381444143 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.389478666 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.379719498 seconds)
  done (took 101.74754752 seconds)
done (took 375.43448266 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.742797809 seconds)
  done (took 4.008676769 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.426305434 seconds)
  done (took 3.691531471 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.885727623 seconds)
  done (took 23.152073886 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.43064254 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.385246016 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.390819718 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.377276953 seconds)
  done (took 10.848750556 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.687172861 seconds)
  done (took 3.951834254 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.382759554 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.376166584 seconds)
  done (took 6.024205075 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.583943038 seconds)
  done (took 3.848293342 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.608073514 seconds)
  done (took 3.87296328 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.401729286 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.388539509 seconds)
  done (took 6.063100917 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.358459826 seconds)
  done (took 3.62508653 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.088989696 seconds)
  done (took 21.354660058 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.384420701 seconds)
  done (took 3.651732863 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.426720782 seconds)
  done (took 3.691587454 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.958222506 seconds)
  done (took 6.222857926 seconds)
done (took 105.27272218 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.370381122 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.371835241 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.375699642 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.371714275 seconds)
  done (took 10.755207441 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.438203544 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.437597294 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.44357329 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.438552528 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.438644397 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.438687478 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.412185324 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.427265376 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.437191083 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.437073061 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.44469277 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.438127318 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.437758314 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.411621948 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.438277291 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.445549853 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.439014169 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.445145857 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.41224475 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.438391043 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.388245554 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.439467946 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.440084073 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.389422751 seconds)
  done (took 35.623998639 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.896354506 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.448398854 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.532842396 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.431547765 seconds)
  done (took 7.575776929 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.46564115 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.470052021 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.485902861 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.522327711 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.549758914 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.484758739 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.41325531 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.407641399 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.395661979 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.469315272 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.518816858 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.451805429 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.555513253 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.389086246 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.673723652 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.388228571 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.386753067 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.46865007 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.52075621 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.537266487 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.389080329 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.467569901 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.473115969 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.457857037 seconds)
  done (took 36.610071145 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.391973556 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.406451004 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.386934532 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.401697731 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.38683561 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.388362553 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.388283565 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.392962775 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.387662116 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.386375947 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.387912777 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.401144728 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.387346944 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.387317741 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.394819192 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.388902061 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.388856053 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.394667311 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.395735709 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.388214696 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.38703702 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.39422284 seconds)
  done (took 31.881095929 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.376581289 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.377159183 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.726409101 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.630451478 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.377389669 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.381323733 seconds)
  done (took 14.138664086 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.451772026 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.593900688 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.387169936 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.735566662 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.824829543 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.38841793 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.383236714 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.629746046 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.932515124 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.925605062 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.44373946 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.452436345 seconds)
  done (took 20.417850793 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.376073278 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.382437135 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.394515256 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.395829071 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.436566263 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.385093349 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.388927715 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.377051772 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.441117031 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.440602023 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.387761418 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.439601508 seconds)
  done (took 22.116913008 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472436176 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384942059 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384966106 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40575205 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388730894 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.226960124 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.428476224 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.122697678 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.392930454 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658755331 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386802429 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478316322 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.639392009 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397998224 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390531313 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.378619945 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618893183 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898679769 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390780345 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387077529 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421283925 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400463077 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390493712 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.601691876 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.232732427 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385781186 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.648543013 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385603671 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675921041 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657895744 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658000353 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391800823 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661465474 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028931306 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487623144 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.597820064 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384321442 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391246417 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.366013662 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.391285002 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402276008 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393592656 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.654095736 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392319307 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387839471 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389865262 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133405483 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.396779494 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.386537799 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387330605 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657724029 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489536275 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.391248757 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387271964 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458718424 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390840257 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.392862478 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513872271 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959430976 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389502992 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396227479 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.393066357 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393381278 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394254155 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0263545 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.398583907 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.397357981 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395190882 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389859233 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389357073 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415067496 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390114324 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.410422505 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386202906 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116614091 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390319099 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394727845 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969675122 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405652128 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.39469754 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619785871 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390857569 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388941216 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.388568809 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389346789 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103224939 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399016161 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.369055704 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45407635 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.126345571 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.606455555 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413577769 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419643879 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.611888231 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.368554992 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390754662 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.391367283 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395932192 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411652039 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.129369013 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394067045 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.394658264 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647456228 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.600102058 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391296574 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.373590046 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885688466 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401314284 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.415723091 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401376325 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.608456961 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.003350417 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665288561 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409917803 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428271409 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39198716 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15943821 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397637387 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.400345911 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39183794 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671596856 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.200197735 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395805513 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460287057 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399765083 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393417091 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393241478 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399281656 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392794035 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.606797858 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398172471 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.665620321 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.40026866 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39318916 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.389979735 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399918925 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.398365163 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.61551411 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395758048 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673386905 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393690455 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393708263 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394927465 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.614565889 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.395753139 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.402593265 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655178227 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406391137 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410971582 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669133425 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426885024 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502800022 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423162346 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.405017837 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652632261 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.39873913 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.398741646 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395881042 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399718951 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397226168 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.401630614 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389976488 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009357542 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373908296 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398590663 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397401548 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.409723109 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463771777 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401556296 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609012987 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.406410921 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399284313 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.405025248 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.396358237 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622920596 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666075109 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.395822439 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477113574 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.885969673 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.011516409 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414256808 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.395676554 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.396687751 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.394841431 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397130831 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397981727 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397350589 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.610603193 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671989151 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403388821 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.015335765 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402914698 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39593885 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.4089531 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665439136 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.407874221 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397819222 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.394880972 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401019087 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423276308 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.670623462 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536097824 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.412512397 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398271131 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.91524009 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403596184 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397270886 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397532542 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429125245 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404782004 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314255141 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661932307 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390613902 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672982777 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399829314 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.417536498 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.396889595 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399468456 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402904419 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.42120705 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407908807 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.610711804 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.406155515 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405428352 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956633939 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149650302 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9598794 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404269251 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.403169223 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421140525 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.143034436 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402838692 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3981104 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638529752 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146609624 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403201109 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892652676 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.40699545 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163493451 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673554231 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632830825 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400105643 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.404212988 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678392573 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615309275 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435912934 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402638039 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405320216 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.380588188 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981642181 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404478368 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486686305 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14195166 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402646946 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405924148 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.456403929 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.403010559 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796076161 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.4030845 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400073311 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410892762 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408541878 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314516967 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406578194 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401839319 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044417193 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408813341 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.898562952 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404640691 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616327396 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.674926487 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.672422535 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.39975358 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.404354058 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.657921728 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671546323 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406227592 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412939906 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972168974 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.273104084 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.407048521 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402727097 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170898051 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40363692 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705016156 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.408883105 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.406020269 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423388427 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403840657 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402667317 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.401562248 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408412992 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378277096 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918567488 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.40520292 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401975591 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412567101 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408172179 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.65626706 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.418394013 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.019897758 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634704944 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413812679 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438527725 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.408051713 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405486092 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.386842935 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403491822 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40386409 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462857782 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.629825264 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.408200018 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.385947632 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413977769 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616827656 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404217346 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40791893 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637401562 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.408143382 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.416146886 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153415359 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436145031 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412405641 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411139174 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421732949 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449991046 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472861028 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621317841 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.681773958 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.681171213 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800388413 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415134127 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412344634 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.419971497 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501041181 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405698528 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.428603061 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.183747875 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02661256 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159093662 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.026469617 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682918779 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410621003 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412846025 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40728368 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543916219 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407776225 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681298901 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406645954 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.42235133 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43368551 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411537195 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417416284 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621387524 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681416387 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406490091 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409034249 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412580224 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.407144433 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681933703 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.618007129 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92665917 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987297159 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407687881 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410548496 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.154605675 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686054679 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404875016 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407640981 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408335291 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.421397245 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.413017176 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.417479529 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420739573 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547936653 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680111082 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062471646 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.684094794 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.44660306 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.926404627 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419725662 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.66507888 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176177525 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.623967854 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033356844 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.15989391 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67758113 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480120635 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624059401 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.411142205 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54496653 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.416005691 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413237963 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409467135 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409491145 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.409078991 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.679746045 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038242052 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677117222 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.413774706 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.415643672 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444922011 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.623644042 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634531099 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132527605 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.63570995 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.684485936 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.420883334 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409550602 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033776019 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688383151 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415265824 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.414548784 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63986678 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415703033 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437783285 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.927686253 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.409861251 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992475701 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.300265284 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433521769 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421183417 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157087537 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036505012 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.416057471 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935314897 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416266285 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416288367 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691775879 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.416985523 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420646301 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700278801 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.415287506 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.420283028 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632070813 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.032661044 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185103261 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.429780188 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422478506 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.418538341 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412876704 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439487199 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417977408 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420385277 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.83367594 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417602961 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412092772 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424384971 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.421276122 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423958949 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.416280737 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41382062 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.419402005 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.406605062 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.407159423 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.425482312 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545584759 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994519699 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426715894 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.092124207 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.76288443 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.667632389 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.424476132 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.396629714 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.41802426 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414899472 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414888418 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41351862 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421309462 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992199221 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.415626783 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.707181633 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.424611722 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.62477083 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625588239 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42578002 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636150849 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43369607 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440436321 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.394232171 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416516967 seconds)
  done (took 994.127679753 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.412652299 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.416385995 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.416804765 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.44184141 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.412052606 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.479052337 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.490012973 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.510182394 seconds)
  done (took 20.878345286 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.41182785 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.42320939 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.412783572 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.423458263 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.410119383 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.898125128 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.415252811 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.419900263 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.429408251 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.409748994 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.416344719 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.120750921 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.441513326 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.410510933 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.403806705 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.424668688 seconds)
  done (took 33.171077767 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.590528819 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.622362078 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.4838133 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.485941861 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.41770506 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.412166973 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.67928887 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.428068444 seconds)
  done (took 27.41968367 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.423926704 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.429944919 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.426347221 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.424396764 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.426101842 seconds)
  done (took 8.428623582 seconds)
done (took 1264.411076747 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.421750459 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.422632558 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.422175559 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.422606266 seconds)
  done (took 6.986831338 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.394756323 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.396748025 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.394599128 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.410815222 seconds)
  done (took 9.89526417 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.130145059 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.032645394 seconds)
  done (took 5.462570023 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.903555138 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.921071736 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.914610243 seconds)
  done (took 7.038914822 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.697486204 seconds)
  done (took 2.997440392 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.330585871 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.411758553 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.087979749 seconds)
  done (took 8.131317608 seconds)
done (took 41.811996925 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.410987807 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.658259535 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.566279349 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.412866479 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.570915211 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.567632133 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.146009391 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.426865803 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.421721543 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.427395982 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.416869067 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.572503768 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.131590225 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.657279883 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.134665086 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.659267791 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.571091735 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.423233346 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.430728908 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.415965176 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.151761224 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.423971536 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.413167197 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.42295861 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.597265223 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.557761034 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.417937545 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.656827365 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.420432228 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.413759628 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.561684169 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.414860158 seconds)
  done (took 83.776497388 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.413762204 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.429787648 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.448202276 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.417880381 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.443929659 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.428055414 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.415716144 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.417759037 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.412256301 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.428411023 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.413408231 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.438975175 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.416624892 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.413937391 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.41479398 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.414826918 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.415887138 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.438420434 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.42942897 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.417641595 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.417504522 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.414565259 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.421894078 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.414938182 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.419261375 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.430076484 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.416342021 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.421510617 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.41542838 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.425373001 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.420818949 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.439941339 seconds)
  done (took 78.830682083 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.41567855 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.419243627 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.420231849 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.420598442 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.422294565 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.421585846 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.422204691 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.42080962 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.425838261 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.434448862 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.425007311 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.430035313 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.420112293 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.421543799 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.423473103 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.417256061 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.421524686 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.420134845 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.42126739 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.439331432 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.420920067 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.420690032 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.422036106 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.431626017 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.421988513 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.42259659 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.42627942 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.427535417 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.423421546 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.422510173 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.424101373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.43715106 seconds)
  done (took 78.869158037 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.657559459 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.431941678 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.434512997 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.426380097 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.436820194 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.43320903 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.424815421 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.663191013 seconds)
  done (took 15.214364077 seconds)
done (took 257.989888294 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.423606298 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.938818014 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.452879198 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.421583459 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.464254585 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.447544619 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.645943764 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.452776303 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.649350149 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.443066763 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.444056558 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.424319677 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.242984471 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.57824548 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.306914081 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.418638061 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.321503316 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.422736892 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.020599098 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.714399311 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.454489104 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.421119436 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.295355748 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.334617795 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.410298015 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.528368649 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.528223551 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.65521782 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.588550283 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.505357996 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.953181692 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.430140352 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.445711811 seconds)
  done (took 66.091807232 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.427537351 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.431335404 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.434655386 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.434925952 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.432325197 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.433177413 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.427553667 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.43428141 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.437364565 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.434826456 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.435671433 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.433679295 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.434265302 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.432404466 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.432151803 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.416529119 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.425792604 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.433515528 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.427588655 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.416582328 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.430460351 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.436655517 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.434542326 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.43386265 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.435592353 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.433399977 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.434572461 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.436635053 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.434268842 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.433626458 seconds)
  done (took 44.268345579 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.437690384 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.001052161 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.165729735 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.439198329 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.428585822 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.434118668 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.722876868 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.442956023 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.429487098 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.43103834 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.919611041 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.443231977 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.46249319 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.178149423 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.435561798 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.436112373 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.439727979 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.429777582 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.013894938 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.442594717 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.720935151 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.443410485 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.72183262 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.442684412 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.430518146 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.430327926 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.434058475 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.262009856 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.45520733 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.918586329 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.229964669 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.719717627 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.194120398 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.218961296 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.232313023 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.445738209 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.438332352 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.927367107 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.436755213 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.431033256 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.720247499 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.434896545 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.17256108 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.118191423 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.454655186 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.439545136 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.303927931 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.948812964 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.682786532 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.441865067 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.204627363 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.439068337 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.439502333 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.434892869 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.678007433 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.439797372 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.434878695 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.305155392 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.465505408 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.725722929 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.446793798 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.433549312 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.010189887 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.439519452 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.005530873 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.439464672 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.441657746 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.432623971 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.175048626 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.441733222 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.126990058 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.456151702 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.440749336 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.922990933 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.012823928 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.354965755 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.439246301 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.015213976 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.223288052 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.742926802 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.442524977 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.247548238 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.747028758 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.442696425 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.443748287 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.443654992 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.443191469 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.506420059 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.720165774 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.065717688 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.138461416 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.306206495 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.747616334 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.447618264 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.435361754 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.303895314 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.463641977 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.444640362 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.174626897 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.131178375 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.459095819 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.442951483 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.120732584 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.459364899 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.72779474 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.447182905 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.214012242 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.441954102 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.509615495 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.446285455 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.441793755 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.439723692 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.726786597 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.44396137 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.444623554 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.137236747 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.958137855 seconds)
  done (took 200.224831026 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.433773492 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.430486451 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.433803159 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.432241217 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.429192733 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.440050688 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.430469118 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.431072973 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.436311211 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.430459169 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.430142675 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.439282541 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.438326231 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.429255981 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.435794872 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.431766485 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.431650122 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.453290575 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.430842743 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.432200686 seconds)
  done (took 45.997031104 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.447043708 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.01006985 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.977607318 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.451749252 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.440724158 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.439305812 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.494799198 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.446154527 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.443102529 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.743085537 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.616099063 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.453014001 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.443804708 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.442114581 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.973734191 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.430578631 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.745708001 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.014944741 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.449809603 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.012177197 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.431578308 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.44257111 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.436506825 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.007423716 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.756549582 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.730379117 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.501803204 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.016767911 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.446789607 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.441981006 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.01203736 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.452654721 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.437822185 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.007271244 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.454799786 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.46019146 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.443622401 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.496039422 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.502425336 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.749752423 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.024024771 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.743472831 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.461933128 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.621948675 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.451192977 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.425980772 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.023564511 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.452915975 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.425959373 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.444322176 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.451757017 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.986671364 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.446222577 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.986309261 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.451371785 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.449360288 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.017169531 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.990460108 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.982069659 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.616680034 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.443647694 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.729679528 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.450014591 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.022935871 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.455348701 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.447974273 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.452581807 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.619182489 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.023185468 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.736320819 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.753783355 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.756202396 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.454062273 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.507924908 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.44913415 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.75200445 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.510766411 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.86928115 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.756549561 seconds)
  done (took 130.668179565 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.700752635 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.556412489 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.83537124 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.038368405 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.963026925 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.584750871 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.556454922 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.692244836 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.447953009 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.533134639 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.106335461 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.544987705 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.193579514 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.532805293 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.549931482 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.575353924 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.850556981 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.44131116 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.109437032 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.078043675 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.46183095 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.552929286 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.968973377 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.630341824 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.444820277 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.011042221 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.397293288 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.976799132 seconds)
  done (took 54.655241309 seconds)
done (took 543.211695845 seconds)
SAVING RESULT...
DONE!
